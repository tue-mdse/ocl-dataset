[
  {
    "name": "ExecutionPlatform",
    "expressions": [],
    "properties": []
  },
  {
    "name": "HDFSCluster",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ProvidedExecutionPlatform",
    "expressions": [],
    "properties": [
      "ExecutionBinding",
      "owner",
      "Component"
    ]
  },
  {
    "name": "RequiredExecutionPlatform",
    "expressions": [],
    "properties": [
      "PeerToPeerPlatform",
      "InternalComponent",
      "ExecutionBinding",
      "MasterSlavePlatform",
      "isMandatory",
      "MasterSlavePlatform"
    ]
  },
  {
    "name": "CassandraCluster",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Language",
    "expressions": [],
    "properties": []
  },
  {
    "name": "PeerNode",
    "expressions": [],
    "properties": ["belongsToQuorum"]
  },
  {
    "name": "Property",
    "expressions": [],
    "properties": [
      "DDSM",
      "value",
      "CloudElement",
      "propertyId"
    ]
  },
  {
    "name": "JobSubmission",
    "expressions": [],
    "properties": [
      "applicationArguments",
      "artifactUrl",
      "mainClass",
      "ClientNode"
    ]
  },
  {
    "name": "Component",
    "expressions": [],
    "properties": [
      "providedport",
      "ProvidedExecutionPlatform",
      "providedexecutionplatform",
      "ProvidedPort"
    ]
  },
  {
    "name": "CloudElement",
    "expressions": [],
    "properties": [
      "description",
      "DDSM",
      "elementId",
      "resource",
      "property"
    ]
  },
  {
    "name": "Port",
    "expressions": [],
    "properties": [
      "isLocal",
      "portNumber"
    ]
  },
  {
    "name": "SlaveNode",
    "expressions": [],
    "properties": ["hasMaster"]
  },
  {
    "name": "ProviderType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "MasterNode",
    "expressions": [],
    "properties": ["SlaveNode"]
  },
  {
    "name": "SparkCluster",
    "expressions": [],
    "properties": [
      "driverCores",
      "driverMemory",
      "UIPort",
      "maxResultSize",
      "sparkExecutorMemory"
    ]
  },
  {
    "name": "Artifact",
    "expressions": [],
    "properties": [
      "Resource",
      "Resource",
      "Resource",
      "arguments",
      "resources",
      "Resource",
      "Resource",
      "DDSM",
      "language",
      "Resource",
      "artifactPath"
    ]
  },
  {
    "name": "ClientNode",
    "expressions": [{
      "operations": {
        "or": 1,
        "oclIsKindOf": 2,
        "and": 1,
        "allInstances": 1,
        "=": 1
      },
      "name": "hasSingleExecutionPlatorm",
      "body": "requiredexecutionplatform ->\n\tone(platform |  \n\t\tExecutionBinding.allInstances() ->  \n\t\texists(binding | \n\t\t\tbinding.requiredexecutionplatform.elementId = platform.elementId and\n\t\t\t(binding.providedexecutionplatform.owner.oclIsKindOf(MasterSlavePlatform) or\n\t\t\tbinding.providedexecutionplatform.owner.oclIsKindOf(PeerToPeerPlatform))\n\t\t)\n\t)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "OperationCallExpImpl": 6,
        "VariableExpImpl": 5,
        "TypeExpImpl": 3,
        "PropertyCallExpImpl": 8
      },
      "properties": [
        "ddsm::ExecutionBinding::providedexecutionplatform",
        "ddsm::ExecutionBinding::requiredexecutionplatform",
        "ddsm::InternalComponent::requiredexecutionplatform",
        "ddsm::CloudElement::elementId",
        "ddsm::ProvidedExecutionPlatform::owner"
      ]
    }],
    "properties": [
      "hasSchedule",
      "submits",
      "numberOfSubmissions",
      "skipRunningJob"
    ]
  },
  {
    "name": "PeersQuorum",
    "expressions": [],
    "properties": ["PeerNode"]
  },
  {
    "name": "Provider",
    "expressions": [],
    "properties": [
      "type",
      "ExternalComponent",
      "credentialsPath"
    ]
  },
  {
    "name": "StormCluster",
    "expressions": [{
      "operations": {
        "or": 1,
        "oclIsTypeOf": 1,
        "and": 1,
        "allInstances": 1,
        "oclBadOperation": 1,
        "=": 1
      },
      "name": "stormClusterDependsOnZookeeper",
      "body": "Relationship.allInstances() ->\n\texists(r | \n\t\tself.requiredport -> exists(p |\n\t\t\tp.elementId = r.requiredport.elementId and\n\t\t\t(r.providedport.owner.oclIsTypeOf(ZookeeperCluster) or\n\t\t\tr.providedport.owner.oclIsTypeOf(ZookeeperQuorum))\n\t\t)\n\t)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "OperationCallExpImpl": 6,
        "VariableExpImpl": 5,
        "TypeExpImpl": 2,
        "PropertyCallExpImpl": 8
      },
      "properties": [
        "ddsm::Relationship::providedport",
        "ddsm::InternalComponent::requiredport",
        "ddsm::Relationship::requiredport",
        "ddsm::CloudElement::elementId",
        "ddsm::ProvidedPort::owner"
      ]
    }],
    "properties": [
      "heartbeatFrequency",
      "taskTimeout",
      "retryInterval",
      "queueSize",
      "cpuCapacity",
      "memoryCapacity",
      "monitorFrequency",
      "retryTimes",
      "workerStartTimeout",
      "supervisorFrequency"
    ]
  },
  {
    "name": "VMSize",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ExecutionBinding",
    "expressions": [],
    "properties": [
      "providedexecutionplatform",
      "requiredexecutionplatform"
    ]
  },
  {
    "name": "Relationship",
    "expressions": [],
    "properties": [
      "providedport",
      "requiredport"
    ]
  },
  {
    "name": "MasterSlavePlatform",
    "expressions": [
      {
        "operations": {
          "oclIsTypeOf": 1,
          "and": 1,
          "allInstances": 1,
          "=": 1
        },
        "name": "slavePlatformsNeedBinding",
        "body": "requiresSlaveVm -> forAll(platform | ExecutionBinding.allInstances() ->\n\texists(b |\n\t\t b.requiredexecutionplatform.elementId = platform.elementId and \n\t         b.providedexecutionplatform.owner.oclIsTypeOf(VM)\n\t)\n)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "ddsm::MasterSlavePlatform::requiresSlaveVm",
          "ddsm::ExecutionBinding::providedexecutionplatform",
          "ddsm::ExecutionBinding::requiredexecutionplatform",
          "ddsm::CloudElement::elementId",
          "ddsm::ProvidedExecutionPlatform::owner"
        ]
      },
      {
        "operations": {
          "oclIsTypeOf": 1,
          "and": 1,
          "allInstances": 1,
          "=": 1
        },
        "name": "masterPlatformNeedBinding",
        "body": "ExecutionBinding.allInstances() ->\n\texists(b |\n\t\t b.requiredexecutionplatform.elementId = requiresMasterVm.elementId and \n\t         b.providedexecutionplatform.owner.oclIsTypeOf(VM)\n\t)\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 4,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "ddsm::MasterSlavePlatform::requiresMasterVm",
          "ddsm::ExecutionBinding::providedexecutionplatform",
          "ddsm::ExecutionBinding::requiredexecutionplatform",
          "ddsm::CloudElement::elementId",
          "ddsm::ProvidedExecutionPlatform::owner"
        ]
      }
    ],
    "properties": [
      "requiresMasterVm",
      "requiresSlaveVm"
    ]
  },
  {
    "name": "ProvidedPort",
    "expressions": [],
    "properties": [
      "Component",
      "Relationship",
      "owner"
    ]
  },
  {
    "name": "YarnCluster",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ExternalComponent",
    "expressions": [],
    "properties": [
      "login",
      "provider",
      "location",
      "password",
      "endPoint",
      "region",
      "serviceType"
    ]
  },
  {
    "name": "Crontab",
    "expressions": [],
    "properties": [
      "hour",
      "min",
      "dayOfWeek",
      "ClientNode",
      "month",
      "dayOfMonth"
    ]
  },
  {
    "name": "InternalComponent",
    "expressions": [],
    "properties": [
      "requiredport",
      "requiredexecutionplatform"
    ]
  },
  {
    "name": "ZookeeperCluster",
    "expressions": [],
    "properties": [
      "tickTime",
      "syncLimit",
      "initLimit"
    ]
  },
  {
    "name": "DDSM",
    "expressions": [],
    "properties": [
      "description",
      "artifacts",
      "resources",
      "properties",
      "cloudelement",
      "modelId"
    ]
  },
  {
    "name": "RequiredPort",
    "expressions": [],
    "properties": [
      "Relationship",
      "InternalComponent",
      "isMandatory"
    ]
  },
  {
    "name": "VM",
    "expressions": [],
    "properties": [
      "instances",
      "securityGroup",
      "is64os",
      "maxStorage",
      "publicAddress",
      "minStorage",
      "imageId",
      "maxCores",
      "os",
      "minRam",
      "providerSpecificTypeName",
      "publicPorts",
      "minCores",
      "sshKey",
      "maxRam",
      "privateKey",
      "genericSize"
    ]
  },
  {
    "name": "Resource",
    "expressions": [],
    "properties": [
      "configure",
      "DDSM",
      "download",
      "start",
      "CloudElement",
      "stop",
      "install",
      "resourceId",
      "destroy"
    ]
  },
  {
    "name": "PeerToPeerPlatform",
    "expressions": [{
      "operations": {
        "oclIsTypeOf": 1,
        "and": 1,
        "allInstances": 1,
        "=": 1
      },
      "name": "peerPlatformsNeedBinding",
      "body": "requiresPeerVm -> forAll(platform | ExecutionBinding.allInstances() ->\n\texists(b |\n\t\t b.requiredexecutionplatform.elementId = platform.elementId and \n\t     b.providedexecutionplatform.owner.oclIsTypeOf(VM)\n\t)\n)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "VariableExpImpl": 4,
        "OperationCallExpImpl": 4,
        "TypeExpImpl": 2,
        "PropertyCallExpImpl": 6
      },
      "properties": [
        "ddsm::PeerToPeerPlatform::requiresPeerVm",
        "ddsm::ExecutionBinding::providedexecutionplatform",
        "ddsm::ExecutionBinding::requiredexecutionplatform",
        "ddsm::CloudElement::elementId",
        "ddsm::ProvidedExecutionPlatform::owner"
      ]
    }],
    "properties": ["requiresPeerVm"]
  },
  {
    "name": "KafkaCluster",
    "expressions": [{
      "operations": {
        "oclIsTypeOf": 1,
        "and": 1,
        "allInstances": 1,
        "=": 1
      },
      "name": "kafkaClusterDependsOnZookeeper",
      "body": "Relationship.allInstances() ->\n\texists(r | \n\t\tself.requiredport -> exists(p |\n\t\t\tp.elementId = r.requiredport.elementId and\n\t\t\tr.providedport.owner.oclIsTypeOf(ZookeeperCluster)\n\t\t)\n\t)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 4,
        "TypeExpImpl": 2,
        "PropertyCallExpImpl": 6
      },
      "properties": [
        "ddsm::Relationship::providedport",
        "ddsm::InternalComponent::requiredport",
        "ddsm::Relationship::requiredport",
        "ddsm::CloudElement::elementId",
        "ddsm::ProvidedPort::owner"
      ]
    }],
    "properties": []
  }
]
