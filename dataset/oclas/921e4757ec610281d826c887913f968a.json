[
  {
    "name": "NamedElement",
    "expressions": [],
    "properties": ["name"]
  },
  {
    "name": "Company",
    "expressions": [{
      "operations": {
        "<=": 1,
        "size": 2,
        "*": 1
      },
      "name": "NoDepartmentMoreThanTwiceNumberOfEmployeesThanAnother",
      "body": "self.department->forAll(d1 | \n--\t\t\tself.department->forAll(d2 | d1.numberOfEmployees <= d2.numberOfEmployees * 2)\n\t\t\tself.department->forAll(d2 | d1.employee->size() <= d2.employee->size() * 2)\n\t\t)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "VariableExpImpl": 4,
        "OperationCallExpImpl": 4,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "company::Department::employee",
        "company::Company::department"
      ]
    }],
    "properties": ["department"]
  },
  {
    "name": "Person",
    "expressions": [
      {
        "operations": {"<>": 1},
        "name": "PersonCannotBeSupervisorOfHimHerself",
        "body": "self <> self.supervisor",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["company::Person::supervisor"]
      },
      {
        "operations": {"concat": 2},
        "name": "fullName",
        "body": "self.firstName.concat(' ').concat(self.name)",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "company::NamedElement::name",
          "company::Person::firstName"
        ]
      },
      {
        "operations": {">=": 1},
        "name": "AllEmployeesMustBeAdults",
        "body": "self.age >= 18",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["company::Person::age"]
      }
    ],
    "properties": [
      "Person",
      "fullName",
      "Department",
      "supervisor",
      "firstName",
      "age"
    ]
  },
  {
    "name": "Department",
    "expressions": [
      {
        "operations": {"+": 1},
        "name": "ageSumOfEmployees",
        "body": "self.employee->iterate(p; sum:Integer = 0 | sum + p.age)",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "IterateExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "company::Department::employee",
          "company::Person::age"
        ]
      },
      {
        "operations": {"size": 1},
        "name": "numberOfEmployees",
        "body": "self.employee->size()",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["company::Department::employee"]
      },
      {
        "operations": {
          "size": 1,
          ">=": 1
        },
        "name": "AtLeastTwoEmployees",
        "body": "\n--\t\t\tself.employee->iterate(p: Person; sum:Integer =0 | sum + 1) >= 2;\n\t\t\tself.employee->size() >= 2",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["company::Department::employee"]
      }
    ],
    "properties": [
      "ageSumOfEmployees",
      "employee",
      "numberOfEmployees",
      "Company"
    ]
  }
]
