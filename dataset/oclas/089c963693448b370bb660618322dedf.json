[
  {
    "name": "AttributePageElement",
    "expressions": [],
    "properties": ["refers_to"]
  },
  {
    "name": "DateSelectionField",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Attribute",
    "expressions": [{
      "operations": {
        "or": 1,
        "isEmpty": 1,
        "oclAsSet": 1,
        "=": 1
      },
      "name": "attributeTypeNoneWhenEnum",
      "body": "self.enumerationType -> isEmpty() or self.type = AttributeType::None",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 2,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "forms::Attribute::enumerationType",
        "forms::Attribute::type"
      ]
    }],
    "properties": [
      "name",
      "Entity",
      "enumerationType",
      "Entity",
      "mandatory",
      "AttributePageElement",
      "type",
      "Column"
    ]
  },
  {
    "name": "List",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AttributeValueCondition",
    "expressions": [{
      "operations": {
        "isEmpty": 2,
        "oclAsSet": 2,
        "xor": 1
      },
      "name": "validAttributeValueCondition",
      "body": "self.conditionsPageElement -> isEmpty() xor self.conditionsPage -> isEmpty()",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 5,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "forms::AttributeValueCondition::conditionsPageElement",
        "forms::AttributeValueCondition::conditionsPage"
      ]
    }],
    "properties": [
      "attributePageElement",
      "conditionsPageElement",
      "type",
      "conditionsPage",
      "value",
      "CompositionCondition"
    ]
  },
  {
    "name": "Literal",
    "expressions": [],
    "properties": [
      "name",
      "Enumeration",
      "Value"
    ]
  },
  {
    "name": "CompositionCondition",
    "expressions": [{
      "operations": {
        "size": 2,
        "+": 1,
        "=": 1
      },
      "name": "validCompositCondition",
      "body": "self.combinesAttributeValue -> size() + self.combinesComposite -> size() = 2",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 4,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "forms::CompositionCondition::combinesAttributeValue",
        "forms::CompositionCondition::combinesComposite"
      ]
    }],
    "properties": [
      "combinesAttributeValue",
      "CompositionCondition",
      "isAnd",
      "combinesComposite"
    ]
  },
  {
    "name": "Entity",
    "expressions": [
      {
        "operations": {
          "or": 1,
          "and": 1,
          "isEmpty": 1,
          "oclAsSet": 1,
          "=": 2
        },
        "name": "validBinaryRelationship",
        "body": "self.relationships -> forAll(r: Relationship | r.opposite -> isEmpty() or r.opposite.target = self and r.opposite.opposite = r)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 6,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "forms::Relationship::opposite",
          "forms::Relationship::target",
          "forms::Entity::relationships"
        ]
      },
      {
        "operations": {
          "or": 1,
          "includes": 2
        },
        "name": "identifierIsMember",
        "body": "self.attributes -> includes(self.identifier) or self.supertypes.attributes -> includes(self.identifier)",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 4,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "forms::Entity::attributes",
          "forms::Entity::identifier",
          "forms::Entity::supertypes"
        ]
      }
    ],
    "properties": [
      "EMFL_EntityModel",
      "Form",
      "attributes",
      "identifier",
      "Entity",
      "Relationship",
      "supertypes",
      "EMFL_FormModel",
      "name",
      "relationships"
    ]
  },
  {
    "name": "RelationshipPageElement",
    "expressions": [],
    "properties": [
      "editing_form",
      "refers_to"
    ]
  },
  {
    "name": "TimeSelectionField",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Enumeration",
    "expressions": [],
    "properties": [
      "consists",
      "Attribute",
      "EMFL_EntityModel",
      "name"
    ]
  },
  {
    "name": "Relationship",
    "expressions": [{
      "operations": {
        "<=": 1,
        "or": 1,
        "and": 1,
        "-": 1,
        "=": 1,
        ">=": 1
      },
      "name": "validRelationshipBounds",
      "body": "self.lowerBound >= 0 and (self.lowerBound <= self.upperBound or self.upperBound = -1)",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 6,
        "VariableExpImpl": 4,
        "IntegerLiteralExpImpl": 2,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "forms::Relationship::lowerBound",
        "forms::Relationship::upperBound"
      ]
    }],
    "properties": [
      "lowerBound",
      "name",
      "Entity",
      "opposite",
      "target",
      "upperBound",
      "RelationshipPageElement",
      "Relationship"
    ]
  },
  {
    "name": "PageElement",
    "expressions": [],
    "properties": [
      "AttributeValueCondition",
      "AttributeValueCondition",
      "elementID",
      "label",
      "Page"
    ]
  },
  {
    "name": "TextField",
    "expressions": [],
    "properties": ["format"]
  },
  {
    "name": "TextArea",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Condition",
    "expressions": [],
    "properties": [
      "EMFL_FormModel",
      "conditionId"
    ]
  },
  {
    "name": "conditionType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "EMFL_EntityModel",
    "expressions": [],
    "properties": [
      "entities",
      "enums"
    ]
  },
  {
    "name": "SelectionField",
    "expressions": [{
      "operations": {
        "not": 1,
        "oclIsUndefined": 1,
        "xor": 1,
        "=": 1
      },
      "name": "validSelectionFieldType",
      "body": "self.refers_to.type = AttributeType::Boolean xor not self.refers_to.enumerationType.oclIsUndefined()",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 2,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "forms::AttributePageElement::refers_to",
        "forms::Attribute::enumerationType",
        "forms::Attribute::type"
      ]
    }],
    "properties": []
  },
  {
    "name": "AttributeType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "EMFL_FormModel",
    "expressions": [{
      "operations": {
        "size": 1,
        "excluding": 1,
        "=": 1
      },
      "name": "welcomeFormExistsAndIsUnique",
      "body": "(self.forms.isWelcomeForm -> excluding(false)) -> size() = 1",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 2,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2,
        "BooleanLiteralExpImpl": 1
      },
      "properties": [
        "forms::EMFL_FormModel::forms",
        "forms::Form::isWelcomeForm"
      ]
    }],
    "properties": [
      "forms",
      "entities",
      "conditions"
    ]
  },
  {
    "name": "Page",
    "expressions": [],
    "properties": [
      "contains",
      "title",
      "Form",
      "AttributeValueCondition"
    ]
  },
  {
    "name": "Form",
    "expressions": [
      {
        "operations": {
          "selectByKind": 1,
          "or": 1,
          "oclAsSet": 1,
          "includes": 2
        },
        "name": "attributePageElementMapsFormEntity",
        "body": "(self.consists.contains -> selectByKind(AttributePageElement)).refers_to -> forAll(a: Attribute | self.associated_with.attributes -> includes(a) or self.associated_with.supertypes -> forAll(e: Entity | e.attributes -> includes(a)))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 8,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 8
        },
        "properties": [
          "forms::Page::contains",
          "forms::Form::consists",
          "forms::AttributePageElement::refers_to",
          "forms::Entity::attributes",
          "forms::Form::associated_with",
          "forms::Entity::supertypes"
        ]
      },
      {
        "operations": {
          "selectByKind": 1,
          "includes": 1
        },
        "name": "relationshipPageElementMapsFormEntity",
        "body": "(self.consists.contains -> selectByKind(RelationshipPageElement)).refers_to -> forAll(r: Relationship | self.associated_with.relationships -> includes(r))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "forms::Page::contains",
          "forms::Form::consists",
          "forms::Form::associated_with",
          "forms::RelationshipPageElement::refers_to",
          "forms::Entity::relationships"
        ]
      },
      {
        "operations": {
          "selectByKind": 1,
          "or": 1,
          "oclAsSet": 1,
          "includes": 2
        },
        "name": "tableClolumnElementMapsReferencedEntity",
        "body": "(self.consists.contains -> selectByKind(Table)).consists.refers_to -> forAll(a: Attribute | self.associated_with.attributes -> includes(a) or associated_with.supertypes -> forAll(e: Entity | e.attributes -> includes(a)))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 5,
          "VariableExpImpl": 9,
          "OperationCallExpImpl": 5,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 9
        },
        "properties": [
          "forms::Column::refers_to",
          "forms::Page::contains",
          "forms::Form::consists",
          "forms::Entity::attributes",
          "forms::Table::consists",
          "forms::Form::associated_with",
          "forms::Entity::supertypes"
        ]
      }
    ],
    "properties": [
      "title",
      "consists",
      "associated_with",
      "name",
      "RelationshipPageElement",
      "EMFL_FormModel",
      "description",
      "isWelcomeForm"
    ]
  },
  {
    "name": "Table",
    "expressions": [],
    "properties": ["consists"]
  },
  {
    "name": "Column",
    "expressions": [],
    "properties": [
      "refers_to",
      "Table"
    ]
  }
]
