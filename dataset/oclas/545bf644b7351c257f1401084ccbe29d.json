[
  {
    "name": "Inclusiveness",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "SourceTarget",
      "body": "\n\t\t\tself.target <> self.source",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "EER::Inclusiveness::source",
        "EER::Inclusiveness::target"
      ]
    }],
    "properties": [
      "lowerBound",
      "source",
      "upperBound",
      "target"
    ]
  },
  {
    "name": "Inclusion",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "SourceTarget",
      "body": "\n\t\t\tself.target <> self.source",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "EER::Inclusion::target",
        "EER::Inclusion::source"
      ]
    }],
    "properties": [
      "target",
      "source"
    ]
  },
  {
    "name": "SingleAttribute",
    "expressions": [],
    "properties": [
      "derivate",
      "multiplicity",
      "domain"
    ]
  },
  {
    "name": "EnumerationType",
    "expressions": [],
    "properties": ["literals"]
  },
  {
    "name": "Attribute",
    "expressions": [],
    "properties": [
      "CompositeAttribute",
      "Generalization",
      "name",
      "nullable",
      "Node",
      "CandidateKey"
    ]
  },
  {
    "name": "DependencyRelationship",
    "expressions": [],
    "properties": [
      "Entity",
      "type"
    ]
  },
  {
    "name": "WeakEntity",
    "expressions": [],
    "properties": []
  },
  {
    "name": "GeneralizationRelationship",
    "expressions": [],
    "properties": [
      "relationship",
      "child"
    ]
  },
  {
    "name": "DependencyType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "PrimitiveType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AbstractRelationship",
    "expressions": [],
    "properties": ["participants"]
  },
  {
    "name": "Project",
    "expressions": [],
    "properties": [
      "domains",
      "name",
      "nodes"
    ]
  },
  {
    "name": "CompositeAttribute",
    "expressions": [],
    "properties": ["singlesAttributes"]
  },
  {
    "name": "Node",
    "expressions": [],
    "properties": [
      "attributes",
      "AggregationParticipant"
    ]
  },
  {
    "name": "SpecializationRelationship",
    "expressions": [],
    "properties": [
      "relationship",
      "source"
    ]
  },
  {
    "name": "GeneralizationType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Constraint",
    "expressions": [],
    "properties": ["name"]
  },
  {
    "name": "Relationship",
    "expressions": [],
    "properties": [
      "Exclusion",
      "inclusionConstraints",
      "exclusionConstraints",
      "Inclusion"
    ]
  },
  {
    "name": "Exclusive",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "SourceTarget",
      "body": "\n\t\t\tself.target <> self.source",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "EER::Exclusive::source",
        "EER::Exclusive::target"
      ]
    }],
    "properties": [
      "source",
      "target"
    ]
  },
  {
    "name": "CandidateKey",
    "expressions": [],
    "properties": [
      "Entity",
      "attributes",
      "Entity",
      "name"
    ]
  },
  {
    "name": "Domain",
    "expressions": [],
    "properties": [
      "Project",
      "SingleAttribute",
      "name"
    ]
  },
  {
    "name": "AbstractParticipant",
    "expressions": [],
    "properties": [
      "role",
      "lowerBound",
      "upperBound"
    ]
  },
  {
    "name": "AttributedNode",
    "expressions": [],
    "properties": [
      "Project",
      "name"
    ]
  },
  {
    "name": "Participant",
    "expressions": [],
    "properties": [
      "Inclusiveness",
      "exclusiveConstraint",
      "inclusivenessConstraint",
      "Exclusive",
      "target",
      "source"
    ]
  },
  {
    "name": "Aggregation",
    "expressions": [],
    "properties": [
      "participants",
      "source"
    ]
  },
  {
    "name": "Generalization",
    "expressions": [],
    "properties": [
      "childs",
      "type",
      "parent",
      "attribute"
    ]
  },
  {
    "name": "AggregationParticipant",
    "expressions": [],
    "properties": [
      "target",
      "source"
    ]
  },
  {
    "name": "Entity",
    "expressions": [{
      "operations": {
        "size": 3,
        "and": 1,
        "oclAsSet": 1,
        "implies": 1,
        "=": 3
      },
      "name": "PrimaryKeysOCL",
      "body": "\n\t\t\tself.isSpecializedBy -> size() = 0 and \n\t\t\tself.specializes -> size() = 0 \n\t\t\t  implies  self.primaryKey -> size() = 1",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 9,
        "VariableExpImpl": 3,
        "IntegerLiteralExpImpl": 3,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "EER::Entity::primaryKey",
        "EER::Entity::isSpecializedBy",
        "EER::Entity::specializes"
      ]
    }],
    "properties": [
      "Participant",
      "primaryKey",
      "isSpecializedBy",
      "candidateKey",
      "dependencyRelationships",
      "specializes",
      "Aggregation"
    ]
  },
  {
    "name": "Exclusion",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "SourceTarget",
      "body": "\n\t\t\tself.target <> self.source",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "EER::Exclusion::target",
        "EER::Exclusion::source"
      ]
    }],
    "properties": [
      "target",
      "source"
    ]
  },
  {
    "name": "EnumeratedLiteral",
    "expressions": [],
    "properties": [
      "EnumerationType",
      "name"
    ]
  }
]
