[
  {
    "name": "Attribute",
    "expressions": [],
    "properties": ["Entity"]
  },
  {
    "name": "PackageElement",
    "expressions": [{
      "operations": {
        "<>": 2,
        "allInstances": 1,
        "implies": 1
      },
      "name": "UniquePackageElementName",
      "body": "PackageElement.allInstances()->forAll(p1 : PackageElement, p2 : PackageElement | p1 <> p2 implies p1.name <> p2.name)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 4,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["evilsystem::NamedObject::name"]
    }],
    "properties": ["system"]
  },
  {
    "name": "SimpleType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Parameter",
    "expressions": [],
    "properties": ["Function"]
  },
  {
    "name": "TypeReference",
    "expressions": [],
    "properties": [
      "type",
      "collection"
    ]
  },
  {
    "name": "Component",
    "expressions": [],
    "properties": [
      "services",
      "platform"
    ]
  },
  {
    "name": "NamedObject",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "NotEmptyName",
      "body": "self.name <> ''",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["evilsystem::NamedObject::name"]
    }],
    "properties": ["name"]
  },
  {
    "name": "Platform",
    "expressions": [],
    "properties": []
  },
  {
    "name": "System",
    "expressions": [],
    "properties": [
      "elements",
      "systemNameSpace"
    ]
  },
  {
    "name": "MethodType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Service",
    "expressions": [{
      "operations": {
        "<>": 2,
        "implies": 1
      },
      "name": "UniqueFunctionName",
      "body": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 5,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "evilsystem::NamedObject::name",
        "evilsystem::Service::functions"
      ]
    }],
    "properties": [
      "path",
      "component",
      "functions"
    ]
  },
  {
    "name": "Type",
    "expressions": [],
    "properties": ["TypeReference"]
  },
  {
    "name": "NamedQuery",
    "expressions": [],
    "properties": [
      "query",
      "referred",
      "Function"
    ]
  },
  {
    "name": "Function",
    "expressions": [{
      "operations": {
        "<>": 2,
        "implies": 1
      },
      "name": "UniqueParameterName",
      "body": "self.parameters->forAll(p1 : Parameter, p2 : Parameter | p1 <> p2 implies p1.name <> p2.name)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 5,
        "OperationCallExpImpl": 3,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "evilsystem::Function::parameters",
        "evilsystem::NamedObject::name"
      ]
    }],
    "properties": [
      "Service",
      "queries",
      "parameters",
      "methodType"
    ]
  },
  {
    "name": "Entity",
    "expressions": [
      {
        "operations": {
          "<>": 2,
          "oclAsSet": 1,
          "implies": 1
        },
        "name": "UniqueFunctionName",
        "body": "self.functions->forAll(f1 : Function, f2 : Function | f1 <> f2 implies f1.name <> f2.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 5,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "OclInvalid::oclBadProperty",
          "evilsystem::NamedObject::name"
        ]
      },
      {
        "operations": {
          "<>": 2,
          "implies": 1
        },
        "name": "UniqueAttributeName",
        "body": "self.attributes->forAll(a1 : Attribute, a2 : Attribute | a1 <> a2 implies a1.name <> a2.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "evilsystem::Entity::attributes",
          "evilsystem::NamedObject::name"
        ]
      }
    ],
    "properties": [
      "attributes",
      "Entity",
      "superClass",
      "queries"
    ]
  }
]
