[
  {
    "name": "Storage",
    "expressions": [
      {
        "operations": {
          "<=": 1,
          "size": 1,
          "includes": 1
        },
        "name": "oneParent",
        "body": "nodes->forAll(n1 | nodes->select(n2 | n2.children->includes(n1))->size() <= 1)\n\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 4,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "Tree::Node::children",
          "Tree::Storage::nodes"
        ]
      },
      {
        "operations": {
          "not": 1,
          "includes": 1
        },
        "name": "oneRoot",
        "body": "nodes->one(n1 | not nodes->exists(n2 | n2.children->includes(n1)))\n\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "Tree::Node::children",
          "Tree::Storage::nodes"
        ]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "allStored",
        "body": "Node.allInstances() = nodes\n\n",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Tree::Storage::nodes"]
      }
    ],
    "properties": []
  },
  {
    "name": "Node",
    "expressions": [{
      "operations": {
        "or": 1,
        "size": 2,
        "=": 2
      },
      "name": "twoChildren",
      "body": "children->size() = 2 or children->size() = 0\n\n",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 5,
        "VariableExpImpl": 2,
        "IntegerLiteralExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": ["Tree::Node::children"]
    }],
    "properties": []
  }
]
