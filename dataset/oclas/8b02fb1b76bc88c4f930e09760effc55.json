[
  {
    "name": "X",
    "expressions": [
      {
        "operations": {},
        "name": "isA1",
        "body": "\n\tisA1\n",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["source::X::isA1"]
      },
      {
        "operations": {},
        "name": "isA2",
        "body": "\n\tisA2\n",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["source::X::isA2"]
      },
      {
        "operations": {
          "not": 1,
          "or": 1
        },
        "name": "isA3",
        "body": "\n\tnot (isA1 or isA2)\n",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "source::X::isA2",
          "source::X::isA1"
        ]
      }
    ],
    "properties": []
  },
  {
    "name": "Z",
    "expressions": [
      {
        "operations": {
          "oclIsTypeOf": 1,
          "oclContainer": 1
        },
        "name": "parentIsY1",
        "body": "\n\toclContainer().oclIsTypeOf(Y1)\n",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "oclIsTypeOf": 1,
          "oclContainer": 1
        },
        "name": "parentIsY2",
        "body": "\n\toclContainer().oclIsTypeOf(Y2)\n",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1
        },
        "properties": []
      }
    ],
    "properties": []
  }
]
