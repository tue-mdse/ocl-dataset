[
  {
    "name": "ArcPT",
    "expressions": [],
    "properties": [
      "PetriNet",
      "Transition",
      "transition",
      "Place",
      "inscription",
      "place"
    ]
  },
  {
    "name": "Transition",
    "expressions": [],
    "properties": [
      "postArc",
      "ArcTP",
      "name",
      "ArcPT",
      "preArc",
      "PetriNet"
    ]
  },
  {
    "name": "ArcTP",
    "expressions": [],
    "properties": [
      "PetriNet",
      "Transition",
      "Place",
      "inscription",
      "place",
      "transition"
    ]
  },
  {
    "name": "Place",
    "expressions": [],
    "properties": [
      "token",
      "preArc",
      "name",
      "ArcTP",
      "PetriNet",
      "postArc",
      "ArcPT"
    ]
  },
  {
    "name": "PetriNet",
    "expressions": [{
      "operations": {
        "or": 1,
        "notEmpty": 2
      },
      "name": "TransitionConnectedToPlace",
      "body": "self.transition -> forAll(t:Transition | t.preArc -> exists(apt:ArcPT | apt.place -> notEmpty()) or t.postArc -> exists(atp:ArcTP | atp.place -> notEmpty()))",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 3,
        "VariableExpImpl": 5,
        "OperationCallExpImpl": 3,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "PetriNetModel::Transition::postArc",
        "PetriNetModel::PetriNet::transition",
        "PetriNetModel::Transition::preArc",
        "PetriNetModel::ArcPT::place",
        "PetriNetModel::ArcTP::place"
      ]
    }],
    "properties": [
      "transition",
      "name",
      "arcPT",
      "arcTP",
      "place"
    ]
  }
]
