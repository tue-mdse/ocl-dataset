[
  {
    "name": "Place",
    "expressions": [{
      "operations": {">=": 1},
      "name": "nbJetonsPositif",
      "body": "self.nbJetons >= 0",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["PetriNet::Place::nbJetons"]
    }],
    "properties": ["nbJetons"]
  },
  {
    "name": "Arc",
    "expressions": [
      {
        "operations": {">": 1},
        "name": "poidsPositif",
        "body": "self.poids > 0",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["PetriNet::Arc::poids"]
      },
      {
        "operations": {
          "or": 1,
          "oclIsTypeOf": 4,
          "and": 2
        },
        "name": "arcCorrect",
        "body": "(self.dbt.oclIsTypeOf(Place) and self.fin.oclIsTypeOf(Transition))\n\t\t\t\t\t\t\t\tor (self.dbt.oclIsTypeOf(Transition) and self.fin.oclIsTypeOf(Place))",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 4,
          "TypeExpImpl": 4,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "PetriNet::Arc::fin",
          "PetriNet::Arc::dbt"
        ]
      }
    ],
    "properties": [
      "poids",
      "fin",
      "dbt",
      "arcType",
      "PetriNet"
    ]
  },
  {
    "name": "ArcType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Transition",
    "expressions": [],
    "properties": []
  },
  {
    "name": "PetriElement",
    "expressions": [{
      "operations": {
        "<>": 2,
        "and": 1
      },
      "name": "nameNotNull",
      "body": "self.nom <> '' and self.nom <> null",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 2,
        "NullLiteralExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["PetriNet::PetriElement::nom"]
    }],
    "properties": [
      "PetriNet",
      "Arc",
      "nom",
      "Arc"
    ]
  },
  {
    "name": "PetriNet",
    "expressions": [
      {
        "operations": {
          "<>": 2,
          "oclIsTypeOf": 1,
          "oclAsSet": 1,
          "implies": 1
        },
        "name": "nameDifferentPetriElement",
        "body": "self->select(pe | pe.oclIsTypeOf(PetriElement))\n\t\t\t\t\t\t\t\t->forAll(i,j|i<>j implies i.name <> j.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 5,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["PetriNet::PetriNet::name"]
      },
      {
        "operations": {
          "<>": 2,
          "oclIsTypeOf": 1,
          "oclAsSet": 1,
          "implies": 1
        },
        "name": "nameDifferentArc",
        "body": "self->select(arc | arc.oclIsTypeOf(Arc))\n\t\t\t\t\t\t\t\t->forAll(i,j|i<>j implies i.name <> j.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 6,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["PetriNet::PetriNet::name"]
      },
      {
        "operations": {
          "<>": 2,
          "and": 1
        },
        "name": "nameNotNull",
        "body": "self.name <> '' and self.name <> null",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["PetriNet::PetriNet::name"]
      },
      {
        "operations": {"<>": 1},
        "name": "nameForbidden",
        "body": "name <> 'PetriNet'",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["PetriNet::PetriNet::name"]
      }
    ],
    "properties": [
      "arcs",
      "name",
      "petriElements"
    ]
  }
]
