[
  {
    "name": "Process",
    "expressions": [
      {
        "operations": {
          "<>": 2,
          "oclIsTypeOf": 1,
          "implies": 1,
          "oclAsType": 1
        },
        "name": "distinctNamesForWorkDefinitions",
        "body": "\n            self.processElements\n            ->select(p | p.oclIsTypeOf(WorkDefinition))\n            ->collect(p | p.oclAsType(WorkDefinition))\n            ->forAll(wd1, wd2 | wd1 <> wd2 implies wd1.name <> wd2.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 7,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "simplepdl::Process::processElements",
          "simplepdl::WorkDefinition::name"
        ]
      },
      {
        "operations": {
          "<>": 2,
          "and": 1
        },
        "name": "nameForbidden",
        "body": "\n        \t(name <> 'Process' and name <> '')",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 3,
          "StringLiteralExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": ["simplepdl::Process::name"]
      }
    ],
    "properties": [
      "processElements",
      "name"
    ]
  },
  {
    "name": "Allocation",
    "expressions": [],
    "properties": [
      "workDefinition",
      "count",
      "ressource"
    ]
  },
  {
    "name": "Guidance",
    "expressions": [],
    "properties": [
      "processElements",
      "text"
    ]
  },
  {
    "name": "WorkSequenceType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Ressource",
    "expressions": [],
    "properties": [
      "name",
      "allocations",
      "count"
    ]
  },
  {
    "name": "ProcessElement",
    "expressions": [],
    "properties": [
      "Guidance",
      "process"
    ]
  },
  {
    "name": "WorkDefinition",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "nameForbidden",
      "body": "\n        \tself.name <> ''",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["simplepdl::WorkDefinition::name"]
    }],
    "properties": [
      "linksToPredecessors",
      "name",
      "allocations",
      "linksToSuccessors"
    ]
  },
  {
    "name": "WorkSequence",
    "expressions": [
      {
        "operations": {"=": 1},
        "name": "predecessorInSameProcess",
        "body": "\n        \tself.process = self.predecessor.process",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "simplepdl::WorkSequence::predecessor",
          "simplepdl::ProcessElement::process"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "successorInSameProcess",
        "body": "\n        \tself.process = self.successor.process",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "simplepdl::WorkSequence::successor",
          "simplepdl::ProcessElement::process"
        ]
      },
      {
        "operations": {"<>": 1},
        "name": "noReflexiveDependancy",
        "body": "\n            self.successor <> self.predecessor",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "simplepdl::WorkSequence::successor",
          "simplepdl::WorkSequence::predecessor"
        ]
      }
    ],
    "properties": [
      "linkType",
      "successor",
      "predecessor"
    ]
  }
]
