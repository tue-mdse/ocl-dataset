[
  {
    "name": "Transition",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Place",
    "expressions": [{
      "operations": {">=": 1},
      "name": "positiveMarking",
      "body": "marking >= 0",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["petrinet::Place::marking"]
    }],
    "properties": ["marking"]
  },
  {
    "name": "Node",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "voidNodeName",
      "body": "name <> ''",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["petrinet::Node::name"]
    }],
    "properties": [
      "name",
      "linksToSuccessor",
      "linksToPredecessor"
    ]
  },
  {
    "name": "PetriNetElement",
    "expressions": [],
    "properties": ["petriNet"]
  },
  {
    "name": "Arc",
    "expressions": [
      {
        "operations": {">": 1},
        "name": "positiveMultiplicity",
        "body": "multiplicity > 0",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petrinet::Arc::multiplicity"]
      },
      {
        "operations": {"=": 1},
        "name": "previousNodeNotInSamePetriNet",
        "body": "self.petriNet = self.predecessor.petriNet",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "petrinet::PetriNetElement::petriNet",
          "petrinet::Arc::predecessor"
        ]
      },
      {
        "operations": {
          "<>": 1,
          "oclType": 2
        },
        "name": "sameTypeOfPredecessorAndSuccessor",
        "body": "self.predecessor.oclType() <> self.successor.oclType()",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "petrinet::Arc::predecessor",
          "petrinet::Arc::successor"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "nextNodeNotInSamePetriNet",
        "body": "self.petriNet = self.successor.petriNet",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "petrinet::PetriNetElement::petriNet",
          "petrinet::Arc::successor"
        ]
      }
    ],
    "properties": [
      "predecessor",
      "multiplicity",
      "readOnly",
      "successor"
    ]
  },
  {
    "name": "PetriNet",
    "expressions": [
      {
        "operations": {
          "<>": 2,
          "oclIsKindOf": 1,
          "implies": 1
        },
        "name": "sameNodeName",
        "body": "self.petriNetElements->select(p : PetriNetElement | p.oclIsKindOf(Node))->forAll(j : Node, k : Node | j <> k implies j.name <> k.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 6,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "petrinet::Node::name",
          "petrinet::PetriNet::petriNetElements"
        ]
      },
      {
        "operations": {"<>": 1},
        "name": "voidPetriName",
        "body": "name <> ''",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petrinet::PetriNet::name"]
      }
    ],
    "properties": [
      "name",
      "petriNetElements"
    ]
  }
]
