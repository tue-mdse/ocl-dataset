[
  {
    "name": "Project",
    "expressions": [
      {
        "operations": {"<=": 1},
        "name": "BudgetProjectMax",
        "body": "self.budget <= self.departement.budget",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "Employe::Project::budget",
          "Employe::Departement::budget",
          "Employe::Project::departement"
        ]
      },
      {
        "operations": {"includesAll": 1},
        "name": "WorkerInDepartement",
        "body": "\n\t\t\t\t\tdepartement.employe->includesAll(employe)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "Employe::Project::employe",
          "Employe::Departement::employe",
          "Employe::Project::departement"
        ]
      }
    ],
    "properties": [
      "budget",
      "employe",
      "name",
      "departement"
    ]
  },
  {
    "name": "Departement",
    "expressions": [
      {
        "operations": {
          "<=": 1,
          "sum": 1
        },
        "name": "BudgetsWithinDepartement",
        "body": "\n\t\t           project->collect(p:Project| p.budget)->sum() <= budget",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "Employe::Project::budget",
          "Employe::Departement::project",
          "Employe::Departement::budget"
        ]
      },
      {
        "operations": {
          "size": 2,
          ">=": 1
        },
        "name": "EmployesInDepartement",
        "body": "self.employe->size() >= self.project->size()",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "Employe::Departement::project",
          "Employe::Departement::employe"
        ]
      }
    ],
    "properties": [
      "location",
      "project",
      "budget",
      "name",
      "employe"
    ]
  },
  {
    "name": "Employe",
    "expressions": [{
      "operations": {
        "size": 2,
        "allInstances": 1,
        "implies": 1,
        ">": 2
      },
      "name": "MaximumSalaire",
      "body": "Employe.allInstances()->\n\t\t              forAll(e1,e2|e1.project->size() > e2.project->size()implies\n\t\t              e1.salary > e2.salary )",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 6,
        "VariableExpImpl": 4,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "Employe::Employe::salary",
        "Employe::Employe::project"
      ]
    }],
    "properties": [
      "salary",
      "departement",
      "project",
      "name"
    ]
  }
]
