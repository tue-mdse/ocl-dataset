[
  {
    "name": "ProcessComponentOutsideCompany",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SapClass",
    "expressions": [],
    "properties": ["ProcessComponent"]
  },
  {
    "name": "Application",
    "expressions": [],
    "properties": [
      "deploymentUnits",
      "integrationScenarios"
    ]
  },
  {
    "name": "EventProducer",
    "expressions": [],
    "properties": ["ProcessComponent"]
  },
  {
    "name": "ProcessComponent",
    "expressions": [],
    "properties": [
      "providedInterfaces",
      "eventProducers",
      "initiatedInteractions",
      "interactions",
      "DeploymentUnit"
    ]
  },
  {
    "name": "IntegrationScenario",
    "expressions": [],
    "properties": ["Application"]
  },
  {
    "name": "NamedElement",
    "expressions": [],
    "properties": [
      "description",
      "name"
    ]
  },
  {
    "name": "ProcessComponentInsideCompany",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Package",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "hasOwnershipCycle": 1
        },
        "name": "NoCyclicOwnership",
        "body": "not self.hasOwnershipCycle(Set{})",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "CollectionLiteralExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "hasOwnershipCycle": 1,
          "including": 1,
          "oclIsKindOf": 1,
          "isEmpty": 1,
          "oclAsSet": 1,
          "includes": 1,
          "oclAsType": 1
        },
        "name": "hasOwnershipCycle",
        "body": "if pks->includes(self) then\n    true\n  else\n    if self.owner->isEmpty() then\n      false\n    else\n      if self.owner.oclIsKindOf(Package) then\n        self.owner.oclAsType(Package).hasOwnershipCycle(pks->including(self))\n      else\n        false\n      endif\n    endif\n  endif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 7,
          "TypeExpImpl": 2,
          "IfExpImpl": 3,
          "PropertyCallExpImpl": 3,
          "BooleanLiteralExpImpl": 3
        },
        "properties": ["modelmanagement::Package::owner"]
      },
      {
        "operations": {
          "<>": 2,
          "implies": 1
        },
        "name": "DistinctClassNamesPerPackage",
        "body": "self.classes->forAll( i, j | i <> j implies i.name <> j.name )",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 5,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "modelmanagement::Package::classes",
          "modelmanagement::NamedElement::name"
        ]
      }
    ],
    "properties": [
      "bindings",
      "associations",
      "configurability",
      "classes",
      "owner",
      "parameterizedClasses"
    ]
  },
  {
    "name": "DeploymentUnit",
    "expressions": [],
    "properties": [
      "pcsInsideCompany",
      "Application"
    ]
  },
  {
    "name": "Module",
    "expressions": [],
    "properties": []
  },
  {
    "name": "PackageOwner",
    "expressions": [],
    "properties": ["ownedPackages"]
  },
  {
    "name": "TranslatableText",
    "expressions": [],
    "properties": ["NamedElement"]
  }
]
