[
  {
    "name": "UniversalQuantification",
    "expressions": [],
    "properties": []
  },
  {
    "name": "BiImplication",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Equality",
    "expressions": [],
    "properties": [
      "operand1",
      "operand2"
    ]
  },
  {
    "name": "IntConstant",
    "expressions": [],
    "properties": [
      "name",
      "Equality",
      "Quantification",
      "FunctionCall",
      "Equality",
      "OntoUMLZ3System"
    ]
  },
  {
    "name": "ExistentialQuantification",
    "expressions": [],
    "properties": []
  },
  {
    "name": "BooleanFunctionDefinition",
    "expressions": [],
    "properties": [
      "OntoUMLZ3System",
      "numberOfArguments",
      "name",
      "FunctionCall"
    ]
  },
  {
    "name": "ExclusiveDisjunction",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Implication",
    "expressions": [],
    "properties": []
  },
  {
    "name": "LogicalNegation",
    "expressions": [],
    "properties": ["operand"]
  },
  {
    "name": "FunctionCall",
    "expressions": [{
      "operations": {
        "size": 1,
        "=": 1
      },
      "name": "FunctionCallNumberOfArguments",
      "body": "self.calledFunction.numberOfArguments = self.arguments->size()",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 2,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "z3py::FunctionCall::arguments",
        "z3py::FunctionCall::calledFunction",
        "z3py::BooleanFunctionDefinition::numberOfArguments"
      ]
    }],
    "properties": [
      "arguments",
      "calledFunction"
    ]
  },
  {
    "name": "Quantification",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "IrreflexiveQuant",
      "body": "self.expression <> self",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["z3py::Quantification::expression"]
    }],
    "properties": [
      "quantifiesOver",
      "comments",
      "OntoUMLZ3System",
      "expression"
    ]
  },
  {
    "name": "Conjunction",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OntoUMLZ3System",
    "expressions": [],
    "properties": [
      "formulas",
      "fileName",
      "functions",
      "constants"
    ]
  },
  {
    "name": "Expression",
    "expressions": [],
    "properties": [
      "LogicalNegation",
      "Quantification",
      "LogicalBinaryExpression",
      "LogicalBinaryExpression"
    ]
  },
  {
    "name": "LogicalBinaryExpression",
    "expressions": [],
    "properties": [
      "operand1",
      "operand2"
    ]
  },
  {
    "name": "Disjunction",
    "expressions": [],
    "properties": []
  }
]
