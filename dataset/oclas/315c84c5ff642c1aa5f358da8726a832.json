[
  {
    "name": "UnorderedList",
    "expressions": [],
    "properties": ["consists_of_3"]
  },
  {
    "name": "InputElement",
    "expressions": [{
      "operations": {
        "or": 1,
        "and": 1,
        "=": 1,
        "matches": 1
      },
      "name": "addStar",
      "body": "\n\t\t\t(self.isMandatory and self.label.matches('.*[*]')) or (self.isMandatory = false)",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 4,
        "StringLiteralExpImpl": 1,
        "BooleanLiteralExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "ag47::InputElement::isMandatory",
        "ag47::InputElement::label"
      ]
    }],
    "properties": [
      "isMandatory",
      "label"
    ]
  },
  {
    "name": "UnorderedListItem",
    "expressions": [],
    "properties": [
      "UnorderedList",
      "text"
    ]
  },
  {
    "name": "Heading",
    "expressions": [{
      "operations": {">": 1},
      "name": "startLevel",
      "body": "self.level>0",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["ag47::Heading::level"]
    }],
    "properties": [
      "level",
      "text"
    ]
  },
  {
    "name": "OrderedList",
    "expressions": [],
    "properties": ["consists_of_4"]
  },
  {
    "name": "Page",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Form",
    "expressions": [],
    "properties": [
      "has_1",
      "has_2",
      "has_3"
    ]
  },
  {
    "name": "CheckboxSelection",
    "expressions": [],
    "properties": ["consists_of_7"]
  },
  {
    "name": "MultipleSelection",
    "expressions": [],
    "properties": ["preselected"]
  },
  {
    "name": "RadioButtonSelection",
    "expressions": [],
    "properties": ["consists_of_5"]
  },
  {
    "name": "ComboboxItem",
    "expressions": [],
    "properties": [
      "label",
      "ComboboxSelection"
    ]
  },
  {
    "name": "AbstractPage",
    "expressions": [
      {
        "operations": {
          "<>": 2,
          "allInstances": 1,
          "implies": 1,
          "oclAsType": 2
        },
        "name": "uniquePageID",
        "body": "\n\t\t\tAbstractPage.allInstances() -> forAll(e1, e2 | e1 <> e2 \n\t\t\t\timplies e1.oclAsType(AbstractPage).ID <> e2.oclAsType(AbstractPage).ID\n\t\t\t)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 6,
          "TypeExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ag47::AbstractPage::ID"]
      },
      {
        "operations": {"matches": 1},
        "name": "capitalLetter",
        "body": "\n\t\t\tself.title.matches('[A-Z].*')",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ag47::AbstractPage::title"]
      }
    ],
    "properties": [
      "ID",
      "consists_of_2",
      "title"
    ]
  },
  {
    "name": "TextField",
    "expressions": [{
      "operations": {
        "or": 1,
        "and": 1,
        "=": 1,
        "matches": 1
      },
      "name": "mandatory",
      "body": "(self.isMandatory and self.text.matches('.*') or (self.isMandatory = false))",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 3,
        "StringLiteralExpImpl": 1,
        "BooleanLiteralExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "ag47::InputElement::isMandatory",
        "ag47::TextField::text"
      ]
    }],
    "properties": ["text"]
  },
  {
    "name": "RadioButtonItem",
    "expressions": [],
    "properties": [
      "RadioButtonSelection",
      "label"
    ]
  },
  {
    "name": "CheckboxItem",
    "expressions": [],
    "properties": [
      "CheckboxSelection",
      "label"
    ]
  },
  {
    "name": "PageElement",
    "expressions": [{
      "operations": {
        "<>": 2,
        "allInstances": 1,
        "implies": 1,
        "oclAsType": 2
      },
      "name": "uniquePageElementID",
      "body": "\n\t\t\tPageElement.allInstances() -> forAll(e1, e2 | e1 <> e2 \n\t\t\t\timplies e1.oclAsType(PageElement).ID <> e2.oclAsType(PageElement).ID\n\t\t\t)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 4,
        "OperationCallExpImpl": 6,
        "TypeExpImpl": 3,
        "PropertyCallExpImpl": 2
      },
      "properties": ["ag47::PageElement::ID"]
    }],
    "properties": [
      "isVisible",
      "AbstractPage",
      "ID"
    ]
  },
  {
    "name": "TextParagraph",
    "expressions": [],
    "properties": ["text"]
  },
  {
    "name": "SelectionField",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OrderedListItem",
    "expressions": [],
    "properties": [
      "text",
      "OrderedList"
    ]
  },
  {
    "name": "TextArea",
    "expressions": [{
      "operations": {
        "or": 1,
        "and": 1,
        "matches": 1,
        "=": 1
      },
      "name": "mandatory",
      "body": "(self.isMandatory and self.text.matches('.*') or (self.isMandatory = false))",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 3,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 3,
        "BooleanLiteralExpImpl": 1
      },
      "properties": [
        "ag47::InputElement::isMandatory",
        "ag47::TextArea::text"
      ]
    }],
    "properties": ["text"]
  },
  {
    "name": "SingleSelection",
    "expressions": [],
    "properties": ["preselected"]
  },
  {
    "name": "ComboboxSelection",
    "expressions": [],
    "properties": ["consists_of_6"]
  },
  {
    "name": "StartPage",
    "expressions": [{
      "operations": {
        "excludes": 1,
        "oclAsSet": 1
      },
      "name": "selfLink",
      "body": "\n\t\t\tself.successor->excludes(self)",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 2,
        "PropertyCallExpImpl": 1
      },
      "properties": ["ag47::StartPage::successor"]
    }],
    "properties": [
      "successor",
      "Form"
    ]
  },
  {
    "name": "DisplayElement",
    "expressions": [],
    "properties": []
  },
  {
    "name": "FormPage",
    "expressions": [
      {
        "operations": {
          "and": 1,
          "<": 1,
          ">": 1
        },
        "name": "cyclic",
        "body": "\n\t\t\tID > predecessor and ID < successor",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 4,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ag47::AbstractPage::ID",
          "ag47::FormPage::successor",
          "ag47::FormPage::predecessor"
        ]
      },
      {
        "operations": {
          "excludes": 2,
          "and": 1,
          "oclAsSet": 2
        },
        "name": "selfLink",
        "body": "\n\t\t\tself.predecessor->excludes(self) and self.successor->excludes(self)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 5,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ag47::FormPage::successor",
          "ag47::FormPage::predecessor"
        ]
      }
    ],
    "properties": [
      "successor",
      "predecessor",
      "Form"
    ]
  },
  {
    "name": "EndPage",
    "expressions": [{
      "operations": {
        "excludes": 1,
        "oclAsSet": 1
      },
      "name": "selfLink",
      "body": "\n\t\t\tself.predecessor->excludes(self)",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 2,
        "PropertyCallExpImpl": 1
      },
      "properties": ["ag47::EndPage::predecessor"]
    }],
    "properties": [
      "predecessor",
      "Form"
    ]
  }
]
