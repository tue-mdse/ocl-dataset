[
  {
    "name": "Prestamo",
    "expressions": [
      {
        "operations": {"<=": 1},
        "name": "fechasSolicitudValidas",
        "body": "--No hace falta preguntar que no sean null eso lo validan las primeras 2 invariantes.\n\t\tself.fechaDeInicio <= self.fechaDeFin\t\t\n\n\t\t\n",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "Biblioteca::Prestamo::fechaDeInicio",
          "Biblioteca::Prestamo::fechaDeFin"
        ]
      },
      {
        "operations": {"<>": 1},
        "name": "tieneFechaFin",
        "body": "self.fechaDeFin <> null\n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Prestamo::fechaDeFin"]
      },
      {
        "operations": {"<>": 1},
        "name": "tieneLibro",
        "body": "self.ejemplar <> null\n\n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Prestamo::ejemplar"]
      },
      {
        "operations": {"<>": 1},
        "name": "tieneFechaInicio",
        "body": "self.fechaDeInicio <> null\n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Prestamo::fechaDeInicio"]
      },
      {
        "operations": {"<>": 1},
        "name": "tieneSocio",
        "body": "self.socio <> null \n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Prestamo::socio"]
      }
    ],
    "properties": []
  },
  {
    "name": "Biblioteca",
    "expressions": [
      {
        "operations": {"<>": 1},
        "name": "poseeDireccion",
        "body": "direccion<>''\n",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Biblioteca::direccion"]
      },
      {
        "operations": {"notEmpty": 1},
        "name": "poseeLibros",
        "body": "libros->notEmpty()\n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Biblioteca::libros"]
      },
      {
        "operations": {
          "<>": 2,
          "implies": 1
        },
        "name": "autoresNoRepetidos",
        "body": "autores->forAll(a1,a2|a1<>a2 implies a1.nombreCompleto<>a2.nombreCompleto) \n\t\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 5,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "Biblioteca::Autor::nombreCompleto",
          "Biblioteca::Biblioteca::autores"
        ]
      },
      {
        "operations": {
          "<>": 2,
          "and": 1,
          "implies": 1,
          "=": 1
        },
        "name": "librosNoRepetidos",
        "body": "libros->forAll(l1,l2|l1<>l2 and l1.autor=l2.autor implies l1.titulo<>l2.titulo) \n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 7,
          "OperationCallExpImpl": 5,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "Biblioteca::Biblioteca::libros",
          "Biblioteca::Libro::titulo",
          "Biblioteca::Libro::autor"
        ]
      }
    ],
    "properties": []
  },
  {
    "name": "Socio",
    "expressions": [
      {
        "operations": {
          "isEmpty": 1,
          "Multas": 1,
          "=": 1
        },
        "name": "NoTieneMultasImpagas",
        "body": "Multas()->select(m| m.fechaDePago = null)->isEmpty()\n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Multa::fechaDePago"]
      },
      {
        "operations": {},
        "name": "Multas",
        "body": "self.multas\n\t\n\t",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Socio::multas"]
      },
      {
        "operations": {},
        "name": "Prestamos",
        "body": "self.prestamos\n\t",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Socio::prestamos"]
      },
      {
        "operations": {">": 1},
        "name": "tieneNumeroSocio",
        "body": "self.numeroDeSocio > 0\n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Socio::numeroDeSocio"]
      },
      {
        "operations": {
          "notEmpty": 1,
          "Prestamos": 1
        },
        "name": "poseePrestamo",
        "body": "Prestamos()->notEmpty()\n\n\n",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "notEmpty": 1,
          "=": 1,
          "Prestamos": 1
        },
        "name": null,
        "body": "Prestamos()->select(p1| p1.fechaDeDevolucion=null)->notEmpty()\n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Prestamo::fechaDeDevolucion"]
      },
      {
        "operations": {">=": 1},
        "name": "mayorEdad",
        "body": "self.edad >= 18  \n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Socio::edad"]
      },
      {
        "operations": {"<>": 1},
        "name": "tieneNombreCompleto",
        "body": "self.nombreCompleto <> ''\n",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Socio::nombreCompleto"]
      },
      {
        "operations": {
          "size": 2,
          ">": 1,
          "Prestamos": 2
        },
        "name": "prestamosPost",
        "body": "Prestamos()->size() > Prestamos()->size()@pre\n",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "size": 1,
          "<": 1,
          "=": 1,
          "Prestamos": 1
        },
        "name": "NoExcedeLimiteDePrestamo",
        "body": "(Prestamos()->select(p1| p1.fechaDeDevolucion = null))->size() < 3\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Prestamo::fechaDeDevolucion"]
      },
      {
        "operations": {
          "and": 1,
          "=": 3,
          "Prestamos": 1
        },
        "name": null,
        "body": "Prestamos()->select( p | p.ejemplar.numeroDeEjemplar = codigo and p.fechaDeDevolucion=null).fechaDeDevolucion = fechaActual\n\t\n\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 6,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "Biblioteca::Ejemplar::numeroDeEjemplar",
          "Biblioteca::Prestamo::fechaDeDevolucion",
          "Biblioteca::Prestamo::ejemplar"
        ]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "existeSocio",
        "body": "Socio.allInstances()->exists(numeroDeSocio=numeroDeSocio)\n\n",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["Biblioteca::Socio::numeroDeSocio"]
      },
      {
        "operations": {"uniqueID": 1},
        "name": "numeroDeSocio",
        "body": "\n\tSocio::uniqueID()\n\n",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1
        },
        "properties": []
      }
    ],
    "properties": ["numeroDeSocio"]
  },
  {
    "name": "Multa",
    "expressions": [
      {
        "operations": {"<>": 1},
        "name": "tieneFecha",
        "body": "self.fecha <> null\n    ",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Multa::fecha"]
      },
      {
        "operations": {
          "*": 1,
          "=": 1
        },
        "name": "montoValido",
        "body": "self.monto = self.diasExcedidos * 10\n\t\n",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "Biblioteca::Multa::monto",
          "Biblioteca::Multa::diasExcedidos"
        ]
      },
      {
        "operations": {"<>": 1},
        "name": "tienePrestamo",
        "body": "self.prestamo <> null\n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Multa::prestamo"]
      }
    ],
    "properties": []
  },
  {
    "name": "Autor",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "isEmpty": 1
        },
        "name": "poseeObras",
        "body": "not obras->isEmpty()\n\n\n",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Autor::obras"]
      },
      {
        "operations": {"<>": 1},
        "name": "tieneNombre",
        "body": "nombreCompleto <> ''\n\t",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["Biblioteca::Autor::nombreCompleto"]
      }
    ],
    "properties": []
  },
  {
    "name": "Libro",
    "expressions": [{
      "operations": {
        "oclAsSet": 1,
        "notEmpty": 1
      },
      "name": "tieneAutor",
      "body": "self.autor->notEmpty()\t\n",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 2,
        "PropertyCallExpImpl": 1
      },
      "properties": ["Biblioteca::Libro::autor"]
    }],
    "properties": []
  }
]
