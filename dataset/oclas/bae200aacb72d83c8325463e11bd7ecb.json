[
  {
    "name": "AssociationKey",
    "expressions": [],
    "properties": [
      "keyFor",
      "sourceFeature",
      "targetFeature",
      "targetColumnName"
    ]
  },
  {
    "name": "BusinessOperation",
    "expressions": [],
    "properties": [
      "resultMimeType",
      "uses",
      "resultType",
      "FeatureSupportAction",
      "Service"
    ]
  },
  {
    "name": "DateField",
    "expressions": [],
    "properties": [
      "format",
      "details"
    ]
  },
  {
    "name": "DetailsUnit",
    "expressions": [{
      "operations": {
        "not": 1,
        "oclIsUndefined": 1,
        "implies": 1,
        "=": 1
      },
      "name": "selectionMustBeSingleton",
      "body": "not defaultSelection.oclIsUndefined() implies\r\n\tdefaultSelection.limit = 1",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 4,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "website::DataUnit::defaultSelection",
        "website::Selection::limit"
      ]
    }],
    "properties": [
      "contentClass",
      "onlyDisplayWhenNotEmpty",
      "omitFieldLabels",
      "styleClass"
    ]
  },
  {
    "name": "OrmTechnologies",
    "expressions": [],
    "properties": []
  },
  {
    "name": "WebsiteProperties",
    "expressions": [],
    "properties": [
      "testProjectName",
      "databasePort",
      "defaultDateTimeFormat",
      "databasePassword",
      "responsiveTopMenu",
      "staticUnitsEditable",
      "ormTechnology",
      "defaultTimeFormat",
      "textEditorURL",
      "rewriteURLs",
      "sideMenu",
      "databaseName",
      "projectName",
      "baseURL",
      "databaseHost",
      "timestampCreation",
      "databaseUsername",
      "siteTemplate",
      "inputTechnology",
      "captchaSiteKey",
      "copyrightText",
      "developmentVersion",
      "timestampUpdates",
      "WebGenModel",
      "authentication",
      "captchaSecretKey",
      "topNavigationId",
      "ajaxTechnology",
      "databaseTechnology",
      "defaultMaximumUploadSize",
      "siteTitle",
      "webmasterEmail",
      "frameworkTechnology",
      "metaDescription",
      "defaultDateFormat",
      "databasePrefix"
    ]
  },
  {
    "name": "Attribute",
    "expressions": [],
    "properties": [
      "Authentication",
      "FeaturePathAttribute",
      "validationPattern",
      "ModelLabelAttribute",
      "RouteParameterReference",
      "UnitElement",
      "MapUnit",
      "ChildPathAttribute",
      "EntityOrView",
      "placeholder",
      "defaultValue",
      "inputClass",
      "EncapsulatedAttribute"
    ]
  },
  {
    "name": "ImageManipulation",
    "expressions": [],
    "properties": [
      "filters",
      "ImageUnit",
      "WebGenModel",
      "jpegQuality",
      "GalleryUnit"
    ]
  },
  {
    "name": "QueryParameter",
    "expressions": [],
    "properties": [
      "value",
      "formal",
      "Query"
    ]
  },
  {
    "name": "SelectableUnit",
    "expressions": [],
    "properties": [
      "SelectAction",
      "selectionType"
    ]
  },
  {
    "name": "ForgottenPasswordUnit",
    "expressions": [],
    "properties": [
      "LocalAuthenticationSystem",
      "styleClass"
    ]
  },
  {
    "name": "Filter",
    "expressions": [],
    "properties": [
      "CollectionUnit",
      "selection",
      "CollectionUnit",
      "parameters",
      "Query"
    ]
  },
  {
    "name": "CaptchaField",
    "expressions": [],
    "properties": []
  },
  {
    "name": "MapUnit",
    "expressions": [],
    "properties": [
      "location",
      "defaultZoomLevel",
      "placeName",
      "styleClass",
      "readOnly"
    ]
  },
  {
    "name": "Query",
    "expressions": [],
    "properties": [
      "filter",
      "ActionMenuEntry",
      "parameters"
    ]
  },
  {
    "name": "Authentication",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "oclIsTypeOf": 1,
          "implies": 1,
          "oclAsType": 2,
          "=": 2
        },
        "name": "userKeyRequiredAttribute",
        "body": "not userKey.oclIsUndefined() implies\r\n\tif userKey.oclIsTypeOf(EncapsulatedAttribute) then\r\n\t\tuserKey.oclAsType(EncapsulatedAttribute).cardinality = Cardinality::Required\r\n\telse\r\n\t\tuserKey.oclAsType(EntityAttribute).cardinality = Cardinality::Required\r\n\tendif",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 8,
          "VariableExpImpl": 4,
          "EnumLiteralExpImpl": 2,
          "TypeExpImpl": 3,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "website::EncapsulatedAttribute::cardinality",
          "website::EntityFeature::cardinality",
          "website::Authentication::userKey"
        ]
      },
      {
        "operations": {
          "not": 2,
          "oclIsUndefined": 2,
          "and": 1,
          "includes": 1,
          "implies": 1
        },
        "name": "userKeyFromUser",
        "body": "not user.oclIsUndefined() and not userKey.oclIsUndefined() implies\r\n\tuser.features->includes(userKey)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 7,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "website::Authentication::user",
          "website::EntityOrView::features",
          "website::Authentication::userKey"
        ]
      }
    ],
    "properties": [
      "logoutLabel",
      "authenticates",
      "user",
      "loginLabel",
      "userKey"
    ]
  },
  {
    "name": "DataTypeField",
    "expressions": [],
    "properties": [
      "obfuscateFormFields",
      "encrypt",
      "interfaceType",
      "dataType"
    ]
  },
  {
    "name": "UpdateUnit",
    "expressions": [],
    "properties": ["styleClass"]
  },
  {
    "name": "InlineActionContainer",
    "expressions": [{
      "operations": {
        "size": 1,
        "oclIsKindOf": 1,
        "<": 1
      },
      "name": "atMostOneDeleteAction",
      "body": "actions->select(a | a.oclIsKindOf(DeleteAction))->size() < 2",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 2,
        "IntegerLiteralExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["website::InlineActionContainer::actions"]
    }],
    "properties": ["actions"]
  },
  {
    "name": "ModelLabelAttribute",
    "expressions": [],
    "properties": [
      "attribute",
      "dateFormat"
    ]
  },
  {
    "name": "DateAttribute",
    "expressions": [],
    "properties": [
      "details",
      "format"
    ]
  },
  {
    "name": "FeaturePathAttribute",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "oclIsKindOf": 1,
        "oclAsType": 2
      },
      "name": "name",
      "body": "if attribute.oclIsUndefined() then\r\n\t''\r\nelse if attribute.oclIsKindOf(EntityAttribute) then\r\n\tattribute.oclAsType(EntityAttribute).name\r\nelse\r\n\tattribute.oclAsType(EncapsulatedAttribute).name\r\nendif endif\r\n",
      "type": "PropertyImpl",
      "constructs": {
        "VariableExpImpl": 4,
        "OperationCallExpImpl": 4,
        "TypeExpImpl": 3,
        "StringLiteralExpImpl": 1,
        "IfExpImpl": 2,
        "PropertyCallExpImpl": 6
      },
      "properties": [
        "website::EncapsulatedAttribute::name",
        "website::NamedElement::name",
        "website::FeaturePathAttribute::attribute"
      ]
    }],
    "properties": [
      "name",
      "attribute"
    ]
  },
  {
    "name": "WebGenModel",
    "expressions": [
      {
        "operations": {},
        "name": "pageNameUnique",
        "body": "pages->isUnique(name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "website::NamedElement::name",
          "website::WebGenModel::pages"
        ]
      },
      {
        "operations": {},
        "name": "menuNameUnique",
        "body": "menus->isUnique(name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "website::NamedElement::name",
          "website::WebGenModel::menus"
        ]
      },
      {
        "operations": {},
        "name": "classifierNameUnique",
        "body": "classifiers->isUnique(name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "website::NamedElement::name",
          "website::WebGenModel::classifiers"
        ]
      }
    ],
    "properties": [
      "allowTypeCustomisation",
      "services",
      "classifiers",
      "menus",
      "imageManipulations",
      "pages",
      "websiteProperties"
    ]
  },
  {
    "name": "CollectionDisplayOptions",
    "expressions": [],
    "properties": []
  },
  {
    "name": "MenuFeature",
    "expressions": [],
    "properties": []
  },
  {
    "name": "CreateUnit",
    "expressions": [],
    "properties": ["styleClass"]
  },
  {
    "name": "DeleteAction",
    "expressions": [{
      "operations": {
        "<>": 4,
        "oclIsKindOf": 6,
        "oclAsType": 6
      },
      "name": "canOnlyDeleteSingletons",
      "body": "if usedBy.oclIsKindOf(UnitElement) then\r\n\tlet attribute : Attribute\r\n\t\t= usedBy.oclAsType(UnitElement).attribute\r\n\t\tin if attribute.oclIsKindOf(EntityAttribute) then\r\n\t\t\t\tattribute.oclAsType(EntityAttribute).cardinality <> Cardinality::Many\r\n\t\t\telse\r\n\t\t\t\tattribute.oclAsType(EncapsulatedAttribute).cardinality <> Cardinality::Many\r\n\t\t\tendif\r\nelse if usedBy.oclIsKindOf(UnitAssociation) then\r\n\tlet association : Association\r\n\t\t= usedBy.oclAsType(UnitAssociation).association\r\n\t\tin if association.oclIsKindOf(EntityAssociation) then\r\n\t\t\t\tassociation.oclAsType(EntityAssociation).cardinality <> Cardinality::Many\r\n\t\t\telse if association.oclIsKindOf(EncapsulatedAssociation) then\r\n\t\t\t\tassociation.oclAsType(EncapsulatedAssociation).cardinality <> Cardinality::Many\r\n\t\t\telse\r\n\t\t\t\tfalse -- association.oclAsType(ViewAssociation)\r\n\t\t\tendif endif\r\nelse\r\n\tusedBy.oclIsKindOf(CollectionUnit)\r\nendif endif\r\n",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 16,
        "VariableExpImpl": 12,
        "LetExpImpl": 2,
        "EnumLiteralExpImpl": 4,
        "TypeExpImpl": 12,
        "IfExpImpl": 5,
        "PropertyCallExpImpl": 11,
        "BooleanLiteralExpImpl": 1
      },
      "properties": [
        "website::InlineAction::usedBy",
        "website::EncapsulatedAssociation::cardinality",
        "website::EncapsulatedAttribute::cardinality",
        "website::AssociationReference::association",
        "website::UnitElement::attribute",
        "website::EntityFeature::cardinality"
      ]
    }],
    "properties": [
      "confirmMessage",
      "destination",
      "uriElement"
    ]
  },
  {
    "name": "DynamicUnit",
    "expressions": [{
      "operations": {
        "not": 2,
        "oclIsUndefined": 2,
        "oclIsKindOf": 3,
        "oclIsTypeOf": 2,
        "includes": 2,
        "oclAsType": 7
      },
      "name": "featuresMustBeFromContentType",
      "body": "let entities : OrderedSet(EntityOrView)\r\n\t= if self.oclIsKindOf(SingletonUnit) then\r\n\t\t\tOrderedSet{self.oclAsType(SingletonUnit).contentType}\r\n\t\telse if self.oclIsKindOf(CollectionUnit) then\r\n\t\t\tself.oclAsType(CollectionUnit).contentType\r\n\t\telse\r\n\t\t\tself.entities\r\n\t\tendif endif\r\n\tin let eovFeatures : Collection(Feature)\r\n\t\t= entities->collect(eov | eov.allFeatures)\r\n\t\tin displayFields\r\n\t\t\t->select(f | f.oclIsKindOf(UnitFeature)).oclAsType(UnitFeature)\r\n\t\t\t->select(f | \r\n\t\t\t\tif f.oclIsTypeOf(UnitElement) then\r\n\t\t\t\t\tnot f.oclAsType(UnitElement).attribute.oclIsUndefined()\r\n\t\t\t\telse\r\n\t\t\t\t\tnot f.oclAsType(UnitAssociation).association.oclIsUndefined()\r\n\t\t\t\tendif)\r\n\t\t\t->forAll(f | \r\n\t\t\t\tif f.oclIsTypeOf(UnitElement) then\r\n\t\t\t\t\teovFeatures->includes(f.oclAsType(UnitElement).attribute)\r\n\t\t\t\telse\r\n\t\t\t\t\teovFeatures->includes(f.oclAsType(UnitAssociation).association)\r\n\t\t\t\tendif)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 5,
        "VariableExpImpl": 18,
        "OperationCallExpImpl": 18,
        "LetExpImpl": 2,
        "TypeExpImpl": 12,
        "CollectionLiteralExpImpl": 1,
        "IfExpImpl": 4,
        "PropertyCallExpImpl": 9
      },
      "properties": [
        "website::SingletonUnit::contentType",
        "website::EntityOrView::allFeatures",
        "website::CollectionUnit::contentType",
        "website::DynamicUnit::entities",
        "website::AssociationReference::association",
        "website::DynamicUnit::displayFields",
        "website::UnitElement::attribute"
      ]
    }],
    "properties": [
      "ModelReference",
      "header",
      "footer",
      "headerClass",
      "supportActions",
      "errorClass",
      "entities",
      "controlClass",
      "displayFields",
      "footerClass"
    ]
  },
  {
    "name": "Service",
    "expressions": [],
    "properties": [
      "BusinessOperation",
      "serves",
      "operations",
      "WebGenModel",
      "selections"
    ]
  },
  {
    "name": "FeatureSupportAction",
    "expressions": [],
    "properties": [
      "confirmMessage",
      "uriElement",
      "operation",
      "fileExtension"
    ]
  },
  {
    "name": "FileAttribute",
    "expressions": [],
    "properties": []
  },
  {
    "name": "EditStaticTextMenuEntry",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Page",
    "expressions": [{
      "operations": {},
      "name": "contentUnitNameUniqueWithinPage",
      "body": "units->isUnique(name)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "website::UnitContainer::units",
        "website::NamedElement::name"
      ]
    }],
    "properties": [
      "styleClass",
      "ControlUnit",
      "EditUnit",
      "parentPage",
      "topMenuRank",
      "sideMenu",
      "WebGenModel",
      "uriElement",
      "authenticated",
      "childPages",
      "DeleteAction",
      "navigationLabel",
      "EditUnit",
      "topMenuOption"
    ]
  },
  {
    "name": "AssociationWithContainment",
    "expressions": [],
    "properties": ["sourceVisible"]
  },
  {
    "name": "UnitSupportAction",
    "expressions": [],
    "properties": [
      "confirmMessage",
      "disable",
      "DynamicUnit"
    ]
  },
  {
    "name": "InterfaceField",
    "expressions": [],
    "properties": [
      "mustMatch",
      "inputClass",
      "validationPattern",
      "required",
      "defaultValue",
      "placeholder"
    ]
  },
  {
    "name": "ActionMenuEntry",
    "expressions": [],
    "properties": [
      "query",
      "destination"
    ]
  },
  {
    "name": "ChildPath",
    "expressions": [],
    "properties": ["partOf"]
  },
  {
    "name": "ImageFilter",
    "expressions": [],
    "properties": ["ImageManipulation"]
  },
  {
    "name": "EncapsulatedAttribute",
    "expressions": [
      {
        "operations": {
          "<>": 1,
          "not": 1,
          "oclIsUndefined": 2,
          "oclIsKindOf": 1,
          "oclAsType": 2
        },
        "name": "name",
        "body": "if not self.alias.oclIsUndefined() then\r\n\tif self.alias <> '' then\r\n\t\tself.alias\r\n\telse\r\n\t\t'empty alias'\r\n\tendif\r\nelse if attribute.oclIsUndefined() then\r\n\t''\r\nelse \r\n\tif attribute.oclIsKindOf(EntityAttribute) then\r\n\t\tattribute.oclAsType(EntityAttribute).name\r\n\telse\r\n\t\tattribute.oclAsType(EncapsulatedAttribute).name\r\n\tendif\r\nendif endif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 7,
          "TypeExpImpl": 3,
          "StringLiteralExpImpl": 3,
          "IfExpImpl": 4,
          "PropertyCallExpImpl": 9
        },
        "properties": [
          "website::EncapsulatedAttribute::name",
          "website::EncapsulatedAttribute::attribute",
          "website::NamedElement::name",
          "website::EncapsulatedFeature::alias"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsKindOf": 1,
          "oclAsType": 2
        },
        "name": "cardinality",
        "body": "if attribute.oclIsUndefined() then\r\n\tCardinality::Optional\r\nelse \r\n\tif attribute.oclIsKindOf(EntityAttribute) then\r\n\t\tattribute.oclAsType(EntityAttribute).cardinality\r\n\telse\r\n\t\tattribute.oclAsType(EncapsulatedAttribute).cardinality\r\n\tendif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "EnumLiteralExpImpl": 1,
          "TypeExpImpl": 3,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "website::EncapsulatedAttribute::attribute",
          "website::EncapsulatedAttribute::cardinality",
          "website::EntityFeature::cardinality"
        ]
      }
    ],
    "properties": [
      "name",
      "attribute",
      "cardinality"
    ]
  },
  {
    "name": "ResourceAttribute",
    "expressions": [],
    "properties": [
      "maximumUploadSize",
      "validUploadMimeTypes",
      "validUploadExtensions",
      "uploadPath",
      "uploadsWithinWebsite"
    ]
  },
  {
    "name": "CollectionUnit",
    "expressions": [],
    "properties": [
      "pagination",
      "previousPageLabel",
      "defaultPaginationSize",
      "containingFeature",
      "selection",
      "contentType",
      "emptyMessage",
      "lastPageLabel",
      "previousNpages",
      "filters",
      "useFirstLastPageLinks",
      "firstPageLabel",
      "nextNpages",
      "useDisabledPageLinks",
      "nextPageLabel"
    ]
  },
  {
    "name": "IndexUnit",
    "expressions": [{
      "operations": {
        "<>": 1,
        "not": 1,
        "oclIsUndefined": 1,
        "implies": 1
      },
      "name": "selectionMustNotBeSingleton",
      "body": "not defaultSelection.oclIsUndefined() implies\r\n\tdefaultSelection.limit <> 1",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 4,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "website::DataUnit::defaultSelection",
        "website::Selection::limit"
      ]
    }],
    "properties": [
      "SearchUnit",
      "styleClass",
      "rowClasses",
      "displayOption",
      "contentClass",
      "omitColumnLabels"
    ]
  },
  {
    "name": "CasAuthentication",
    "expressions": [],
    "properties": []
  },
  {
    "name": "EncapsulatedFeature",
    "expressions": [],
    "properties": [
      "columnName",
      "alias",
      "displayLabel"
    ]
  },
  {
    "name": "SearchUnit",
    "expressions": [],
    "properties": [
      "resultsDestination",
      "styleClass"
    ]
  },
  {
    "name": "Association",
    "expressions": [
      {
        "operations": {
          "oclIsTypeOf": 1,
          "oclIsKindOf": 1,
          "oclAsType": 3
        },
        "name": "targetEntityX",
        "body": "if self.oclIsKindOf(EntityAssociation) then\r\n\tself.oclAsType(EntityAssociation).targetEntity\r\nelse if self.oclIsTypeOf(EncapsulatedAssociation) then\r\n\t\tself.oclAsType(EncapsulatedAssociation).targetEntity\r\nelse\r\n\t-- TODO get other end\r\n\tself.oclAsType(ViewAssociation).partOf\r\nendif endif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 5,
          "TypeExpImpl": 5,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "website::EncapsulatedAssociation::targetEntity",
          "website::EntityAssociation::targetEntity",
          "website::ViewFeature::partOf"
        ]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "oclIsTypeOf": 1,
          "oclAsType": 3
        },
        "name": "sourceEntityX",
        "body": "if self.oclIsKindOf(EntityAssociation) then\r\n\tself.oclAsType(EntityAssociation).partOf\r\nelse if self.oclIsTypeOf(EncapsulatedAssociation) then\r\n\t\tself.oclAsType(EncapsulatedAssociation).sourceEntity\r\nelse\r\n\tself.oclAsType(ViewAssociation).partOf\r\nendif endif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 5,
          "TypeExpImpl": 5,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "website::EntityFeature::partOf",
          "website::EncapsulatedAssociation::sourceEntity",
          "website::ViewFeature::partOf"
        ]
      }
    ],
    "properties": [
      "encapsulatedBy",
      "sourceEntityX",
      "Selection",
      "inputClass",
      "targetEntityX",
      "serializationMaxDepth",
      "EntityOrView",
      "pseudo",
      "AssociationReference",
      "EntityOrView"
    ]
  },
  {
    "name": "IndexDisplayOption",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ModelLabel",
    "expressions": [],
    "properties": [
      "features",
      "format",
      "labelFor",
      "ModelLabelAssociation"
    ]
  },
  {
    "name": "Predicate",
    "expressions": [],
    "properties": [
      "InlineAction",
      "EditUnit",
      "Selection",
      "InlineAction"
    ]
  },
  {
    "name": "DynamicMenu",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "implies": 1,
          "=": 1
        },
        "name": "mustSelectSingleton",
        "body": "not selection.oclIsUndefined() implies selection.limit = 1",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "website::DynamicMenu::selection",
          "website::Selection::limit"
        ]
      },
      {
        "operations": {},
        "name": "entriesMustBeFromSource",
        "body": "true",
        "type": "ConstraintImpl",
        "constructs": {"BooleanLiteralExpImpl": 1},
        "properties": []
      },
      {
        "operations": {},
        "name": "onlyIncludeFeaturesOnce",
        "body": "true",
        "type": "ConstraintImpl",
        "constructs": {"BooleanLiteralExpImpl": 1},
        "properties": []
      },
      {
        "operations": {
          "<>": 3,
          "not": 1,
          "oclIsUndefined": 1,
          "oclIsKindOf": 3,
          "implies": 1,
          "oclAsType": 3
        },
        "name": "canOnlyTitleWithSingletons",
        "body": "not title.oclIsUndefined() implies\r\n\tif title.oclIsKindOf(EntityFeature) then\r\n\t\ttitle.oclAsType(EntityFeature).cardinality <> Cardinality::Many\r\n\telse if title.oclIsKindOf(EncapsulatedAttribute) then\r\n\t\ttitle.oclAsType(EncapsulatedAttribute).cardinality <> Cardinality::Many\r\n\telse if title.oclIsKindOf(EncapsulatedAssociation) then\r\n\t\ttitle.oclAsType(EncapsulatedAssociation).cardinality <> Cardinality::Many\r\n\telse\r\n\t\tfalse\r\n\tendif endif endif",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 12,
          "VariableExpImpl": 7,
          "EnumLiteralExpImpl": 3,
          "TypeExpImpl": 6,
          "IfExpImpl": 3,
          "PropertyCallExpImpl": 10,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "website::EncapsulatedAssociation::cardinality",
          "website::DynamicMenu::title",
          "website::EncapsulatedAttribute::cardinality",
          "website::EntityFeature::cardinality"
        ]
      },
      {
        "operations": {
          "not": 2,
          "oclIsUndefined": 2,
          "and": 1,
          "includes": 1,
          "implies": 1
        },
        "name": "titleFromEntityOrView",
        "body": "not title.oclIsUndefined() and not entityOrView.oclIsUndefined() implies\r\n\tentityOrView.features->includes(title)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 7,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "website::DynamicMenu::title",
          "website::DynamicMenu::entityOrView",
          "website::EntityOrView::features"
        ]
      }
    ],
    "properties": [
      "selection",
      "title",
      "entityOrView"
    ]
  },
  {
    "name": "ViewFeature",
    "expressions": [],
    "properties": ["partOf"]
  },
  {
    "name": "ImageAttribute",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RegistrationUnit",
    "expressions": [],
    "properties": [
      "LocalAuthenticationSystem",
      "styleClass"
    ]
  },
  {
    "name": "ControlUnit",
    "expressions": [],
    "properties": [
      "contentClass",
      "submitLabel",
      "cancelLabel",
      "cancelDestination"
    ]
  },
  {
    "name": "ImageIndexUnit",
    "expressions": [],
    "properties": [
      "styleClass",
      "contentClass"
    ]
  },
  {
    "name": "NamedElement",
    "expressions": [{
      "operations": {
        "not": 1,
        "oclIsUndefined": 1,
        "size": 1,
        "implies": 1,
        ">": 1
      },
      "name": "nameNeedsAtLeastOneCharacter",
      "body": "not name.oclIsUndefined() implies name.size() > 0",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 5,
        "VariableExpImpl": 2,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["website::NamedElement::name"]
    }],
    "properties": ["name"]
  },
  {
    "name": "EditUnit",
    "expressions": [],
    "properties": [
      "title",
      "confirmLabel",
      "cancelLabel",
      "contentClass",
      "cancelDestination",
      "defaultSelection",
      "confirmDestination",
      "customiseValues",
      "enableWhen"
    ]
  },
  {
    "name": "EncapsulatedAssociation",
    "expressions": [
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsTypeOf": 1,
          "oclAsType": 3
        },
        "name": "sourceEntity",
        "body": "if association.oclIsUndefined() then\r\n\tnull\r\nelse\r\n\tif association.oclIsTypeOf(EncapsulatedAssociation) then\r\n\t\tassociation.oclAsType(EncapsulatedAssociation).sourceEntity\r\n\telse\r\n\t\tif isSourceAssociation then\r\n\t\t\tassociation.oclAsType(EntityAssociation).partOf\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EntityAssociation).targetEntity \r\n\t\tendif\r\n\tendif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 5,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 4,
          "IfExpImpl": 3,
          "PropertyCallExpImpl": 9
        },
        "properties": [
          "website::EntityFeature::partOf",
          "website::EncapsulatedAssociation::isSourceAssociation",
          "website::EncapsulatedAssociation::sourceEntity",
          "website::EncapsulatedAssociation::association",
          "website::EntityAssociation::targetEntity"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "includes": 1,
          "implies": 1
        },
        "name": "isSourceAssociation",
        "body": "not association.oclIsUndefined() implies\r\n\tpartOf.encapsulates->collect(eov | eov.features)->includes(association)",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "website::View::encapsulates",
          "website::EncapsulatedAssociation::association",
          "website::EntityOrView::features",
          "website::ViewFeature::partOf"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsTypeOf": 3,
          "oclAsType": 5
        },
        "name": "cardinality",
        "body": "if association.oclIsUndefined() then\r\n\tCardinality::Optional\r\nelse\r\n\tif association.oclIsTypeOf(EncapsulatedAssociation) then\r\n\t\tassociation.oclAsType(EncapsulatedAssociation).cardinality\r\n\telse if association.oclIsTypeOf(ViewAssociation) then\r\n\t\tif isSourceAssociation then\r\n\t\t\tassociation.oclAsType(ViewAssociation).cardinality\r\n\t\telse\r\n\t\t\tassociation.oclAsType(ViewAssociation).opposite.cardinality\r\n\t\tendif\r\n\telse\r\n\t\tif isSourceAssociation then\r\n\t\t\tassociation.oclAsType(EntityAssociation).cardinality\r\n\t\telse if association.oclIsTypeOf(AssociationWithContainment) then\r\n\t\t\tCardinality::Required\r\n\t\telse\r\n\t\t\tassociation.oclAsType(AssociationWithoutContainment).targetCardinality \r\n\t\tendif endif\r\n\tendif endif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 11,
          "OperationCallExpImpl": 9,
          "EnumLiteralExpImpl": 2,
          "TypeExpImpl": 8,
          "IfExpImpl": 6,
          "PropertyCallExpImpl": 17
        },
        "properties": [
          "website::ViewAssociation::cardinality",
          "website::ViewAssociation::opposite",
          "website::AssociationWithoutContainment::targetCardinality",
          "website::EncapsulatedAssociation::cardinality",
          "website::EncapsulatedAssociation::isSourceAssociation",
          "website::EncapsulatedAssociation::association",
          "website::EntityFeature::cardinality"
        ]
      },
      {
        "operations": {
          "<>": 1,
          "not": 1,
          "oclIsUndefined": 2,
          "oclIsTypeOf": 1,
          "oclIsKindOf": 2,
          "oclAsType": 5
        },
        "name": "name",
        "body": "if not alias.oclIsUndefined() then\r\n\tif alias <> '' then\r\n\t\talias\r\n\telse\r\n\t\t'empty alias'\r\n\tendif\r\nelse if association.oclIsUndefined() then\r\n\t''\r\nelse\r\n\tif association.oclIsTypeOf(EncapsulatedAssociation) then\r\n\t\tassociation.oclAsType(EncapsulatedAssociation).name\r\n\telse\r\n\t\tif isSourceAssociation then\r\n\t\t\tif self.association.oclIsKindOf(EntityAssociation) then\r\n\t\t\t\tself.association.oclAsType(EntityAssociation).name\r\n\t\t\telse\r\n\t\t\t\tassociation.oclAsType(ViewAssociation).name\r\n\t\t\tendif\r\n\t\telse\r\n\t\t\tif self.association.oclIsKindOf(EntityAssociation) then\r\n\t\t\t\tself.association.oclAsType(EntityAssociation).targetFeatureName\r\n\t\t\telse\r\n\t\t\t\tassociation.oclAsType(ViewAssociation).opposite.name\r\n\t\t\tendif\r\n\t\tendif\r\n\tendif\r\nendif endif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 13,
          "OperationCallExpImpl": 12,
          "TypeExpImpl": 8,
          "StringLiteralExpImpl": 3,
          "IfExpImpl": 7,
          "PropertyCallExpImpl": 19
        },
        "properties": [
          "website::ViewAssociation::opposite",
          "website::NamedElement::name",
          "website::EncapsulatedAssociation::name",
          "website::EncapsulatedAssociation::isSourceAssociation",
          "website::EntityAssociation::targetFeatureName",
          "website::EncapsulatedAssociation::association",
          "website::EncapsulatedFeature::alias"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsTypeOf": 1,
          "oclAsType": 3
        },
        "name": "targetEntity",
        "body": "if association.oclIsUndefined() then\r\n\tnull\r\nelse\r\n\tif association.oclIsTypeOf(EncapsulatedAssociation) then\r\n\t\tassociation.oclAsType(EncapsulatedAssociation).targetEntity\r\n\telse\r\n\t\tif isSourceAssociation then\r\n\t\t\tassociation.oclAsType(EntityAssociation).targetEntity \r\n\t\telse\r\n\t\t\tassociation.oclAsType(EntityAssociation).partOf\r\n\t\tendif\r\n\tendif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 5,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 4,
          "IfExpImpl": 3,
          "PropertyCallExpImpl": 9
        },
        "properties": [
          "website::EntityFeature::partOf",
          "website::EncapsulatedAssociation::isSourceAssociation",
          "website::EncapsulatedAssociation::association",
          "website::EncapsulatedAssociation::targetEntity",
          "website::EntityAssociation::targetEntity"
        ]
      }
    ],
    "properties": [
      "ViewAssociation",
      "name",
      "EncapsulatedAssociation",
      "cardinality",
      "isSourceAssociation",
      "sourceEntity",
      "association",
      "targetEntity",
      "encapsulatedTarget"
    ]
  },
  {
    "name": "CurrentUserReference",
    "expressions": [],
    "properties": ["userModel"]
  },
  {
    "name": "DataType",
    "expressions": [],
    "properties": [
      "ormType",
      "persistentType",
      "FilterParameter",
      "placeholder",
      "validationPattern",
      "DataTypeField",
      "interfaceType",
      "DataTypeAttribute"
    ]
  },
  {
    "name": "ModelLabelAssociation",
    "expressions": [{
      "operations": {
        "not": 1,
        "oclIsUndefined": 1,
        "includes": 1,
        "implies": 1
      },
      "name": "isSourceAssociation",
      "body": "not association.oclIsUndefined() implies\r\n\tpartOf.labelFor.features->includes(association)",
      "type": "PropertyImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 3,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "website::ModelLabelAssociation::association",
        "website::ModelLabel::labelFor",
        "website::EntityOrView::features",
        "website::ModelLabelFeature::partOf"
      ]
    }],
    "properties": [
      "isSourceAssociation",
      "association",
      "dynamicLabel"
    ]
  },
  {
    "name": "DateDetails",
    "expressions": [],
    "properties": []
  },
  {
    "name": "CreateSitemapUnit",
    "expressions": [],
    "properties": [
      "filename",
      "styleClass",
      "contentClass",
      "deployedURL"
    ]
  },
  {
    "name": "DataUnit",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "<>": 2,
          "oclIsUndefined": 1,
          "oclIsKindOf": 2,
          "implies": 1,
          "oclAsType": 2
        },
        "name": "canOnlyTitleWithSingletons",
        "body": "not title.oclIsUndefined() implies \r\n\tif title.oclIsKindOf(EntityAttribute) then\r\n\t\ttitle.oclAsType(EntityAttribute).cardinality <> Cardinality::Many\r\n\telse if title.oclIsKindOf(EncapsulatedAttribute) then\r\n\t\ttitle.oclAsType(EncapsulatedAttribute).cardinality <> Cardinality::Many\r\n\telse\r\n\t\ttrue\r\n\tendif endif",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 9,
          "VariableExpImpl": 5,
          "EnumLiteralExpImpl": 2,
          "TypeExpImpl": 4,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 7,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "website::DataUnit::title",
          "website::EncapsulatedAttribute::cardinality",
          "website::EntityFeature::cardinality"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "includes": 1,
          "implies": 1
        },
        "name": "selectionValidChoice",
        "body": "not defaultSelection.oclIsUndefined() implies\r\n\tentities->collect(eov | eov.servedBy)->collect(s | s.selections)->includes(defaultSelection)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 4,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "website::EntityOrView::servedBy",
          "website::DynamicUnit::entities",
          "website::Service::selections",
          "website::DataUnit::defaultSelection"
        ]
      }
    ],
    "properties": [
      "title",
      "defaultSelection"
    ]
  },
  {
    "name": "OperationResultTypes",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Cardinality",
    "expressions": [],
    "properties": []
  },
  {
    "name": "DataTypeAttribute",
    "expressions": [],
    "properties": [
      "caseInsensitive",
      "encrypt",
      "dataType",
      "obfuscateFormFields"
    ]
  },
  {
    "name": "GalleryUnit",
    "expressions": [],
    "properties": [
      "contentClass",
      "fullSizeFilter",
      "styleClass"
    ]
  },
  {
    "name": "SelectAction",
    "expressions": [],
    "properties": ["target"]
  },
  {
    "name": "LoginUnit",
    "expressions": [],
    "properties": [
      "logoutUriElement",
      "styleClass",
      "LocalAuthenticationSystem"
    ]
  },
  {
    "name": "AjaxTechnologies",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ModelReference",
    "expressions": [],
    "properties": ["unit"]
  },
  {
    "name": "PageLink",
    "expressions": [],
    "properties": [
      "targetPage",
      "Page"
    ]
  },
  {
    "name": "FilterParameter",
    "expressions": [],
    "properties": [
      "defaultValue",
      "QueryParameter",
      "placeholder",
      "partOf",
      "formal",
      "dataType"
    ]
  },
  {
    "name": "AssociationWithoutContainment",
    "expressions": [{
      "operations": {
        "and": 1,
        "implies": 1,
        "=": 2
      },
      "name": "oneToManyAssociationsMustBeBidirectional",
      "body": "cardinality = Cardinality::Optional and targetCardinality = Cardinality::Required implies bidirectional",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 4,
        "EnumLiteralExpImpl": 2,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "website::AssociationWithoutContainment::targetCardinality",
        "website::EntityAssociation::bidirectional",
        "website::EntityFeature::cardinality"
      ]
    }],
    "properties": [
      "targetCardinality",
      "targetUnique"
    ]
  },
  {
    "name": "FeaturePath",
    "expressions": [],
    "properties": [
      "ImageUnit",
      "ImageUnit"
    ]
  },
  {
    "name": "Entity",
    "expressions": [{
      "operations": {},
      "name": "featureNameUniqueWithinEntity",
      "body": "entityFeatures->isUnique(f | f.name)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "website::NamedElement::name",
        "website::Entity::entityFeatures"
      ]
    }],
    "properties": [
      "EncapsulatedAssociation",
      "associationEnds",
      "entityFeatures",
      "EncapsulatedAssociation"
    ]
  },
  {
    "name": "FeaturePathAssociation",
    "expressions": [
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsKindOf": 2,
          "oclAsType": 4
        },
        "name": "sourceEntity",
        "body": "if association.oclIsUndefined() then\r\n\tnull\r\nelse\r\n\tif isSourceAssociation then\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).partOf\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).sourceEntity\r\n\t\tendif\r\n\telse\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).targetEntity\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).targetEntity\r\n\t\tendif\r\n\tendif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 8,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 6,
          "IfExpImpl": 4,
          "PropertyCallExpImpl": 12
        },
        "properties": [
          "website::FeaturePathAssociation::isSourceAssociation",
          "website::EntityFeature::partOf",
          "website::EncapsulatedAssociation::sourceEntity",
          "website::AssociationReference::association",
          "website::EncapsulatedAssociation::targetEntity",
          "website::EntityAssociation::targetEntity"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "oclIsKindOf": 2,
          "includes": 1,
          "oclBadOperation": 1,
          "implies": 1,
          "oclAsType": 3
        },
        "name": "isSourceAssociation",
        "body": "not association.oclIsUndefined() implies\n\tlet unit : DynamicUnit\n\t\t= self.eContainer().oclAsType(DynamicUnit)\n\t\tin let entities : OrderedSet(EntityOrView)\n\t\t\t= if unit.oclIsKindOf(SingletonUnit) then\n\t\t\t\t\tOrderedSet{unit.oclAsType(SingletonUnit).contentType}\n\t\t\t\telse if unit.oclIsKindOf(CollectionUnit) then\n\t\t\t\t\tunit.oclAsType(CollectionUnit).contentType\n\t\t\t\telse\n\t\t\t\t\tunit.entities\n\t\t\t\tendif endif\n\t\t\tin entities->collect(eov | eov.associations)->includes(association)",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 10,
          "VariableExpImpl": 10,
          "LetExpImpl": 2,
          "TypeExpImpl": 5,
          "CollectionLiteralExpImpl": 1,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "website::SingletonUnit::contentType",
          "website::EntityOrView::associations",
          "website::DynamicUnit::entities",
          "website::CollectionUnit::contentType",
          "website::AssociationReference::association"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsKindOf": 2,
          "oclAsType": 4
        },
        "name": "targetEntity",
        "body": "if association.oclIsUndefined() then\r\n\tnull\r\nelse\r\n\tif isSourceAssociation then\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).targetEntity\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).targetEntity\r\n\t\tendif\r\n\telse\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).partOf\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).sourceEntity\r\n\t\tendif\r\n\tendif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 8,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 6,
          "IfExpImpl": 4,
          "PropertyCallExpImpl": 12
        },
        "properties": [
          "website::EntityFeature::partOf",
          "website::FeaturePathAssociation::isSourceAssociation",
          "website::EncapsulatedAssociation::sourceEntity",
          "website::EncapsulatedAssociation::targetEntity",
          "website::AssociationReference::association",
          "website::EntityAssociation::targetEntity"
        ]
      }
    ],
    "properties": [
      "isSourceAssociation",
      "targetEntity",
      "sourceEntity"
    ]
  },
  {
    "name": "DatabaseTechnologies",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ViewAssociation",
    "expressions": [],
    "properties": [
      "cardinality",
      "opposite"
    ]
  },
  {
    "name": "FeatureReference",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "oclIsKindOf": 3,
        "oclAsType": 4
      },
      "name": "name",
      "body": "if feature.oclIsUndefined() then\r\n\t''\r\nelse\r\n\tif feature.oclIsKindOf(EntityFeature) then\r\n\t\tfeature.oclAsType(EntityFeature).name\r\n\telse if feature.oclIsKindOf(EncapsulatedAttribute) then\r\n\t\tfeature.oclAsType(EncapsulatedAttribute).name\r\n\telse if feature.oclIsKindOf(EncapsulatedAssociation) then\r\n\t\tfeature.oclAsType(EncapsulatedAssociation).name\r\n\telse\r\n\t\tfeature.oclAsType(ViewAssociation).name\r\n\tendif endif endif\r\nendif",
      "type": "PropertyImpl",
      "constructs": {
        "OperationCallExpImpl": 8,
        "VariableExpImpl": 8,
        "StringLiteralExpImpl": 1,
        "TypeExpImpl": 7,
        "IfExpImpl": 4,
        "PropertyCallExpImpl": 12
      },
      "properties": [
        "website::EncapsulatedAttribute::name",
        "website::EncapsulatedAssociation::name",
        "website::NamedElement::name",
        "website::FeatureReference::feature"
      ]
    }],
    "properties": [
      "name",
      "feature"
    ]
  },
  {
    "name": "View",
    "expressions": [],
    "properties": [
      "viewFeatures",
      "encapsulates"
    ]
  },
  {
    "name": "UnitFeature",
    "expressions": [
      {
        "operations": {
          "size": 1,
          "oclIsKindOf": 1,
          "<": 1
        },
        "name": "atMostOneSelectAction",
        "body": "actions->select(a | a.oclIsKindOf(SelectAction))->size() < 2",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["website::InlineActionContainer::actions"]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "isEmpty": 1
        },
        "name": "noDeleteActions",
        "body": "actions->select(a | a.oclIsKindOf(DeleteAction))->isEmpty()",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["website::InlineActionContainer::actions"]
      }
    ],
    "properties": [
      "onlyDisplayWhenNotEmpty",
      "displayLabel",
      "footerClass",
      "forcedValue",
      "displayClass",
      "required",
      "autofocus",
      "nullDisplayValue",
      "footer",
      "headerClass",
      "inputClass"
    ]
  },
  {
    "name": "AuthenticationKeyTypes",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ModelLabelFeature",
    "expressions": [],
    "properties": ["partOf"]
  },
  {
    "name": "LocationAttribute",
    "expressions": [],
    "properties": ["MapUnit"]
  },
  {
    "name": "SelectionParameter",
    "expressions": [],
    "properties": [
      "defaultValue",
      "formalFor",
      "optional",
      "FilterParameter",
      "ParameterReference"
    ]
  },
  {
    "name": "Order",
    "expressions": [],
    "properties": ["Selection"]
  },
  {
    "name": "StaticMenu",
    "expressions": [{
      "operations": {
        "oclIsKindOf": 1,
        "isEmpty": 1
      },
      "name": "onlyStaticEntries",
      "body": "entries->select(e | e.oclIsKindOf(MenuFeature))->isEmpty()",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["website::Menu::entries"]
    }],
    "properties": []
  },
  {
    "name": "ContentUnit",
    "expressions": [],
    "properties": [
      "displayedOn",
      "createDefaultUriElement",
      "alternative",
      "purposeSummary",
      "uriElement",
      "ActionMenuEntry",
      "captionClass",
      "requiresRole",
      "omitCaption"
    ]
  },
  {
    "name": "MenuEntry",
    "expressions": [],
    "properties": [
      "partOf",
      "requiresRole"
    ]
  },
  {
    "name": "EntityAttribute",
    "expressions": [{
      "operations": {
        "<>": 1,
        "implies": 1
      },
      "name": "primaryKeyRequired",
      "body": "primaryKey implies cardinality <> Cardinality::Optional",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 2,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "website::EntityAttribute::primaryKey",
        "website::EntityFeature::cardinality"
      ]
    }],
    "properties": [
      "containerUnique",
      "interfaceType",
      "primaryKey",
      "persistentType",
      "ormType"
    ]
  },
  {
    "name": "UrlAttribute",
    "expressions": [],
    "properties": ["displayValue"]
  },
  {
    "name": "ImageUnit",
    "expressions": [],
    "properties": [
      "imagePathFeature",
      "titleFeature",
      "missingImagePath",
      "showTime",
      "defaultSelection",
      "imageFilter",
      "transitionTime"
    ]
  },
  {
    "name": "StaticUnit",
    "expressions": [],
    "properties": [
      "styleClass",
      "content",
      "contentClass"
    ]
  },
  {
    "name": "InputTechnologies",
    "expressions": [],
    "properties": []
  },
  {
    "name": "EnumerationLiteral",
    "expressions": [],
    "properties": ["EnumerationType"]
  },
  {
    "name": "UnitContainer",
    "expressions": [],
    "properties": ["units"]
  },
  {
    "name": "ThumbnailFilter",
    "expressions": [],
    "properties": [
      "width",
      "height"
    ]
  },
  {
    "name": "EntityAssociation",
    "expressions": [],
    "properties": [
      "ModelLabelAssociation",
      "targetDisplayLabel",
      "targetFooterClass",
      "targetInputClass",
      "keys",
      "targetFeatureName",
      "bidirectional",
      "targetHeaderClass",
      "targetEntity",
      "pivotTableName",
      "targetPrimaryKey",
      "targetDisplayClass"
    ]
  },
  {
    "name": "UnitAssociation",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "oclIsKindOf": 2,
          "includes": 1,
          "implies": 1,
          "oclAsType": 2
        },
        "name": "isSourceAssociation",
        "body": "not association.oclIsUndefined() implies\r\n\tlet entities : OrderedSet(EntityOrView)\r\n\t\t= if displayedOn.oclIsKindOf(SingletonUnit) then\r\n\t\t\t\tOrderedSet{displayedOn.oclAsType(SingletonUnit).contentType}\r\n\t\t\telse if displayedOn.oclIsKindOf(CollectionUnit) then\r\n\t\t\t\tdisplayedOn.oclAsType(CollectionUnit).contentType\r\n\t\t\telse\r\n\t\t\t\tdisplayedOn.entities\r\n\t\t\tendif endif\r\n\t\tin entities->collect(e | e.associations)->includes(association)",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 9,
          "OperationCallExpImpl": 8,
          "LetExpImpl": 1,
          "TypeExpImpl": 4,
          "CollectionLiteralExpImpl": 1,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 11
        },
        "properties": [
          "website::SingletonUnit::contentType",
          "website::EntityOrView::associations",
          "website::UnitField::displayedOn",
          "website::CollectionUnit::contentType",
          "website::DynamicUnit::entities",
          "website::AssociationReference::association"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "oclAsSet": 1,
          "includes": 1,
          "implies": 1
        },
        "name": "selectionValidChoice",
        "body": "not selection.oclIsUndefined() implies\r\n\ttargetEntity->collect(eov | eov.servedBy)->collect(s | s.selections)->includes(selection)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 5,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "website::UnitAssociation::selection",
          "website::EntityOrView::servedBy",
          "website::UnitAssociation::targetEntity",
          "website::Service::selections"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsKindOf": 2,
          "oclAsType": 4
        },
        "name": "targetEntity",
        "body": "if association.oclIsUndefined() then\r\n\tnull\r\nelse\r\n\tif isSourceAssociation then\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).targetEntity\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).targetEntity\r\n\t\tendif\r\n\telse\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).partOf\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).sourceEntity\r\n\t\tendif\r\n\tendif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 8,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 6,
          "IfExpImpl": 4,
          "PropertyCallExpImpl": 12
        },
        "properties": [
          "website::EntityFeature::partOf",
          "website::UnitAssociation::isSourceAssociation",
          "website::EncapsulatedAssociation::sourceEntity",
          "website::AssociationReference::association",
          "website::EncapsulatedAssociation::targetEntity",
          "website::EntityAssociation::targetEntity"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsKindOf": 2,
          "oclAsType": 4
        },
        "name": "sourceEntity",
        "body": "if association.oclIsUndefined() then\r\n\tnull\r\nelse\r\n\tif isSourceAssociation then\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).partOf\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).sourceEntity\r\n\t\tendif\r\n\telse\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).targetEntity\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).targetEntity\r\n\t\tendif\r\n\tendif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 8,
          "OperationCallExpImpl": 7,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 6,
          "IfExpImpl": 4,
          "PropertyCallExpImpl": 12
        },
        "properties": [
          "website::EntityFeature::partOf",
          "website::UnitAssociation::isSourceAssociation",
          "website::EncapsulatedAssociation::sourceEntity",
          "website::AssociationReference::association",
          "website::EncapsulatedAssociation::targetEntity",
          "website::EntityAssociation::targetEntity"
        ]
      }
    ],
    "properties": [
      "selection",
      "targetEntity",
      "isSourceAssociation",
      "sourceEntity"
    ]
  },
  {
    "name": "SingletonUnit",
    "expressions": [],
    "properties": ["contentType"]
  },
  {
    "name": "UnitElement",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "oclIsKindOf": 1,
        "oclAsType": 2
      },
      "name": "name",
      "body": "if attribute.oclIsUndefined() then\r\n\t''\r\nelse if attribute.oclIsKindOf(EncapsulatedAttribute) then\r\n\tattribute.oclAsType(EncapsulatedAttribute).name\r\nelse\r\n\tattribute.oclAsType(EntityAttribute).name\r\nendif endif",
      "type": "PropertyImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 4,
        "TypeExpImpl": 3,
        "StringLiteralExpImpl": 1,
        "IfExpImpl": 2,
        "PropertyCallExpImpl": 6
      },
      "properties": [
        "website::EncapsulatedAttribute::name",
        "website::NamedElement::name",
        "website::UnitElement::attribute"
      ]
    }],
    "properties": [
      "name",
      "defaultValue",
      "validationPattern",
      "attribute",
      "placeholder",
      "obfuscateFormFields"
    ]
  },
  {
    "name": "ChildPathAttribute",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "oclIsKindOf": 1,
        "oclAsType": 2
      },
      "name": "name",
      "body": "if attribute.oclIsUndefined() then\r\n\t''\r\nelse if attribute.oclIsKindOf(EntityAttribute) then\r\n\tattribute.oclAsType(EntityAttribute).name\r\nelse\r\n\tattribute.oclAsType(EncapsulatedAttribute).name\r\nendif endif\r\n",
      "type": "PropertyImpl",
      "constructs": {
        "VariableExpImpl": 4,
        "OperationCallExpImpl": 4,
        "TypeExpImpl": 3,
        "StringLiteralExpImpl": 1,
        "IfExpImpl": 2,
        "PropertyCallExpImpl": 6
      },
      "properties": [
        "website::EncapsulatedAttribute::name",
        "website::NamedElement::name",
        "website::ChildPathAttribute::attribute"
      ]
    }],
    "properties": [
      "name",
      "attribute"
    ]
  },
  {
    "name": "EntityOrView",
    "expressions": [
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1
        },
        "name": "associations",
        "body": "features->select(f | f.oclIsKindOf(Association)).oclAsType(Association)->asOrderedSet()",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["website::EntityOrView::features"]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1
        },
        "name": "attributes",
        "body": "features->select(f | f.oclIsKindOf(Attribute)).oclAsType(Attribute)->asOrderedSet()",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["website::EntityOrView::features"]
      },
      {
        "operations": {"includesAll": 1},
        "name": "keysFromLocalFeatures",
        "body": "allFeatures->includesAll(keys)",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "website::EntityOrView::keys",
          "website::EntityOrView::allFeatures"
        ]
      },
      {
        "operations": {
          "oclIsTypeOf": 1,
          "asOrderedSet": 1,
          "union": 1,
          "oclAsType": 3
        },
        "name": "allFeatures",
        "body": "if self.oclIsTypeOf(Entity) then\r\n\tself.oclAsType(Entity).entityFeatures->union(self.oclAsType(Entity).associationEnds->select(e | e.bidirectional))->asOrderedSet()\r\nelse\r\n\tself.oclAsType(View).viewFeatures\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 6,
          "TypeExpImpl": 4,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "website::View::viewFeatures",
          "website::Entity::associationEnds",
          "website::Entity::entityFeatures",
          "website::EntityAssociation::bidirectional"
        ]
      },
      {
        "operations": {
          "oclIsTypeOf": 1,
          "oclAsType": 2
        },
        "name": "features",
        "body": "if self.oclIsTypeOf(Entity) then\r\n\tself.oclAsType(Entity).entityFeatures\r\nelse\r\n\tself.oclAsType(View).viewFeatures\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "TypeExpImpl": 3,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "website::View::viewFeatures",
          "website::Entity::entityFeatures"
        ]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1
        },
        "name": "allAssociations",
        "body": "allFeatures->select(f | f.oclIsKindOf(Association)).oclAsType(Association)->asOrderedSet()",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["website::EntityOrView::allFeatures"]
      }
    ],
    "properties": [
      "View",
      "WebGenModel",
      "ChildPathAssociation",
      "implementsUserInterface",
      "Authentication",
      "unique",
      "UnitAssociation",
      "CollectionUnit",
      "LocalAuthenticationSystem",
      "singletonName",
      "DynamicUnit",
      "servedBy",
      "UnitAssociation",
      "containerUnique",
      "autoKeyName",
      "SelectableUnit",
      "ChildPathAssociation",
      "FeaturePathAssociation",
      "keys",
      "serializationExcludeAll",
      "FeaturePathAssociation",
      "autoKeyPersistentType",
      "DynamicMenu",
      "SingletonUnit",
      "tableName",
      "labels",
      "autoKeyGenerationStrategy",
      "associations",
      "allFeatures",
      "Association",
      "CurrentUserReference",
      "pluralisedName",
      "features",
      "allAssociations",
      "Association",
      "attributes"
    ]
  },
  {
    "name": "Menu",
    "expressions": [],
    "properties": [
      "layoutClass",
      "styleClass",
      "captionClass",
      "Page",
      "entries",
      "WebsiteProperties",
      "omitCaption",
      "WebGenModel"
    ]
  },
  {
    "name": "Feature",
    "expressions": [],
    "properties": [
      "EntityOrView",
      "nullDisplayValue",
      "FeatureReference",
      "serializationGroups",
      "footerClass",
      "displayClass",
      "title",
      "EntityOrView",
      "EntityOrView",
      "collectionAllowAdd",
      "serializationExpose",
      "headerClass",
      "Selection",
      "encodeUriKey",
      "EntityOrView",
      "EntityOrView",
      "CollectionUnit",
      "collectionAllowRemove"
    ]
  },
  {
    "name": "FrameworkTechnologies",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Classifier",
    "expressions": [],
    "properties": ["WebGenModel"]
  },
  {
    "name": "PathElement",
    "expressions": [],
    "properties": ["ResourceAttribute"]
  },
  {
    "name": "SliderUnit",
    "expressions": [],
    "properties": [
      "styleClass",
      "contentClass"
    ]
  },
  {
    "name": "ChildPathAssociation",
    "expressions": [
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsKindOf": 2,
          "oclAsType": 4
        },
        "name": "sourceEntity",
        "body": "if association.oclIsUndefined() then\r\n\tnull\r\nelse\r\n\tif isSourceAssociation then\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).partOf\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).sourceEntity\r\n\t\tendif\r\n\telse\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).targetEntity\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).targetEntity\r\n\t\tendif\r\n\tendif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 8,
          "OperationCallExpImpl": 7,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 6,
          "IfExpImpl": 4,
          "PropertyCallExpImpl": 12
        },
        "properties": [
          "website::ChildPathAssociation::isSourceAssociation",
          "website::EntityFeature::partOf",
          "website::EncapsulatedAssociation::sourceEntity",
          "website::EncapsulatedAssociation::targetEntity",
          "website::AssociationReference::association",
          "website::EntityAssociation::targetEntity"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "oclIsTypeOf": 2,
          "includes": 3,
          "implies": 1,
          "oclAsType": 3
        },
        "name": "isSourceAssociation",
        "body": "not association.oclIsUndefined() implies\r\n\tif partOf.oclIsTypeOf(UnitAssociation) then\r\n\t\tpartOf.oclAsType(UnitAssociation).targetEntity.associations->includes(association)\r\n\telse if partOf.oclIsTypeOf(FeaturePathAssociation) then\r\n\t\tpartOf.oclAsType(FeaturePathAssociation).targetEntity.associations->includes(association)\r\n\telse\r\n\t\tpartOf.oclAsType(ChildPathAssociation).targetEntity.associations->includes(association)\r\n\tendif endif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 11,
          "VariableExpImpl": 9,
          "TypeExpImpl": 5,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 15
        },
        "properties": [
          "website::EntityOrView::associations",
          "website::UnitAssociation::targetEntity",
          "website::ChildPathAssociation::targetEntity",
          "website::FeaturePathAssociation::targetEntity",
          "website::AssociationReference::association",
          "website::ChildPath::partOf"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclIsKindOf": 2,
          "oclAsType": 4
        },
        "name": "targetEntity",
        "body": "if association.oclIsUndefined() then\r\n\tnull\r\nelse\r\n\tif isSourceAssociation then\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).targetEntity\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).targetEntity\r\n\t\tendif\r\n\telse\r\n\t\tif association.oclIsKindOf(EntityAssociation) then\r\n\t\t\tassociation.oclAsType(EntityAssociation).partOf\r\n\t\telse\r\n\t\t\tassociation.oclAsType(EncapsulatedAssociation).sourceEntity\r\n\t\tendif\r\n\tendif\r\nendif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 8,
          "OperationCallExpImpl": 7,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 6,
          "IfExpImpl": 4,
          "PropertyCallExpImpl": 12
        },
        "properties": [
          "website::ChildPathAssociation::isSourceAssociation",
          "website::EntityFeature::partOf",
          "website::EncapsulatedAssociation::sourceEntity",
          "website::AssociationReference::association",
          "website::EncapsulatedAssociation::targetEntity",
          "website::EntityAssociation::targetEntity"
        ]
      }
    ],
    "properties": [
      "isSourceAssociation",
      "sourceEntity",
      "targetEntity"
    ]
  },
  {
    "name": "Selection",
    "expressions": [],
    "properties": [
      "parameters",
      "UnitAssociation",
      "selected",
      "DynamicMenu",
      "DataUnit",
      "filter",
      "ordering",
      "CollectionUnit",
      "limit",
      "fields",
      "EditUnit",
      "joins",
      "Filter",
      "usedBy",
      "distinct",
      "ImageUnit"
    ]
  },
  {
    "name": "CreateUpdateUnit",
    "expressions": [],
    "properties": [
      "createUriElement",
      "styleClass",
      "clearLabel"
    ]
  },
  {
    "name": "StaticPathElement",
    "expressions": [],
    "properties": ["element"]
  },
  {
    "name": "LocalAuthenticationSystem",
    "expressions": [{
      "operations": {
        "not": 2,
        "oclIsUndefined": 2,
        "and": 1,
        "implies": 1
      },
      "name": "captchaRequiresKeys",
      "body": "useCaptcha implies not authenticates.captchaSiteKey.oclIsUndefined() and not authenticates.captchaSecretKey.oclIsUndefined()",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 6,
        "VariableExpImpl": 3,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "website::Authentication::authenticates",
        "website::WebsiteProperties::captchaSiteKey",
        "website::LocalAuthenticationSystem::useCaptcha",
        "website::WebsiteProperties::captchaSecretKey"
      ]
    }],
    "properties": [
      "authentication",
      "authenticationKey",
      "forgottenPasswordUnit",
      "allowSelfRegistration",
      "sendWelcomeEmail",
      "trackLoginAttempts",
      "useEmailActivation",
      "useCaptcha",
      "allowRememberMe",
      "loginUnit",
      "registrationUnit"
    ]
  },
  {
    "name": "EnumerationType",
    "expressions": [],
    "properties": ["enumerations"]
  },
  {
    "name": "NamedDisplayElement",
    "expressions": [],
    "properties": ["displayLabel"]
  },
  {
    "name": "Label",
    "expressions": [],
    "properties": [
      "DynamicMenu",
      "DataUnit",
      "AssociationReference",
      "EditUnit"
    ]
  },
  {
    "name": "DatePathElement",
    "expressions": [],
    "properties": ["format"]
  },
  {
    "name": "EntityFeature",
    "expressions": [],
    "properties": [
      "columnName",
      "AssociationKey",
      "partOf",
      "pluralisedName",
      "booleanIsHasChoice",
      "ordered",
      "singletonName",
      "cardinality",
      "unique",
      "AssociationKey"
    ]
  },
  {
    "name": "AssociationReference",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "oclIsKindOf": 1,
        "oclIsTypeOf": 1,
        "oclAsType": 3
      },
      "name": "name",
      "body": "if association.oclIsUndefined() then\r\n\t''\r\nelse if association.oclIsKindOf(EntityAssociation) then\r\n\tassociation.oclAsType(EntityAssociation).name\r\nelse if association.oclIsTypeOf(EncapsulatedAssociation) then\r\n\tassociation.oclAsType(EncapsulatedAssociation).name\r\nelse\r\n\tassociation.oclAsType(ViewAssociation).name \r\nendif endif endif\r\n",
      "type": "PropertyImpl",
      "constructs": {
        "OperationCallExpImpl": 6,
        "VariableExpImpl": 6,
        "StringLiteralExpImpl": 1,
        "TypeExpImpl": 5,
        "IfExpImpl": 3,
        "PropertyCallExpImpl": 9
      },
      "properties": [
        "website::NamedElement::name",
        "website::EncapsulatedAssociation::name",
        "website::AssociationReference::association"
      ]
    }],
    "properties": [
      "valueDisplay",
      "association",
      "childFeature",
      "name"
    ]
  },
  {
    "name": "ParameterReference",
    "expressions": [{
      "operations": {"oclIsUndefined": 1},
      "name": "name",
      "body": "if parameter.oclIsUndefined() then\r\n\t''\r\nelse\r\n\tparameter.name\r\nendif",
      "type": "PropertyImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "website::ParameterReference::parameter",
        "website::NamedElement::name"
      ]
    }],
    "properties": [
      "parameter",
      "name"
    ]
  },
  {
    "name": "InlineAction",
    "expressions": [],
    "properties": [
      "headerClass",
      "usedBy",
      "disable",
      "requiresRole",
      "enableWhen",
      "footer",
      "header",
      "displayWhen",
      "footerClass"
    ]
  },
  {
    "name": "AuthenticationUnit",
    "expressions": [],
    "properties": []
  },
  {
    "name": "PageTopMenuOptions",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RouteParameterReference",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "oclIsKindOf": 1,
        "oclAsType": 2
      },
      "name": "name",
      "body": "if parameter.oclIsUndefined() then\r\n\t''\r\nelse if parameter.oclIsKindOf(EntityAttribute) then\r\n\tparameter.oclAsType(EntityAttribute).name\r\nelse\r\n\tparameter.oclAsType(EncapsulatedAttribute).name\r\nendif endif",
      "type": "PropertyImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 4,
        "TypeExpImpl": 3,
        "StringLiteralExpImpl": 1,
        "IfExpImpl": 2,
        "PropertyCallExpImpl": 6
      },
      "properties": [
        "website::EncapsulatedAttribute::name",
        "website::NamedElement::name",
        "website::RouteParameterReference::parameter"
      ]
    }],
    "properties": [
      "name",
      "parameter"
    ]
  },
  {
    "name": "isHasChoices",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Expression",
    "expressions": [],
    "properties": [
      "UnitElement",
      "UnitFeature",
      "Attribute"
    ]
  },
  {
    "name": "UnitField",
    "expressions": [],
    "properties": [
      "title",
      "InterfaceField",
      "collectionDisplayOption",
      "collectionAllowRemove",
      "maximumDisplaySize",
      "displayedOn",
      "collectionAllowAdd",
      "dateFormat"
    ]
  }
]
