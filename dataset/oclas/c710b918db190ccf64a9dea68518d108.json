[
  {
    "name": "LibraryCS",
    "expressions": [],
    "properties": [
      "RootCS",
      "package"
    ]
  },
  {
    "name": "LambdaTypeCS",
    "expressions": [],
    "properties": [
      "ownedParameterType",
      "name",
      "ownedContextType",
      "ownedResultType"
    ]
  },
  {
    "name": "StructuralFeatureCS",
    "expressions": [],
    "properties": [
      "ownedDefaultExpression",
      "owner",
      "default"
    ]
  },
  {
    "name": "TypedRefCS",
    "expressions": [],
    "properties": [
      "LambdaTypeCS",
      "ClassCS",
      "LambdaTypeCS",
      "multiplicity",
      "WildcardTypeRefCS",
      "LambdaTypeCS",
      "TypeParameterCS",
      "OperationCS",
      "WildcardTypeRefCS",
      "ClassCS",
      "TypeParameterCS",
      "TypedElementCS"
    ]
  },
  {
    "name": "ModelElementCS",
    "expressions": [],
    "properties": [
      "ownedAnnotation",
      "AnnotationCS",
      "originalXmiId",
      "csi"
    ]
  },
  {
    "name": "DetailCS",
    "expressions": [],
    "properties": [
      "value",
      "AnnotationElementCS"
    ]
  },
  {
    "name": "TemplateSignatureCS",
    "expressions": [],
    "properties": [
      "ownedTemplateParameter",
      "owningTemplateElement"
    ]
  },
  {
    "name": "TypeRefCS",
    "expressions": [],
    "properties": ["TemplateParameterSubstitutionCS"]
  },
  {
    "name": "ElementRefCS",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ModelElementRefCS",
    "expressions": [],
    "properties": [
      "AnnotationCS",
      "element",
      "pathName"
    ]
  },
  {
    "name": "Element",
    "expressions": [],
    "properties": [
      "ModelElementRefCS",
      "PathElementCS",
      "PathNameCS"
    ]
  },
  {
    "name": "WildcardTypeRefCS",
    "expressions": [],
    "properties": [
      "extends",
      "super"
    ]
  },
  {
    "name": "TypedTypeRefCS",
    "expressions": [],
    "properties": [
      "ownedTemplateBinding",
      "pathName",
      "type"
    ]
  },
  {
    "name": "TemplateableElementCS",
    "expressions": [],
    "properties": ["ownedTemplateSignature"]
  },
  {
    "name": "SpecificationCS",
    "expressions": [],
    "properties": [
      "ConstraintCS",
      "ConstraintCS",
      "exprString",
      "StructuralFeatureCS",
      "OperationCS"
    ]
  },
  {
    "name": "Type",
    "expressions": [],
    "properties": ["TypedTypeRefCS"]
  },
  {
    "name": "AnnotationElementCS",
    "expressions": [],
    "properties": [
      "ModelElementCS",
      "ownedDetail"
    ]
  },
  {
    "name": "TemplateBindingCS",
    "expressions": [],
    "properties": [
      "owningTemplateBindableElement",
      "ownedParameterSubstitution"
    ]
  },
  {
    "name": "EnumerationLiteralCS",
    "expressions": [],
    "properties": [
      "value",
      "EnumerationCS",
      "DataTypeCS"
    ]
  },
  {
    "name": "DocumentationCS",
    "expressions": [],
    "properties": ["value"]
  },
  {
    "name": "TypeParameterCS",
    "expressions": [],
    "properties": [
      "ownedSuper",
      "ownedExtends"
    ]
  },
  {
    "name": "MultiplicityStringCS",
    "expressions": [],
    "properties": ["stringBounds"]
  },
  {
    "name": "PathNameCS",
    "expressions": [],
    "properties": [
      "TypedTypeRefCS",
      "path",
      "element",
      "ModelElementRefCS",
      "scopeFilter",
      "context",
      "ImportCS"
    ]
  },
  {
    "name": "ClassifierCS",
    "expressions": [],
    "properties": [
      "ownedConstraint",
      "qualifier",
      "owner",
      "instanceClassName"
    ]
  },
  {
    "name": "TemplateParameterSubstitutionCS",
    "expressions": [],
    "properties": [
      "owningTemplateBinding",
      "ownedActualParameter"
    ]
  },
  {
    "name": "OperationCS",
    "expressions": [],
    "properties": [
      "ownedPrecondition",
      "ownedPostcondition",
      "ownedParameter",
      "ownedBodyExpression",
      "owningClass",
      "ownedException"
    ]
  },
  {
    "name": "RootPackageCS",
    "expressions": [{
      "operations": {},
      "name": "TestConstraint",
      "body": "true",
      "type": "ConstraintImpl",
      "constructs": {"BooleanLiteralExpImpl": 1},
      "properties": []
    }],
    "properties": []
  },
  {
    "name": "NamespaceCS",
    "expressions": [],
    "properties": []
  },
  {
    "name": "TupleTypeCS",
    "expressions": [],
    "properties": [
      "name",
      "ownedParts"
    ]
  },
  {
    "name": "PathElementCS",
    "expressions": [],
    "properties": [
      "elementType",
      "element",
      "pathName"
    ]
  },
  {
    "name": "ClassCS",
    "expressions": [],
    "properties": [
      "ownedMetaType",
      "ownedProperty",
      "ownedSuperType",
      "ownedOperation"
    ]
  },
  {
    "name": "PivotableElementCS",
    "expressions": [],
    "properties": ["pivot"]
  },
  {
    "name": "NamedElementCS",
    "expressions": [],
    "properties": ["name"]
  },
  {
    "name": "PathElementWithURICS",
    "expressions": [],
    "properties": ["uri"]
  },
  {
    "name": "EnumerationCS",
    "expressions": [],
    "properties": ["ownedLiterals"]
  },
  {
    "name": "MultiplicityBoundsCS",
    "expressions": [],
    "properties": [
      "lowerBound",
      "upperBound"
    ]
  },
  {
    "name": "TemplateParameterCS",
    "expressions": [],
    "properties": ["owningTemplateSignature"]
  },
  {
    "name": "IteratorKind",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RootCS",
    "expressions": [{
      "operations": {},
      "name": "TestConstraint",
      "body": "true",
      "type": "ConstraintImpl",
      "constructs": {"BooleanLiteralExpImpl": 1},
      "properties": []
    }],
    "properties": [
      "ownedLibrary",
      "ownedImport"
    ]
  },
  {
    "name": "VisitableCS",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ElementCS",
    "expressions": [],
    "properties": [
      "logicalParent",
      "ElementCS"
    ]
  },
  {
    "name": "FeatureCS",
    "expressions": [],
    "properties": []
  },
  {
    "name": "TypedElementCS",
    "expressions": [],
    "properties": [
      "ownedType",
      "qualifier",
      "optional"
    ]
  },
  {
    "name": "TypeCS",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AnnotationCS",
    "expressions": [],
    "properties": [
      "ownedContent",
      "ownedReference"
    ]
  },
  {
    "name": "AttributeCS",
    "expressions": [],
    "properties": []
  },
  {
    "name": "DataTypeCS",
    "expressions": [],
    "properties": ["literals"]
  },
  {
    "name": "TuplePartCS",
    "expressions": [],
    "properties": ["TupleTypeCS"]
  },
  {
    "name": "ReferenceCS",
    "expressions": [],
    "properties": [
      "keys",
      "opposite"
    ]
  },
  {
    "name": "ScopeFilter",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ConstraintCS",
    "expressions": [],
    "properties": [
      "stereotype",
      "specification",
      "messageSpecification",
      "OperationCS",
      "ClassifierCS",
      "OperationCS"
    ]
  },
  {
    "name": "Property",
    "expressions": [],
    "properties": [
      "ReferenceCS",
      "ReferenceCS"
    ]
  },
  {
    "name": "ImportCS",
    "expressions": [],
    "properties": [
      "pathName",
      "all",
      "namespace",
      "RootCS"
    ]
  },
  {
    "name": "PackageCS",
    "expressions": [],
    "properties": [
      "ownedNestedPackage",
      "ownedType",
      "nsPrefix",
      "nsURI",
      "PackageCS"
    ]
  },
  {
    "name": "Namespace",
    "expressions": [],
    "properties": [
      "LibraryCS",
      "ImportCS"
    ]
  },
  {
    "name": "MultiplicityCS",
    "expressions": [],
    "properties": ["TypedRefCS"]
  },
  {
    "name": "ParameterCS",
    "expressions": [],
    "properties": ["owner"]
  },
  {
    "name": "PrimitiveTypeRefCS",
    "expressions": [],
    "properties": ["name"]
  }
]
