[
  {
    "name": "Attribute",
    "expressions": [
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "f",
        "body": "Class.allInstances()-> forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::name"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "b",
        "body": "Package.allInstances()->forAll(x | x.classes@pre = x.classes)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Package::classes"]
      },
      {
        "operations": {"=": 1},
        "name": "a",
        "body": "self.name = n",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["UML::Attribute::name"]
      },
      {
        "operations": {},
        "name": "z",
        "body": "Package.allInstances@pre() = Package.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {},
        "name": "d",
        "body": "Attribute.allInstances@pre() = Attribute.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "e",
        "body": "Package.allInstances()->forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Package::name"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "h",
        "body": "Class.allInstances()-> forAll(x | x.persistent@pre = x.persistent)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::persistent"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "g",
        "body": "Class.allInstances()-> forAll(x | x.attributes@pre = x.attributes)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::attributes"]
      },
      {
        "operations": {
          "or": 1,
          "allInstances": 1,
          "=": 2
        },
        "name": "ff",
        "body": "Attribute.allInstances()-> forAll(x | x.name@pre = x.name or x = self)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Attribute::name"]
      },
      {
        "operations": {},
        "name": "c",
        "body": "Class.allInstances@pre() = Class.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "i",
        "body": "Class.allInstances()-> forAll(x | x.super@pre = x.super)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::super"]
      }
    ],
    "properties": ["name"]
  },
  {
    "name": "Class",
    "expressions": [
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "i",
        "body": "Class.allInstances()-> forAll(x | x.super@pre = x.super)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::super"]
      },
      {
        "operations": {
          "or": 1,
          "allInstances": 1,
          "=": 2
        },
        "name": "ff",
        "body": "Class.allInstances()-> forAll(x | x.name@pre = x.name or x = self)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::name"]
      },
      {
        "operations": {
          "<>": 1,
          "or": 1,
          "allInstances": 1,
          "=": 1
        },
        "name": "names_c",
        "body": "Class.allInstances()->forAll(x | x = self or x.name <> self.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::name"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "g",
        "body": "Class.allInstances()-> forAll(x | x.attributes@pre = x.attributes)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::attributes"]
      },
      {
        "operations": {},
        "name": "c",
        "body": "Class.allInstances@pre() = Class.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "e",
        "body": "Package.allInstances()->forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Package::name"]
      },
      {
        "operations": {
          "or": 1,
          "allInstances": 1,
          "=": 2
        },
        "name": "g",
        "body": "Class.allInstances()-> forAll(x | x.attributes@pre = x.attributes or x = self)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 4,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::attributes"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "ff",
        "body": "Class.allInstances()-> forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::name"]
      },
      {
        "operations": {},
        "name": "inv",
        "body": null,
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "e",
        "body": "Package.allInstances()->forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Package::name"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "i",
        "body": "Class.allInstances()-> forAll(x | x.super@pre = x.super)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::super"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "ff",
        "body": "Class.allInstances()-> forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::name"]
      },
      {
        "operations": {"=": 1},
        "name": "a",
        "body": "self.name = n",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["UML::Class::name"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "g",
        "body": "Class.allInstances()-> forAll(x | x.attributes@pre = x.attributes)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::attributes"]
      },
      {
        "operations": {},
        "name": "d",
        "body": "Attribute.allInstances@pre() = Attribute.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "b",
        "body": "Package.allInstances()->forAll(x | x.classes@pre = x.classes)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Package::classes"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "i",
        "body": "Class.allInstances()-> forAll(x | x.super@pre = x.super)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::super"]
      },
      {
        "operations": {},
        "name": "c",
        "body": "Class.allInstances@pre() = Class.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {},
        "name": "f",
        "body": "Attribute.allInstances@pre()-> forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {},
        "name": "c",
        "body": "Class.allInstances@pre() = Class.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {},
        "name": "d",
        "body": "Attribute.allInstances@pre() = Attribute.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {},
        "name": "z",
        "body": "Package.allInstances@pre() = Package.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {
          "and": 2,
          "allInstances": 1,
          "=": 1,
          "oclIsNew": 1
        },
        "name": "c",
        "body": "Attribute.allInstances()->one(x | x.oclIsNew() and x.name = n and self.attributes->includes(x))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 5,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["UML::Attribute::name"]
      },
      {
        "operations": {
          "not": 1,
          "oclAsSet": 1,
          "includes": 1
        },
        "name": "inheritance",
        "body": "not self->closure(super)->includes(self)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "PropertyCallExpImpl": 1
        },
        "properties": ["UML::Class::super"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "b",
        "body": "Package.allInstances()->forAll(x | x.classes@pre = x.classes)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Package::classes"]
      },
      {
        "operations": {},
        "name": "z",
        "body": "Package.allInstances@pre() = Package.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "h",
        "body": "Class.allInstances()-> forAll(x | x.persistent@pre = x.persistent)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::persistent"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "f",
        "body": "Attribute.allInstances()-> forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Attribute::name"]
      },
      {
        "operations": {
          "or": 1,
          "allInstances": 1,
          "=": 2
        },
        "name": "h",
        "body": "Class.allInstances()-> forAll(x | x.persistent@pre = x.persistent or x = self)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::persistent"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "h",
        "body": "Class.allInstances()-> forAll(x | x.persistent@pre = x.persistent)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Class::persistent"]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "e",
        "body": "Package.allInstances()->forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Package::name"]
      },
      {
        "operations": {},
        "name": "d",
        "body": "Attribute.allInstances@pre()->forAll(x | Attribute.allInstances()->includes(x))",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "f",
        "body": "Attribute.allInstances()-> forAll(x | x.name@pre = x.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Attribute::name"]
      },
      {
        "operations": {},
        "name": "z",
        "body": "Package.allInstances@pre() = Package.allInstances()",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {},
        "name": "names_a",
        "body": "self.attributes->forAll(x | self.attributes->forAll(y | x = y or x.name <> y.name))",
        "type": "ConstraintImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "b",
        "body": "Package.allInstances()->forAll(x | x.classes@pre = x.classes)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["UML::Package::classes"]
      }
    ],
    "properties": [
      "name",
      "attributes",
      "child",
      "namespace",
      "persistent",
      "super"
    ]
  },
  {
    "name": "Package",
    "expressions": [],
    "properties": [
      "classes",
      "associations",
      "name"
    ]
  },
  {
    "name": "Association",
    "expressions": [],
    "properties": [
      "source",
      "namespace",
      "target",
      "name"
    ]
  }
]
