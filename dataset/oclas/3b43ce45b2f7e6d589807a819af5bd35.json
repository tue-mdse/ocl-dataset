[
  {
    "name": "Transition",
    "expressions": [
      {
        "operations": {"<>": 1},
        "name": "nameExists",
        "body": "name <> null",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petri::Transition::name"]
      },
      {
        "operations": {
          "isEmpty": 1,
          "allInstances": 1,
          "notEmpty": 1,
          "implies": 1,
          "=": 1
        },
        "name": "notUnconnected",
        "body": "connection->isEmpty() implies Place.allInstances()->select(p : Place | p.connection->exists(t : Transition | t.name = self.name))->notEmpty()",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 5,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "petri::Transition::connection",
          "petri::Transition::name",
          "petri::Place::connection"
        ]
      },
      {
        "operations": {"allInstances": 1},
        "name": "nameUnique",
        "body": "Place.allInstances()->isUnique(name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petri::Place::name"]
      }
    ],
    "properties": [
      "connection",
      "RedPetri",
      "name",
      "Place"
    ]
  },
  {
    "name": "RedPetri",
    "expressions": [],
    "properties": [
      "iniTrans",
      "iniPlace"
    ]
  },
  {
    "name": "Place",
    "expressions": [
      {
        "operations": {"<>": 1},
        "name": "nameExists",
        "body": "name <> null",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petri::Place::name"]
      },
      {
        "operations": {
          "isEmpty": 1,
          "allInstances": 1,
          "notEmpty": 1,
          "implies": 1,
          "=": 1
        },
        "name": "notUnconnected",
        "body": "connection->isEmpty() implies Transition.allInstances()->select(p : Transition | p.connection->exists(t : Place | t.name = self.name))->notEmpty()",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 5,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "petri::Transition::connection",
          "petri::Place::connection",
          "petri::Place::name"
        ]
      },
      {
        "operations": {">=": 1},
        "name": "tokPositive",
        "body": "tokens >= 0",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petri::Place::tokens"]
      },
      {
        "operations": {"allInstances": 1},
        "name": "nameUnique",
        "body": "Place.allInstances()->isUnique(name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petri::Place::name"]
      }
    ],
    "properties": [
      "tokens",
      "connection",
      "RedPetri",
      "Transition",
      "name"
    ]
  }
]
