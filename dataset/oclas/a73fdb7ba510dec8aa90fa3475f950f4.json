[
  {
    "name": "AmbZ",
    "expressions": [{
      "operations": {"oclIsKindOf": 1},
      "name": "cst",
      "body": "\n\tif toY.oclIsKindOf(source::Y1)\n\tthen Z1 {\n\t\tname = name,\n\t\ttoY = toY\n\t}\n\telse Z2 {\n\t\tname = name,\n\t\ttoY = toY\n\t}\n\tendif\n\n",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 5,
        "OperationCallExpImpl": 1,
        "TypeExpImpl": 1,
        "ShadowExpImpl": 2,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "source::Z::name",
        "source::Z::toY"
      ]
    }],
    "properties": []
  },
  {
    "name": "AmbX",
    "expressions": [{
      "operations": {},
      "name": "cst",
      "body": "\n\tif isA1\n\tthen X1 {\n\t\townsY = ownsY\n\t}\n\telse X2 {\n\t\townsY = ownsY\n\t}\n\tendif\n\n\n",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 3,
        "ShadowExpImpl": 2,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "source::X::ownsY",
        "source::AmbX::isA1"
      ]
    }],
    "properties": []
  }
]
