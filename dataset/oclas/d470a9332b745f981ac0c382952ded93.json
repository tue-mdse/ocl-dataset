[
  {
    "name": "PayloadTypeObject",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Expression",
    "expressions": [],
    "properties": [
      "functionRefs",
      "expressionLines",
      "equipmentRefs",
      "name"
    ]
  },
  {
    "name": "Function",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1
        },
        "name": "ValidFunctionName",
        "body": "not self.functionName.oclIsUndefined()",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["networks::Function::functionName"]
      },
      {
        "operations": {},
        "name": "allFunctions",
        "body": "self-&gt;closure(functions)-&gt;asOrderedSet()",
        "type": "PropertyImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {},
        "name": "allFunctionResources",
        "body": "self-&gt;closure(functions).functionResources-&gt;asOrderedSet()\n\t\t\t\t\t\t\t",
        "type": "PropertyImpl",
        "constructs": {},
        "properties": []
      }
    ],
    "properties": [
      "functionMetricRefs",
      "relationships",
      "Relationship",
      "functionName",
      "Function",
      "Function",
      "bodyRef",
      "functionDescription",
      "allFunctionResources",
      "functions",
      "Relationship",
      "parameterRefs",
      "functionResources",
      "allFunctions",
      "Node",
      "toleranceRefs",
      "protocolRefs",
      "functionDiagrams",
      "functionExpressionRefs"
    ]
  },
  {
    "name": "StateType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "PayloadType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Company",
    "expressions": [],
    "properties": [
      "User",
      "shortName",
      "website",
      "symbol",
      "name",
      "Equipment",
      "rSSurl",
      "Protocol",
      "Function"
    ]
  },
  {
    "name": "ErrorActionType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Country",
    "expressions": [],
    "properties": [
      "countryCode",
      "name",
      "Site"
    ]
  },
  {
    "name": "Message",
    "expressions": [],
    "properties": ["name"]
  },
  {
    "name": "Unit",
    "expressions": [],
    "properties": [
      "description",
      "Metric",
      "name",
      "NetXResource",
      "code"
    ]
  },
  {
    "name": "Site",
    "expressions": [],
    "properties": [
      "sreet",
      "latitude",
      "area",
      "Room",
      "name",
      "countryRef",
      "postalcode",
      "region",
      "longitude",
      "city",
      "housenumber"
    ]
  },
  {
    "name": "ErrorActionTypeObject",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Tolerance",
    "expressions": [],
    "properties": [
      "name",
      "Function",
      "expression",
      "errorAction"
    ]
  },
  {
    "name": "Room",
    "expressions": [],
    "properties": [
      "shape",
      "siteRef",
      "name",
      "Node"
    ]
  },
  {
    "name": "NetXResource",
    "expressions": [],
    "properties": [
      "Equipment",
      "summaryDisplay",
      "Equipment",
      "unitRef",
      "values",
      "calculatedData",
      "forecastValues",
      "detailDisplay",
      "shortName",
      "calcName",
      "longName",
      "Function",
      "capacityValues",
      "Function",
      "metricValues"
    ]
  },
  {
    "name": "Network",
    "expressions": [],
    "properties": [
      "phaseNetworkRef",
      "Network",
      "template",
      "nodes",
      "description",
      "createdByRef",
      "startDate",
      "diagrams",
      "createdDate",
      "parentRef",
      "name",
      "endDate",
      "Network",
      "relationships"
    ]
  },
  {
    "name": "Protocol",
    "expressions": [],
    "properties": [
      "Relationship",
      "bodyRef",
      "procedures",
      "name",
      "oSI",
      "description",
      "functionRefs",
      "specification"
    ]
  },
  {
    "name": "Procedure",
    "expressions": [],
    "properties": [
      "Protocol",
      "name"
    ]
  },
  {
    "name": "Relationship",
    "expressions": [],
    "properties": [
      "function1Ref",
      "payload",
      "abstract",
      "Network",
      "function2Ref",
      "maxConnections",
      "name",
      "requireConnection",
      "Function",
      "protocolRef"
    ]
  },
  {
    "name": "Parameter",
    "expressions": [],
    "properties": [
      "Function",
      "description",
      "value",
      "name",
      "state",
      "elementRefs"
    ]
  },
  {
    "name": "User",
    "expressions": [],
    "properties": [
      "lastName",
      "Network",
      "email",
      "Node",
      "companyRef",
      "firstName",
      "Meta",
      "password"
    ]
  },
  {
    "name": "Equipment",
    "expressions": [
      {
        "operations": {},
        "name": "allEquipmentResources",
        "body": "self-&gt;closure(equipments).equipmentResources-&gt;asOrderedSet()\n\t\t\t\t\t",
        "type": "PropertyImpl",
        "constructs": {},
        "properties": []
      },
      {
        "operations": {},
        "name": "allEquipments",
        "body": "self-&gt;closure(equipments)-&gt;asOrderedSet()",
        "type": "PropertyImpl",
        "constructs": {},
        "properties": []
      }
    ],
    "properties": [
      "equipmentMetricRefs",
      "allEquipments",
      "availableDate",
      "endOfSalesDate",
      "equipmentCode",
      "equipmentExpressionRefs",
      "productCode",
      "salesCode",
      "underDevelopmentDate",
      "diagrams",
      "manufacturerRef",
      "equipmentResources",
      "description",
      "position",
      "equipments",
      "Equipment",
      "endOfSupportDate",
      "Equipment",
      "equipmentName",
      "allEquipmentResources"
    ]
  },
  {
    "name": "Meta",
    "expressions": [],
    "properties": [
      "version",
      "author",
      "description"
    ]
  },
  {
    "name": "DiagramInfo",
    "expressions": [],
    "properties": [
      "Network",
      "Equipment",
      "Function"
    ]
  },
  {
    "name": "Node",
    "expressions": [{
      "operations": {
        "not": 1,
        "oclIsUndefined": 1
      },
      "name": "ValidNodeID",
      "body": "not self.nodeID.oclIsUndefined()",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["networks::Node::nodeID"]
    }],
    "properties": [
      "createdByRef",
      "nodeID",
      "libraryRef",
      "plannedDate",
      "inServiceDate",
      "outOfServiceDate",
      "Network",
      "constructionDate",
      "roomRef"
    ]
  },
  {
    "name": "EObject",
    "expressions": [],
    "properties": ["Parameter"]
  },
  {
    "name": "StateTypeObject",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Metric",
    "expressions": [],
    "properties": [
      "measurementKind",
      "Function",
      "Equipment",
      "description",
      "name",
      "measurementPoint",
      "metric",
      "Metric",
      "measurementSource",
      "metricCalculation",
      "unitRef"
    ]
  },
  {
    "name": "MetricSource",
    "expressions": [],
    "properties": ["Metric"]
  },
  {
    "name": "Value",
    "expressions": [],
    "properties": [
      "NetXResource",
      "NetXResource",
      "NetXResource"
    ]
  }
]
