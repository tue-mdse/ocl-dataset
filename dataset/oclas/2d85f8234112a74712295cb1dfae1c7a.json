[
  {
    "name": "Page",
    "expressions": [
      {
        "operations": {
          "excludes": 2,
          "and": 1
        },
        "name": "NoCyclicPreviousOrNextPages",
        "body": "allPreviousPages\n\t\t\t->excludes(self) and allNextPages\n\t\t\t->excludes(self)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "form::Page::allNextPages",
          "form::Page::allPreviousPages"
        ]
      },
      {
        "operations": {
          "at": 2,
          "toUpperCase": 1,
          "=": 1
        },
        "name": "FirstLetterInTitleIsUpperCase",
        "body": "title.at(1) = title.at(1).toUpperCase()",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": ["form::Page::title"]
      },
      {
        "operations": {
          "oclAsSet": 2,
          "union": 1,
          "asSet": 2
        },
        "name": "allNextPages",
        "body": "nextPage\n\t\t\t\t->asSet()\n\t\t\t\t->union(nextPage\n\t\t\t\t\t->asSet()\n\t\t\t\t\t->closure(nextPage))",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": ["form::Page::nextPage"]
      },
      {
        "operations": {
          "oclAsSet": 2,
          "union": 1,
          "asSet": 2
        },
        "name": "allPreviousPages",
        "body": "previousPage\n\t\t\t\t->asSet()\n\t\t\t\t->union(previousPage\n\t\t\t\t\t->asSet()\n\t\t\t\t\t->closure(previousPage))",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": ["form::Page::previousPage"]
      }
    ],
    "properties": [
      "visibilityConditions",
      "Page",
      "allNextPages",
      "title",
      "Form",
      "allPreviousPages",
      "Form",
      "elements",
      "previousPage",
      "nextPage",
      "Page"
    ]
  },
  {
    "name": "TextField",
    "expressions": [],
    "properties": ["encrypted"]
  },
  {
    "name": "TextArea",
    "expressions": [],
    "properties": []
  },
  {
    "name": "List",
    "expressions": [],
    "properties": [
      "ordered",
      "items"
    ]
  },
  {
    "name": "Text",
    "expressions": [],
    "properties": ["content"]
  },
  {
    "name": "PageElement",
    "expressions": [{
      "operations": {
        "excluding": 1,
        "isEmpty": 1,
        "allInstances": 1,
        "=": 1
      },
      "name": "ElementIdIsUnique",
      "body": "PageElement.allInstances()\n\t\t\t->select(element | element.elementId = self.elementId)\n\t\t\t->excluding(self)\n\t\t\t->isEmpty()",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 4,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["form::PageElement::elementId"]
    }],
    "properties": [
      "VisibilityCondition",
      "elementId",
      "page"
    ]
  },
  {
    "name": "Heading",
    "expressions": [{
      "operations": {
        "isEmpty": 1,
        "allInstances": 1,
        "<": 1
      },
      "name": "levelGreaterZero",
      "body": "Heading.allInstances() -> select(heading | heading.level < 1) -> isEmpty()",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 3,
        "IntegerLiteralExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["form::Heading::level"]
    }],
    "properties": ["level"]
  },
  {
    "name": "InputField",
    "expressions": [],
    "properties": [
      "mandatory",
      "label"
    ]
  },
  {
    "name": "ListItem",
    "expressions": [],
    "properties": [
      "label",
      "List"
    ]
  },
  {
    "name": "SelectionCondition",
    "expressions": [{
      "operations": {
        "not": 1,
        "<>": 1,
        "and": 1,
        "includes": 1
      },
      "name": "concernsOnlyElementsInNextPages",
      "body": "concernsElements\n\t\t\t->forAll(e | e.page <> item.field.page and not item.field.page.allPreviousPages\n\t\t\t\t->includes(e.page))",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 5,
        "OperationCallExpImpl": 4,
        "PropertyCallExpImpl": 10
      },
      "properties": [
        "form::SelectionItem::field",
        "form::Page::allPreviousPages",
        "form::SelectionCondition::item",
        "form::VisibilityCondition::concernsElements",
        "form::PageElement::page"
      ]
    }],
    "properties": ["item"]
  },
  {
    "name": "VisibilityCondition",
    "expressions": [],
    "properties": [
      "page",
      "concernsElements"
    ]
  },
  {
    "name": "SelectionItem",
    "expressions": [],
    "properties": [
      "field",
      "SelectionCondition",
      "label",
      "selected"
    ]
  },
  {
    "name": "Paragraph",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SelectionField",
    "expressions": [],
    "properties": [
      "items",
      "selectionFieldType"
    ]
  },
  {
    "name": "SelectionFieldType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Form",
    "expressions": [{
      "operations": {"=": 1},
      "name": "WelcomePageHasNoPreviousPage",
      "body": "welcomePage.previousPage = null",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "NullLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "form::Page::previousPage",
        "form::Form::welcomePage"
      ]
    }],
    "properties": [
      "pages",
      "welcomePage"
    ]
  }
]
