[
  {
    "name": "TranslatableText",
    "expressions": [],
    "properties": ["CodeValue"]
  },
  {
    "name": "Code",
    "expressions": [{
      "operations": {"=": 1},
      "name": "TypeOfValuesEqualsAbapType",
      "body": "self.values->forAll(cv:CodeValue |\r\n      cv.type = self.abapType)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "abapmapping::abapdictionary::CodeValue::type",
        "abapmapping::abapdictionary::DataElement::abapType",
        "abapmapping::abapdictionary::Code::values"
      ]
    }],
    "properties": [
      "extensible",
      "values"
    ]
  },
  {
    "name": "AbapSignatureKind",
    "expressions": [],
    "properties": []
  },
  {
    "name": "DataElement",
    "expressions": [],
    "properties": ["abapType"]
  },
  {
    "name": "AbapType",
    "expressions": [],
    "properties": [
      "xsdRepresentation",
      "AbapStructureField",
      "AbapClassImplementationAnnotation",
      "name"
    ]
  },
  {
    "name": "AbapPrimtiveType",
    "expressions": [],
    "properties": [
      "DataElement",
      "CodeValue",
      "length"
    ]
  },
  {
    "name": "CodeValue",
    "expressions": [],
    "properties": [
      "type",
      "Code",
      "value",
      "description"
    ]
  },
  {
    "name": "AbapAssociationEndImplementationAnnotation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AbapSignatureImplementationAnnotation",
    "expressions": [],
    "properties": ["kind"]
  },
  {
    "name": "AbapClassKind",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AbapStructureType",
    "expressions": [],
    "properties": ["fields"]
  },
  {
    "name": "AbapAssociationImplementationAnnotation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "XsdType",
    "expressions": [],
    "properties": [
      "length",
      "pattern",
      "AbapType",
      "totalDigits",
      "fractionDigits",
      "xsdType"
    ]
  },
  {
    "name": "AbapStructureField",
    "expressions": [],
    "properties": [
      "type",
      "AbapStructureType",
      "name"
    ]
  },
  {
    "name": "UnstructuredAbapType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AbapClassImplementationAnnotation",
    "expressions": [{
      "operations": {
        "oclIsKindOf": 1,
        "implies": 1,
        "=": 1
      },
      "name": "AbapTypeMustBeUnstructured",
      "body": "self.kind = AbapClassKind::ABAP_TYPE implies\r\n    self.abapType.oclIsKindOf(abapmapping::abapdictionary::UnstructuredAbapType)",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 2,
        "EnumLiteralExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "abapmapping::AbapClassImplementationAnnotation::kind",
        "abapmapping::AbapClassImplementationAnnotation::abapType"
      ]
    }],
    "properties": [
      "kind",
      "abapType"
    ]
  }
]
