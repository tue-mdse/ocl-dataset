[
  {
    "name": "Sequence",
    "expressions": [
      {
        "operations": {"oclIsUndefined": 1},
        "name": "suivant",
        "body": "self.activites -> one( a : Activite | a.suivante.oclIsUndefined())",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "LDPparallel::Sequence::activites",
          "LDPparallel::Activite::suivante"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "precedent",
        "body": "self.activites -> one(a : Activite | a.precedente.oclIsUndefined())",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "LDPparallel::Activite::precedente",
          "LDPparallel::Sequence::activites"
        ]
      }
    ],
    "properties": [
      "premiereActivite",
      "activiteCourante",
      "activites",
      "Processus",
      "Processus",
      "name"
    ]
  },
  {
    "name": "Activite",
    "expressions": [
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "nomUnique",
        "body": "Activite.allInstances()->one(a : Activite | a.name = self.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["LDPparallel::Activite::name"]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "and": 1,
          "pasDansSuivant": 1,
          "=": 1
        },
        "name": "pasDansSuivant",
        "body": "if self.suivante.oclIsUndefined() then true \n\t\t\t      else not(self.suivante = act) and self.suivante.pasDansSuivant(act)\n\t\t\t      endif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 5,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 3,
          "BooleanLiteralExpImpl": 1
        },
        "properties": ["LDPparallel::Activite::suivante"]
      },
      {
        "operations": {"pasDansSuivant": 1},
        "name": "pasDeCycle",
        "body": "self.pasDansSuivant(self)",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2
        },
        "properties": []
      }
    ],
    "properties": [
      "precedente",
      "Sequence",
      "Sequence",
      "description",
      "name",
      "suivante",
      "Sequence"
    ]
  },
  {
    "name": "Fin",
    "expressions": [],
    "properties": ["Processus"]
  },
  {
    "name": "Porte",
    "expressions": [],
    "properties": ["Processus"]
  },
  {
    "name": "Fourche",
    "expressions": [],
    "properties": [
      "succ",
      "pred"
    ]
  },
  {
    "name": "Processus",
    "expressions": [],
    "properties": [
      "fin",
      "sequencesActives",
      "sequences",
      "portes",
      "debut"
    ]
  },
  {
    "name": "PseudoEtat",
    "expressions": [],
    "properties": ["reference"]
  },
  {
    "name": "Debut",
    "expressions": [],
    "properties": ["Processus"]
  },
  {
    "name": "Jonction",
    "expressions": [],
    "properties": [
      "pred",
      "succ"
    ]
  },
  {
    "name": "ElementProcessus",
    "expressions": [],
    "properties": [
      "Fourche",
      "Jonction",
      "Jonction",
      "Fourche",
      "PseudoEtat"
    ]
  }
]
