[
  {
    "name": "ComProxyFunctionTableVariable",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AllInterruptBlockExcludeOperation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "InitializeOperation",
    "expressions": [],
    "properties": [
      "SinglecoreRteStartApi",
      "RteCoreStartApiImpl",
      "RestartPartitionApi",
      "SchmInitApi"
    ]
  },
  {
    "name": "CsTrustedFunction",
    "expressions": [],
    "properties": [
      "dataVariable",
      "csTfParamTypeName",
      "csTfCalledRunnable",
      "Partition"
    ]
  },
  {
    "name": "RestartPartitionApi",
    "expressions": [],
    "properties": [
      "Partition",
      "operation"
    ]
  },
  {
    "name": "ComValueBufferImplementation",
    "expressions": [],
    "properties": [
      "comSignal",
      "comSignalGroup"
    ]
  },
  {
    "name": "InteractionRoot",
    "expressions": [],
    "properties": [
      "interaction",
      "generatedEcuConfiguration",
      "interactionEnd"
    ]
  },
  {
    "name": "IrvReadApi",
    "expressions": [],
    "properties": [
      "operation",
      "dataParam"
    ]
  },
  {
    "name": "IocQueuedCommunication",
    "expressions": [],
    "properties": [
      "receiveApi",
      "IocEmptyQueueApi",
      "sendApi"
    ]
  },
  {
    "name": "IocReadApi",
    "expressions": [],
    "properties": [
      "IocNonqueuedReadOperation",
      "IocNonqueuedCommunication"
    ]
  },
  {
    "name": "SchmInitApi",
    "expressions": [],
    "properties": [
      "operation",
      "initTargetModeMachineInstance",
      "Rte",
      "initialExecutableStartOperation",
      "initialExecutableOsTaskEvent"
    ]
  },
  {
    "name": "ComSendSignalImmediateTaskBody",
    "expressions": [],
    "properties": [
      "startEntity",
      "Rte",
      "osEventId"
    ]
  },
  {
    "name": "ReadOperation",
    "expressions": [],
    "properties": [
      "readStatusVariable",
      "invalidValueConstant",
      "readValueVariable",
      "excludeOperation",
      "ReceiveApi",
      "ReadApi"
    ]
  },
  {
    "name": "SchmEnterApi",
    "expressions": [],
    "properties": [
      "isNoneExclude",
      "operation"
    ]
  },
  {
    "name": "StartOffsetCounterImplementation",
    "expressions": [],
    "properties": [
      "parent",
      "maxCount"
    ]
  },
  {
    "name": "RteBufferQueuedVariable",
    "expressions": [{
      "operations": {"oclAsType": 1},
      "name": "queueType",
      "body": "self.type.oclAsType(RteBufferQueueType)",
      "type": "PropertyImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::Variable::type"]
    }],
    "properties": [
      "RteBufferQueuedSendOperation",
      "Partition",
      "queueType",
      "RteBufferQueuedReadOperation"
    ]
  },
  {
    "name": "ExternalEcuSender",
    "expressions": [],
    "properties": [
      "requiresRteInitialization",
      "sourceSignalGroup",
      "requiresRteFilter",
      "sourceSignal",
      "requiresRteInvalidation"
    ]
  },
  {
    "name": "DirectComSendImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ComCallback",
    "expressions": [],
    "properties": [
      "ComCallbackFileContentsGroup",
      "Rte"
    ]
  },
  {
    "name": "LogicalBlock",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Function",
    "expressions": [],
    "properties": [
      "param",
      "symbolName",
      "localType",
      "localVariable",
      "returnType",
      "memoryMapping",
      "FunctionFileContentsGroup"
    ]
  },
  {
    "name": "DirectComSendOperation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteLifecycleHeader",
    "expressions": [],
    "properties": [
      "RteModule",
      "schmLifecycleApiGroup",
      "rteLifecycleApiGroup"
    ]
  },
  {
    "name": "ExecutionContextImplementation",
    "expressions": [],
    "properties": ["ExecutionContext"]
  },
  {
    "name": "CIdentifier",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RedefinitionPointerType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsApplicationTrustedFunction",
    "expressions": [],
    "properties": [
      "TrustedFunctionRteSendImplementation",
      "GeneratedEcuConfiguration",
      "TrustedFunctionRteSendImplementation"
    ]
  },
  {
    "name": "IocApi",
    "expressions": [],
    "properties": [
      "mappingName",
      "RteBswApiHeader",
      "IocInitializeOperation"
    ]
  },
  {
    "name": "VerbatimString",
    "expressions": [],
    "properties": []
  },
  {
    "name": "VariableDataPrototypeEx",
    "expressions": [
      {
        "operations": {
          "or": 1,
          "getInitializationStrategy": 1,
          "=": 2
        },
        "name": "initAtStart",
        "body": "let initStrategy : ecuc::RteInitializationStrategyEnum =\n\t\t\t\t\tgetInitializationStrategy(this_)\n\t\t\t\tin initStrategy = ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_RTE_START or initStrategy =\n\t\t\t\t\tecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_RTE_START_AND_PARTITION_RESTART",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "LetExpImpl": 1,
          "EnumLiteralExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "or": 1,
          "getInitializationStrategy": 1,
          "=": 2
        },
        "name": "initAtDeclaration",
        "body": "let initStrategy : ecuc::RteInitializationStrategyEnum =\n\t\t\t\t\tgetInitializationStrategy(this_)\n\t\t\t\tin initStrategy = ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_DATA_DECLARATION or\n\t\t\t\t\tinitStrategy =\n\t\t\t\t\tecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_DATA_DECLARATION_AND_PARTITION_RESTART",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 4,
          "LetExpImpl": 1,
          "EnumLiteralExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "getLeafImplementationDataType": 1,
          "not": 2,
          "oclIsUndefined": 2,
          "getImplementationDataType": 2,
          "getSwAddrMethod": 1
        },
        "name": "getSwAddrMethod",
        "body": "let swAddrMethod : m2::SwAddrMethod = this_.getSwAddrMethod()\n\t\t\t\tin if not swAddrMethod.oclIsUndefined()\n\t\t\t\t\tthen swAddrMethod\n\t\t\t\t\telse if not this_.getImplementationDataType().oclIsUndefined()\n\t\t\t\t\tthen this_.getImplementationDataType().getLeafImplementationDataType()\n\t\t\t\t\telse null\n\t\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 8,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "getSectionInitializationPolicy": 1,
          "allInstances": 1,
          "includes": 1
        },
        "name": "getInitializationStrategy",
        "body": "let behavior : ar4x::ecuc::RteInitializationBehavior = ecuc::RteInitializationBehavior.allInstances()\n\t\t\t\t\t->select(rteSectionInitializationPolicy\n\t\t\t\t\t\t->includes(getSectionInitializationPolicy(this_)))\n\t\t\t\t\t->any(true)\n\t\t\t\tin if behavior.oclIsUndefined()\n\t\t\t\t\tthen ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_RTE_START\n\t\t\t\t\telse behavior.rteInitializationStrategy\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 5,
          "LetExpImpl": 1,
          "EnumLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 1,
          "BooleanLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::ecuc::RteInitializationBehavior::rteSectionInitializationPolicy",
          "ar4x::ecuc::RteInitializationBehavior::rteInitializationStrategy"
        ]
      },
      {
        "operations": {
          "or": 1,
          "getInitializationStrategy": 1,
          "=": 2
        },
        "name": "initAtPartitionRestart",
        "body": "let initStrategy : ecuc::RteInitializationStrategyEnum =\n\t\t\t\t\tgetInitializationStrategy(this_)\n\t\t\t\tin initStrategy = ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_DATA_DECLARATION_AND_PARTITION_RESTART or\n\t\t\t\t\tinitStrategy = ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_RTE_START_AND_PARTITION_RESTART",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "LetExpImpl": 1,
          "EnumLiteralExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "getSwAddrMethod": 1
        },
        "name": "getSectionInitializationPolicy",
        "body": "let swAddrMethod : m2::SwAddrMethod = this_.getSwAddrMethod()\n\t\t\t\tin if swAddrMethod.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swAddrMethod.sectionInitializationPolicy\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::SwAddrMethod::sectionInitializationPolicy"]
      }
    ],
    "properties": []
  },
  {
    "name": "RteBufferWriteTrustedFunction",
    "expressions": [],
    "properties": [
      "operation",
      "dataVariable",
      "TrustedFunctionRteBufferWriteSendOperation"
    ]
  },
  {
    "name": "UnionMember",
    "expressions": [],
    "properties": [
      "memberName",
      "UnionType",
      "type"
    ]
  },
  {
    "name": "ComRxTOutCallback",
    "expressions": [],
    "properties": [
      "activationFlag",
      "activationOperation",
      "dataVariable",
      "accessApi",
      "operation"
    ]
  },
  {
    "name": "RteEvent",
    "expressions": [],
    "properties": ["RunnableEntityStartInteraction"]
  },
  {
    "name": "Sender",
    "expressions": [
      {
        "operations": {
          "getReceivers": 1,
          "size": 1,
          ">": 1
        },
        "name": "hasMultipleReceivers",
        "body": "getReceivers()->size() > 1",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "getInternalEcuReceivers": 1,
          "asOrderedSet": 1
        },
        "name": "getInternalEcuReceivers",
        "body": "self.sendInteraction.receiveInteraction.getInternalEcuReceivers()\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "rte::interaction::Sender::sendInteraction",
          "rte::interaction::SendInteraction::receiveInteraction"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1
        },
        "name": "hasSendImplementation",
        "body": "sendInteraction->exists(not implementation.oclIsUndefined())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "rte::interaction::Sender::sendInteraction",
          "rte::interaction::SendInteraction::implementation"
        ]
      },
      {
        "operations": {
          "asOrderedSet": 1,
          "getExternalEcuReceivers": 1
        },
        "name": "getExternalEcuReceivers",
        "body": "self.sendInteraction.receiveInteraction.getExternalEcuReceivers()\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "rte::interaction::Sender::sendInteraction",
          "rte::interaction::SendInteraction::receiveInteraction"
        ]
      },
      {
        "operations": {"asOrderedSet": 1},
        "name": "getReceivers",
        "body": "self.sendInteraction.receiveInteraction.receiver->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "rte::interaction::Sender::sendInteraction",
          "rte::interaction::ReceiveInteraction::receiver",
          "rte::interaction::SendInteraction::receiveInteraction"
        ]
      },
      {
        "operations": {
          "size": 1,
          "getInternalEcuReceivers": 1,
          ">": 1
        },
        "name": "hasMultipleInternalEcuReceivers",
        "body": "getInternalEcuReceivers()->size() > 1",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1
        },
        "properties": []
      }
    ],
    "properties": ["sendInteraction"]
  },
  {
    "name": "Integer",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ModeQueueType",
    "expressions": [],
    "properties": [
      "ModeQueuedVariable",
      "ModeMachineInstance",
      "maxLengthConstant",
      "elementType"
    ]
  },
  {
    "name": "ParameterPassTypeEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Bswm",
    "expressions": [],
    "properties": [
      "partedBswm",
      "Rte",
      "modeDeclarationGroup"
    ]
  },
  {
    "name": "RteCallbackHeader",
    "expressions": [],
    "properties": [
      "comCallbackGroup",
      "RteModule"
    ]
  },
  {
    "name": "TAckNotifyOperation",
    "expressions": [],
    "properties": [
      "ComTAckCallback",
      "activationOperation",
      "tAckStatus",
      "ComTErrCallback",
      "ComTxTOutCallback"
    ]
  },
  {
    "name": "IocNonqueuedReadOperation",
    "expressions": [],
    "properties": ["accessApi"]
  },
  {
    "name": "PVariableDataInstanceInSwcEx",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "isEventSemantics": 1,
          "and": 2,
          "isAccessedByDataSendPoint": 1,
          "isInvalidationEnabled": 1
        },
        "name": "providesInvalidateApi",
        "body": "not this_.isEventSemantics() and this_.isInvalidationEnabled() and this_.isAccessedByDataSendPoint()",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 3
        },
        "properties": []
      },
      {
        "operations": {
          "not": 1,
          "and": 1,
          "isEventSemantics": 1,
          "isAccessedByDataSendPoint": 1
        },
        "name": "providesWriteApi",
        "body": "not this_.isEventSemantics() and this_.isAccessedByDataSendPoint()",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "and": 1,
          "isEventSemantics": 1,
          "isAccessedByDataSendPoint": 1
        },
        "name": "providesSendApi",
        "body": "this_.isEventSemantics() and this_.isAccessedByDataSendPoint()",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 3
        },
        "properties": []
      },
      {
        "operations": {
          "and": 1,
          "isAccessedByDataSendPoint": 1,
          "isTAckEnabled": 1
        },
        "name": "providesFeedbackApi",
        "body": "this_.isAccessedByDataSendPoint() and this_.isTAckEnabled()",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2
        },
        "properties": []
      }
    ],
    "properties": []
  },
  {
    "name": "RteBufferQueueType",
    "expressions": [],
    "properties": [
      "elementType",
      "RteBufferQueuedVariable",
      "maxLengthConstant",
      "Rte"
    ]
  },
  {
    "name": "IocReceiveApi",
    "expressions": [],
    "properties": [
      "ComSendProxyOperation",
      "IocQueuedReadOperation",
      "IocQueuedCommunication"
    ]
  },
  {
    "name": "SwcMemoryMappingHeader",
    "expressions": [],
    "properties": [
      "memoryMapping",
      "RteModule"
    ]
  },
  {
    "name": "TrustedFunctionRteBufferWriteSendOperation",
    "expressions": [],
    "properties": ["accessTrustedFunction"]
  },
  {
    "name": "ProxyComSendImplementation",
    "expressions": [],
    "properties": ["proxyInteraction"]
  },
  {
    "name": "RteConfigurationHeader",
    "expressions": [],
    "properties": ["RteModule"]
  },
  {
    "name": "GeneratedEcuConfiguration",
    "expressions": [],
    "properties": [
      "generatedOsEvent",
      "InteractionRoot",
      "generatedOsSpinlock",
      "generatedOsTask",
      "generatedOsTrustedFunction",
      "generatedOsIocCommunication"
    ]
  },
  {
    "name": "OsGetSpinlockApi",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteExitApi",
    "expressions": [],
    "properties": [
      "operation",
      "isNoneExclude"
    ]
  },
  {
    "name": "ComSendImplementation",
    "expressions": [],
    "properties": [
      "comSignalGroup",
      "comSignal"
    ]
  },
  {
    "name": "TrustedFunctionRteBufferInvalidateSendOperation",
    "expressions": [],
    "properties": ["accessTrustedFunction"]
  },
  {
    "name": "IocQueuedReadOperation",
    "expressions": [],
    "properties": [
      "accessApi",
      "tempReturnVariable"
    ]
  },
  {
    "name": "IrvReadOperation",
    "expressions": [],
    "properties": [
      "readValueVariable",
      "IrvReadApi",
      "accessVariable",
      "excludeOperation"
    ]
  },
  {
    "name": "RunnableEntity",
    "expressions": [],
    "properties": [
      "hasReturnValue",
      "RteApi",
      "Swc",
      "ServerRunnableStartOperation",
      "Swc"
    ]
  },
  {
    "name": "PartedBswm",
    "expressions": [],
    "properties": [
      "modeMachineInstance",
      "bswm",
      "schmApi",
      "parent",
      "dependentBswSchedulableEntity",
      "bswMemoryMapping"
    ]
  },
  {
    "name": "PointerType",
    "expressions": [],
    "properties": [
      "isConstPointer",
      "type",
      "isConstTarget"
    ]
  },
  {
    "name": "RteApiFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "rteApi",
      "body": "self.function.oclAsType(RteApi)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "rteApi",
      "RteApplicationHeader",
      "RteApplicationHeader",
      "RteSource",
      "RteInternalHeader"
    ]
  },
  {
    "name": "OsEventSetEntityStarter",
    "expressions": [],
    "properties": [
      "sourceOsEvent",
      "sourceOsTask"
    ]
  },
  {
    "name": "OsTask",
    "expressions": [],
    "properties": [
      "ExecutionContext",
      "GeneratedEcuConfiguration",
      "OsTaskActivateEntityStarter",
      "OsEventSetEntityStarter"
    ]
  },
  {
    "name": "OsTaskEventsTriggeredByMode",
    "expressions": [],
    "properties": [
      "startMode",
      "SchmSwitchApi",
      "osTaskEvent"
    ]
  },
  {
    "name": "WriteApi",
    "expressions": [],
    "properties": [
      "needsCheckArg",
      "tAckStatus",
      "activationOperation",
      "activationFlag",
      "dataParam",
      "operation"
    ]
  },
  {
    "name": "ComSendSignalPeriodicEntity",
    "expressions": [],
    "properties": ["Rte"]
  },
  {
    "name": "IocSendGroupApi",
    "expressions": [],
    "properties": ["IocQueuedGroupCommunication"]
  },
  {
    "name": "RVariableDataInstanceInSwcEx",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "isEventSemantics": 1,
          "and": 1,
          "getOwnerAtomicSwc": 1,
          "=": 1
        },
        "name": "providesReadApi",
        "body": "not this_.isEventSemantics() and\n\t\t\t\t\tthis_.getOwnerAtomicSwc().internalBehavior.runnable.dataReceivePointByArgument\n\t\t\t\t\t->exists(accessedVariable.autosarVariable = this_)",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 5,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "ar4x::m2::RunnableEntity::dataReceivePointByArgument",
          "ar4x::m2::SwcInternalBehavior::runnable",
          "ar4x::m2::VariableAccess::accessedVariable",
          "ar4x::m2::AtomicSwComponentType::internalBehavior",
          "ar4x::m2::AutosarVariableRef::autosarVariable"
        ]
      },
      {
        "operations": {
          "getFilter": 2,
          "not": 1,
          "oclIsUndefined": 1,
          "and": 1,
          "=": 1
        },
        "name": "requiresFilterOldValueVariable",
        "body": "not this_.getFilter().oclIsUndefined() and this_.getFilter().dataFilterType =\n\t\t\t\t\tm2::DataFilterTypeEnum::maskedNewDiffersMaskedOld",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 2,
          "EnumLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::DataFilter::dataFilterType"]
      },
      {
        "operations": {
          "and": 1,
          "isEventSemantics": 1,
          "getOwnerAtomicSwc": 1,
          "=": 1
        },
        "name": "providesReceiveApi",
        "body": "this_.isEventSemantics() and this_.getOwnerAtomicSwc().internalBehavior.runnable.dataReceivePointByArgument\n\t\t\t\t\t->exists(accessedVariable.autosarVariable = this_)",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 5,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "ar4x::m2::RunnableEntity::dataReceivePointByArgument",
          "ar4x::m2::SwcInternalBehavior::runnable",
          "ar4x::m2::VariableAccess::accessedVariable",
          "ar4x::m2::AtomicSwComponentType::internalBehavior",
          "ar4x::m2::AutosarVariableRef::autosarVariable"
        ]
      },
      {
        "operations": {
          "or": 1,
          "requiresFilterOldValueVariable": 1,
          "requiresFilterOccurrenceVariable": 1
        },
        "name": "requiresFilterVariable",
        "body": "requiresFilterOldValueVariable(this_) or requiresFilterOccurrenceVariable(this_)",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 3
        },
        "properties": []
      },
      {
        "operations": {
          "getFilter": 2,
          "not": 1,
          "oclIsUndefined": 1,
          "and": 1,
          "=": 1
        },
        "name": "requiresFilterOccurrenceVariable",
        "body": "not this_.getFilter().oclIsUndefined() and this_.getFilter().dataFilterType =\n\t\t\t\t\tm2::DataFilterTypeEnum::oneEveryN",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 2,
          "EnumLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::DataFilter::dataFilterType"]
      }
    ],
    "properties": []
  },
  {
    "name": "ComProxyFunctionFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "comProxyFunction",
      "body": "self.function.oclAsType(ComProxyFunction)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "RteSource",
      "comProxyFunction"
    ]
  },
  {
    "name": "OsSpinlockExcludeOperation",
    "expressions": [],
    "properties": ["osSpinlockId"]
  },
  {
    "name": "ComReadOperation",
    "expressions": [],
    "properties": [
      "tempReturnVariable",
      "accessApi"
    ]
  },
  {
    "name": "ExecutableEntity",
    "expressions": [],
    "properties": ["EntityStartInteraction"]
  },
  {
    "name": "IocValueBufferImplementation",
    "expressions": [],
    "properties": ["osIocCommunication"]
  },
  {
    "name": "Macro",
    "expressions": [],
    "properties": [
      "symbolName",
      "RteApplicationHeader",
      "Partition",
      "RteSource"
    ]
  },
  {
    "name": "RteEventEx",
    "expressions": [{
      "operations": {
        "allInstances": 2,
        "includes": 1,
        "=": 1
      },
      "name": "getRelatedEntityStarter",
      "body": "let reStartInteraction : interaction::RunnableEntityStartInteraction = interaction::RunnableEntityStartInteraction.allInstances()->any(sourceEvent = this_)\n\t\t\t\t\tin\n\t\t\t\t\tinteraction::EntityStarter.allInstances()->any(startInteraction->includes(reStartInteraction))",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 4,
        "LetExpImpl": 1,
        "TypeExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "rte::interaction::EntityStarter::startInteraction",
        "rte::interaction::RunnableEntityStartInteraction::sourceEvent"
      ]
    }],
    "properties": []
  },
  {
    "name": "PartitionTerminatedApi",
    "expressions": [],
    "properties": [
      "Partition",
      "srInterPartitionTimeoutOperation",
      "activationOperation"
    ]
  },
  {
    "name": "OsEventSetExecutableTaskBody",
    "expressions": [],
    "properties": [
      "eventVariable",
      "checksOsEventId",
      "osEventId",
      "operation"
    ]
  },
  {
    "name": "SenderReceiverToSignalGroupMappingEx",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "oclIsKindOf": 1,
        "allInstances": 1,
        "oclAsType": 1,
        "=": 1
      },
      "name": "getMappedDataInstanceInComposition",
      "body": "if this_.dataElement.oclIsKindOf(instance::VariableDataInstanceInComposition)\n\t\t\t\t\tthen this_.dataElement.oclAsType(instance::VariableDataInstanceInComposition)\n\t\t\t\t\telse\n\t\t\t\t\tlet dataInstanceInComposition : instance::VariableDataInstanceInComposition =\n\t\t\t\t\t\tinstance::DelegationDataInstanceConnector.allInstances()\n\t\t\t\t\t\t->any(outer = this_.dataElement).inner\n\t\t\t\t\tin if dataInstanceInComposition.oclIsUndefined()\n\t\t\t\t\t\tthen null\n\t\t\t\t\t\telse dataInstanceInComposition\n\t\t\t\t\t\tendif\n\t\t\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 5,
        "VariableExpImpl": 6,
        "LetExpImpl": 1,
        "NullLiteralExpImpl": 1,
        "TypeExpImpl": 3,
        "IfExpImpl": 2,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "ar4x::m2::SenderReceiverToSignalGroupMapping::dataElement",
        "ar4x::instance::DelegationDataInstanceConnector::outer",
        "ar4x::instance::DelegationDataInstanceConnector::inner"
      ]
    }],
    "properties": ["ComSignalGroupEx"]
  },
  {
    "name": "ModuleInterlinkHeader",
    "expressions": [],
    "properties": [
      "schmApiGroup",
      "constant",
      "RteModule",
      "dependentExecutableEntityGroup",
      "globalVariableGroup"
    ]
  },
  {
    "name": "EntityStartImplementation",
    "expressions": [],
    "properties": ["EntityStartInteraction"]
  },
  {
    "name": "ImplementationDataType",
    "expressions": [],
    "properties": ["ComSendProxyInteraction"]
  },
  {
    "name": "Partition",
    "expressions": [],
    "properties": [
      "srRteBufferInitValueConstant",
      "entityStartConstant",
      "parent",
      "srFilterOldValueVariable",
      "comMetaDataVariableSet",
      "comProxyFunctionTableSizeConstant",
      "partitionTerminatedApi",
      "entityStartVariable",
      "restartPartitionApi",
      "partedBswm",
      "csTfOpidConstant",
      "comSignalApiWrapper",
      "comProxyFunction",
      "csTrustedFunction",
      "comSignalApiAlias",
      "comProxyFunctionTableVariable",
      "tAckStatus",
      "srFilterOccurrenceVariable",
      "swc",
      "srRteBufferQueuedVariable",
      "rteBufferSendTrustedFunction",
      "csTfArgcConstant",
      "comReceiveBufferVariableSet",
      "taskBody",
      "srRteBufferVariableSet",
      "srFilterConstant",
      "partitionRestartingApi",
      "comProxyBufferVariableSet",
      "osTrustedMacro",
      "comProxyFunctionTableIndexConstant",
      "isBswPartition"
    ]
  },
  {
    "name": "PartitionRestartingApi",
    "expressions": [],
    "properties": [
      "activationOperation",
      "Partition",
      "srInterPartitionTimeoutOperation"
    ]
  },
  {
    "name": "TimingTriggeringExecutableStartOperation",
    "expressions": [],
    "properties": [
      "startOffsetConstant",
      "startOffsetCounterVariable",
      "cyclePeriodConstant",
      "cycleOffsetConstant",
      "cycleCounterVariable"
    ]
  },
  {
    "name": "ActivationOperation",
    "expressions": [],
    "properties": [
      "InvalidateApi",
      "ComProxyFunction",
      "ComRxCallback",
      "PartitionRestartingApi",
      "PartitionTerminatedApi",
      "ComInvCallback",
      "activationFlag",
      "activationApi",
      "WriteApi",
      "ComRxTOutCallback",
      "TAckNotifyOperation",
      "SendApi",
      "osTaskPriority"
    ]
  },
  {
    "name": "TrustedFunctionRteOperation",
    "expressions": [],
    "properties": [
      "activationFlagOnRxSuccess",
      "type",
      "trustedFunctionParamVariable",
      "tempReturnVariable"
    ]
  },
  {
    "name": "LogicalCompartment",
    "expressions": [],
    "properties": ["compartmentName"]
  },
  {
    "name": "FunctionMacro",
    "expressions": [],
    "properties": [
      "RteInternalHeader",
      "symbolName",
      "functionName",
      "Partition"
    ]
  },
  {
    "name": "IocSendImplementation",
    "expressions": [],
    "properties": ["osIocSenderProperties"]
  },
  {
    "name": "ArrayType",
    "expressions": [],
    "properties": ["arraySize"]
  },
  {
    "name": "String",
    "expressions": [],
    "properties": []
  },
  {
    "name": "TrustedFunctionRteBufferSendSendOperation",
    "expressions": [],
    "properties": ["accessTrustedFunction"]
  },
  {
    "name": "PlainExecutableStartOperation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RedefinitionPrimitiveType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsIocSenderProperties",
    "expressions": [],
    "properties": ["IocSendImplementation"]
  },
  {
    "name": "OsEvent",
    "expressions": [],
    "properties": [
      "GeneratedEcuConfiguration",
      "OsEventSetEntityStarter",
      "ImmediateComSendProxy"
    ]
  },
  {
    "name": "RteModule",
    "expressions": [],
    "properties": [
      "rteHeader",
      "rteUtilityHeader",
      "rteBswApiHeader",
      "rteVfbTraceHeader",
      "rteApplicationHeader",
      "moduleInterlinkTypeHeader",
      "rteCommonSource",
      "dependentHeader",
      "bswMemoryMappingHeader",
      "rteCallbackHeader",
      "rtePartitionHeader",
      "rtePartitionSource",
      "rteCommonHeader",
      "rteLifecycleHeader",
      "ModuleRoot",
      "swcMemoryMappingHeader",
      "rteConfigurationHeader",
      "rteApplicationTypeHeader",
      "moduleInterlinkHeader",
      "rteTypeHeader"
    ]
  },
  {
    "name": "RteSource",
    "expressions": [],
    "properties": [
      "trustedFunctionGroup",
      "schmApiGroup",
      "taskBodyGroup",
      "RteModule",
      "comSignalApiWrapperGroup",
      "comProxyFunctionGroup",
      "RteModule",
      "globalVariableGroup",
      "rteLifecycleApiGroup",
      "schmLifecycleApiGroup",
      "comCallbackGroup",
      "bswSchedulableEntityGroup",
      "rteApiGroup",
      "dependentExternalExecutableEntityGroup",
      "sourceMacro"
    ]
  },
  {
    "name": "OsEventSetActivationOperation",
    "expressions": [],
    "properties": [
      "activationOsEventId",
      "OsEventSetExecutableTaskBody"
    ]
  },
  {
    "name": "TaskBody",
    "expressions": [],
    "properties": [
      "TaskBodyFileContentsGroup",
      "Partition",
      "osTaskId"
    ]
  },
  {
    "name": "ModuleObject",
    "expressions": [],
    "properties": [
      "roleName",
      "source",
      "singleSource"
    ]
  },
  {
    "name": "ValueSpecificationEx",
    "expressions": [
      {
        "operations": {
          "isForVALUE": 1,
          "isForDATA_REFERENCE": 1,
          "isForARRAY": 1,
          "=": 5,
          "isForSTRUCTURE": 1,
          "isForUNION": 1
        },
        "name": "isValidValue",
        "body": "\n\t\t\t\tif type.category = 'VALUE' then\n\t\t\t\t\tisForVALUE(value)\n\t\t\t\telse if type.category = 'ARRAY' then\n\t\t\t\t\tisForARRAY(value, type)\n\t\t\t\telse if type.category = 'STRUCTURE' then\n\t\t\t\t\tisForSTRUCTURE(value, type)\n\t\t\t\telse if type.category = 'UNION' then\n\t\t\t\t\tisForUNION(value, type)\n\t\t\t\telse if type.category = 'DATA_REFERENCE' then\n\t\t\t\t\tisForDATA_REFERENCE(value)\n\t\t\t\telse\n\t\t\t\t\tfalse\n\t\t\t\tendif endif endif endif endif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 10,
          "VariableExpImpl": 18,
          "StringLiteralExpImpl": 5,
          "IfExpImpl": 5,
          "PropertyCallExpImpl": 5,
          "BooleanLiteralExpImpl": 1
        },
        "properties": ["ar4x::m2::Identifiable::category"]
      },
      {
        "operations": {
          "<>": 2,
          "equalsInitValue": 2,
          "getValueSpecAsText": 2,
          "at": 4,
          "size": 6,
          "oclIsTypeOf": 2,
          "and": 2,
          "getEndValueSpec": 2,
          "=": 1,
          "oclAsType": 4
        },
        "name": "equalsInitValue",
        "body": "\n\t\t\t\tlet endV1 : ar4x::m2::ValueSpecification = getEndValueSpec(v1),\n\t\t\t\t\tendV2 : ar4x::m2::ValueSpecification = getEndValueSpec(v2)\n\t\t\t\tin\n\t\t\t\tif endV1.oclIsTypeOf(ar4x::m2::ArrayValueSpecification) then\n\t\t\t\t\tlet arrayV1 : ar4x::m2::ArrayValueSpecification = endV1.oclAsType(ar4x::m2::ArrayValueSpecification),\n\t\t\t\t\t\tarrayV2 : ar4x::m2::ArrayValueSpecification = endV2.oclAsType(ar4x::m2::ArrayValueSpecification)\n\t\t\t\t\tin\n\t\t\t\t\tif arrayV1.element->size() <> arrayV2.element->size() then\n\t\t\t\t\t\tfalse\n\t\t\t\t\telse\n\t\t\t\t\t\tSequence{1..(arrayV1.element->size())}->iterate(i : Integer;\n\t\t\t\t\t\t\tflag : Boolean = true | flag and equalsInitValue(arrayV1.element->at(i), arrayV2.element->at(i)))\n\t\t\t\t\tendif\n\t\t\t\telse if endV1.oclIsTypeOf(ar4x::m2::RecordValueSpecification) then\n\t\t\t\t\tlet recV1 : ar4x::m2::RecordValueSpecification = endV1.oclAsType(ar4x::m2::RecordValueSpecification),\n\t\t\t\t\t\trecV2 : ar4x::m2::RecordValueSpecification = endV2.oclAsType(ar4x::m2::RecordValueSpecification)\n\t\t\t\t\tin\n\t\t\t\t\tif recV1.field->size() <> recV2.field->size() then\n\t\t\t\t\t\tfalse\n\t\t\t\t\telse\n\t\t\t\t\t\tSequence{1..(recV1.field->size())}->iterate(i : Integer;\n\t\t\t\t\t\t\tflag : Boolean = true | flag and equalsInitValue(recV1.field->at(i), recV2.field->at(i)))\n\t\t\t\t\tendif\n\t\t\t\telse\n\t\t\t\t\tgetValueSpecAsText(endV1) = getValueSpecAsText(endV2)\n\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 32,
          "OperationCallExpImpl": 27,
          "LetExpImpl": 6,
          "IntegerLiteralExpImpl": 2,
          "TypeExpImpl": 6,
          "CollectionLiteralExpImpl": 2,
          "IterateExpImpl": 2,
          "IfExpImpl": 4,
          "PropertyCallExpImpl": 10,
          "BooleanLiteralExpImpl": 4
        },
        "properties": [
          "ar4x::m2::ArrayValueSpecification::element",
          "ar4x::m2::RecordValueSpecification::field"
        ]
      },
      {
        "operations": {
          "size": 1,
          "isForVALUE": 1,
          "oclIsKindOf": 1,
          "and": 2,
          "getEndValueSpec": 1,
          "=": 1,
          "oclAsType": 2,
          "first": 1
        },
        "name": "isForARRAY",
        "body": "\n\t\t\t\tlet end : ar4x::m2::ValueSpecification = getEndValueSpec(value)\n\t\t\t\tin\n\t\t\t\tend.oclIsKindOf(ar4x::m2::ArrayValueSpecification)\n\t\t\t\tand\n\t\t\t\tend.oclAsType(ar4x::m2::ArrayValueSpecification).element->size() = type.subElement->first().arraySize\n\t\t\t\tand\n\t\t\t\tend.oclAsType(ar4x::m2::ArrayValueSpecification).element->forAll(v | isForVALUE(v))",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 8,
          "OperationCallExpImpl": 10,
          "LetExpImpl": 1,
          "TypeExpImpl": 3,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::ImplementationDataTypeElement::arraySize",
          "ar4x::m2::ArrayValueSpecification::element",
          "ar4x::m2::ImplementationDataType::subElement"
        ]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "getEndValueSpec": 1
        },
        "name": "isForDATA_REFERENCE",
        "body": "\n\t\t\t\tlet end : ar4x::m2::ValueSpecification = getEndValueSpec(value)\n\t\t\t\tin\n\t\t\t\tend.oclIsKindOf(ar4x::m2::NumericalValueSpecification)",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "LetExpImpl": 1,
          "TypeExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "oclIsKindOf": 2,
          "toString": 1,
          "getEndValueSpec": 1,
          "oclAsType": 2
        },
        "name": "getValueSpecAsText",
        "body": "let endValueSpec : m2::ValueSpecification = getEndValueSpec(this_)\n\t\t\t\tin if endValueSpec.oclIsKindOf(ar4x::m2::NumericalValueSpecification)\n\t\t\t\t\t\tthen endValueSpec.oclAsType(ar4x::m2::NumericalValueSpecification).value.toString()\n\t\t\t\t\telse if endValueSpec.oclIsKindOf(ar4x::m2::TextValueSpecification)\n\t\t\t\t\t\tthen endValueSpec.oclAsType(ar4x::m2::TextValueSpecification).value\n\t\t\t\t\telse null\n\t\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 6,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 4,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::m2::NumericalValueSpecification::value",
          "ar4x::m2::TextValueSpecification::value"
        ]
      },
      {
        "operations": {
          "or": 1,
          "oclIsKindOf": 2,
          "getEndValueSpec": 1
        },
        "name": "isForVALUE",
        "body": "\n\t\t\t\tlet end : ar4x::m2::ValueSpecification = getEndValueSpec(this_)\n\t\t\t\tin\n\t\t\t\tend.oclIsKindOf(ar4x::m2::NumericalValueSpecification) or end.oclIsKindOf(ar4x::m2::TextValueSpecification)",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 4,
          "LetExpImpl": 1,
          "TypeExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "size": 2,
          "isForVALUE": 1,
          "oclIsKindOf": 1,
          "and": 2,
          "getEndValueSpec": 1,
          "oclAsType": 2,
          "=": 1
        },
        "name": "isForSTRUCTURE",
        "body": "\n\t\t\t\tlet end : ar4x::m2::ValueSpecification = getEndValueSpec(value)\n\t\t\t\tin\n\t\t\t\tend.oclIsKindOf(ar4x::m2::RecordValueSpecification)\n\t\t\t\tand\n\t\t\t\tend.oclAsType(ar4x::m2::RecordValueSpecification).field->size() = type.subElement->size()\n\t\t\t\tand\n\t\t\t\tend.oclAsType(ar4x::m2::RecordValueSpecification).field->forAll(v | isForVALUE(v))",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 10,
          "VariableExpImpl": 8,
          "LetExpImpl": 1,
          "TypeExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "ar4x::m2::ImplementationDataType::subElement",
          "ar4x::m2::RecordValueSpecification::field"
        ]
      },
      {
        "operations": {
          "isForVALUE": 1,
          "size": 1,
          "oclIsKindOf": 1,
          "and": 2,
          "getEndValueSpec": 1,
          "oclAsType": 2,
          "=": 1,
          "first": 1
        },
        "name": "isForUNION",
        "body": "\n\t\t\t\tlet end : ar4x::m2::ValueSpecification = getEndValueSpec(value)\n\t\t\t\tin\n\t\t\t\tend.oclIsKindOf(ar4x::m2::RecordValueSpecification)\n\t\t\t\tand\n\t\t\t\tend.oclAsType(ar4x::m2::RecordValueSpecification).field->size() = 1\n\t\t\t\tand\n\t\t\t\tisForVALUE(end.oclAsType(ar4x::m2::RecordValueSpecification).field->first())",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 10,
          "VariableExpImpl": 6,
          "LetExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "TypeExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ar4x::m2::RecordValueSpecification::field"]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "getEndValueSpec": 1,
          "oclAsType": 1
        },
        "name": "getEndValueSpec",
        "body": "if this_.oclIsKindOf(m2::ConstantReference)\n\t\t\t\t\t\tthen this_.oclAsType(m2::ConstantReference).getEndValueSpec()\n\t\t\t\t\telse this_\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "TypeExpImpl": 2,
          "IfExpImpl": 1
        },
        "properties": []
      }
    ],
    "properties": ["VariableDataInstanceInCompositionEx"]
  },
  {
    "name": "DisabledInMode",
    "expressions": [],
    "properties": [
      "ExecutableStartOperation",
      "modeMachineInstance",
      "disabledMode"
    ]
  },
  {
    "name": "SourceFile",
    "expressions": [],
    "properties": ["includeHeader"]
  },
  {
    "name": "InteractionEnd",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "getOwnerCore": 2
      },
      "name": "getOwnerCore",
      "body": "if self.ownerPartition.getOwnerCore().oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse self.ownerPartition.getOwnerCore()\n\t\t\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 2,
        "NullLiteralExpImpl": 1,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["rte::interaction::InteractionEnd::ownerPartition"]
    }],
    "properties": [
      "ownerPartition",
      "InteractionRoot"
    ]
  },
  {
    "name": "IocQueuedGroupCommunication",
    "expressions": [],
    "properties": [
      "sendApi",
      "receiveApi"
    ]
  },
  {
    "name": "RteCoreStartApiImpl",
    "expressions": [],
    "properties": [
      "MulticoreRteStartApi",
      "parent",
      "RteInternalHeader",
      "operation"
    ]
  },
  {
    "name": "TAckStatus",
    "expressions": [],
    "properties": [
      "TAckNotifyOperation",
      "SendApi",
      "InvalidateApi",
      "WriteApi",
      "FeedbackApi",
      "ComSendOperation",
      "Partition",
      "ComProxyFunction",
      "statusVariable"
    ]
  },
  {
    "name": "RteBufferInvalidateTrustedFunction",
    "expressions": [],
    "properties": [
      "operation",
      "TrustedFunctionRteBufferInvalidateSendOperation"
    ]
  },
  {
    "name": "IocNonqueuedCommunication",
    "expressions": [],
    "properties": [
      "initValueVariable",
      "initValue",
      "writeApi",
      "readApi"
    ]
  },
  {
    "name": "Rte",
    "expressions": [],
    "properties": [
      "generationInfo",
      "immediateConstant",
      "srRteNonqueuedSendTfParamType",
      "dependentType",
      "comSendSignalPeriodicEntity",
      "comSendSignalTfParamType",
      "bswm",
      "rteStartApi",
      "implementationDataType",
      "schmDeinitApi",
      "dependentComApi",
      "iocInitValueVariableSet",
      "rteStopApi",
      "csTfParamType",
      "dependentOsApi",
      "srRteQueuedSendTfParamType",
      "dependentIocCommunication",
      "iocInitValueConstant",
      "comSendSignalImmediateTaskBody",
      "ModuleRoot",
      "comCallback",
      "comSendSignalImmediateEntity",
      "dependentConstant",
      "comSendSignalGroupTfParamType",
      "srRteBufferQueueType",
      "srRteBufferQueueMaxLengthConstant",
      "schmInitApi",
      "rteMemoryMapping",
      "core",
      "comSendSignalTrustedFunction"
    ]
  },
  {
    "name": "OsSuspendAllInterruptsApi",
    "expressions": [],
    "properties": []
  },
  {
    "name": "NeverReadOperation",
    "expressions": [],
    "properties": ["initValueConstant"]
  },
  {
    "name": "InternalEcuSender",
    "expressions": [{
      "operations": {"isEventSemantics": 1},
      "name": "isEventSemantics",
      "body": "self.source.prototype.isEventSemantics()",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "ar4x::instance::VariableDataInstanceInComposition::prototype",
        "rte::interaction::InternalEcuSender::source"
      ]
    }],
    "properties": [
      "tAckStatusVariableImplementation",
      "activatesOnSendCompleted",
      "source"
    ]
  },
  {
    "name": "ModeQueuedVariable",
    "expressions": [{
      "operations": {"oclAsType": 1},
      "name": "queueType",
      "body": "self.type.oclAsType(ModeQueueType)",
      "type": "PropertyImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::Variable::type"]
    }],
    "properties": [
      "queueType",
      "ModeMachineInstance"
    ]
  },
  {
    "name": "ComSendSignalImmediateEntity",
    "expressions": [],
    "properties": [
      "ComSendSignalImmediateTaskBody",
      "Rte"
    ]
  },
  {
    "name": "OsActivateTaskApi",
    "expressions": [],
    "properties": ["osTaskId"]
  },
  {
    "name": "RedefinitionType",
    "expressions": [{
      "operations": {
        "getLeafType": 1,
        "oclIsKindOf": 1,
        "oclAsType": 1
      },
      "name": "getLeafType",
      "body": "if sourceType.oclIsKindOf(RedefinitionType)\n\t\t\tthen sourceType.oclAsType(RedefinitionType).getLeafType()\n\t\t\telse sourceType\n\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 3,
        "TypeExpImpl": 2,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": ["rte::module::RedefinitionType::sourceType"]
    }],
    "properties": ["sourceType"]
  },
  {
    "name": "ImmediateProxyComSendImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ExclusiveAreaEx",
    "expressions": [
      {
        "operations": {
          "getUsingPartition": 1,
          "includes": 2,
          "union": 1,
          "asSet": 1,
          "oclAsType": 1
        },
        "name": "getUsingPartitionsOfBswExclusiveArea",
        "body": "let bswInternalBehavior : ar4x::m2::BswInternalBehavior = this_.parent.oclAsType(ar4x::m2::BswInternalBehavior)\n\t\t\t\t\t\tin\n\t\t\t\t\t\tbswInternalBehavior.bswSchedulableEntity->select(canEnterExclusiveArea->includes(this_))\n\t\t\t\t\t\t->union(bswInternalBehavior.bswSchedulableEntity->select(runsInsideExclusiveArea->includes(this_)))\n\t\t\t\t\t\t->collect(m | bswSchedulableEntityEx.getUsingPartition(m))->asSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 9,
          "OperationCallExpImpl": 6,
          "LetExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "ar4x::m2::ExecutableEntity::runsInsideExclusiveArea",
          "ar4x::m2::ExecutableEntity::canEnterExclusiveArea",
          "ar4x::m2::BswInternalBehavior::bswSchedulableEntity",
          "ar4x::m2::ExclusiveArea::parent",
          "rte::ex::ExclusiveAreaEx::bswSchedulableEntityEx"
        ]
      },
      {
        "operations": {"oclIsKindOf": 1},
        "name": "",
        "body": "this_.parent.oclIsKindOf(ar4x::m2::SwcInternalBehavior)",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::ExclusiveArea::parent"]
      },
      {
        "operations": {
          "includes": 1,
          "oclAsType": 1
        },
        "name": "providesRteEnterExitApi",
        "body": "this_.parent.oclAsType(ar4x::m2::SwcInternalBehavior).runnable.canEnterExclusiveArea->includes(this_)",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "ar4x::m2::SwcInternalBehavior::runnable",
          "ar4x::m2::ExecutableEntity::canEnterExclusiveArea",
          "ar4x::m2::ExclusiveArea::parent"
        ]
      },
      {
        "operations": {"oclIsKindOf": 1},
        "name": "",
        "body": "this_.parent.oclIsKindOf(ar4x::m2::BswInternalBehavior)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::ExclusiveArea::parent"]
      },
      {
        "operations": {
          "includes": 1,
          "oclAsType": 1
        },
        "name": "providesSchmEnterExitApi",
        "body": "this_.parent.oclAsType(ar4x::m2::BswInternalBehavior).bswSchedulableEntity.canEnterExclusiveArea->includes(this_)",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "ar4x::m2::ExecutableEntity::canEnterExclusiveArea",
          "ar4x::m2::BswInternalBehavior::bswSchedulableEntity",
          "ar4x::m2::ExclusiveArea::parent"
        ]
      },
      {
        "operations": {"oclIsKindOf": 1},
        "name": "",
        "body": "this_.parent.oclIsKindOf(ar4x::m2::BswInternalBehavior)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::ExclusiveArea::parent"]
      }
    ],
    "properties": ["bswSchedulableEntityEx"]
  },
  {
    "name": "ComSignalGroup",
    "expressions": [],
    "properties": [
      "ComSendImplementation",
      "ExternalEcuReceiver",
      "ComValueBufferImplementation",
      "ExternalEcuSender"
    ]
  },
  {
    "name": "EObject",
    "expressions": [],
    "properties": [
      "ModuleObject",
      "ModuleObject"
    ]
  },
  {
    "name": "CycleCounterImplementation",
    "expressions": [],
    "properties": [
      "maxCount",
      "parent"
    ]
  },
  {
    "name": "GlobalVariableSet",
    "expressions": [],
    "properties": [
      "globalVariable",
      "Partition"
    ]
  },
  {
    "name": "TrustedFunctionComSendOperation",
    "expressions": [],
    "properties": [
      "type",
      "isGroup",
      "trustedFunctionParamVariable",
      "accessTrustedFunction"
    ]
  },
  {
    "name": "ComTErrCallback",
    "expressions": [],
    "properties": ["tAckNotifyOperation"]
  },
  {
    "name": "RteLifecycleApi",
    "expressions": [],
    "properties": ["RteLifecycleApiFileContentsGroup"]
  },
  {
    "name": "GlobalVariable",
    "expressions": [],
    "properties": [
      "memoryMapping",
      "ModeMachineInstance",
      "Partition",
      "Partition",
      "TAckStatus",
      "RteBufferVariableSet",
      "Swc",
      "MaskedNewDiffersMaskedOldFilterOperation",
      "GlobalVariableSet",
      "initValueConstant",
      "hasConst",
      "RteBufferVariableSet",
      "hasStatic",
      "CycleCountupOperation",
      "initWithConstantValue",
      "initAtDefinition",
      "VariableInitializeOperation",
      "RteBufferVariableSet",
      "RteApi",
      "RteBufferVariableSet",
      "Partition",
      "OneEveryNFilterOperation",
      "StartOffsetCountupOperation",
      "Partition",
      "GlobalVariableFileContentsGroup",
      "TimingTriggeringExecutableStartOperation",
      "TimingTriggeringExecutableStartOperation",
      "IocNonqueuedCommunication",
      "ModeMachineInstance"
    ]
  },
  {
    "name": "CompuScaleEx",
    "expressions": [
      {
        "operations": {
          "not": 2,
          "oclIsUndefined": 2,
          "and": 2,
          "=": 1
        },
        "name": "providesEnumConstant",
        "body": "not this_.lowerLimit.oclIsUndefined() and not this_.upperLimit.oclIsUndefined() and this_.lowerLimit.value =\n\t\t\t\t\tthis_.upperLimit.value",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 4,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "ar4x::m2::CompuScale::upperLimit",
          "ar4x::m2::Limit::value",
          "ar4x::m2::CompuScale::lowerLimit"
        ]
      },
      {
        "operations": {
          "not": 3,
          "oclIsUndefined": 3
        },
        "name": "getEnumLiteral",
        "body": "if not this_.symbol.oclIsUndefined()\n\t\t\t\t\t\tthen this_.symbol\n\t\t\t\t\telse if not this_.compuConst.vt.oclIsUndefined()\n\t\t\t\t\t\tthen this_.compuConst.vt\n\t\t\t\t\telse if not this_.shortLabel.oclIsUndefined()\n\t\t\t\t\t\tthen this_.shortLabel\n\t\t\t\t\telse null\n\t\t\t\t\tendif endif endif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 6,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 3,
          "PropertyCallExpImpl": 8
        },
        "properties": [
          "ar4x::m2::CompuConst::vt",
          "ar4x::m2::CompuScale::shortLabel",
          "ar4x::m2::CompuScale::compuConst",
          "ar4x::m2::CompuScale::symbol"
        ]
      }
    ],
    "properties": []
  },
  {
    "name": "CallApi",
    "expressions": [],
    "properties": [
      "returnVariable",
      "operationParam",
      "portArgValue",
      "operation"
    ]
  },
  {
    "name": "NewIsWithinFilterOperation",
    "expressions": [],
    "properties": [
      "max",
      "min"
    ]
  },
  {
    "name": "ConstantValueTypeEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ComSendProxyInteraction",
    "expressions": [],
    "properties": [
      "requestOsIocCommunication",
      "proxy",
      "valueOsIocCommunication",
      "ProxyComSendImplementation",
      "requesterPartition",
      "signalDataType"
    ]
  },
  {
    "name": "TimingTriggeringEntityStartImplementation",
    "expressions": [
      {
        "operations": {">": 1},
        "name": "requiresStartOffsetAdjust",
        "body": "self.startOffset > 0",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::interaction::TimingTriggeringEntityStartImplementation::startOffset"]
      },
      {
        "operations": {"mod": 1},
        "name": "getCycleOffset",
        "body": "self.startOffset.mod(self.cyclePeriod)",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "rte::interaction::TimingTriggeringEntityStartImplementation::cyclePeriod",
          "rte::interaction::TimingTriggeringEntityStartImplementation::startOffset"
        ]
      },
      {
        "operations": {">": 1},
        "name": "requiresCycleAdjust",
        "body": "self.cyclePeriod > 1",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::interaction::TimingTriggeringEntityStartImplementation::cyclePeriod"]
      }
    ],
    "properties": [
      "cyclePeriod",
      "startOffset"
    ]
  },
  {
    "name": "EntityStartInteraction",
    "expressions": [],
    "properties": [
      "startOnEvent",
      "implementation",
      "timingTriggeringEntityStartCondition",
      "activationOffset",
      "positionInTask",
      "starter"
    ]
  },
  {
    "name": "ComTAckCallback",
    "expressions": [],
    "properties": ["tAckNotifyOperation"]
  },
  {
    "name": "SchmApiFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "schmApi",
      "body": "self.function.oclAsType(SchmApi)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "schmApi",
      "RteInternalHeader",
      "RteSource",
      "ModuleInterlinkHeader"
    ]
  },
  {
    "name": "Constant",
    "expressions": [],
    "properties": [
      "NewIsWithinFilterOperation",
      "MaskedNewEqualsXFilterOperation",
      "NeverReadOperation",
      "Rte",
      "CycleCountupOperation",
      "ReadOperation",
      "type",
      "TimingTriggeringExecutableStartOperation",
      "RteBufferQueueType",
      "Swc",
      "value",
      "ModeSwitchTriggeringExecutableStartOperation",
      "Swc",
      "Swc",
      "ModeDeclarationGroup",
      "member",
      "ModeDeclarationGroup",
      "Partition",
      "Partition",
      "ModuleInterlinkHeader",
      "OsTaskEventsTriggeredByMode",
      "RteApplicationTypeHeader",
      "MaskedNewDiffersMaskedOldFilterOperation",
      "MaskedNewDiffersXFilterOperation",
      "Partition",
      "OneEveryNFilterOperation",
      "Swc",
      "MaskedNewDiffersXFilterOperation",
      "RteApplicationHeader",
      "ModeDeclarationGroup",
      "IocNonqueuedCommunication",
      "Swc",
      "representedVariableName",
      "RteApi",
      "RteInternalHeader",
      "MaskedNewEqualsXFilterOperation",
      "ModuleInterlinkTypeHeader",
      "Rte",
      "NewIsOutsideFilterOperation",
      "NewIsWithinFilterOperation",
      "constantValueType",
      "Rte",
      "DisabledInMode",
      "RteTypeHeader",
      "Swc",
      "Partition",
      "StartOffsetCountupOperation",
      "LocalVariable",
      "symbolName",
      "ModeQueueType",
      "NewIsOutsideFilterOperation",
      "GlobalVariable",
      "TimingTriggeringExecutableStartOperation",
      "Swc",
      "externalSymbolName",
      "ModeMachineInstance",
      "Swc",
      "OneEveryNFilterOperation",
      "Partition",
      "Partition",
      "TimingTriggeringExecutableStartOperation",
      "Rte",
      "Swc",
      "Partition"
    ]
  },
  {
    "name": "AssemblyDataInstanceConnectorEx",
    "expressions": [{
      "operations": {
        "getPartition": 2,
        "<>": 1
      },
      "name": "isInterPartition",
      "body": "variableDataInstanceInCompositionEx.getPartition(this_.provider) <>\n\t\t\t\t\tvariableDataInstanceInCompositionEx.getPartition(this_.requester)",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 4,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "ar4x::instance::AssemblyDataInstanceConnector::provider",
        "rte::ex::AssemblyDataInstanceConnectorEx::variableDataInstanceInCompositionEx",
        "ar4x::instance::AssemblyDataInstanceConnector::requester"
      ]
    }],
    "properties": ["variableDataInstanceInCompositionEx"]
  },
  {
    "name": "NewIsOutsideFilterOperation",
    "expressions": [],
    "properties": [
      "min",
      "max"
    ]
  },
  {
    "name": "IocSendOperation",
    "expressions": [],
    "properties": [
      "type",
      "activationFlagOnRxSuccess"
    ]
  },
  {
    "name": "IocNonqueuedSendOperation",
    "expressions": [],
    "properties": ["accessApi"]
  },
  {
    "name": "InteractionObject",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SinglecoreRteStartApi",
    "expressions": [],
    "properties": ["operation"]
  },
  {
    "name": "ComTxTOutCallback",
    "expressions": [],
    "properties": ["tAckNotifyOperation"]
  },
  {
    "name": "RteStartApi",
    "expressions": [],
    "properties": ["Rte"]
  },
  {
    "name": "StructMember",
    "expressions": [],
    "properties": [
      "type",
      "memberName",
      "StructType"
    ]
  },
  {
    "name": "TAckStatusVariableImplementation",
    "expressions": [],
    "properties": ["parent"]
  },
  {
    "name": "SendApi",
    "expressions": [],
    "properties": [
      "dataParam",
      "trustedFunctionParamVariable",
      "tAckStatus",
      "filterResultVariable",
      "operation",
      "activationOperation",
      "statusVariable",
      "needsCheckArg",
      "activationFlag"
    ]
  },
  {
    "name": "ComSendProxyOperation",
    "expressions": [],
    "properties": [
      "functionTableSymbolName",
      "accessApi",
      "ComSendSignalProxyEntity",
      "tableIndexVariable"
    ]
  },
  {
    "name": "Variable",
    "expressions": [],
    "properties": [
      "ReadOperation",
      "ComRxCallback",
      "ComRxTOutCallback",
      "type",
      "OsEventSetExecutableTaskBody",
      "member",
      "IocQueuedReadOperation",
      "ComProxyFunction",
      "FilterOperation",
      "symbolName",
      "TrustedFunctionRteOperation",
      "ComSendProxyOperation",
      "TrustedFunctionComSendOperation",
      "RteBufferQueuedSendOperation",
      "IocQueuedSendOperation",
      "SendOperation",
      "ComReadOperation",
      "ReadOperation",
      "ComSendOperation",
      "IrvReadOperation",
      "IrvWriteOperation"
    ]
  },
  {
    "name": "BswSchedulableEntity",
    "expressions": [],
    "properties": [
      "parentPartedBswm",
      "BswSchedulableEntityFileContentsGroup"
    ]
  },
  {
    "name": "ComSendSignalApiWrapper",
    "expressions": [],
    "properties": []
  },
  {
    "name": "FeedbackApi",
    "expressions": [],
    "properties": ["tAckStatus"]
  },
  {
    "name": "OsIocCommunication",
    "expressions": [],
    "properties": [
      "IocValueBufferImplementation",
      "ComSendProxyInteraction",
      "ComSendProxyInteraction",
      "GeneratedEcuConfiguration"
    ]
  },
  {
    "name": "ValueBufferImplementation",
    "expressions": [],
    "properties": [
      "parent",
      "hasStatus"
    ]
  },
  {
    "name": "PeriodicComSendProxy",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OneEveryNFilterOperation",
    "expressions": [],
    "properties": [
      "period",
      "offset",
      "occurrenceVariable"
    ]
  },
  {
    "name": "OsTaskActivationExecutableTaskBody",
    "expressions": [],
    "properties": ["operation"]
  },
  {
    "name": "EcucPartition",
    "expressions": [],
    "properties": [
      "VariableImplementation",
      "ComSendProxyInteraction",
      "InteractionEnd"
    ]
  },
  {
    "name": "RteValueBufferImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ModeType",
    "expressions": [],
    "properties": [
      "implementationDataType",
      "ModeDeclarationGroup",
      "RteInternalHeader",
      "guardName",
      "ModuleInterlinkTypeHeader"
    ]
  },
  {
    "name": "IrvWriteOperation",
    "expressions": [],
    "properties": [
      "excludeOperation",
      "IrvWriteApi",
      "writeValueVariable",
      "accessVariable"
    ]
  },
  {
    "name": "OsResourceExcludeOperation",
    "expressions": [],
    "properties": ["osResourceId"]
  },
  {
    "name": "RteStopApi",
    "expressions": [],
    "properties": ["Rte"]
  },
  {
    "name": "ComSignal",
    "expressions": [],
    "properties": [
      "ComValueBufferImplementation",
      "ComSendImplementation",
      "ExternalEcuSender",
      "ExternalEcuReceiver"
    ]
  },
  {
    "name": "ReceiveInteraction",
    "expressions": [
      {
        "operations": {
          "size": 1,
          "asSet": 1,
          "getOwnerCore": 1,
          ">": 1
        },
        "name": "receivesFromMultipleCores",
        "body": "self.sendInteraction.sender.getOwnerCore()->asSet()->size() > 1",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 4,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "rte::interaction::SendInteraction::sender",
          "rte::interaction::ReceiveInteraction::sendInteraction"
        ]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1
        },
        "name": "getInternalEcuReceivers",
        "body": "self.receiver\n\t\t\t\t\t->select(oclIsKindOf(interaction::InternalEcuReceiver)).oclAsType(interaction::InternalEcuReceiver)\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::interaction::ReceiveInteraction::receiver"]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1
        },
        "name": "getExternalEcuReceivers",
        "body": "self.receiver\n\t\t\t\t\t->select(oclIsKindOf(interaction::ExternalEcuReceiver)).oclAsType(interaction::ExternalEcuReceiver)\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::interaction::ReceiveInteraction::receiver"]
      },
      {
        "operations": {"isInterCore": 1},
        "name": "receivesInterCore",
        "body": "self.sendInteraction->exists(isInterCore())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::interaction::ReceiveInteraction::sendInteraction"]
      }
    ],
    "properties": [
      "receiver",
      "valueBufferImplementation",
      "sendInteraction",
      "filterBufferImplementation"
    ]
  },
  {
    "name": "AtomicSwComponentTypeEx",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteBswApiHeader",
    "expressions": [],
    "properties": [
      "iocApi",
      "RteModule"
    ]
  },
  {
    "name": "EntityStarter",
    "expressions": [],
    "properties": [
      "InternalEcuSender",
      "executionContext",
      "InternalEcuReceiver",
      "InternalEcuReceiver",
      "startOffsetCounterImplementation",
      "expectedConfig",
      "startInteraction",
      "cycleCounterImplementation"
    ]
  },
  {
    "name": "FunctionFileContentsGroup",
    "expressions": [],
    "properties": [
      "function",
      "memoryMapping"
    ]
  },
  {
    "name": "NoneExcludeOperation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "FilterBufferImplementation",
    "expressions": [],
    "properties": ["parent"]
  },
  {
    "name": "ModuleInterlinkTypeHeader",
    "expressions": [],
    "properties": [
      "RteModule",
      "constant",
      "modeDeclarationGroup",
      "modeType"
    ]
  },
  {
    "name": "File",
    "expressions": [],
    "properties": [
      "generationInfo",
      "fileName"
    ]
  },
  {
    "name": "SchmLifecycleApi",
    "expressions": [],
    "properties": ["SchmLifecycleApiFileContentsGroup"]
  },
  {
    "name": "IocQueuedSendOperation",
    "expressions": [],
    "properties": [
      "accessApi",
      "tempReturnVariable"
    ]
  },
  {
    "name": "MulticoreRteStartApi",
    "expressions": [],
    "properties": ["coreStartApiImpl"]
  },
  {
    "name": "MulticoreSchmInitApi",
    "expressions": [],
    "properties": ["coreInitApiImpl"]
  },
  {
    "name": "SchmSwitchApi",
    "expressions": [],
    "properties": [
      "osTaskEventTriggeredByMode",
      "executableStartOperation",
      "modeMachineInstance"
    ]
  },
  {
    "name": "MaskedNewDiffersXFilterOperation",
    "expressions": [],
    "properties": [
      "x",
      "mask"
    ]
  },
  {
    "name": "ReadApi",
    "expressions": [],
    "properties": [
      "operation",
      "dataParam"
    ]
  },
  {
    "name": "RteBufferNonqueuedSendOperation",
    "expressions": [],
    "properties": [
      "activationFlagOnRxSuccess",
      "accessVariable",
      "RteBufferWriteTrustedFunction",
      "filterOperation",
      "RteBufferInvalidateTrustedFunction"
    ]
  },
  {
    "name": "GenerationInfo",
    "expressions": [],
    "properties": [
      "generationDate",
      "File",
      "generatorVersion",
      "generatorName",
      "Rte"
    ]
  },
  {
    "name": "SenderReceiverToSignalMappingEx",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "oclIsKindOf": 1,
        "allInstances": 1,
        "oclAsType": 1,
        "=": 1
      },
      "name": "getMappedDataInstanceInComposition",
      "body": "if this_.dataElement.oclIsKindOf(instance::VariableDataInstanceInComposition)\n\t\t\t\t\tthen this_.dataElement.oclAsType(instance::VariableDataInstanceInComposition)\n\t\t\t\t\telse\n\t\t\t\t\tlet dataInstanceInComposition : instance::VariableDataInstanceInComposition =\n\t\t\t\t\t\tinstance::DelegationDataInstanceConnector.allInstances()\n\t\t\t\t\t\t->any(outer = this_.dataElement).inner\n\t\t\t\t\tin if dataInstanceInComposition.oclIsUndefined()\n\t\t\t\t\t\tthen null\n\t\t\t\t\t\telse dataInstanceInComposition\n\t\t\t\t\t\tendif\n\t\t\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 5,
        "VariableExpImpl": 6,
        "LetExpImpl": 1,
        "NullLiteralExpImpl": 1,
        "TypeExpImpl": 3,
        "IfExpImpl": 2,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "ar4x::instance::DelegationDataInstanceConnector::inner",
        "ar4x::instance::DelegationDataInstanceConnector::outer",
        "ar4x::m2::SenderReceiverToSignalMapping::dataElement"
      ]
    }],
    "properties": ["ComSignalEx"]
  },
  {
    "name": "OsApi",
    "expressions": [],
    "properties": [
      "ActivationOperation",
      "Rte"
    ]
  },
  {
    "name": "MemoryMapping",
    "expressions": [],
    "properties": [
      "GlobalVariable",
      "memorySectionSymbolName",
      "prefix",
      "Function",
      "FunctionFileContentsGroup",
      "GlobalVariableFileContentsGroup"
    ]
  },
  {
    "name": "ModeSwitchTriggeringExecutableStartOperation",
    "expressions": [],
    "properties": [
      "SchmInitApi",
      "SchmSwitchApi",
      "startMode"
    ]
  },
  {
    "name": "FilterOperation",
    "expressions": [],
    "properties": [
      "RteBufferNonqueuedSendOperation",
      "filterResultVariable"
    ]
  },
  {
    "name": "ROperationInstanceInSwcEx",
    "expressions": [{
      "operations": {
        "getOwnerAtomicSwc": 1,
        "=": 1
      },
      "name": "providesCallApi",
      "body": "this_.getOwnerAtomicSwc().internalBehavior.runnable.serverCallPoint\n\t\t\t\t\t->exists(operation = this_)",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 4,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "ar4x::m2::SwcInternalBehavior::runnable",
        "ar4x::m2::ServerCallPoint::operation",
        "ar4x::m2::AtomicSwComponentType::internalBehavior",
        "ar4x::m2::RunnableEntity::serverCallPoint"
      ]
    }],
    "properties": []
  },
  {
    "name": "IocCommunication",
    "expressions": [],
    "properties": ["Rte"]
  },
  {
    "name": "AlignmentTypeEx",
    "expressions": [],
    "properties": ["VariableDataInstanceInSwcEx"]
  },
  {
    "name": "ImplementationDataTypeEx",
    "expressions": [
      {
        "operations": {
          "oclIsUndefined": 1,
          "providesEnumConstant": 1,
          "getCompuMethod": 1
        },
        "name": "providesEnumConstant",
        "body": "let compuMethod : m2::CompuMethod = getCompuMethod(this_, applicationDataType)\n\t\t\t\tin if compuMethod.oclIsUndefined()\n\t\t\t\t\tthen false\n\t\t\t\t\telse compuMethodEx.providesEnumConstant(compuMethod)\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 6,
          "LetExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 1,
          "BooleanLiteralExpImpl": 1
        },
        "properties": ["rte::ex::ImplementationDataTypeEx::compuMethodEx"]
      },
      {
        "operations": {
          "not": 2,
          "oclIsUndefined": 2
        },
        "name": "getCompuMethod",
        "body": "if not applicationDataType.compuMethod.oclIsUndefined()\n\t\t\t\t\t\tthen applicationDataType.compuMethod\n\t\t\t\t\telse if not this_.compuMethod.oclIsUndefined()\n\t\t\t\t\t\tthen this_.compuMethod\n\t\t\t\t\telse null\n\t\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 4,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": ["ar4x::m2::AutosarDataType::compuMethod"]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 2
        },
        "name": "providesTypeDefinition",
        "body": "if this_.baseType.oclIsUndefined()\n\t\t\t\t\t then true\n\t\t\t\t\telse not this_.baseType.nativeDeclaration.oclIsUndefined()\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 3,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 3,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "ar4x::m2::ImplementationDataType::baseType",
          "ar4x::m2::SwBaseType::nativeDeclaration"
        ]
      }
    ],
    "properties": ["compuMethodEx"]
  },
  {
    "name": "Receiver",
    "expressions": [
      {
        "operations": {
          "size": 1,
          "getSenders": 1,
          ">": 1
        },
        "name": "hasMultipleSenders",
        "body": "getSenders()->size() > 1",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "getInternalEcuSenders": 1,
          "asOrderedSet": 1
        },
        "name": "getInternalEcuSenders",
        "body": "self.receiveInteraction.sendInteraction.getInternalEcuSenders()\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "rte::interaction::ReceiveInteraction::sendInteraction",
          "rte::interaction::Receiver::receiveInteraction"
        ]
      },
      {
        "operations": {
          "asOrderedSet": 1,
          "getExternalEcuSenders": 1
        },
        "name": "getExternalEcuSenders",
        "body": "self.receiveInteraction.sendInteraction.getExternalEcuSenders()\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "rte::interaction::ReceiveInteraction::sendInteraction",
          "rte::interaction::Receiver::receiveInteraction"
        ]
      },
      {
        "operations": {"asOrderedSet": 1},
        "name": "getSenders",
        "body": "self.receiveInteraction.sendInteraction.sender\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "rte::interaction::SendInteraction::sender",
          "rte::interaction::ReceiveInteraction::sendInteraction",
          "rte::interaction::Receiver::receiveInteraction"
        ]
      }
    ],
    "properties": ["receiveInteraction"]
  },
  {
    "name": "SendOperation",
    "expressions": [],
    "properties": [
      "isWriteApi",
      "sendStatus",
      "WriteApi",
      "ComRxCallback",
      "sendValue",
      "returnVariable",
      "excludeOperation",
      "InvalidateApi",
      "ComRxTOutCallback",
      "ComInvCallback",
      "SendApi"
    ]
  },
  {
    "name": "SchmLifecycleApiFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "schmLifecycleApi",
      "body": "self.function.oclAsType(SchmLifecycleApi)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "schmLifecycleApi",
      "RteSource",
      "RteLifecycleHeader"
    ]
  },
  {
    "name": "OsTaskEx",
    "expressions": [{
      "operations": {"oclIsUndefined": 1},
      "name": "getOwnerPartition",
      "body": "let partition : ecuc::EcucPartition = this_.ownerApplication.osAppEcucPartition->any(true)\n\t\t\t\tin if partition.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse partition\n\t\t\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "VariableExpImpl": 4,
        "OperationCallExpImpl": 1,
        "LetExpImpl": 1,
        "NullLiteralExpImpl": 1,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 2,
        "BooleanLiteralExpImpl": 1
      },
      "properties": [
        "ar4x::ecuc::OsApplication::osAppEcucPartition",
        "ar4x::ecuc::OsTask::ownerApplication"
      ]
    }],
    "properties": []
  },
  {
    "name": "TrustedFunctionFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "trustedFunction",
      "body": "self.function.oclAsType(TrustedFunction)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "trustedFunction",
      "RteInternalHeader",
      "RteSource"
    ]
  },
  {
    "name": "TimeValueEx",
    "expressions": [],
    "properties": []
  },
  {
    "name": "VariableDataInstanceInCompositionEx",
    "expressions": [
      {
        "operations": {
          "or": 1,
          "getInitializationStrategy": 1,
          "=": 2
        },
        "name": "initAtDeclaration",
        "body": "let initStrategy : ecuc::RteInitializationStrategyEnum =\n\t\t\t\t\tgetInitializationStrategy(this_.prototype)\n\t\t\t\tin initStrategy = ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_DATA_DECLARATION or\n\t\t\t\t\tinitStrategy =\n\t\t\t\t\tecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_DATA_DECLARATION_AND_PARTITION_RESTART",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 4,
          "LetExpImpl": 1,
          "EnumLiteralExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::instance::VariableDataInstanceInComposition::prototype"]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "getSwAddrMethod": 1
        },
        "name": "getSectionInitializationPolicy",
        "body": "let swAddrMethod : m2::SwAddrMethod = this_.getSwAddrMethod()\n\t\t\t\tin if swAddrMethod.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swAddrMethod.sectionInitializationPolicy\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::SwAddrMethod::sectionInitializationPolicy"]
      },
      {
        "operations": {
          "or": 1,
          "getInitializationStrategy": 1,
          "=": 2
        },
        "name": "initAtStart",
        "body": "let initStrategy : ecuc::RteInitializationStrategyEnum =\n\t\t\t\t\tgetInitializationStrategy(this_.prototype)\n\t\t\t\tin initStrategy = ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_RTE_START or initStrategy =\n\t\t\t\t\tecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_RTE_START_AND_PARTITION_RESTART",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "LetExpImpl": 1,
          "EnumLiteralExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::instance::VariableDataInstanceInComposition::prototype"]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "getSectionInitializationPolicy": 1,
          "allInstances": 1,
          "includes": 1
        },
        "name": "getInitializationStrategy",
        "body": "let behavior : ar4x::ecuc::RteInitializationBehavior = ecuc::RteInitializationBehavior.allInstances()\n\t\t\t\t\t->select(rteSectionInitializationPolicy\n\t\t\t\t\t\t->includes(getSectionInitializationPolicy(this_)))\n\t\t\t\t\t->any(true)\n\t\t\t\tin if behavior.oclIsUndefined()\n\t\t\t\t\tthen ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_RTE_START\n\t\t\t\t\telse behavior.rteInitializationStrategy\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 4,
          "LetExpImpl": 1,
          "EnumLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "ar4x::ecuc::RteInitializationBehavior::rteSectionInitializationPolicy",
          "ar4x::ecuc::RteInitializationBehavior::rteInitializationStrategy"
        ]
      },
      {
        "operations": {
          "or": 1,
          "getInitializationStrategy": 1,
          "=": 2
        },
        "name": "initAtPartitionRestart",
        "body": "let initStrategy : ecuc::RteInitializationStrategyEnum =\n\t\t\t\t\tgetInitializationStrategy(this_.prototype)\n\t\t\t\tin initStrategy = ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_DATA_DECLARATION_AND_PARTITION_RESTART or\n\t\t\t\t\tinitStrategy = ecuc::RteInitializationStrategyEnum::RTE_INITIALIZATION_STRATEGY_AT_RTE_START_AND_PARTITION_RESTART",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 4,
          "LetExpImpl": 1,
          "EnumLiteralExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::instance::VariableDataInstanceInComposition::prototype"]
      },
      {
        "operations": {
          "getInitValue": 2,
          "not": 1,
          "oclIsUndefined": 2,
          "oclIsKindOf": 1,
          "oclAsType": 2
        },
        "name": "getSenderInitValue",
        "body": "if this_.prototype.oclIsKindOf(instance::PVariableDataInstanceInSwc)\n\t\t\t\t\tthen this_.prototype.oclAsType(instance::PVariableDataInstanceInSwc).getInitValue()\n\t\t\t\t\telse\n\t\t\t\t\tlet initValue : m2::ValueSpecification =\n\t\t\t\t\t\tthis_.providerConnection.provider.prototype.oclAsType(instance::PVariableDataInstanceInSwc).getInitValue()\n\t\t\t\t\t\t->any(not oclIsUndefined())\n\t\t\t\t\tin if initValue.oclIsUndefined()\n\t\t\t\t\t\tthen null\n\t\t\t\t\t\telse initValue\n\t\t\t\t\t\tendif\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 5,
          "OperationCallExpImpl": 8,
          "VariableExpImpl": 10,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 3,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "ar4x::instance::AssemblyDataInstanceConnector::provider",
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "ar4x::instance::VariableDataInstanceInComposition::providerConnection"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "getSenderSwAddrMethod": 1,
          "getReceiverSwAddrMethod": 1
        },
        "name": "getSwAddrMethod",
        "body": "let receiverSwAddrMethod : m2::SwAddrMethod = getReceiverSwAddrMethod(this_) , senderSwAddrMethod :\n\t\t\t\t\tm2::SwAddrMethod = getSenderSwAddrMethod(this_)\n\t\t\t\tin if not senderSwAddrMethod.oclIsUndefined()\n\t\t\t\t\tthen senderSwAddrMethod\n\t\t\t\t\telse receiverSwAddrMethod\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 7,
          "LetExpImpl": 2,
          "IfExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "getInitValue": 2,
          "not": 1,
          "oclIsUndefined": 2,
          "oclIsKindOf": 1,
          "oclAsType": 2
        },
        "name": "getReceiverInitValue",
        "body": "if this_.prototype.oclIsKindOf(instance::RVariableDataInstanceInSwc)\n\t\t\t\t\tthen this_.prototype.oclAsType(instance::RVariableDataInstanceInSwc).getInitValue()\n\t\t\t\t\telse\n\t\t\t\t\tlet initValue : m2::ValueSpecification =\n\t\t\t\t\t\tthis_.requesterConnection.requester.prototype.oclAsType(instance::RVariableDataInstanceInSwc).getInitValue()\n\t\t\t\t\t\t->any(not oclIsUndefined())\n\t\t\t\t\tin if initValue.oclIsUndefined()\n\t\t\t\t\t\tthen null\n\t\t\t\t\t\telse initValue\n\t\t\t\t\t\tendif\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 5,
          "OperationCallExpImpl": 8,
          "VariableExpImpl": 10,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 3,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "ar4x::instance::VariableDataInstanceInComposition::requesterConnection",
          "ar4x::instance::AssemblyDataInstanceConnector::requester"
        ]
      },
      {
        "operations": {
          "getReceiverInitValue": 1,
          "not": 1,
          "oclIsUndefined": 1,
          "getSenderInitValue": 1
        },
        "name": "getInitValue",
        "body": "let receiverInitValue : m2::ValueSpecification = getReceiverInitValue(this_) , senderInitValue :\n\t\t\t\t\tm2::ValueSpecification = getSenderInitValue(this_)\n\t\t\t\tin if not receiverInitValue.oclIsUndefined()\n\t\t\t\t\tthen receiverInitValue\n\t\t\t\t\telse senderInitValue\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 7,
          "LetExpImpl": 2,
          "IfExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 2,
          "oclIsKindOf": 1,
          "getSwAddrMethod": 2
        },
        "name": "getReceiverSwAddrMethod",
        "body": "if this_.prototype.oclIsKindOf(instance::RVariableDataInstanceInSwc)\n\t\t\t\t\tthen this_.prototype.getSwAddrMethod()\n\t\t\t\t\telse\n\t\t\t\t\tlet swAddrMethod : m2::SwAddrMethod =\n\t\t\t\t\t\tthis_.requesterConnection.requester.prototype.getSwAddrMethod()\n\t\t\t\t\t\t->any(not oclIsUndefined())\n\t\t\t\t\tin if swAddrMethod.oclIsUndefined()\n\t\t\t\t\t\tthen null\n\t\t\t\t\t\telse swAddrMethod\n\t\t\t\t\t\tendif\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 9,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "ar4x::instance::VariableDataInstanceInComposition::requesterConnection",
          "ar4x::instance::AssemblyDataInstanceConnector::requester"
        ]
      },
      {
        "operations": {
          "getInitValue": 2,
          "equalsInitValue": 1,
          "or": 1,
          "oclIsUndefined": 4,
          "and": 1
        },
        "name": "equalsInitValue",
        "body": "\n\t\t\t\tlet initValue1 : m2::ValueSpecification = getInitValue(v1),\n\t\t\t\t\tinitValue2 : m2::ValueSpecification = getInitValue(v2)\n\t\t\t\tin\n\t\t\t\tif initValue1.oclIsUndefined() and initValue2.oclIsUndefined() then\n\t\t\t\t\ttrue\n\t\t\t\telse if initValue1.oclIsUndefined() or initValue2.oclIsUndefined() then\n\t\t\t\t\tfalse\n\t\t\t\telse\n\t\t\t\t\tvalueSpecificationEx.equalsInitValue(initValue1, initValue2)\n\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 9,
          "VariableExpImpl": 11,
          "LetExpImpl": 2,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 1,
          "BooleanLiteralExpImpl": 2
        },
        "properties": ["rte::ex::VariableDataInstanceInCompositionEx::valueSpecificationEx"]
      },
      {
        "operations": {
          "getInitValue": 1,
          "getValueSpecAsText": 1,
          "oclIsUndefined": 1
        },
        "name": "getInitValueAsText",
        "body": "let initValue : m2::ValueSpecification = getInitValue(this_)\n\t\t\t\tin if initValue.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse valueSpecificationEx.getValueSpecAsText(initValue)\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 3,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::ex::VariableDataInstanceInCompositionEx::valueSpecificationEx"]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "or": 1,
          "isEmpty": 1,
          "first": 1
        },
        "name": "getPartition",
        "body": "let swComponentInstance : instance::SwComponentInstanceInSystem = this_.parent.contextComponent.instance\n\t\t\t\t\t->first()\n\t\t\t\tin if swComponentInstance.oclIsUndefined() or swComponentInstance.ownerPartition->isEmpty()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swComponentInstance.ownerPartition->any(true)\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 4,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 5,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "ar4x::m2::SwComponentPrototype::instance",
          "ar4x::instance::VariableDataInstanceInComposition::parent",
          "ar4x::instance::PortInstanceInComposition::contextComponent",
          "ar4x::instance::SwComponentInstanceInSystem::ownerPartition"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 2,
          "oclIsKindOf": 1,
          "getSwAddrMethod": 2
        },
        "name": "getSenderSwAddrMethod",
        "body": "if this_.prototype.oclIsKindOf(instance::PVariableDataInstanceInSwc)\n\t\t\t\t\tthen this_.prototype.getSwAddrMethod()\n\t\t\t\t\telse\n\t\t\t\t\tlet swAddrMethod : m2::SwAddrMethod =\n\t\t\t\t\t\tthis_.providerConnection.provider.prototype.getSwAddrMethod()\n\t\t\t\t\t\t->any(not oclIsUndefined())\n\t\t\t\t\tin if swAddrMethod.oclIsUndefined()\n\t\t\t\t\t\tthen null\n\t\t\t\t\t\telse swAddrMethod\n\t\t\t\t\t\tendif\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "VariableExpImpl": 9,
          "OperationCallExpImpl": 6,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "ar4x::instance::AssemblyDataInstanceConnector::provider",
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "ar4x::instance::VariableDataInstanceInComposition::providerConnection"
        ]
      }
    ],
    "properties": [
      "AssemblyDataInstanceConnectorEx",
      "ExternalEcuSenderEx",
      "valueSpecificationEx"
    ]
  },
  {
    "name": "InvalidateApi",
    "expressions": [],
    "properties": [
      "operation",
      "activationOperation",
      "activationFlag",
      "tAckStatus"
    ]
  },
  {
    "name": "ComCallbackFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "comCallback",
      "body": "self.function.oclAsType(ComCallback)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "comCallback",
      "RteCallbackHeader",
      "RteSource"
    ]
  },
  {
    "name": "RedefinitionArrayType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsBackgroundTaskActivationExecutableTaskBody",
    "expressions": [],
    "properties": ["operation"]
  },
  {
    "name": "SendImplementation",
    "expressions": [{
      "operations": {
        "isEventSemantics": 1,
        "getInternalEcuSenders": 1
      },
      "name": "isEventSemantics",
      "body": "self.parent.getInternalEcuSenders()->any(true).isEventSemantics()",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 1,
        "BooleanLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::interaction::SendImplementation::parent"]
    }],
    "properties": ["parent"]
  },
  {
    "name": "VariableInitializeOperation",
    "expressions": [],
    "properties": [
      "initVariable",
      "excludeOperation"
    ]
  },
  {
    "name": "SchmExitApi",
    "expressions": [],
    "properties": [
      "isNoneExclude",
      "operation"
    ]
  },
  {
    "name": "IocWriteApi",
    "expressions": [],
    "properties": [
      "parent",
      "IocNonqueuedSendOperation"
    ]
  },
  {
    "name": "ComInvCallback",
    "expressions": [],
    "properties": [
      "filterResultVariable",
      "operation",
      "activationFlag",
      "activationOperation"
    ]
  },
  {
    "name": "RteQueuedSendTrustedFunctionParamType",
    "expressions": [],
    "properties": ["Rte"]
  },
  {
    "name": "ModuleRoot",
    "expressions": [],
    "properties": [
      "rte",
      "rteModule"
    ]
  },
  {
    "name": "TrustedFunctionRteSendImplementation",
    "expressions": [],
    "properties": [
      "invalidateOsTrustedFunction",
      "writeOsTrustedFunction"
    ]
  },
  {
    "name": "BswMemoryMappingHeader",
    "expressions": [],
    "properties": [
      "memoryMapping",
      "RteModule"
    ]
  },
  {
    "name": "RteSendImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Operation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "InterPartitionTimeoutOperation",
    "expressions": [],
    "properties": [
      "PartitionRestartingApi",
      "timeoutVariable",
      "PartitionTerminatedApi",
      "excludeOperation"
    ]
  },
  {
    "name": "Swc",
    "expressions": [],
    "properties": [
      "srImplInitValueConstant",
      "apiUpperLowerLimitConstant",
      "irvBufferVariableSet",
      "irvBufferInitValueConstant",
      "parent",
      "dependentExternalRunnableEntity",
      "srFilterConstant",
      "csPortArgValueConstant",
      "swcMemoryMapping",
      "dependentRunnableEntity",
      "apiEnumConstant",
      "rteApi",
      "srImplInvalidValueConstant",
      "csApiApplicationErrorConstant",
      "csPortArgValueVariable",
      "srApiInitValueConstant"
    ]
  },
  {
    "name": "ExecutableEntityFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "executableEntity",
      "body": "self.function.oclAsType(ExecutableEntity)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "executableEntity",
      "RteSource",
      "ModuleInterlinkHeader",
      "RteApplicationHeader",
      "RteInternalHeader"
    ]
  },
  {
    "name": "ComSendSignalTrustedFunction",
    "expressions": [],
    "properties": [
      "Rte",
      "signalGroupSymbolName",
      "isGroup",
      "TrustedFunctionComSendOperation"
    ]
  },
  {
    "name": "Boolean",
    "expressions": [],
    "properties": []
  },
  {
    "name": "BswSchedulableEntityEx",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "asSet": 1
        },
        "name": "getMappedTasks",
        "body": "this_.event.config->select(not rteBswMappedToTask.oclIsUndefined()).rteBswMappedToTask->asSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::BswEvent::config",
          "ar4x::ecuc::RteBswEventToTaskMapping::rteBswMappedToTask",
          "ar4x::m2::BswSchedulableEntity::event"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "getModeManagerBswSchedulableEntities": 1,
          "oclIsKindOf": 1,
          "includes": 1,
          "asSet": 4,
          "oclAsType": 1,
          "getConnectedProvidedModePrototypes": 1
        },
        "name": "getCallerBswSchedulableEntitiesByMode",
        "body": "let sourceEvent : Set(ar4x::m2::BswModeSwitchEvent) = this_.event->select(oclIsKindOf(ar4x::m2::BswModeSwitchEvent)).oclAsType(ar4x::m2::BswModeSwitchEvent)->select(config->exists(rteBswMappedToTask.oclIsUndefined()))->asSet(),\n\t\t\t\t\t\teventSourceRequiredModePrototypes : Set(ar4x::m2::ModeDeclarationGroupPrototype) = sourceEvent.modeIref.contextModeDeclarationGroup->select(m | this_.accessedModeGroup->includes(m))->asSet(),\n\t\t\t\t\t\teventSourceProvidedModePrototypes : Set(ar4x::m2::ModeDeclarationGroupPrototype) = eventSourceRequiredModePrototypes->collect(m | modeDeclarationGroupPrototypeEx.getConnectedProvidedModePrototypes(m))->asSet()\n\t\t\t\t\t\tin eventSourceProvidedModePrototypes->collect(m | modeDeclarationGroupPrototypeEx.getModeManagerBswSchedulableEntities(m))->asSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 9,
          "VariableExpImpl": 16,
          "OperationCallExpImpl": 10,
          "LetExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 8
        },
        "properties": [
          "rte::ex::BswSchedulableEntityEx::modeDeclarationGroupPrototypeEx",
          "ar4x::m2::BswModuleEntity::accessedModeGroup",
          "ar4x::m2::BswEvent::config",
          "ar4x::m2::BswModeSwitchEvent::modeIref",
          "ar4x::ecuc::RteBswEventToTaskMapping::rteBswMappedToTask",
          "ar4x::m2::ModeInBswModuleDescriptionInstanceRef::contextModeDeclarationGroup",
          "ar4x::m2::BswSchedulableEntity::event"
        ]
      },
      {
        "operations": {"getCallerBswSchedulableEntitiesByMode": 1},
        "name": "getCallerBswSchedulableEntities",
        "body": "getCallerBswSchedulableEntitiesByMode(this_)",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "getMappedTasks": 1,
          "getCallRootBswSchedulableEntities": 1,
          "allInstances": 1,
          "asSet": 1,
          "=": 1
        },
        "name": "getUsingPartition",
        "body": "if ar4x::m2::BswImplementation.allInstances()->exists(behavior = this_.parent) then\n\t\t\t\t\t\t\tgetCallRootBswSchedulableEntities(this_)->collect(m | getMappedTasks(m)).ownerApplication.osAppEcucPartition->asSet()\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tSet{}\n\t\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "VariableExpImpl": 8,
          "OperationCallExpImpl": 5,
          "TypeExpImpl": 1,
          "CollectionLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::ecuc::OsApplication::osAppEcucPartition",
          "ar4x::ecuc::OsTask::ownerApplication",
          "ar4x::m2::BswImplementation::behavior",
          "ar4x::m2::BswModuleEntity::parent"
        ]
      }
    ],
    "properties": [
      "modeDeclarationGroupPrototypeEx",
      "ExclusiveAreaEx",
      "ModeDeclarationGroupPrototypeEx"
    ]
  },
  {
    "name": "ComSignalApiWrapperFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "comSignalApiWrapper",
      "body": "self.function.oclAsType(ComSignalApiWrapper)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "RteInternalHeader",
      "comSignalApiWrapper",
      "RteSource"
    ]
  },
  {
    "name": "TaskBodyFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "taskBody",
      "body": "self.function.oclAsType(TaskBody)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "taskBody",
      "RteSource"
    ]
  },
  {
    "name": "ModeDeclarationGroupPrototypeEx",
    "expressions": [
      {
        "operations": {
          "getModeUserBswSchedulableEntities": 1,
          "getUsingPartition": 1,
          "asOrderedSet": 1
        },
        "name": "getUsingPartitionForUser",
        "body": "\n\t\t\t\t\tgetModeUserBswSchedulableEntities(this_)\n\t\t\t\t\t->collect(m | bswSchedulableEntityEx.getUsingPartition(m))->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::ex::ModeDeclarationGroupPrototypeEx::bswSchedulableEntityEx"]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "includes": 1,
          "getEnableInternalBehavior": 1,
          "getParentBswModuleDescription": 1
        },
        "name": "getModeManagerBswSchedulableEntities",
        "body": "let enableInternalBehavior : ar4x::m2::BswInternalBehavior = getParentBswModuleDescription(this_).getEnableInternalBehavior()\n\t\t\t\t\t\tin if not enableInternalBehavior.oclIsUndefined() then\n\t\t\t\t\t\t\t\tenableInternalBehavior.bswSchedulableEntity->select(managedModeGroup->includes(this_))\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tSet{}\n\t\t\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 5,
          "LetExpImpl": 1,
          "CollectionLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::m2::BswModuleEntity::managedModeGroup",
          "ar4x::m2::BswInternalBehavior::bswSchedulableEntity"
        ]
      },
      {
        "operations": {
          "allInstances": 1,
          "asSet": 1,
          "=": 1
        },
        "name": "getConnectedProvidedModePrototypes",
        "body": "ar4x::ecuc::RteBswRequiredModeGroupConnection.allInstances()->select(rteBswRequiredModeGroup = this_).rteBswProvidedModeGroup->asSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::ecuc::RteBswRequiredModeGroupConnection::rteBswRequiredModeGroup",
          "ar4x::ecuc::RteBswRequiredModeGroupConnection::rteBswProvidedModeGroup"
        ]
      },
      {
        "operations": {
          "not": 2,
          "oclIsUndefined": 2,
          "allInstances": 2,
          "includes": 2
        },
        "name": "getParentBswModuleDescription",
        "body": "let providerBswm : ar4x::m2::BswModuleDescription = ar4x::m2::BswModuleDescription.allInstances()->select(providedModeGroup->includes(this_))->any(true),\n\t\t\t\t\t\trequirerBswm : ar4x::m2::BswModuleDescription = ar4x::m2::BswModuleDescription.allInstances()->select(requiredModeGroup->includes(this_))->any(true)\n\t\t\t\t\t\tin if not providerBswm.oclIsUndefined() then\n\t\t\t\t\t\t\t\tproviderBswm\n\t\t\t\t\t\t\telse if not requirerBswm.oclIsUndefined() then\n\t\t\t\t\t\t\t\trequirerBswm\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "VariableExpImpl": 8,
          "OperationCallExpImpl": 8,
          "LetExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 2,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 2,
          "BooleanLiteralExpImpl": 2
        },
        "properties": [
          "ar4x::m2::BswModuleDescription::providedModeGroup",
          "ar4x::m2::BswModuleDescription::requiredModeGroup"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "includes": 1,
          "getParentBswModuleDescription": 1,
          "getEnableInternalBehavior": 1
        },
        "name": "getModeUserBswSchedulableEntities",
        "body": "let enableInternalBehavior : ar4x::m2::BswInternalBehavior = getParentBswModuleDescription(this_).getEnableInternalBehavior()\n\t\t\t\t\t\tin if not enableInternalBehavior.oclIsUndefined() then\n\t\t\t\t\t\t\t\tenableInternalBehavior.bswSchedulableEntity->select(accessedModeGroup->includes(this_))\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tSet{}\n\t\t\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 6,
          "LetExpImpl": 1,
          "CollectionLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::m2::BswModuleEntity::accessedModeGroup",
          "ar4x::m2::BswInternalBehavior::bswSchedulableEntity"
        ]
      },
      {
        "operations": {
          "asOrderedSet": 1,
          "union": 1,
          "getUsingPartitionForUser": 1,
          "getUsingPartitionForManager": 1
        },
        "name": "getUsingPartition",
        "body": "\n\t\t\t\t\tgetUsingPartitionForManager(this_)->union(getUsingPartitionForUser(this_))->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4
        },
        "properties": []
      },
      {
        "operations": {
          "getModeManagerBswSchedulableEntities": 1,
          "getUsingPartition": 1,
          "asOrderedSet": 1
        },
        "name": "getUsingPartitionForManager",
        "body": "\n\t\t\t\t\tgetModeManagerBswSchedulableEntities(this_)\n\t\t\t\t\t->collect(m | bswSchedulableEntityEx.getUsingPartition(m))->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 4,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::ex::ModeDeclarationGroupPrototypeEx::bswSchedulableEntityEx"]
      }
    ],
    "properties": [
      "bswSchedulableEntityEx",
      "BswSchedulableEntityEx"
    ]
  },
  {
    "name": "TimingTriggeringEntityStartCondition",
    "expressions": [],
    "properties": [
      "period",
      "EntityStartInteraction"
    ]
  },
  {
    "name": "ComSendSignalProxyEntity",
    "expressions": [],
    "properties": ["operation"]
  },
  {
    "name": "SinglecoreSchmInitApi",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteEnterApi",
    "expressions": [],
    "properties": [
      "isNoneExclude",
      "operation"
    ]
  },
  {
    "name": "Core",
    "expressions": [],
    "properties": [
      "isMasterCore",
      "schmCoreInitApiImpl",
      "rteCoreStartApiImpl",
      "coreId",
      "partition",
      "Rte"
    ]
  },
  {
    "name": "RteTypeHeader",
    "expressions": [],
    "properties": [
      "rteType",
      "rteTypeConstant",
      "RteModule",
      "providesSignalGroupTransmission"
    ]
  },
  {
    "name": "BlackboxHeader",
    "expressions": [],
    "properties": []
  },
  {
    "name": "VariableMember",
    "expressions": [],
    "properties": ["parent"]
  },
  {
    "name": "StartOffsetCountupOperation",
    "expressions": [],
    "properties": [
      "ContextActivationOperation",
      "counterVariable",
      "maxConstant"
    ]
  },
  {
    "name": "SchmCoreInitApiImpl",
    "expressions": [],
    "properties": [
      "MulticoreSchmInitApi",
      "RteInternalHeader",
      "parent"
    ]
  },
  {
    "name": "RteLifecycleApiFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "rteLifecycleApi",
      "body": "self.function.oclAsType(RteLifecycleApi)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "RteLifecycleHeader",
      "rteLifecycleApi",
      "RteSource"
    ]
  },
  {
    "name": "SignednessEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ExecutableStartOperation",
    "expressions": [],
    "properties": [
      "rieaExcludeOperation",
      "disabledInMode",
      "startExecutable",
      "ContextActivationOperation"
    ]
  },
  {
    "name": "CompuMethodEx",
    "expressions": [{
      "operations": {
        "not": 1,
        "oclIsUndefined": 1,
        "and": 1,
        "includes": 1
      },
      "name": "providesEnumConstant",
      "body": "Set{'TEXTTABLE', 'SCALE_LINEAR_AND_TEXTTABLE', 'SCALE_RATIONAL_AND_TEXTTABLE'}\n\t\t\t\t\t->includes(this_.category) and not this_.compuInternalToPhys.oclIsUndefined()",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 4,
        "StringLiteralExpImpl": 3,
        "CollectionLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "ar4x::m2::Identifiable::category",
        "ar4x::m2::CompuMethod::compuInternalToPhys"
      ]
    }],
    "properties": ["ImplementationDataTypeEx"]
  },
  {
    "name": "BlackboxType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ComReceiveSignalApi",
    "expressions": [],
    "properties": [
      "ComRxTOutCallback",
      "ComRxCallback",
      "ComReadOperation"
    ]
  },
  {
    "name": "RedefinitionUnionType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Interaction",
    "expressions": [],
    "properties": ["InteractionRoot"]
  },
  {
    "name": "ComProxyFunctionTableFileContentsGroup",
    "expressions": [],
    "properties": [
      "RteInternalHeader",
      "srWriteProxyName"
    ]
  },
  {
    "name": "RteBufferNonqueuedReadOperation",
    "expressions": [],
    "properties": ["accessVariable"]
  },
  {
    "name": "TfCallApi",
    "expressions": [],
    "properties": [
      "csTfParamTypeName",
      "needsCheckArg",
      "csTfArgcConstantName",
      "csTfOpidConstantName",
      "csTfName"
    ]
  },
  {
    "name": "RteUsedOsActivation",
    "expressions": [],
    "properties": ["EntityStarter"]
  },
  {
    "name": "ReceiverEx",
    "expressions": [],
    "properties": []
  },
  {
    "name": "IocEmptyQueueApi",
    "expressions": [],
    "properties": ["IocQueuedCommunication"]
  },
  {
    "name": "UnionType",
    "expressions": [],
    "properties": ["member"]
  },
  {
    "name": "SwcMemoryMapping",
    "expressions": [],
    "properties": [
      "SwcMemoryMappingHeader",
      "Swc"
    ]
  },
  {
    "name": "ConstantMember",
    "expressions": [],
    "properties": ["parent"]
  },
  {
    "name": "OsInterruptBlockExcludeOperation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteInternalHeader",
    "expressions": [],
    "properties": [
      "trustedFunctionGroup",
      "dependentExecutableEntityGroup",
      "constant",
      "RteModule",
      "rteCoreStartApiImpl",
      "comProxyFunctionTableGroup",
      "schmCoreInitApiImpl",
      "bswSchedulableEntityGroup",
      "modeMachineInstance",
      "modeDeclarationGroup",
      "schmApiGroup",
      "globalVariableGroup",
      "modeType",
      "rteApiGroup",
      "comSignalApiWrapperGroup",
      "functionMacro",
      "RteModule"
    ]
  },
  {
    "name": "BswSchedulableEntityFileContentsGroup",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "bswSchedulableEntity",
      "body": "self.function.oclAsType(BswSchedulableEntity)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::FunctionFileContentsGroup::function"]
    }],
    "properties": [
      "RteInternalHeader",
      "RteSource",
      "bswSchedulableEntity"
    ]
  },
  {
    "name": "EcucPartitionEx",
    "expressions": [
      {
        "operations": {},
        "name": "providesRestartPartitionApi",
        "body": "this_.partitionCanBeRestarted",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::ecuc::EcucPartition::partitionCanBeRestarted"]
      },
      {
        "operations": {},
        "name": "providesPartitionRestartingApi",
        "body": "this_.partitionCanBeRestarted",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::ecuc::EcucPartition::partitionCanBeRestarted"]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "or": 1,
          "allInstances": 1,
          "=": 1,
          "getOwnerCore": 2
        },
        "name": "isInMasterCore",
        "body": "let osOs : ecuc::OsOS = ecuc::OsOS.allInstances()\n\t\t\t\t\t->any(true)\n\t\t\t\tin this_.getOwnerCore().oclIsUndefined() or osOs.osMasterCoreId = this_.getOwnerCore()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 3,
          "LetExpImpl": 1,
          "TypeExpImpl": 1,
          "BooleanLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::ecuc::OsOS::osMasterCoreId"]
      },
      {
        "operations": {
          "and": 1,
          "isInMasterCore": 1
        },
        "name": "isMasterBswPartition",
        "body": "isInMasterCore(this_) and this_.ecucPartitionBswModuleExecution",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::ecuc::EcucPartition::ecucPartitionBswModuleExecution"]
      }
    ],
    "properties": []
  },
  {
    "name": "RteApplicationHeader",
    "expressions": [],
    "properties": [
      "rteApiGroup",
      "dependentExecutableEntityGroup",
      "RteModule",
      "DeclarationsRteApiGroup",
      "sourceMacro",
      "hasInlineApi",
      "globalVariableGroup",
      "constant"
    ]
  },
  {
    "name": "ModeMachineInstance",
    "expressions": [],
    "properties": [
      "SchmSwitchApi",
      "SchmModeApi",
      "currentModeVariable",
      "PartedBswm",
      "DisabledInMode",
      "SchmInitApi",
      "requestModeQueue",
      "requestModeQueueType",
      "RteInternalHeader",
      "nextModeVariable",
      "initModeConstant"
    ]
  },
  {
    "name": "RteBufferQueuedReadOperation",
    "expressions": [],
    "properties": ["accessVariable"]
  },
  {
    "name": "VariableImplementation",
    "expressions": [],
    "properties": ["ownerPartition"]
  },
  {
    "name": "CsTfCalledRunnable",
    "expressions": [],
    "properties": [
      "startOperation",
      "CsTrustedFunction",
      "csTfOpidConstantName"
    ]
  },
  {
    "name": "ProxyComSendOperation",
    "expressions": [],
    "properties": [
      "type",
      "proxyFunctionIndexConstantName",
      "requestProxyIocApi",
      "valueProxyIocApi"
    ]
  },
  {
    "name": "LocalVariable",
    "expressions": [],
    "properties": [
      "initValueConstant",
      "IocSendOperation",
      "SendApi",
      "RteBufferWriteTrustedFunction",
      "ComSendOperation",
      "SendApi",
      "RteBufferNonqueuedSendOperation",
      "CsTrustedFunction",
      "InvalidateApi",
      "TrustedFunctionRteOperation",
      "WriteApi",
      "ComRxCallback",
      "ComRxTOutCallback",
      "SendApi",
      "parent",
      "RteBufferSendTrustedFunction",
      "SendApi",
      "TrustedFunctionRteOperation",
      "ReceiveApi",
      "ActivationOperation",
      "ComInvCallback",
      "ComInvCallback",
      "CallApi"
    ]
  },
  {
    "name": "OsTaskActivateEntityStarter",
    "expressions": [],
    "properties": ["sourceOsTask"]
  },
  {
    "name": "ExcludeOperation",
    "expressions": [],
    "properties": [
      "SchmEnterApi",
      "InterPartitionTimeoutOperation",
      "SchmExitApi",
      "IrvReadOperation",
      "VariableInitializeOperation",
      "RteEnterApi",
      "IrvWriteOperation",
      "ReadOperation",
      "RteExitApi",
      "SendOperation",
      "ExecutableStartOperation"
    ]
  },
  {
    "name": "StructType",
    "expressions": [],
    "properties": ["member"]
  },
  {
    "name": "ServerRunnableStartOperation",
    "expressions": [{
      "operations": {"oclAsType": 1},
      "name": "startServerRunnable",
      "body": "self.startExecutable.oclAsType(RunnableEntity)",
      "type": "PropertyImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rte::module::ExecutableStartOperation::startExecutable"]
    }],
    "properties": [
      "CallApi",
      "CsTfCalledRunnable",
      "startServerRunnable"
    ]
  },
  {
    "name": "RteBufferSendTrustedFunction",
    "expressions": [],
    "properties": [
      "operation",
      "TrustedFunctionRteBufferSendSendOperation",
      "dataVariable"
    ]
  },
  {
    "name": "NonqueuedSenderComSpecEx",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "isForVALUE": 1,
        "oclIsTypeOf": 1,
        "=": 6,
        "oclAsType": 1
      },
      "name": "hasValidInitValue",
      "body": "\n\t\t\t\tif this_.initValue.oclIsUndefined() then\n\t\t\t\t\tfalse\n\t\t\t\telse if this_.dataElement.type.oclIsTypeOf(ar4x::m2::ImplementationDataType) then\n\t\t\t\t\tlet type : ar4x::m2::ImplementationDataType = this_.dataElement.type.oclAsType(ar4x::m2::ImplementationDataType)\n\t\t\t\t\tin\n\t\t\t\t\tif type.category = 'VALUE' then\n\t\t\t\t\t\tValueSpecificationEx::isForVALUE(this_.initValue)\n\t\t\t\t\telse if type.category = 'ARRAY' then\n\t\t\t\t\t\ttrue\n\t\t\t\t\telse if type.category = 'STRUCTURE' then\n\t\t\t\t\t\ttrue\n\t\t\t\t\telse if type.category = 'UNION' then\n\t\t\t\t\t\ttrue\n\t\t\t\t\telse if type.category = 'DATA_REFERENCE' then\n\t\t\t\t\t\ttrue\n\t\t\t\t\telse if type.category = 'TYPE_REFERENCE' then\n\t\t\t\t\t\ttrue\n\t\t\t\t\telse\n\t\t\t\t\t\tfalse\n\t\t\t\t\tendif endif endif endif endif endif\n\t\t\t\telse\n\t\t\t\t\tfalse\n\t\t\t\tendif endif",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 10,
        "VariableExpImpl": 11,
        "LetExpImpl": 1,
        "StringLiteralExpImpl": 6,
        "TypeExpImpl": 2,
        "IfExpImpl": 8,
        "BooleanLiteralExpImpl": 8,
        "PropertyCallExpImpl": 12
      },
      "properties": [
        "ar4x::m2::DataPrototype::type",
        "ar4x::m2::Identifiable::category",
        "ar4x::m2::NonqueuedSenderComSpec::initValue",
        "ar4x::m2::SenderComSpec::dataElement"
      ]
    }],
    "properties": []
  },
  {
    "name": "ContextActivationOperation",
    "expressions": [],
    "properties": [
      "cycleCountupOperation",
      "executableStartOperation",
      "startOffsetCountupOperation"
    ]
  },
  {
    "name": "RteBufferQueuedSendOperation",
    "expressions": [],
    "properties": [
      "type",
      "accessVariable",
      "tempReturnVariable",
      "RteBufferSendTrustedFunction"
    ]
  },
  {
    "name": "ApplicationDataTypeEx",
    "expressions": [{
      "operations": {
        "not": 2,
        "oclIsUndefined": 2,
        "and": 1,
        "getUpperLimitValue": 1,
        "getLowerLimitValue": 1
      },
      "name": "providesUpperLowerLimitConstant",
      "body": "not this_.dataConstr.getUpperLimitValue().oclIsUndefined() and not\n\t\t\t\t\tthis_.dataConstr.getLowerLimitValue().oclIsUndefined()",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 7,
        "VariableExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": ["ar4x::m2::AutosarDataType::dataConstr"]
    }],
    "properties": []
  },
  {
    "name": "ComApi",
    "expressions": [],
    "properties": [
      "comSignalSymbolName",
      "Rte",
      "isSignalGroup"
    ]
  },
  {
    "name": "ModeDeclarationGroup",
    "expressions": [],
    "properties": [
      "RteInternalHeader",
      "Bswm",
      "ModuleInterlinkTypeHeader",
      "implementationDataType",
      "initModeConstant",
      "modeTransitionStatusConstant",
      "SchmModeApi",
      "modeType",
      "modeConstant"
    ]
  },
  {
    "name": "ImmediateComSendProxy",
    "expressions": [],
    "properties": ["osEvent"]
  },
  {
    "name": "ComReceiveSignalApiWrapper",
    "expressions": [],
    "properties": []
  },
  {
    "name": "HeaderFile",
    "expressions": [],
    "properties": [
      "includeHeader",
      "guardName",
      "SourceFile",
      "RteModule",
      "HeaderFile"
    ]
  },
  {
    "name": "IocReceiveGroupApi",
    "expressions": [],
    "properties": [
      "IocQueuedGroupCommunication",
      "comSendSignalSymbolName"
    ]
  },
  {
    "name": "ModuleReferrable",
    "expressions": [],
    "properties": ["id"]
  },
  {
    "name": "ParameterDirectionEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ComRxCallback",
    "expressions": [],
    "properties": [
      "operation",
      "activationFlag",
      "accessApi",
      "activationOperation",
      "dataVariable"
    ]
  },
  {
    "name": "RteUtilityHeader",
    "expressions": [],
    "properties": ["RteModule"]
  },
  {
    "name": "InteractionReferrable",
    "expressions": [],
    "properties": ["id"]
  },
  {
    "name": "RunnableEntityStartInteraction",
    "expressions": [],
    "properties": ["sourceEvent"]
  },
  {
    "name": "OsSpinlock",
    "expressions": [],
    "properties": ["GeneratedEcuConfiguration"]
  },
  {
    "name": "Value",
    "expressions": [],
    "properties": [
      "SendOperation",
      "SendOperation",
      "SchmApi",
      "CallApi",
      "RteApi"
    ]
  },
  {
    "name": "SendInteraction",
    "expressions": [
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1
        },
        "name": "getInternalEcuSenders",
        "body": "self.sender\n\t\t\t\t\t->select(oclIsKindOf(interaction::InternalEcuSender)).oclAsType(interaction::InternalEcuSender)\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::interaction::SendInteraction::sender"]
      },
      {
        "operations": {
          "asOrderedSet": 2,
          "notEmpty": 1,
          "symmetricDifference": 1
        },
        "name": "isInterPartition",
        "body": "let senderPartitions : Set(ecuc::EcucPartition) = self.sender.ownerPartition->asOrderedSet(),\n\t\t\t\t\t\treceiverPartitions : Set(ecuc::EcucPartition) = self.receiveInteraction.receiver.ownerPartition->asOrderedSet()\n\t\t\t\tin senderPartitions->symmetricDifference(receiverPartitions)->notEmpty()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 4,
          "LetExpImpl": 2,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "rte::interaction::ReceiveInteraction::receiver",
          "rte::interaction::InteractionEnd::ownerPartition",
          "rte::interaction::SendInteraction::receiveInteraction",
          "rte::interaction::SendInteraction::sender"
        ]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1
        },
        "name": "getExternalEcuSenders",
        "body": "self.sender\n\t\t\t\t\t->select(oclIsKindOf(interaction::ExternalEcuSender)).oclAsType(interaction::ExternalEcuSender)\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rte::interaction::SendInteraction::sender"]
      },
      {
        "operations": {
          "asOrderedSet": 2,
          "notEmpty": 1,
          "getOwnerCore": 2,
          "symmetricDifference": 1
        },
        "name": "isInterCore",
        "body": "let senderCores : Set(m2::Integer) = self.sender.getOwnerCore()->asOrderedSet(),\n\t\t\t\t\t\treceiverCores : Set(m2::Integer) = self.receiveInteraction.receiver.getOwnerCore()->asOrderedSet()\n\t\t\t\tin senderCores->symmetricDifference(receiverCores)->notEmpty()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 6,
          "LetExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "rte::interaction::ReceiveInteraction::receiver",
          "rte::interaction::SendInteraction::receiveInteraction",
          "rte::interaction::SendInteraction::sender"
        ]
      }
    ],
    "properties": [
      "receiveInteraction",
      "sender",
      "implementation"
    ]
  },
  {
    "name": "RteNonqueuedSendTrustedFunctionParamType",
    "expressions": [],
    "properties": ["Rte"]
  },
  {
    "name": "ComSendProxy",
    "expressions": [{
      "operations": {"asOrderedSet": 1},
      "name": "getRequesterOsApplications",
      "body": "self.interaction.requesterPartition.implOsApplication->asOrderedSet()",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "rte::interaction::ComSendProxy::interaction",
        "ar4x::ecuc::EcucPartition::implOsApplication",
        "rte::interaction::ComSendProxyInteraction::requesterPartition"
      ]
    }],
    "properties": ["interaction"]
  },
  {
    "name": "RteBufferVariableSet",
    "expressions": [],
    "properties": [
      "statusVariable",
      "InterPartitionTimeoutOperation",
      "Partition",
      "RteBufferNonqueuedReadOperation",
      "valueVariable",
      "complexVariable",
      "Rte",
      "Swc",
      "initValueVariable",
      "RteBufferNonqueuedSendOperation",
      "Partition",
      "IrvReadOperation",
      "IrvWriteOperation",
      "Partition"
    ]
  },
  {
    "name": "CsTrustedFunctionParamType",
    "expressions": [],
    "properties": ["Rte"]
  },
  {
    "name": "OsTaskEvent",
    "expressions": [],
    "properties": [
      "osEventId",
      "osTaskPriority",
      "SchmInitApi",
      "osTaskId",
      "OsTaskEventsTriggeredByMode"
    ]
  },
  {
    "name": "PlainEntityStartImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "GlobalVariableFileContentsGroup",
    "expressions": [],
    "properties": [
      "globalVariable",
      "memoryMapping",
      "RteInternalHeader",
      "ModuleInterlinkHeader",
      "RteApplicationHeader",
      "RteSource"
    ]
  },
  {
    "name": "RedefinitionStructType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "IocSendApi",
    "expressions": [],
    "properties": [
      "ProxyComSendOperation",
      "IocQueuedSendOperation",
      "IocQueuedCommunication",
      "ProxyComSendOperation"
    ]
  },
  {
    "name": "TrustedFunctionComSendImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "IrvWriteApi",
    "expressions": [],
    "properties": [
      "dataParam",
      "operation"
    ]
  },
  {
    "name": "Parameter",
    "expressions": [],
    "properties": [
      "hasConst",
      "direction",
      "SendApi",
      "ReadApi",
      "CallApi",
      "Function",
      "ExecutableEntity",
      "ReceiveApi",
      "WriteApi",
      "ComSignalApiWrapper",
      "IrvWriteApi",
      "IrvReadApi",
      "passType"
    ]
  },
  {
    "name": "ImmediateProxyComSendOperation",
    "expressions": [],
    "properties": ["activationApi"]
  },
  {
    "name": "VariableDataInstanceInSwcEx",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "isEventSemantics": 1
        },
        "name": "providesInitValueConstant",
        "body": "not this_.isEventSemantics()",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "not": 2,
          "oclIsUndefined": 2,
          "getMemoryMappingAlignment": 1,
          "toString": 1,
          "getSwAlignment": 1,
          "getBaseType": 1
        },
        "name": "getMemoryMappingAlignment",
        "body": "let swAlignment : String = this_.getSwAlignment(), baseType : m2::SwBaseType = this_.getBaseType() in\n\t\t\t\t\tif not swAlignment.oclIsUndefined()\n\t\t\t\t\t\tthen alignmentTypeEx.getMemoryMappingAlignment(swAlignment)\n\t\t\t\t\telse if not baseType.baseTypeSize.oclIsUndefined()\n\t\t\t\t\t\tthen baseType.baseTypeSize.toString()\n\t\t\t\t\t\telse null\n\t\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 8,
          "VariableExpImpl": 7,
          "LetExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "rte::ex::VariableDataInstanceInSwcEx::alignmentTypeEx",
          "ar4x::m2::SwBaseType::baseTypeSize"
        ]
      }
    ],
    "properties": ["alignmentTypeEx"]
  },
  {
    "name": "PrimitiveType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteApplicationTypeHeader",
    "expressions": [],
    "properties": [
      "RteModule",
      "constant"
    ]
  },
  {
    "name": "BswEvent",
    "expressions": [],
    "properties": ["BswSchedulableEntityStartInteraction"]
  },
  {
    "name": "ExecutableEntity",
    "expressions": [],
    "properties": [
      "ExecutableStartOperation",
      "roleParam",
      "isNoMock",
      "ExecutableEntityFileContentsGroup"
    ]
  },
  {
    "name": "InternalEcuReceiver",
    "expressions": [
      {
        "operations": {
          "isInvalidationEnabled": 1,
          "oclAsType": 1
        },
        "name": "isInvalidationEnabled",
        "body": "self.source.prototype.oclAsType(instance::RVariableDataInstanceInSwc).isInvalidationEnabled()",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "rte::interaction::InternalEcuReceiver::source",
          "ar4x::instance::VariableDataInstanceInComposition::prototype"
        ]
      },
      {
        "operations": {
          "getInvalidationPolicy": 1,
          "oclAsType": 1
        },
        "name": "getHandleInvalid",
        "body": "self.source.prototype.oclAsType(instance::RVariableDataInstanceInSwc).getInvalidationPolicy().handleInvalid",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "rte::interaction::InternalEcuReceiver::source",
          "ar4x::m2::InvalidationPolicy::handleInvalid"
        ]
      },
      {
        "operations": {
          "oclAsType": 1,
          "isFilterEnabled": 1
        },
        "name": "isFilterEnabled",
        "body": "self.source.prototype.oclAsType(instance::RVariableDataInstanceInSwc).isFilterEnabled()",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "rte::interaction::InternalEcuReceiver::source"
        ]
      },
      {
        "operations": {"isEventSemantics": 1},
        "name": "isEventSemantics",
        "body": "self.source.prototype.isEventSemantics()",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "rte::interaction::InternalEcuReceiver::source"
        ]
      },
      {
        "operations": {
          "getFilter": 1,
          "oclAsType": 1
        },
        "name": "getFilter",
        "body": "self.source.prototype.oclAsType(instance::RVariableDataInstanceInSwc).getFilter()",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "rte::interaction::InternalEcuReceiver::source"
        ]
      },
      {
        "operations": {
          "isAliveTimeoutEnabled": 1,
          "oclAsType": 1
        },
        "name": "isAliveTimeoutEnabled",
        "body": "self.source.prototype.oclAsType(instance::RVariableDataInstanceInSwc).isAliveTimeoutEnabled()",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "rte::interaction::InternalEcuReceiver::source",
          "ar4x::instance::VariableDataInstanceInComposition::prototype"
        ]
      }
    ],
    "properties": [
      "activatesOnReceiveError",
      "source",
      "activatesOnReceived"
    ]
  },
  {
    "name": "ComProxyFunction",
    "expressions": [],
    "properties": [
      "parent",
      "signalInformationSymbolName",
      "sendSignalFunctionSymbolName",
      "bufferVariable",
      "isGroup",
      "ComProxyFunctionFileContentsGroup",
      "tAckStatus",
      "iocReceiveSymbolName",
      "activationOperation"
    ]
  },
  {
    "name": "ExternalEcuSenderEx",
    "expressions": [
      {
        "operations": {
          "<>": 1,
          "not": 1,
          "or": 1,
          "getHandleInvalid": 2,
          "getInternalEcuReceivers": 1,
          "and": 1,
          "isInvalidationEnabled": 3
        },
        "name": "requiresRteInvalidation",
        "body": "let receivers : Set(rte::interaction::InternalEcuReceiver) = this_.getInternalEcuReceivers() ,\n\t\t\t\t\t\tinvReceivers : Set(rte::interaction::InternalEcuReceiver) = receivers->select(isInvalidationEnabled())\n\t\t\t\tin receivers->exists(isInvalidationEnabled())\n\t\t\t\t\tand (not receivers->forAll(isInvalidationEnabled())\n\t\t\t\t\t\tor invReceivers->exists(r1, r2 | r1.getHandleInvalid() <> r2.getHandleInvalid()))",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "VariableExpImpl": 10,
          "OperationCallExpImpl": 10,
          "LetExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "not": 1,
          "or": 1,
          "oclIsUndefined": 1,
          "getInternalEcuReceivers": 2,
          "and": 2,
          "isInvalidationEnabled": 2,
          "notEmpty": 1
        },
        "name": "providesComInvCallback",
        "body": "this_.sendInteraction\n\t\t\t\t\t->exists(not implementation.oclIsUndefined() and receiveInteraction.getInternalEcuReceivers()\n\t\t\t\t\t\t->exists(isInvalidationEnabled()))\n\t\t\t\t\tor this_.getInternalEcuReceivers()->exists(activatesOnReceived->notEmpty() and isInvalidationEnabled())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 7,
          "OperationCallExpImpl": 10,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "rte::interaction::Sender::sendInteraction",
          "rte::interaction::SendInteraction::receiveInteraction",
          "rte::interaction::InternalEcuReceiver::activatesOnReceived",
          "rte::interaction::SendInteraction::implementation"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "getInternalEcuReceivers": 1,
          "and": 1,
          "isAliveTimeoutEnabled": 1
        },
        "name": "providesComRxTOutCallback",
        "body": "this_.sendInteraction\n\t\t\t\t\t->exists(not implementation.oclIsUndefined() and receiveInteraction.getInternalEcuReceivers()\n\t\t\t\t\t\t->exists(isAliveTimeoutEnabled()))",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 5,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "rte::interaction::Sender::sendInteraction",
          "rte::interaction::SendInteraction::receiveInteraction",
          "rte::interaction::SendInteraction::implementation"
        ]
      },
      {
        "operations": {
          "getFilter": 2,
          "not": 2,
          "or": 2,
          "getInternalEcuReceivers": 1,
          "and": 1,
          "hasMultipleSenders": 1,
          "isCompatibleWith": 1,
          "isFilterEnabled": 3
        },
        "name": "requiresRteFilter",
        "body": "let receivers : Set(rte::interaction::InternalEcuReceiver) = this_.getInternalEcuReceivers() ,\n\t\t\t\t\tfilterReceivers : Set(rte::interaction::InternalEcuReceiver) = receivers->select(isFilterEnabled())\n\t\t\t\tin receivers->exists(isFilterEnabled())\n\t\t\t\t\tand (receivers->exists(hasMultipleSenders())\n\t\t\t\t\t\tor not receivers->forAll(isFilterEnabled())\n\t\t\t\t\t\tor filterReceivers->exists(r1, r2 | not r1.getFilter().isCompatibleWith(r2.getFilter())))",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 5,
          "OperationCallExpImpl": 13,
          "VariableExpImpl": 12,
          "LetExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "providesComInvCallback": 1,
          "or": 2,
          "providesComRxCallback": 1,
          "providesComRxTOutCallback": 1
        },
        "name": "providesComCallback",
        "body": "providesComRxCallback(this_)\n\t\t\t\t   or providesComInvCallback(this_)\n\t\t\t\t   or providesComRxTOutCallback(this_)",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 5
        },
        "properties": []
      },
      {
        "operations": {
          "equalsInitValue": 1,
          "not": 1,
          "getInternalEcuReceivers": 1,
          "and": 1,
          "hasMultipleInternalEcuReceivers": 1
        },
        "name": "requiresRteInitialization",
        "body": "this_.hasMultipleInternalEcuReceivers()\n\t\t\t\t\tand this_.getInternalEcuReceivers()->exists(r1, r2 | not variableDataInstanceInCompositionEx.equalsInitValue(r1.source, r2.source))",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 5,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "rte::ex::ExternalEcuSenderEx::variableDataInstanceInCompositionEx",
          "rte::interaction::InternalEcuReceiver::source"
        ]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "or": 1,
          "getInternalEcuReceivers": 1,
          "notEmpty": 1
        },
        "name": "providesComRxCallback",
        "body": "this_.sendInteraction->exists(not implementation.oclIsUndefined())\n\t\t\t\t\tor this_.getInternalEcuReceivers()->exists(activatesOnReceived->notEmpty())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 5,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "rte::interaction::Sender::sendInteraction",
          "rte::interaction::InternalEcuReceiver::activatesOnReceived",
          "rte::interaction::SendInteraction::implementation"
        ]
      }
    ],
    "properties": ["variableDataInstanceInCompositionEx"]
  },
  {
    "name": "ComSendSignalApi",
    "expressions": [],
    "properties": ["ComSendOperation"]
  },
  {
    "name": "ExternalEcuReceiverEx",
    "expressions": [
      {
        "operations": {
          "oclIsKindOf": 1,
          "isTAckTimeoutEnabled": 1,
          "getInternalEcuSenders": 1,
          "oclAsType": 1
        },
        "name": "providesComTxTOutCallback",
        "body": "this_.getInternalEcuSenders()->select(sendInteraction->exists(implementation.oclIsKindOf(rte::interaction::ComSendImplementation)))\n\t\t\t\t\t->exists(source.prototype.oclAsType(ar4x::instance::PVariableDataInstanceInSwc).isTAckTimeoutEnabled())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "rte::interaction::Sender::sendInteraction",
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "rte::interaction::InternalEcuSender::source",
          "rte::interaction::SendInteraction::implementation"
        ]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "getInternalEcuSenders": 1,
          "isTAckEnabled": 1,
          "oclAsType": 1
        },
        "name": "providesComTxAndTxErrCallback",
        "body": "this_.getInternalEcuSenders()->select(sendInteraction->exists(implementation.oclIsKindOf(rte::interaction::ComSendImplementation)))\n\t\t\t\t\t->exists(source.prototype.oclAsType(ar4x::instance::PVariableDataInstanceInSwc).isTAckEnabled())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 4,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "rte::interaction::Sender::sendInteraction",
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "rte::interaction::SendInteraction::implementation",
          "rte::interaction::InternalEcuSender::source"
        ]
      }
    ],
    "properties": []
  },
  {
    "name": "ComSendTrustedFunctionParamType",
    "expressions": [],
    "properties": [
      "Rte",
      "isGroup",
      "Rte"
    ]
  },
  {
    "name": "PeriodicProxyComSendImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "IocInitializeOperation",
    "expressions": [],
    "properties": ["initIocApi"]
  },
  {
    "name": "EventPoolingImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "CycleCountupOperation",
    "expressions": [],
    "properties": [
      "maxConstant",
      "counterVariable",
      "ContextActivationOperation"
    ]
  },
  {
    "name": "MaskedNewEqualsXFilterOperation",
    "expressions": [],
    "properties": [
      "x",
      "mask"
    ]
  },
  {
    "name": "EntityStarterEx",
    "expressions": [{
      "operations": {
        "oclIsKindOf": 1,
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "getTimingTriggeringEntityStartImplementations",
      "body": "this_.startInteraction.implementation\n\t\t\t\t\t->select(oclIsKindOf(interaction::TimingTriggeringEntityStartImplementation)).oclAsType(interaction::TimingTriggeringEntityStartImplementation)\n\t\t\t\t\t->asOrderedSet()",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 3,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 4,
        "TypeExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "rte::interaction::EntityStartInteraction::implementation",
        "rte::interaction::EntityStarter::startInteraction"
      ]
    }],
    "properties": []
  },
  {
    "name": "ExternalEcuReceiver",
    "expressions": [],
    "properties": [
      "sourceSignalGroup",
      "sourceSignal"
    ]
  },
  {
    "name": "OneShootImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ComSendOperation",
    "expressions": [],
    "properties": [
      "tAckStatus",
      "accessApi",
      "tempReturnVariable",
      "activationFlagOnTxErr"
    ]
  },
  {
    "name": "ComSignalEx",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 2,
          "asOrderedSet": 1,
          "allInstances": 1,
          "getMappedDataInstanceInComposition": 1,
          "=": 1
        },
        "name": "getVariableDataInstanceInCompositions",
        "body": "let systemSignal : ar4x::m2::SystemSignal = this_.comSystemTemplateSystemSignal.iSignal.systemSignal\n\t\t\t\tin if systemSignal.oclIsUndefined()\n\t\t\t\t\tthen OrderedSet{}\n\t\t\t\t\telse ar4x::m2::SenderReceiverToSignalMapping.allInstances()\n\t\t\t\t\t\t->select(m | m.systemSignal = systemSignal)\n\t\t\t\t\t\t->collect(m | senderReceiverToSignalMappingEx.getMappedDataInstanceInComposition(m))\n\t\t\t\t\t\t->select(not oclIsUndefined())\n\t\t\t\t\t\t->asOrderedSet()\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 7,
          "LetExpImpl": 1,
          "TypeExpImpl": 1,
          "CollectionLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "rte::ex::ComSignalEx::senderReceiverToSignalMappingEx",
          "ar4x::m2::ISignalToIPduMapping::iSignal",
          "ar4x::ecuc::ComSignal::comSystemTemplateSystemSignal",
          "ar4x::m2::ISignal::systemSignal",
          "ar4x::m2::SenderReceiverToSignalMapping::systemSignal"
        ]
      },
      {
        "operations": {
          "isRequired": 1,
          "getVariableDataInstanceInCompositions": 1
        },
        "name": "isReceiver",
        "body": "getVariableDataInstanceInCompositions(this_)\n\t\t\t\t\t->exists(isRequired())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3
        },
        "properties": []
      },
      {
        "operations": {
          "getVariableDataInstanceInCompositions": 1,
          "isProvided": 1
        },
        "name": "isSender",
        "body": "getVariableDataInstanceInCompositions(this_)\n\t\t\t\t\t->exists(isProvided())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2
        },
        "properties": []
      }
    ],
    "properties": ["senderReceiverToSignalMappingEx"]
  },
  {
    "name": "ExecutionContext",
    "expressions": [],
    "properties": [
      "executionContextImplementation",
      "entityStarter",
      "sourceOsTask"
    ]
  },
  {
    "name": "VariableDataInstanceInComposition",
    "expressions": [],
    "properties": [
      "InternalEcuReceiver",
      "InternalEcuSender"
    ]
  },
  {
    "name": "ReceiveApi",
    "expressions": [],
    "properties": [
      "operation",
      "statusVariable",
      "dataParam"
    ]
  },
  {
    "name": "RteHeader",
    "expressions": [],
    "properties": ["RteModule"]
  },
  {
    "name": "OsTaskActivationOperation",
    "expressions": [],
    "properties": [
      "OsTaskActivationExecutableTaskBody",
      "OsBackgroundTaskActivationExecutableTaskBody"
    ]
  },
  {
    "name": "ComSignalGroupEx",
    "expressions": [
      {
        "operations": {
          "getVariableDataInstanceInCompositions": 1,
          "isProvided": 1
        },
        "name": "isSender",
        "body": "getVariableDataInstanceInCompositions(this_)\n\t\t\t\t\t->exists(isProvided())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3
        },
        "properties": []
      },
      {
        "operations": {
          "isRequired": 1,
          "getVariableDataInstanceInCompositions": 1
        },
        "name": "isReceiver",
        "body": "getVariableDataInstanceInCompositions(this_)\n\t\t\t\t\t->exists(isRequired())",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 2,
          "asOrderedSet": 1,
          "allInstances": 1,
          "getMappedDataInstanceInComposition": 1,
          "=": 1
        },
        "name": "getVariableDataInstanceInCompositions",
        "body": "let systemSignalGroup : ar4x::m2::SystemSignalGroup = this_.comSystemTemplateSignalGroup.iSignalGroup.systemSignalGroup\n\t\t\t\tin if systemSignalGroup.oclIsUndefined()\n\t\t\t\t\tthen OrderedSet{}\n\t\t\t\t\telse ar4x::m2::SenderReceiverToSignalGroupMapping.allInstances()\n\t\t\t\t\t\t->select(m | m.signalGroup = systemSignalGroup)\n\t\t\t\t\t\t->collect(m | senderReceiverToSignalGroupMappingEx.getMappedDataInstanceInComposition(m))\n\t\t\t\t\t\t->select(not oclIsUndefined())\n\t\t\t\t\t\t->asOrderedSet()\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 7,
          "OperationCallExpImpl": 7,
          "LetExpImpl": 1,
          "TypeExpImpl": 1,
          "CollectionLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "rte::ex::ComSignalGroupEx::senderReceiverToSignalGroupMappingEx",
          "ar4x::m2::ISignalToIPduMapping::iSignalGroup",
          "ar4x::ecuc::ComSignalGroup::comSystemTemplateSignalGroup",
          "ar4x::m2::SenderReceiverToSignalGroupMapping::signalGroup",
          "ar4x::m2::ISignalGroup::systemSignalGroup"
        ]
      }
    ],
    "properties": ["senderReceiverToSignalGroupMappingEx"]
  },
  {
    "name": "RteVfbTraceHeader",
    "expressions": [],
    "properties": ["RteModule"]
  },
  {
    "name": "TrustedFunction",
    "expressions": [],
    "properties": [
      "TrustedFunctionFileContentsGroup",
      "trustedFunctionIndex",
      "Partition"
    ]
  },
  {
    "name": "BswMemoryMapping",
    "expressions": [],
    "properties": [
      "Rte",
      "PartedBswm",
      "BswMemoryMappingHeader"
    ]
  },
  {
    "name": "InfiniteloopImplementation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ComSignalApiWrapper",
    "expressions": [],
    "properties": [
      "parent",
      "signalSymbolName",
      "dataParam",
      "signalGroupSymbolName",
      "ComSignalApiWrapperFileContentsGroup"
    ]
  },
  {
    "name": "BswSchedulableEntityStartInteraction",
    "expressions": [],
    "properties": ["sourceEvent"]
  },
  {
    "name": "Type",
    "expressions": [],
    "properties": [
      "ModeType",
      "isAnonymous",
      "TrustedFunctionComSendOperation",
      "RteTypeHeader",
      "signedness",
      "ProxyComSendOperation",
      "IocSendOperation",
      "ModeDeclarationGroup",
      "Rte",
      "size",
      "TrustedFunctionRteOperation",
      "symbolName",
      "RteBufferQueuedSendOperation",
      "Constant",
      "Function",
      "Rte",
      "Variable",
      "originalTypeSymbolName",
      "RteBufferQueueType",
      "RedefinitionType",
      "ModeQueueType",
      "PointerType",
      "StructMember",
      "UnionMember",
      "Function"
    ]
  },
  {
    "name": "SchmApi",
    "expressions": [],
    "properties": [
      "parent",
      "isInline",
      "SchmApiFileContentsGroup",
      "returnValue"
    ]
  },
  {
    "name": "SchmModeApi",
    "expressions": [],
    "properties": [
      "modeMachineInstance",
      "modeDeclarationGroup"
    ]
  },
  {
    "name": "RteRoot",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteApi",
    "expressions": [],
    "properties": [
      "apiMappingName",
      "isInline",
      "parent",
      "isConnected",
      "returnValue",
      "inlineConstant",
      "inlineGlobalVariable",
      "RteApiFileContentsGroup",
      "inlineRunnableEntity"
    ]
  },
  {
    "name": "MaskedNewDiffersMaskedOldFilterOperation",
    "expressions": [],
    "properties": [
      "mask",
      "oldValueVariable"
    ]
  },
  {
    "name": "PeriodicProxyComSendOperation",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsSetEventApi",
    "expressions": [],
    "properties": [
      "ImmediateProxyComSendOperation",
      "osEventId",
      "osTaskId"
    ]
  },
  {
    "name": "SchmDeinitApi",
    "expressions": [],
    "properties": ["Rte"]
  }
]
