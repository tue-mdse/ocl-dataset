[
  {
    "name": "RBACContext",
    "expressions": [],
    "properties": [
      "Role",
      "idContext",
      "Root",
      "User",
      "permission",
      "logContext"
    ]
  },
  {
    "name": "History",
    "expressions": [],
    "properties": [
      "context",
      "user",
      "User",
      "object",
      "idLog",
      "Root",
      "operation",
      "permission",
      "role"
    ]
  },
  {
    "name": "delegationType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Session",
    "expressions": [],
    "properties": [
      "enabledRoles",
      "idSession",
      "user",
      "Root",
      "activeRoles"
    ]
  },
  {
    "name": "RBACUtility",
    "expressions": [],
    "properties": [
      "boundedPermissions",
      "maxActiveRole",
      "businessTaskList",
      "maxRole",
      "Root",
      "maxPermission"
    ]
  },
  {
    "name": "Object",
    "expressions": [],
    "properties": [
      "idObject",
      "logObject",
      "permissions",
      "Root"
    ]
  },
  {
    "name": "Delegation",
    "expressions": [],
    "properties": [
      "delegatedRole",
      "Root",
      "delegatedDelegation",
      "endDate",
      "maxDepth",
      "revokingUser",
      "Delegation",
      "isTotal",
      "idDelegation",
      "startDate",
      "delegateUser",
      "delegatedPermissions",
      "delegatorUser",
      "isRevoked",
      "isTransfer"
    ]
  },
  {
    "name": "SpatialContext",
    "expressions": [],
    "properties": ["location"]
  },
  {
    "name": "User",
    "expressions": [],
    "properties": [
      "userContext",
      "revocation",
      "sessions",
      "delegatedRoles",
      "Root",
      "user",
      "idUser",
      "userLog",
      "roles",
      "delegation",
      "recieveddelegation"
    ]
  },
  {
    "name": "TemporalContext",
    "expressions": [],
    "properties": ["time"]
  },
  {
    "name": "Permission",
    "expressions": [],
    "properties": [
      "idPermission",
      "roles",
      "permissionContext",
      "logPermission",
      "Root",
      "RBACUtility",
      "operations",
      "object",
      "delegation"
    ]
  },
  {
    "name": "Operation",
    "expressions": [],
    "properties": [
      "permissions",
      "RBACUtility",
      "idOperation",
      "Root",
      "logOperation"
    ]
  },
  {
    "name": "Root",
    "expressions": [],
    "properties": [
      "c",
      "op",
      "Obj",
      "log",
      "s",
      "sys",
      "p",
      "r",
      "d",
      "u"
    ]
  },
  {
    "name": "Role",
    "expressions": [{
      "operations": {
        "getAlljuniors": 1,
        "union": 1,
        "notEmpty": 1,
        "asSet": 4
      },
      "name": "getAlljuniors",
      "body": "\n\t\t\n\t\t\tif self.juniors -> notEmpty() then\n\t             self.juniors-> asSet() -> union (self.juniors-> asSet()-> collect (r:Role| r.getAlljuniors()-> asSet())->asSet())\n\t            \n\t             else  \n\t              self.juniors\n\t             endif ",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 7,
        "VariableExpImpl": 5,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 4
      },
      "properties": ["rbacmodel::Role::juniors"]
    }],
    "properties": [
      "isCascading",
      "roleContext",
      "idRole",
      "sessionsA",
      "delegation",
      "juniors",
      "logRole",
      "isStrong",
      "permissions",
      "sessionsE",
      "Root",
      "seniors",
      "user",
      "users",
      "isDependent"
    ]
  }
]
