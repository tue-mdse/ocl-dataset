<?xml version="1.0" encoding="UTF-8"?>
<pivot:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pivot="http://www.eclipse.org/ocl/2015/Pivot"
    xsi:schemaLocation="http://www.eclipse.org/ocl/2015/Pivot java://org.eclipse.ocl.pivot.PivotPackage" name="RefUML.ecore" externalURI="RefUML.ecore">
  <ownedPackages xmi:id="P.RefUML" name="RefUML" URI="http://nemo.inf.ufes.br/ontouml/refuml" nsPrefix="RefUML">
    <ownedClasses xsi:type="pivot:PrimitiveType" xmi:id="Integer" name="Integer" instanceClassName="int" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny">
      <ownedComments body="An integer is a primitive type representing integer values."/>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:PrimitiveType" xmi:id="Boolean" name="Boolean" instanceClassName="boolean" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny">
      <ownedComments body="A Boolean type is used for logical expression, consisting of the predefined values true and false."/>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:PrimitiveType" xmi:id="String" name="String" instanceClassName="java.lang.String" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny">
      <ownedComments body="A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters."/>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:PrimitiveType" xmi:id="UnlimitedNatural" name="UnlimitedNatural" instanceClassName="int" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny">
      <ownedComments body="An unlimited natural is a primitive type representing unlimited natural values."/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Comment" name="Comment" superClasses="RefUML.ecore.oclas#T.RefUML.Element">
      <ownedComments body="A comment is a textual annotation that can be attached to a set of elements."/>
      <ownedProperties xmi:id="p.RefUML.Comment.body" name="body" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
          isUnsettable="true">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
          <ownedDetails name="kind">
            <values>element</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="Specifies a string that is the comment."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Comment.annotatedElement" name="annotatedElement" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.0"
          opposite="RefUML.ecore.oclas#p.RefUML.Element.Comment">
        <ownedComments body="References the Element(s) being commented."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Comment.Element" name="Element" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Element.ownedComment"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Element" name="Element" isAbstract="true" superClasses="http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EModelElement">
      <ownedComments body="An element is a constituent of a model. As such, it has the capability of owning other elements."/>
      <ownedInvariants xmi:id="ciRefUML.Element.not_own_self" name="not_own_self">
        <ownedSpecification xsi:type="pivot:ExpressionInOCL" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" body="Tuple {&#xA;&#x9;message : String = 'An element may not directly or indirectly own itself.',&#xA;&#x9;status : Boolean = not self.allOwnedElements()->includes(self)&#xA;}.status">
          <ownedBody xsi:type="pivot:PropertyCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredProperty="http://www.eclipse.org/ocl/2015/Orphanage.oclas#//@ownedPackages.0/@ownedClasses.3/@ownedProperties.1">
            <ownedSource xsi:type="pivot:TupleLiteralExp" type="pivot:TupleType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.1">
              <ownedParts name="message" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
                <ownedInit xsi:type="pivot:StringLiteralExp" type="pivot:PrimitiveType RefUML.ecore.oclas#String" stringSymbol="An element may not directly or indirectly own itself."/>
              </ownedParts>
              <ownedParts name="status" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
                <ownedInit xsi:type="pivot:OperationCallExp" name="not" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
                    referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Boolean.not">
                  <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.includes..ocl.OclAny">
                    <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.2"
                        referredOperation="RefUML.ecore.oclas#o.RefUML.Element.allOwnedElements">
                      <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.5/@ownedInvariants.0/@ownedSpecification/@ownedContext"/>
                    </ownedSource>
                    <ownedArguments xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.5/@ownedInvariants.0/@ownedSpecification/@ownedContext"/>
                  </ownedSource>
                </ownedInit>
              </ownedParts>
            </ownedSource>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"/>
        </ownedSpecification>
      </ownedInvariants>
      <ownedInvariants xmi:id="ciRefUML.Element.has_owner" name="has_owner">
        <ownedSpecification xsi:type="pivot:ExpressionInOCL" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" body="Tuple {&#xA;&#x9;message : String = 'Elements that must be owned must have an owner.',&#xA;&#x9;status : Boolean = self.mustBeOwned() implies owner.oclAsSet()->notEmpty()&#xA;}.status">
          <ownedBody xsi:type="pivot:PropertyCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredProperty="http://www.eclipse.org/ocl/2015/Orphanage.oclas#//@ownedPackages.0/@ownedClasses.3/@ownedProperties.1">
            <ownedSource xsi:type="pivot:TupleLiteralExp" type="pivot:TupleType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.1">
              <ownedParts name="message" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
                <ownedInit xsi:type="pivot:StringLiteralExp" type="pivot:PrimitiveType RefUML.ecore.oclas#String" stringSymbol="Elements that must be owned must have an owner."/>
              </ownedParts>
              <ownedParts name="status" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
                <ownedInit xsi:type="pivot:OperationCallExp" name="implies" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
                    referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Boolean.implies..ocl.Boolean">
                  <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="RefUML.ecore.oclas#o.RefUML.Element.mustBeOwned">
                    <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.5/@ownedInvariants.1/@ownedSpecification/@ownedContext"/>
                  </ownedSource>
                  <ownedArguments xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.notEmpty">
                    <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.2"
                        referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsSet">
                      <ownedSource xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"
                          referredProperty="RefUML.ecore.oclas#p.RefUML.Element.owner">
                        <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" isImplicit="true"
                            referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.5/@ownedInvariants.1/@ownedSpecification/@ownedContext"/>
                      </ownedSource>
                    </ownedSource>
                  </ownedArguments>
                </ownedInit>
              </ownedParts>
            </ownedSource>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"/>
        </ownedSpecification>
      </ownedInvariants>
      <ownedOperations xmi:id="o.RefUML.Element.destroy" name="destroy" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Destroys this element by removing all cross references to/from it and removing it from its containing resource or object."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.hasKeyword..RefUML.String" name="hasKeyword" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="Determines whether this element has the specified keyword."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.hasKeyword..RefUML.String" name="keyword" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The keyword in question."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getKeywords" name="getKeywords" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.3">
        <ownedComments body="Retrieves the keywords for this element."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.addKeyword..RefUML.String" name="addKeyword" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="Adds the specified keyword to this element."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.addKeyword..RefUML.String" name="keyword" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The keyword to add."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.removeKeyword..RefUML.String" name="removeKeyword" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="Removes the specified keyword from this element."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.removeKeyword..RefUML.String" name="keyword" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The keyword to remove."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getNearestPackage" name="getNearestPackage" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Package">
        <ownedComments body="Retrieves the nearest package that owns (either directly or indirectly) this element, or the element itself (if it is a package)."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getModel" name="getModel" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Model">
        <ownedComments body="Retrieves the model that owns (either directly or indirectly) this element."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getApplicableStereotype..RefUML.String" name="getApplicableStereotype" isRequired="false"
          type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Retrieves the stereotype with the specified qualified name that is applicable to this element, or null if no such stereotype is applicable."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.getApplicableStereotype..RefUML.String" name="qualifiedName" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The qualified name of the applicable stereotype to retrieve."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getStereotypeApplications" name="getStereotypeApplications" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.4">
        <ownedComments body="Retrieves the stereotype applications for this element."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getRequiredStereotype..RefUML.String" name="getRequiredStereotype" isRequired="false"
          type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Retrieves the stereotype with the specified qualified name that is required for this element, or null if no such stereotype is required."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.getRequiredStereotype..RefUML.String" name="qualifiedName" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The qualified name of the required stereotype to retrieve."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getAppliedStereotype..RefUML.String" name="getAppliedStereotype" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Retrieves the stereotype with the specified qualified name that is applied to this element, or null if no such stereotype is  applied."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.getAppliedStereotype..RefUML.String" name="qualifiedName" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The qualified name of the applied stereotype to retrieve."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.createEAnnotation..RefUML.String" name="createEAnnotation" type="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EAnnotation">
        <ownedComments body="Creates an annotation with the specified source and this element as its model element."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.createEAnnotation..RefUML.String" name="source" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The source for the new annotation."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getRelationships" name="getRelationships" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.5">
        <ownedComments body="Retrieves the relationships in which this element is involved."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getRelationships..ecore.EClass" name="getRelationships" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.5">
        <ownedComments body="Retrieves the relationships of the specified type in which this element is involved."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.getRelationships..ecore.EClass" name="eClass" type="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EClass">
          <ownedComments body="The (meta)type of the relationships to retrieve."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getSourceDirectedRelationships" name="getSourceDirectedRelationships" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.6">
        <ownedComments body="Retrieves the directed relationships for which this element is a source."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getSourceDirectedRelationships..ecore.EClass" name="getSourceDirectedRelationships" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.6">
        <ownedComments body="Retrieves the directed relationships of the specified type for which this element is a source."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.getSourceDirectedRelationships..ecore.EClass" name="eClass" type="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EClass">
          <ownedComments body="The (meta)type of the directed relationships to retrieve."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getTargetDirectedRelationships" name="getTargetDirectedRelationships" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.6">
        <ownedComments body="Retrieves the directed relationships for which this element is a target."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.getTargetDirectedRelationships..ecore.EClass" name="getTargetDirectedRelationships" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.6">
        <ownedComments body="Retrieves the directed relationships of the specified type for which this element is a target."/>
        <ownedParameters xmi:id="p0o.RefUML.Element.getTargetDirectedRelationships..ecore.EClass" name="eClass" type="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EClass">
          <ownedComments body="The (meta)type of the directed relationships to retrieve."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.allOwnedElements" name="allOwnedElements" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.0">
        <ownedComments body="The query allOwnedElements() gives all of the direct and indirect owned elements of an element.&#xD;&#xA;result = ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))"/>
        <bodyExpression xsi:type="pivot:ExpressionInOCL" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.7" body="ownedElement->union(ownedElement->collect(e : Element | e.allOwnedElements()))">
          <ownedBody xsi:type="pivot:OperationCallExp" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.7" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.union..ocl.Collection">
            <ownedSource xsi:type="pivot:PropertyCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.2" referredProperty="RefUML.ecore.oclas#p.RefUML.Element.ownedElement">
              <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" isImplicit="true" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.5/@ownedOperations.18/@bodyExpression/@ownedContext"/>
            </ownedSource>
            <ownedArguments xsi:type="pivot:IteratorExp" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.8" referredIteration="http://www.eclipse.org/ocl/2015/Library.oclas#i.ocl.Set.collect..T">
              <ownedSource xsi:type="pivot:PropertyCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.2"
                  referredProperty="RefUML.ecore.oclas#p.RefUML.Element.ownedElement">
                <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" isImplicit="true" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.5/@ownedOperations.18/@bodyExpression/@ownedContext"/>
              </ownedSource>
              <ownedBody xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.2"
                  referredOperation="RefUML.ecore.oclas#o.RefUML.Element.allOwnedElements">
                <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.5/@ownedOperations.18/@bodyExpression/@ownedBody/@ownedArguments.0/@ownedIterators.0"/>
              </ownedBody>
              <ownedIterators name="e" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" representedParameter="http://www.eclipse.org/ocl/2015/Library.oclas#i0i.ocl.Set.collect..T"/>
            </ownedArguments>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"/>
        </bodyExpression>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Element.mustBeOwned" name="mustBeOwned" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.&#xD;&#xA;result = true"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.Element.ownedElement" name="ownedElement" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.0"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Element.owner">
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>Set {}</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The Elements owned by this element."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Element.owner" name="owner" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Element.ownedElement">
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>null</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The Element that owns this element."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Element.ownedComment" name="ownedComment" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.9"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.Comment.Element">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The Comments owned by this element."/>
      </ownedProperties>
      <ownedProperties name="DirectedRelationship" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.10" isImplicit="true"
          opposite="RefUML.ecore.oclas#p.RefUML.DirectedRelationship.source"/>
      <ownedProperties xmi:id="p.RefUML.Element.Relationship" name="Relationship" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.11"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Relationship.relatedElement"/>
      <ownedProperties xmi:id="p.RefUML.Element.Constraintx" name="Constraintx" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.12"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Constraintx.constrainedElement"/>
      <ownedProperties xmi:id="p.RefUML.Element.Comment" name="Comment" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.13"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Comment.annotatedElement"/>
      <ownedProperties name="DirectedRelationship" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.10" isImplicit="true"
          opposite="RefUML.ecore.oclas#p.RefUML.DirectedRelationship.target"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Package" name="Package" superClasses="RefUML.ecore.oclas#T.RefUML.Namespace RefUML.ecore.oclas#T.RefUML.PackageableElement">
      <ownedComments body="A package is used to group elements, and provides a namespace for the grouped elements.&#xD;&#xA;A package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.&#xD;&#xA;Package specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter."/>
      <ownedOperations xmi:id="o.RefUML.Package.createOwnedClass..RefUML.String..RefUML.Boolean" name="createOwnedClass" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Class">
        <ownedComments body="Creates a(n) (abstract) class with the specified name as an owned type of this package."/>
        <ownedParameters xmi:id="p0o.RefUML.Package.createOwnedClass..RefUML.String..RefUML.Boolean" name="name" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The name for the new class, or null."/>
        </ownedParameters>
        <ownedParameters xmi:id="p1o.RefUML.Package.createOwnedClass..RefUML.String..RefUML.Boolean" name="isAbstract" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
          <ownedComments body="Whether the new class should be abstract."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Package.createOwnedEnumeration..RefUML.String" name="createOwnedEnumeration" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Enumeration">
        <ownedComments body="Creates a enumeration with the specified name as an owned type of this package."/>
        <ownedParameters xmi:id="p0o.RefUML.Package.createOwnedEnumeration..RefUML.String" name="name" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The name for the new enumeration, or null."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Package.createOwnedPrimitiveType..RefUML.String" name="createOwnedPrimitiveType" type="pivot:Class RefUML.ecore.oclas#T.RefUML.PrimitiveType">
        <ownedComments body="Creates a primitive type with the specified name as an owned type of this package."/>
        <ownedParameters xmi:id="p0o.RefUML.Package.createOwnedPrimitiveType..RefUML.String" name="name" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The name for the new primitive type, or null."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Package.createOwnedInterface..RefUML.String" name="createOwnedInterface" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Creates an interface with the specified name as an owned type of this package."/>
        <ownedParameters xmi:id="p0o.RefUML.Package.createOwnedInterface..RefUML.String" name="name" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The name for the new interface, or null."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Package.getAppliedProfile..RefUML.String" name="getAppliedProfile" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Retrieves the profile with the specified qualified name that is applied to this package, or null if no such profile is applied."/>
        <ownedParameters xmi:id="p0o.RefUML.Package.getAppliedProfile..RefUML.String" name="qualifiedName" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The qualified name of the applied profile to retrieve."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Package.getAppliedProfile..RefUML.String..RefUML.Boolean" name="getAppliedProfile" isRequired="false"
          type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Retrieves the profile with the specified qualified name that is applied to this package or any of its nesting packages (if indicated), or null if no such profile is applied."/>
        <ownedParameters xmi:id="p0o.RefUML.Package.getAppliedProfile..RefUML.String..RefUML.Boolean" name="qualifiedName" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The qualified name of the applied profile to retrieve."/>
        </ownedParameters>
        <ownedParameters xmi:id="p1o.RefUML.Package.getAppliedProfile..RefUML.String..RefUML.Boolean" name="recurse" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
          <ownedComments body="Whether to look in nesting packages."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Package.isModelLibrary" name="isModelLibrary" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="Determines whether this package is a model library."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Package.visibleMembers" name="visibleMembers" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.14">
        <ownedComments body="The query visibleMembers() defines which members of a Package can be accessed outside it.&#xD;&#xA;result = member->select( m | self.makesVisible(m))"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Package.makesVisible..RefUML.NamedElement" name="makesVisible" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible.&#xD;&#xA;self.member->includes(el)&#xD;&#xA;result = (ownedMember->includes(el)) or&#xA;(elementImport->select(ei|ei.importedElement = #public)->collect(ei|ei.importedElement)->includes(el)) or&#xA;(packageImport->select(pi|pi.visibility = #public)->collect(pi|pi.importedPackage.member->includes(el))->notEmpty())"/>
        <ownedParameters xmi:id="p0o.RefUML.Package.makesVisible..RefUML.NamedElement" name="el" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Package.mustBeOwned" name="mustBeOwned" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query mustBeOwned() indicates whether elements of this type must have an owner.&#xD;&#xA;result = false"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.Package.ownedType" name="ownedType" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.15"
          isDerived="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Type.package">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>Set {}</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="References the packaged elements that are Types."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Package.packageMerge" name="packageMerge" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.16"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.PackageMerge.receivingPackage">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the PackageMerges that are owned by this Package."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Package.packagedElement" name="packagedElement" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.14"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.PackageableElement.Package">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Specifies the packageable elements that are owned by this Package."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Package.nestedPackage" name="nestedPackage" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.17"
          isDerived="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Package.nestingPackage">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>Set {}</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="References the packaged elements that are Packages."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Package.nestingPackage" name="nestingPackage" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Package"
          isDerived="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Package.nestedPackage">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>null</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="References the Package that owns this Package."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Package.PackageMerge" name="PackageMerge" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.18"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.PackageMerge.mergedPackage"/>
      <ownedProperties xmi:id="p.RefUML.Package.PackageImport" name="PackageImport" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.19"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.PackageImport.importedPackage"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.PackageableElement" name="PackageableElement" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.NamedElement">
      <ownedComments body="A packageable element indicates a named element that may be owned directly by a package.&#xD;&#xA;Packageable elements are able to serve as a template parameter."/>
      <ownedProperties xmi:id="p.RefUML.PackageableElement.visibility" name="visibility" isRequired="false" type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind"
          defaultValueString="public">
        <ownedComments body="Indicates that packageable elements must always have a visibility, i.e., visibility is not optional."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.PackageableElement.ElementImport" name="ElementImport" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.20"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.ElementImport.importedElement"/>
      <ownedProperties xmi:id="p.RefUML.PackageableElement.Package" name="Package" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Package"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Package.packagedElement"/>
      <ownedProperties xmi:id="p.RefUML.PackageableElement.Namespace" name="Namespace" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.21"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Namespace.importedMember"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.NamedElement" name="NamedElement" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.Element">
      <ownedComments body="A named element is an element in a model that may have a name.&#xD;&#xA;A named element supports using a string expression to specify its name. This allows names of model elements to involve template parameters. The actual name is evaluated from the string expression only when it is sensible to do so (e.g., when a template is bound)."/>
      <ownedInvariants xmi:id="ciRefUML.NamedElement.has_no_qualified_name" name="has_no_qualified_name">
        <ownedSpecification xsi:type="pivot:ExpressionInOCL" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" body="Tuple {&#xA;&#x9;message : String = 'If there is no name, or one of the containing namespaces has no name, there is no qualified name.',&#xA;&#x9;status : Boolean = self.name.oclAsSet()->isEmpty() or self.allNamespaces()->select(ns : Namespace | ns.name.oclAsSet()->isEmpty())->notEmpty() implies self.qualifiedName.oclAsSet()->isEmpty()&#xA;}.status">
          <ownedBody xsi:type="pivot:PropertyCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredProperty="http://www.eclipse.org/ocl/2015/Orphanage.oclas#//@ownedPackages.0/@ownedClasses.3/@ownedProperties.1">
            <ownedSource xsi:type="pivot:TupleLiteralExp" type="pivot:TupleType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.1">
              <ownedParts name="message" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
                <ownedInit xsi:type="pivot:StringLiteralExp" type="pivot:PrimitiveType RefUML.ecore.oclas#String" stringSymbol="If there is no name, or one of the containing namespaces has no name, there is no qualified name."/>
              </ownedParts>
              <ownedParts name="status" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
                <ownedInit xsi:type="pivot:OperationCallExp" name="implies" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
                    referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Boolean.implies..ocl.Boolean">
                  <ownedSource xsi:type="pivot:OperationCallExp" name="or" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
                      referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Boolean.or..ocl.Boolean">
                    <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.isEmpty">
                      <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.22"
                          referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsSet">
                        <ownedSource xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
                            referredProperty="RefUML.ecore.oclas#p.RefUML.NamedElement.name">
                          <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedInvariants.0/@ownedSpecification/@ownedContext"/>
                        </ownedSource>
                      </ownedSource>
                    </ownedSource>
                    <ownedArguments xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.notEmpty">
                      <ownedSource xsi:type="pivot:IteratorExp" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.23"
                          referredIteration="http://www.eclipse.org/ocl/2015/Library.oclas#i.ocl.OrderedSet.select..T">
                        <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.23"
                            referredOperation="RefUML.ecore.oclas#o.RefUML.NamedElement.allNamespaces">
                          <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedInvariants.0/@ownedSpecification/@ownedContext"/>
                        </ownedSource>
                        <ownedBody xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.isEmpty">
                          <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.22"
                              referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsSet">
                            <ownedSource xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
                                referredProperty="RefUML.ecore.oclas#p.RefUML.NamedElement.name">
                              <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedInvariants.0/@ownedSpecification/@ownedBody/@ownedSource/@ownedParts.1/@ownedInit/@ownedSource/@ownedArguments.0/@ownedSource/@ownedIterators.0"/>
                            </ownedSource>
                          </ownedSource>
                        </ownedBody>
                        <ownedIterators name="ns" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" representedParameter="http://www.eclipse.org/ocl/2015/Library.oclas#i0i.ocl.OrderedSet.select..T"/>
                      </ownedSource>
                    </ownedArguments>
                  </ownedSource>
                  <ownedArguments xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.isEmpty">
                    <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.22"
                        referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsSet">
                      <ownedSource xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
                          referredProperty="RefUML.ecore.oclas#p.RefUML.NamedElement.qualifiedName">
                        <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedInvariants.0/@ownedSpecification/@ownedContext"/>
                      </ownedSource>
                    </ownedSource>
                  </ownedArguments>
                </ownedInit>
              </ownedParts>
            </ownedSource>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"/>
        </ownedSpecification>
      </ownedInvariants>
      <ownedInvariants xmi:id="ciRefUML.NamedElement.visibility_needs_ownership" name="visibility_needs_ownership">
        <ownedSpecification xsi:type="pivot:ExpressionInOCL" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" body="Tuple {&#xA;&#x9;message : String = 'If a NamedElement is not owned by a Namespace, it does not have a visibility.',&#xA;&#x9;status : Boolean = namespace.oclAsSet()->isEmpty() implies visibility.oclAsSet()->isEmpty()&#xA;}.status">
          <ownedBody xsi:type="pivot:PropertyCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredProperty="http://www.eclipse.org/ocl/2015/Orphanage.oclas#//@ownedPackages.0/@ownedClasses.3/@ownedProperties.1">
            <ownedSource xsi:type="pivot:TupleLiteralExp" type="pivot:TupleType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.1">
              <ownedParts name="message" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
                <ownedInit xsi:type="pivot:StringLiteralExp" type="pivot:PrimitiveType RefUML.ecore.oclas#String" stringSymbol="If a NamedElement is not owned by a Namespace, it does not have a visibility."/>
              </ownedParts>
              <ownedParts name="status" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
                <ownedInit xsi:type="pivot:OperationCallExp" name="implies" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
                    referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Boolean.implies..ocl.Boolean">
                  <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.isEmpty">
                    <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.24"
                        referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsSet">
                      <ownedSource xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace"
                          referredProperty="RefUML.ecore.oclas#p.RefUML.NamedElement.namespace">
                        <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" isImplicit="true"
                            referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedInvariants.1/@ownedSpecification/@ownedContext"/>
                      </ownedSource>
                    </ownedSource>
                  </ownedSource>
                  <ownedArguments xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.isEmpty">
                    <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.25"
                        referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsSet">
                      <ownedSource xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind"
                          referredProperty="RefUML.ecore.oclas#p.RefUML.NamedElement.visibility">
                        <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" isImplicit="true"
                            referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedInvariants.1/@ownedSpecification/@ownedContext"/>
                      </ownedSource>
                    </ownedSource>
                  </ownedArguments>
                </ownedInit>
              </ownedParts>
            </ownedSource>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"/>
        </ownedSpecification>
      </ownedInvariants>
      <ownedOperations xmi:id="o.RefUML.NamedElement.createDependency..RefUML.NamedElement" name="createDependency" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Dependency">
        <ownedComments body="Creates a dependency between this named element and the specified supplier, owned by this named element's nearest package."/>
        <ownedParameters xmi:id="p0o.RefUML.NamedElement.createDependency..RefUML.NamedElement" name="supplier" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement">
          <ownedComments body="The supplier for the new dependency."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.NamedElement.getLabel" name="getLabel" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedComments body="Retrieves a localized label for this named element."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.NamedElement.getLabel..RefUML.Boolean" name="getLabel" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedComments body="Retrieves a label for this named element, localized if indicated."/>
        <ownedParameters xmi:id="p0o.RefUML.NamedElement.getLabel..RefUML.Boolean" name="localize" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
          <ownedComments body="Whether to localize the label."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.NamedElement.createUsage..RefUML.NamedElement" name="createUsage" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Creates a usage between this named element and the specified supplier, owned by this named element's nearest package."/>
        <ownedParameters xmi:id="p0o.RefUML.NamedElement.createUsage..RefUML.NamedElement" name="supplier" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement">
          <ownedComments body="The supplier for the new usage."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.NamedElement.getQualifiedName" name="getQualifiedName" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="documentation">
            <values>When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.&#xD;
result = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()
then 
    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))
else
    Set{}
endif</values>
          </ownedDetails>
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.NamedElement.allNamespaces" name="allNamespaces" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.26">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>if namespace->isEmpty() then Sequence {} else namespace.allNamespaces()->prepend(namespace) endif</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards.&#xD;&#xA;result = if self.namespace->isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()->prepend(self.namespace)&#xA;endif"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.NamedElement.isDistinguishableFrom..RefUML.NamedElement..RefUML.Namespace" name="isDistinguishableFrom"
          type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names.&#xD;&#xA;result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()&#xA;else true&#xA;endif"/>
        <ownedParameters xmi:id="p0o.RefUML.NamedElement.isDistinguishableFrom..RefUML.NamedElement..RefUML.Namespace" name="n" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"/>
        <ownedParameters xmi:id="p1o.RefUML.NamedElement.isDistinguishableFrom..RefUML.NamedElement..RefUML.Namespace" name="ns" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.NamedElement.separator" name="separator" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedComments body="The query separator() gives the string that is used to separate names when constructing a qualified name.&#xD;&#xA;result = '::'"/>
        <bodyExpression xsi:type="pivot:ExpressionInOCL" type="pivot:PrimitiveType RefUML.ecore.oclas#String" body="'::'">
          <ownedBody xsi:type="pivot:StringLiteralExp" type="pivot:PrimitiveType RefUML.ecore.oclas#String" stringSymbol="::"/>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"/>
        </bodyExpression>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.NamedElement.allOwningPackages" name="allOwningPackages" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.17">
        <ownedComments body="The query allOwningPackages() returns all the directly or indirectly owning packages.&#xD;&#xA;result = self.namespace->select(p | p.oclIsKindOf(Package))->union(p.allOwningPackages())"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.NamedElement.name" name="name" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
          isUnsettable="true">
        <ownedComments body="The name of the NamedElement."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.NamedElement.visibility" name="visibility" isRequired="false" type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind"
          isUnsettable="true">
        <ownedComments body="Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.NamedElement.qualifiedName" name="qualifiedName" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true">
        <ownedComments body="A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself."/>
        <ownedExpression xsi:type="pivot:ExpressionInOCL" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String" body="if name.oclAsSet()->isEmpty() or allNamespaces()->select(ns : Namespace | ns.name.oclAsSet()->isEmpty())->notEmpty() then null else allNamespaces()->iterate(ns : Namespace ; all : String = name | ns.name.concat(separator()).concat(all)) endif">
          <ownedBody xsi:type="pivot:IfExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
            <ownedCondition xsi:type="pivot:OperationCallExp" name="or" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
                referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Boolean.or..ocl.Boolean">
              <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.isEmpty">
                <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.22"
                    referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsSet">
                  <ownedSource xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
                      referredProperty="RefUML.ecore.oclas#p.RefUML.NamedElement.name">
                    <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" isImplicit="true"
                        referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedProperties.2/@ownedExpression/@ownedContext"/>
                  </ownedSource>
                </ownedSource>
              </ownedSource>
              <ownedArguments xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.notEmpty">
                <ownedSource xsi:type="pivot:IteratorExp" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.23"
                    referredIteration="http://www.eclipse.org/ocl/2015/Library.oclas#i.ocl.OrderedSet.select..T">
                  <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.23"
                      referredOperation="RefUML.ecore.oclas#o.RefUML.NamedElement.allNamespaces">
                    <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" isImplicit="true"
                        referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedProperties.2/@ownedExpression/@ownedContext"/>
                  </ownedSource>
                  <ownedBody xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.isEmpty">
                    <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.22"
                        referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsSet">
                      <ownedSource xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
                          referredProperty="RefUML.ecore.oclas#p.RefUML.NamedElement.name">
                        <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedProperties.2/@ownedExpression/@ownedBody/@ownedCondition/@ownedArguments.0/@ownedSource/@ownedIterators.0"/>
                      </ownedSource>
                    </ownedSource>
                  </ownedBody>
                  <ownedIterators name="ns" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" representedParameter="http://www.eclipse.org/ocl/2015/Library.oclas#i0i.ocl.OrderedSet.select..T"/>
                </ownedSource>
              </ownedArguments>
            </ownedCondition>
            <ownedElse xsi:type="pivot:IterateExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String" referredIteration="http://www.eclipse.org/ocl/2015/Library.oclas#i.ocl.Collection.iterate..T">
              <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.23"
                  referredOperation="RefUML.ecore.oclas#o.RefUML.NamedElement.allNamespaces">
                <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" isImplicit="true"
                    referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedProperties.2/@ownedExpression/@ownedContext"/>
              </ownedSource>
              <ownedBody xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#String" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.String.concat..ocl.String">
                <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#String" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.String.concat..ocl.String">
                  <ownedSource xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
                      referredProperty="RefUML.ecore.oclas#p.RefUML.NamedElement.name">
                    <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedProperties.2/@ownedExpression/@ownedBody/@ownedElse/@ownedIterators.0"/>
                  </ownedSource>
                  <ownedArguments xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#String" referredOperation="RefUML.ecore.oclas#o.RefUML.NamedElement.separator">
                    <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" isImplicit="true"
                        referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedProperties.2/@ownedExpression/@ownedContext"/>
                  </ownedArguments>
                </ownedSource>
                <ownedArguments xsi:type="pivot:VariableExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedProperties.2/@ownedExpression/@ownedBody/@ownedElse/@ownedResult"/>
              </ownedBody>
              <ownedIterators name="ns" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" representedParameter="http://www.eclipse.org/ocl/2015/Library.oclas#i0i.ocl.Collection.iterate..T"/>
              <ownedResult name="all" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String" representedParameter="http://www.eclipse.org/ocl/2015/Library.oclas#a0i.ocl.Collection.iterate..T">
                <ownedInit xsi:type="pivot:PropertyCallExp" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String" referredProperty="RefUML.ecore.oclas#p.RefUML.NamedElement.name">
                  <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" isImplicit="true"
                      referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.8/@ownedProperties.2/@ownedExpression/@ownedContext"/>
                </ownedInit>
              </ownedResult>
            </ownedElse>
            <ownedThen xsi:type="pivot:NullLiteralExp" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid"/>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"/>
        </ownedExpression>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.NamedElement.clientDependency" name="clientDependency" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.27"
          opposite="RefUML.ecore.oclas#p.RefUML.Dependency.client">
        <ownedComments body="Indicates the dependencies that reference the client."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.NamedElement.namespace" name="namespace" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Namespace.ownedMember">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>null</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="Specifies the namespace that owns the NamedElement."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.NamedElement.nameExpression" name="nameExpression" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.StringExpression"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.StringExpression.NamedElement">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The string expression used to define the name of this named element."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.NamedElement.Classifier" name="Classifier" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.28"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Classifier.inheritedMember"/>
      <ownedProperties xmi:id="p.RefUML.NamedElement.Dependency" name="Dependency" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.29"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Dependency.supplier"/>
      <ownedProperties xmi:id="p.RefUML.NamedElement.Namespace" name="Namespace" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.21"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Namespace.member"/>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:Enumeration" xmi:id="T.RefUML.VisibilityKind" name="VisibilityKind" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclEnumeration">
      <ownedComments body="VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model."/>
      <ownedLiterals xmi:id="e.RefUML.VisibilityKind.public" name="public"/>
      <ownedLiterals xmi:id="e.RefUML.VisibilityKind.private" name="private" value="1"/>
      <ownedLiterals xmi:id="e.RefUML.VisibilityKind.protected" name="protected" value="2"/>
      <ownedLiterals xmi:id="e.RefUML.VisibilityKind.package" name="package" value="3"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Dependency" name="Dependency" superClasses="RefUML.ecore.oclas#T.RefUML.PackageableElement RefUML.ecore.oclas#T.RefUML.DirectedRelationship">
      <ownedComments body="A dependency is a relationship that signifies that a single or a set of model elements requires other model elements for their specification or implementation. This means that the complete semantics of the depending elements is either semantically or structurally dependent on the definition of the supplier element(s)."/>
      <ownedProperties xmi:id="p.RefUML.Dependency.supplier" name="supplier" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.30"
          opposite="RefUML.ecore.oclas#p.RefUML.NamedElement.Dependency">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The element(s) independent of the client element(s), in the same respect and the same dependency relationship. In some directed dependency relationships (such as Refinement Abstractions), a common convention in the domain of class-based OO software is to put the more abstract element in this role. Despite this convention, users of UML may stipulate a sense of dependency suitable for their domain, which makes a more abstract element dependent on that which is more specific."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Dependency.client" name="client" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.30"
          opposite="RefUML.ecore.oclas#p.RefUML.NamedElement.clientDependency">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The element(s) dependent on the supplier element(s). In some cases (such as a Trace Abstraction) the assignment of direction (that is, the designation of the client element) is at the discretion of the modeler, and is a stipulation."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.DirectedRelationship" name="DirectedRelationship" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.Relationship">
      <ownedComments body="A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements."/>
      <ownedProperties xmi:id="p.RefUML.DirectedRelationship.source" name="source" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.31"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.5/@ownedProperties.3">
        <ownedComments body="Specifies the sources of the DirectedRelationship."/>
        <ownedExpression xsi:type="pivot:ExpressionInOCL" isRequired="false" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.32"
            body="if self.oclIsKindOf(Generalization) then Set{self.oclAsType(Generalization).specific} else null endif">
          <ownedBody xsi:type="pivot:IfExp" isRequired="false" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.32">
            <ownedCondition xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclIsKindOf..ocl.OclType">
              <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.11/@ownedProperties.0/@ownedExpression/@ownedContext"/>
              <ownedArguments xsi:type="pivot:TypeExp" type="pivot:Class http://www.eclipse.org/ocl/2015/Pivot.oclas#//@ownedPackages.0/@ownedClasses.9"
                  referredType="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization"/>
            </ownedCondition>
            <ownedElse xsi:type="pivot:NullLiteralExp" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid"/>
            <ownedThen xsi:type="pivot:CollectionLiteralExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.32"
                kind="Set">
              <ownedParts xsi:type="pivot:CollectionItem" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier">
                <ownedItem xsi:type="pivot:PropertyCallExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" referredProperty="RefUML.ecore.oclas#p.RefUML.Generalization.specific">
                  <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsType..TT">
                    <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.11/@ownedProperties.0/@ownedExpression/@ownedContext"/>
                    <ownedArguments xsi:type="pivot:TypeExp" type="pivot:Class http://www.eclipse.org/ocl/2015/Pivot.oclas#//@ownedPackages.0/@ownedClasses.9"
                        referredType="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization"/>
                  </ownedSource>
                </ownedItem>
              </ownedParts>
            </ownedThen>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship"/>
        </ownedExpression>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.DirectedRelationship.target" name="target" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.31"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.5/@ownedProperties.7">
        <ownedComments body="Specifies the targets of the DirectedRelationship."/>
        <ownedExpression xsi:type="pivot:ExpressionInOCL" isRequired="false" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.32"
            body="if self.oclIsKindOf(Generalization) then Set{self.oclAsType(Generalization).general} else null endif">
          <ownedBody xsi:type="pivot:IfExp" isRequired="false" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.32">
            <ownedCondition xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclIsKindOf..ocl.OclType">
              <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.11/@ownedProperties.1/@ownedExpression/@ownedContext"/>
              <ownedArguments xsi:type="pivot:TypeExp" type="pivot:Class http://www.eclipse.org/ocl/2015/Pivot.oclas#//@ownedPackages.0/@ownedClasses.9"
                  referredType="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization"/>
            </ownedCondition>
            <ownedElse xsi:type="pivot:NullLiteralExp" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid"/>
            <ownedThen xsi:type="pivot:CollectionLiteralExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.32"
                kind="Set">
              <ownedParts xsi:type="pivot:CollectionItem" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier">
                <ownedItem xsi:type="pivot:PropertyCallExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" referredProperty="RefUML.ecore.oclas#p.RefUML.Generalization.general">
                  <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsType..TT">
                    <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.11/@ownedProperties.1/@ownedExpression/@ownedContext"/>
                    <ownedArguments xsi:type="pivot:TypeExp" type="pivot:Class http://www.eclipse.org/ocl/2015/Pivot.oclas#//@ownedPackages.0/@ownedClasses.9"
                        referredType="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization"/>
                  </ownedSource>
                </ownedItem>
              </ownedParts>
            </ownedThen>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship"/>
        </ownedExpression>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Relationship" name="Relationship" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.Element">
      <ownedComments body="Relationship is an abstract concept that specifies some kind of relationship between elements."/>
      <ownedProperties xmi:id="p.RefUML.Relationship.relatedElement" name="relatedElement" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.31"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Element.Relationship">
        <ownedComments body="Specifies the elements related by the Relationship."/>
        <ownedExpression xsi:type="pivot:ExpressionInOCL" isRequired="false" type="pivot:CollectionType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.33"
            body="if self.oclIsKindOf(DirectedRelationship) then self.oclAsType(DirectedRelationship).source->union(self.oclAsType(DirectedRelationship).target) else if self.oclIsKindOf(Association) then self.oclAsType(Association).endType else null endif endif">
          <ownedBody xsi:type="pivot:IfExp" isRequired="false" type="pivot:CollectionType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.33">
            <ownedCondition xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclIsKindOf..ocl.OclType">
              <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.12/@ownedProperties.0/@ownedExpression/@ownedContext"/>
              <ownedArguments xsi:type="pivot:TypeExp" type="pivot:Class http://www.eclipse.org/ocl/2015/Pivot.oclas#//@ownedPackages.0/@ownedClasses.9"
                  referredType="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship"/>
            </ownedCondition>
            <ownedElse xsi:type="pivot:IfExp" isRequired="false" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.34">
              <ownedCondition xsi:type="pivot:OperationCallExp" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclIsKindOf..ocl.OclType">
                <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.12/@ownedProperties.0/@ownedExpression/@ownedContext"/>
                <ownedArguments xsi:type="pivot:TypeExp" type="pivot:Class http://www.eclipse.org/ocl/2015/Pivot.oclas#//@ownedPackages.0/@ownedClasses.9"
                    referredType="pivot:Class RefUML.ecore.oclas#T.RefUML.Association"/>
              </ownedCondition>
              <ownedElse xsi:type="pivot:NullLiteralExp" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid"/>
              <ownedThen xsi:type="pivot:PropertyCallExp" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.34"
                  referredProperty="RefUML.ecore.oclas#p.RefUML.Association.endType">
                <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Association" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsType..TT">
                  <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.12/@ownedProperties.0/@ownedExpression/@ownedContext"/>
                  <ownedArguments xsi:type="pivot:TypeExp" type="pivot:Class http://www.eclipse.org/ocl/2015/Pivot.oclas#//@ownedPackages.0/@ownedClasses.9"
                      referredType="pivot:Class RefUML.ecore.oclas#T.RefUML.Association"/>
                </ownedSource>
              </ownedThen>
            </ownedElse>
            <ownedThen xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.35" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.UniqueCollection.union..ocl.UniqueCollection">
              <ownedSource xsi:type="pivot:PropertyCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.2"
                  referredProperty="RefUML.ecore.oclas#p.RefUML.DirectedRelationship.source">
                <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsType..TT">
                  <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.12/@ownedProperties.0/@ownedExpression/@ownedContext"/>
                  <ownedArguments xsi:type="pivot:TypeExp" type="pivot:Class http://www.eclipse.org/ocl/2015/Pivot.oclas#//@ownedPackages.0/@ownedClasses.9"
                      referredType="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship"/>
                </ownedSource>
              </ownedSource>
              <ownedArguments xsi:type="pivot:PropertyCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.2"
                  referredProperty="RefUML.ecore.oclas#p.RefUML.DirectedRelationship.target">
                <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.OclAny.oclAsType..TT">
                  <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.12/@ownedProperties.0/@ownedExpression/@ownedContext"/>
                  <ownedArguments xsi:type="pivot:TypeExp" type="pivot:Class http://www.eclipse.org/ocl/2015/Pivot.oclas#//@ownedPackages.0/@ownedClasses.9"
                      referredType="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship"/>
                </ownedSource>
              </ownedArguments>
            </ownedThen>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship"/>
        </ownedExpression>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Namespace" name="Namespace" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.NamedElement">
      <ownedComments body="A namespace is an element in a model that contains a set of named elements that can be identified by name."/>
      <ownedOperations xmi:id="o.RefUML.Namespace.createElementImport..RefUML.PackageableElement..RefUML.VisibilityKind" name="createElementImport"
          type="pivot:Class RefUML.ecore.oclas#T.RefUML.ElementImport">
        <ownedComments body="Creates an import of the specified element into this namespace with the specified visibility."/>
        <ownedParameters xmi:id="p0o.RefUML.Namespace.createElementImport..RefUML.PackageableElement..RefUML.VisibilityKind" name="element"
            type="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageableElement">
          <ownedComments body="The element to import."/>
        </ownedParameters>
        <ownedParameters xmi:id="p1o.RefUML.Namespace.createElementImport..RefUML.PackageableElement..RefUML.VisibilityKind" name="visibility"
            type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind">
          <ownedComments body="The visibility for the new element import."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Namespace.createPackageImport..RefUML.Package..RefUML.VisibilityKind" name="createPackageImport"
          type="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageImport">
        <ownedComments body="Creates an import of the specified package into this namespace with the specified visibility."/>
        <ownedParameters xmi:id="p0o.RefUML.Namespace.createPackageImport..RefUML.Package..RefUML.VisibilityKind" name="package_" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Package">
          <ownedComments body="The package to import."/>
        </ownedParameters>
        <ownedParameters xmi:id="p1o.RefUML.Namespace.createPackageImport..RefUML.Package..RefUML.VisibilityKind" name="visibility" type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind">
          <ownedComments body="The visibility for the new package import."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Namespace.getImportedElements" name="getImportedElements" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.14">
        <ownedComments body="Retrieves the elements imported by this namespace."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Namespace.getImportedPackages" name="getImportedPackages" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.17">
        <ownedComments body="Retrieves the packages imported by this namespace."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Namespace.getImportedMembers" name="getImportedMembers" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.14">
        <ownedComments body="The importedMember property is derived from the ElementImports and the PackageImports. References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.&#xD;&#xA;result = self.importMembers(self.elementImport.importedElement.asSet()-&#xA;>union(self.packageImport.importedPackage->collect(p | p.visibleMembers())))"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Namespace.getNamesOfMember..RefUML.NamedElement" name="getNamesOfMember" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.3">
        <ownedComments body="The query getNamesOfMember() takes importing into account. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.&#xD;&#xA;The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. The query takes account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.&#xD;&#xA;result = if self.ownedMember ->includes(element)&#xA;then Set{}->include(element.name)&#xA;else let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in&#xA;  if elementImports->notEmpty()&#xA;  then elementImports->collect(el | el.getName())&#xA;  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))&#xA;  endif&#xA;endif"/>
        <ownedParameters xmi:id="p0o.RefUML.Namespace.getNamesOfMember..RefUML.NamedElement" name="element" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Namespace.membersAreDistinguishable" name="membersAreDistinguishable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.&#xD;&#xA;result = self.member->forAll( memb |&#xA;self.member->excluding(memb)->forAll(other |&#xA;memb.isDistinguishableFrom(other, self)))"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Namespace.importMembers..$$.Set" name="importMembers" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.14">
        <ownedComments body="The query importMembers() defines which of a set of PackageableElements are actually imported into the namespace. This excludes hidden ones, i.e., those which have names that conflict with names of owned members, and also excludes elements which would have the same name when imported.&#xD;&#xA;result = self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem |&#xA;mem.imp.isDistinguishableFrom(mem, self)))"/>
        <ownedParameters xmi:id="p0o.RefUML.Namespace.importMembers..$$.Set" name="imps" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.14"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Namespace.excludeCollisions..$$.Set" name="excludeCollisions" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.14">
        <ownedComments body="The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this namespace.&#xD;&#xA;result = imps->reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))"/>
        <ownedParameters xmi:id="p0o.RefUML.Namespace.excludeCollisions..$$.Set" name="imps" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.14"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.Namespace.elementImport" name="elementImport" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.36"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.ElementImport.importingNamespace">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the ElementImports owned by the Namespace."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Namespace.packageImport" name="packageImport" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.37"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.PackageImport.importingNamespace">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the PackageImports owned by the Namespace."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Namespace.ownedRule" name="ownedRule" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.38"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.Constraintx.context">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Specifies a set of Constraints owned by this Namespace."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Namespace.member" name="member" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.NamedElement.Namespace">
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>if oclIsKindOf(Association) then&#xD;
	oclAsType(Association).memberEnd&#xD;
else&#xD;
	if oclIsKindOf(Classifier) then&#xD;
		oclAsType(Classifier).feature.oclAsType(NamedElement)->union(oclAsType(Classifier).inheritedMember)&#xD;
	else&#xD;
		Set {}&#xD;
	endif&#xD;
endif</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Namespace.importedMember" name="importedMember" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.14"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.PackageableElement.Namespace">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>Set {}</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Namespace.ownedMember" name="ownedMember" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.NamedElement.namespace">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>if oclIsKindOf(Class) then&#xD;
	oclAsType(Class).ownedAttribute&#xD;
else&#xD;
	if oclIsKindOf(DataType) then&#xD;
		oclAsType(DataType).ownedAttribute	&#xD;
	else&#xD;
		if oclIsKindOf(Association) then&#xD;
			oclAsType(Association).ownedEnd&#xD;
		else&#xD;
			Set {}&#xD;
		endif&#xD;
	endif&#xD;
endif&#xD;
</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="A collection of NamedElements owned by the Namespace."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.ElementImport" name="ElementImport" superClasses="RefUML.ecore.oclas#T.RefUML.DirectedRelationship">
      <ownedComments body="An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier."/>
      <ownedOperations xmi:id="o.RefUML.ElementImport.getName" name="getName" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedComments body="The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.&#xD;&#xA;result = if self.alias->notEmpty() then&#xA;  self.alias&#xA;else&#xA;  self.importedElement.name&#xA;endif"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.ElementImport.visibility" name="visibility" type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind"
          defaultValueString="public">
        <ownedComments body="Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.ElementImport.alias" name="alias" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
          isUnsettable="true">
        <ownedComments body="Specifies the name that should be added to the namespace of the importing package in lieu of the name of the imported packagable element. The aliased name must not clash with any other member name in the importing package. By default, no alias is used."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.ElementImport.importedElement" name="importedElement" type="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageableElement"
          opposite="RefUML.ecore.oclas#p.RefUML.PackageableElement.ElementImport">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Specifies the PackageableElement whose name is to be added to a Namespace."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.ElementImport.importingNamespace" name="importingNamespace" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace"
          opposite="RefUML.ecore.oclas#p.RefUML.Namespace.elementImport">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Specifies the Namespace that imports a PackageableElement from another Package."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.PackageImport" name="PackageImport" superClasses="RefUML.ecore.oclas#T.RefUML.DirectedRelationship">
      <ownedComments body="A package import is a relationship that allows the use of unqualified names to refer to package members from other namespaces."/>
      <ownedProperties xmi:id="p.RefUML.PackageImport.visibility" name="visibility" type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind"
          defaultValueString="public">
        <ownedComments body="Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.PackageImport.importedPackage" name="importedPackage" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Package"
          opposite="RefUML.ecore.oclas#p.RefUML.Package.PackageImport">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Specifies the Package whose members are imported into a Namespace."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.PackageImport.importingNamespace" name="importingNamespace" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace"
          opposite="RefUML.ecore.oclas#p.RefUML.Namespace.packageImport">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Specifies the Namespace that imports the members from a Package."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Constraintx" name="Constraintx" superClasses="RefUML.ecore.oclas#T.RefUML.PackageableElement">
      <ownedComments body="A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element."/>
      <ownedProperties xmi:id="p.RefUML.Constraintx.constrainedElement" name="constrainedElement" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.40"
          opposite="RefUML.ecore.oclas#p.RefUML.Element.Constraintx">
        <ownedComments body="The ordered set of Elements referenced by this Constraint."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Constraintx.specification" name="specification" type="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.ValueSpecification.Constraintx">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="A condition that must be true when evaluated in order for the constraint to be satisfied."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Constraintx.context" name="context" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace"
          opposite="RefUML.ecore.oclas#p.RefUML.Namespace.ownedRule">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Specifies the namespace that owns the NamedElement."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.ValueSpecification" name="ValueSpecification" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.PackageableElement RefUML.ecore.oclas#T.RefUML.TypedElement">
      <ownedComments body="A value specification is the specification of a (possibly empty) set of instances, including both objects and data values.&#xD;&#xA;ValueSpecification specializes ParameterableElement to specify that a value specification can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."/>
      <ownedOperations xmi:id="o.RefUML.ValueSpecification.isComputable" name="isComputable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.&#xD;&#xA;result = false"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.ValueSpecification.integerValue" name="integerValue" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
        <ownedComments body="The query integerValue() gives a single Integer value when one can be computed.&#xD;&#xA;result = Set{}"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.ValueSpecification.booleanValue" name="booleanValue" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query booleanValue() gives a single Boolean value when one can be computed.&#xD;&#xA;result = Set{}"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.ValueSpecification.stringValue" name="stringValue" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedComments body="The query stringValue() gives a single String value when one can be computed.&#xD;&#xA;result = Set{}"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.ValueSpecification.unlimitedValue" name="unlimitedValue" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural">
        <ownedComments body="The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.&#xD;&#xA;result = Set{}"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.ValueSpecification.isNull" name="isNull" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isNull() returns true when it can be computed that the value is null.&#xD;&#xA;result = false"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.ValueSpecification.Property" name="Property" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Property"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Property.defaultValue"/>
      <ownedProperties xmi:id="p.RefUML.ValueSpecification.Constraintx" name="Constraintx" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Constraintx"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Constraintx.specification"/>
      <ownedProperties name="MultiplicityElement" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.MultiplicityElement"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.MultiplicityElement.upperValue"/>
      <ownedProperties xmi:id="p.RefUML.ValueSpecification.Slot" name="Slot" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Slot"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Slot.value"/>
      <ownedProperties xmi:id="p.RefUML.ValueSpecification.InstanceSpecification" name="InstanceSpecification" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceSpecification"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.InstanceSpecification.specification"/>
      <ownedProperties xmi:id="p.RefUML.ValueSpecification.Expression" name="Expression" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Expression"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Expression.operand"/>
      <ownedProperties name="MultiplicityElement" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.MultiplicityElement"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.MultiplicityElement.lowerValue"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.TypedElement" name="TypedElement" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.NamedElement">
      <ownedComments body="A typed element is a kind of named element that represents an element with a type.&#xD;&#xA;A typed element has a type."/>
      <ownedProperties xmi:id="p.RefUML.TypedElement.type" name="type" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Type"
          opposite="RefUML.ecore.oclas#p.RefUML.Type.TypedElement">
        <ownedComments body="This information is derived from the return result for this Operation.&#xD;&#xA;The type of the TypedElement."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Type" name="Type" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.PackageableElement">
      <ownedComments body="A type is a named element that is used as the type for a typed element. A type can be contained in a package.&#xD;&#xA;A type constrains the values represented by a typed element."/>
      <ownedOperations xmi:id="o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
          name="createAssociation" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Association">
        <ownedComments body="Creates a(n) (binary) association between this type and the specified other type, with the specified navigabilities, aggregations, names, lower bounds, and upper bounds, and owned by this type's nearest package."/>
        <ownedParameters xmi:id="p0o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end1IsNavigable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
          <ownedComments body="The navigability for the first end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p1o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end1Aggregation" type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.AggregationKind">
          <ownedComments body="The aggregation for the first end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p2o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end1Name" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The name for the first end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p3o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end1Lower" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
          <ownedComments body="The lower bound for the first end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p4o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end1Upper" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural">
          <ownedComments body="The upper bound for the first end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p5o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end1Type" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
          <ownedComments body="The type for the first end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p6o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end2IsNavigable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
          <ownedComments body="The navigability for the second end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p7o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end2Aggregation" type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.AggregationKind">
          <ownedComments body="The aggregation for the second end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p8o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end2Name" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The name for the second end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p9o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end2Lower" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
          <ownedComments body="The lower bound for the second end of the new association."/>
        </ownedParameters>
        <ownedParameters xmi:id="p10o.RefUML.Type.createAssociation..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural..RefUML.Type..RefUML.Boolean..RefUML.AggregationKind..RefUML.String..RefUML.Integer..RefUML.UnlimitedNatural"
            name="end2Upper" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural">
          <ownedComments body="The upper bound for the second end of the new association."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Type.getAssociations" name="getAssociations" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.41">
        <ownedComments body="Retrieves the associations in which this type is involved."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Type.conformsTo..RefUML.Type" name="conformsTo" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations.&#xD;&#xA;result = false"/>
        <ownedParameters xmi:id="p0o.RefUML.Type.conformsTo..RefUML.Type" name="other" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Type"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.Type.package" name="package" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Package"
          isDerived="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Package.ownedType">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>null</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="Specifies the owning package of this classifier, if any."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Type.Association" name="Association" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.42"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Association.endType"/>
      <ownedProperties xmi:id="p.RefUML.Type.TypedElement" name="TypedElement" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.43"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.TypedElement.type"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Association" name="Association" superClasses="RefUML.ecore.oclas#T.RefUML.Classifier RefUML.ecore.oclas#T.RefUML.Relationship">
      <ownedComments body="An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link."/>
      <ownedOperations xmi:id="o.RefUML.Association.isBinary" name="isBinary" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="Determines whether this association is a binary association, i.e. whether it has exactly two member ends."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Association.getEndTypes" name="getEndTypes" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.44">
        <ownedComments body="endType is derived from the types of the member ends.&#xD;&#xA;result = self.memberEnd->collect(e | e.type)"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.Association.ownedEnd" name="ownedEnd" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.45"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.Property.owningAssociation">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The ends that are owned by the association itself."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Association.memberEnd" name="memberEnd" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.46"
          opposite="RefUML.ecore.oclas#p.RefUML.Property.association">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Each end represents participation of instances of the classifier connected to the end in links of the association."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Association.isDerived" name="isDerived" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="false">
        <ownedComments body="Specifies whether the association is derived from other model elements such as other associations or constraints."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Association.endType" name="endType" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.47"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Type.Association">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>self.memberEnd->collect(e | e.type)</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="References the classifiers that are used as types of the ends of the association."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Association.navigableOwnedEnd" name="navigableOwnedEnd" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.48"
          opposite="RefUML.ecore.oclas#p.RefUML.Property.Association">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The navigable ends that are owned by the association itself."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Classifier" name="Classifier" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.Namespace RefUML.ecore.oclas#T.RefUML.RedefinableElement RefUML.ecore.oclas#T.RefUML.Type">
      <ownedComments body="A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers.&#xD;&#xA;A classifier has the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.&#xD;&#xA;A classifier has the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a use case.&#xD;&#xA;Classifier is defined to be a kind of templateable element so that a classifier can be parameterized. It is also defined to be a kind of parameterable element so that a classifier can be a formal template parameter."/>
      <ownedOperations xmi:id="o.RefUML.Classifier.getAllAttributes" name="getAllAttributes" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.48">
        <ownedComments body="Retrieves all the attributes of this classifier, including those inherited from its parents."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.getGenerals" name="getGenerals" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.49">
        <ownedComments body="The general classifiers are the classifiers referenced by the generalization relationships.&#xD;&#xA;result = self.parents()"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.getInheritedMembers" name="getInheritedMembers" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39">
        <ownedComments body="The inheritedMember association is derived by inheriting the inheritable members of the parents.&#xD;&#xA;result = self.inherit(self.parents()->collect(p | p.inheritableMembers(self))"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.allFeatures" name="allFeatures" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.50">
        <ownedComments body="The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature.&#xD;&#xA;result = member->select(oclIsKindOf(Feature))"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.parents" name="parents" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.49">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>generalization.general</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The query parents() gives all of the immediate ancestors of a generalized Classifier.&#xD;&#xA;result = generalization.general"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.inheritableMembers..RefUML.Classifier" name="inheritableMembers" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39">
        <ownedComments body="The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply.&#xD;&#xA;c.allParents()->includes(self)&#xD;&#xA;result = member->select(m | c.hasVisibilityOf(m))"/>
        <ownedParameters xmi:id="p0o.RefUML.Classifier.inheritableMembers..RefUML.Classifier" name="c" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasVisibilityOf..RefUML.NamedElement" name="hasVisibilityOf" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent.&#xD;&#xA;self.allParents()->collect(c | c.member)->includes(n)&#xD;&#xA;result = if (self.inheritedMember->includes(n)) then (n.visibility &lt;> #private) else true"/>
        <ownedParameters xmi:id="p0o.RefUML.Classifier.hasVisibilityOf..RefUML.NamedElement" name="n" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.conformsTo..RefUML.Classifier" name="conformsTo" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations.&#xD;&#xA;result = (self=other) or (self.allParents()->includes(other))"/>
        <ownedParameters xmi:id="p0o.RefUML.Classifier.conformsTo..RefUML.Classifier" name="other" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.inherit..$$.Set" name="inherit" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>inhs</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The inherit operation is overridden to exclude redefined properties.&#xD;&#xA;The query inherit() defines how to inherit a set of elements. Here the operation is defined to inherit them all. It is intended to be redefined in circumstances where inheritance is affected by redefinition.&#xD;&#xA;result = inhs"/>
        <ownedParameters xmi:id="p0o.RefUML.Classifier.inherit..$$.Set" name="inhs" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.maySpecializeType..RefUML.Classifier" name="maySpecializeType" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints.&#xD;&#xA;result = self.oclIsKindOf(c.oclType)"/>
        <ownedParameters xmi:id="p0o.RefUML.Classifier.maySpecializeType..RefUML.Classifier" name="c" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.allParents" name="allParents" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.49">
        <ownedComments body="The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier.&#xD;&#xA;result = self.parents()->union(self.parents()->collect(p | p.allParents())"/>
        <bodyExpression xsi:type="pivot:ExpressionInOCL" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.51" body="self.parents()->union(self.parents()->collect(p : Classifier | p.allParents()))">
          <ownedBody xsi:type="pivot:OperationCallExp" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.51" referredOperation="http://www.eclipse.org/ocl/2015/Library.oclas#o.ocl.Collection.union..ocl.Collection">
            <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.32"
                referredOperation="RefUML.ecore.oclas#o.RefUML.Classifier.parents">
              <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.21/@ownedOperations.10/@bodyExpression/@ownedContext"/>
            </ownedSource>
            <ownedArguments xsi:type="pivot:IteratorExp" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.52" referredIteration="http://www.eclipse.org/ocl/2015/Library.oclas#i.ocl.Set.collect..T">
              <ownedSource xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.32"
                  referredOperation="RefUML.ecore.oclas#o.RefUML.Classifier.parents">
                <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.21/@ownedOperations.10/@bodyExpression/@ownedContext"/>
              </ownedSource>
              <ownedBody xsi:type="pivot:OperationCallExp" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.32"
                  referredOperation="RefUML.ecore.oclas#o.RefUML.Classifier.allParents">
                <ownedSource xsi:type="pivot:VariableExp" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" referredVariable="pivot:Variable RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.21/@ownedOperations.10/@bodyExpression/@ownedBody/@ownedArguments.0/@ownedIterators.0"/>
              </ownedBody>
              <ownedIterators name="p" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" representedParameter="http://www.eclipse.org/ocl/2015/Library.oclas#i0i.ocl.Set.collect..T"/>
            </ownedArguments>
          </ownedBody>
          <ownedContext name="self" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"/>
        </bodyExpression>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasKindAncestor" name="hasKindAncestor" isRequired="false" type="pivot:PrimitiveType http://www.eclipse.org/ocl/2015/Library.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>allParents()->including(self)->exists ( x | x.oclIsKindOf (Kind) )</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasQuantityAncestor" name="hasQuantityAncestor" isRequired="false" type="pivot:PrimitiveType http://www.eclipse.org/ocl/2015/Library.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>allParents()->including(self)->exists ( x | x.oclIsKindOf (Quantity) )</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasCollectiveAncestor" name="hasCollectiveAncestor" isRequired="false" type="pivot:PrimitiveType http://www.eclipse.org/ocl/2015/Library.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>allParents()->including(self)->exists ( x | x.oclIsKindOf (Collective) )</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasKindOffspring" name="hasKindOffspring" isRequired="false" type="pivot:PrimitiveType http://www.eclipse.org/ocl/2015/Library.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>ObjectClass.allInstances()->select ( x | x.allParents()->includes(self) )->forAll ( y | not y.hasQuantityAncestor() and not y.hasCollectiveAncestor() )</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasQuantityOffspring" name="hasQuantityOffspring" isRequired="false" type="pivot:PrimitiveType http://www.eclipse.org/ocl/2015/Library.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>ObjectClass.allInstances()->select ( x | x.allParents()->includes(self) )->forAll ( y | not y.hasKindAncestor() and not y.hasCollectiveAncestor() )</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasCollectiveOffspring" name="hasCollectiveOffspring" isRequired="false" type="pivot:PrimitiveType http://www.eclipse.org/ocl/2015/Library.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>ObjectClass.allInstances()->select ( x | x.allParents()->includes(self) )->forAll ( y | not y.hasKindAncestor() and not y.hasQuantityAncestor() )</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasFunctionalComplexInstances" name="hasFunctionalComplexInstances" isRequired="false"
          type="pivot:PrimitiveType http://www.eclipse.org/ocl/2015/Library.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>if oclIsKindOf (SortalClass) then&#xD;
	hasKindAncestor()&#xD;
else&#xD;
	if oclIsKindOf (MixinClass) then&#xD;
		hasKindOffspring()&#xD;
	else&#xD;
		false&#xD;
	endif&#xD;
endif</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasQuantityInstances" name="hasQuantityInstances" isRequired="false" type="pivot:PrimitiveType http://www.eclipse.org/ocl/2015/Library.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>if oclIsKindOf (SortalClass) then&#xD;
	hasQuantityAncestor()&#xD;
else&#xD;
	if oclIsKindOf (MixinClass) then&#xD;
		hasQuantityOffspring()&#xD;
	else&#xD;
		false&#xD;
	endif&#xD;
endif</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.hasCollectiveInstances" name="hasCollectiveInstances" isRequired="false" type="pivot:PrimitiveType http://www.eclipse.org/ocl/2015/Library.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>if oclIsKindOf (SortalClass) then&#xD;
	hasCollectiveAncestor()&#xD;
else&#xD;
	if oclIsKindOf (MixinClass) then&#xD;
		hasCollectiveOffspring()&#xD;
	else&#xD;
		false&#xD;
	endif&#xD;
endif</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Classifier.isTemplate" name="isTemplate" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isTemplate() returns whether this templateable element is actually a template.&#xD;&#xA;result = oclAsType(TemplatableElement).isTemplate() or general->exists(g | g.isTemplate())"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.Classifier.isAbstract" name="isAbstract" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="false">
        <ownedComments body="If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.&#xD;&#xA;"/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Classifier.generalization" name="generalization" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.53"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.Generalization.specific">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Classifier.powertypeExtent" name="powertypeExtent" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.54"
          opposite="RefUML.ecore.oclas#p.RefUML.GeneralizationSet.powertype">
        <ownedComments body="Designates the GeneralizationSet of which the associated Classifier is a power type."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Classifier.feature" name="feature" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.50"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Feature.featuringClassifier">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>if oclIsKindOf(Association) then&#xD;
	oclAsType(Association).ownedEnd&#xD;
else&#xD;
	attribute&#xD;
endif</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features.&#xD;&#xA;Specifies each feature defined in the classifier."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Classifier.inheritedMember" name="inheritedMember" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.NamedElement.Classifier">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>Set {}</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="Specifies all elements inherited by this classifier from the general classifiers."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Classifier.redefinedClassifier" name="redefinedClassifier" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.49"
          opposite="RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.21/@ownedProperties.13">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the Classifiers that are redefined by this Classifier."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Classifier.general" name="general" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.49"
          isDerived="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.21/@ownedProperties.8">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>parents()</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="References the general classifier in the Generalization relationship.&#xD;&#xA;Specifies the general Classifiers for this Classifier."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Classifier.attribute" name="attribute" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.48"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Property.Classifier">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>if self.oclIsKindOf(Class) then&#xD;
	self.oclAsType(Class).ownedAttribute&#xD;
else&#xD;
	if self.oclIsKindOf(DataType) then&#xD;
		self.oclAsType(DataType).ownedAttribute&#xD;
	else&#xD;
		Set {}&#xD;
	endif&#xD;
endif</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier."/>
      </ownedProperties>
      <ownedProperties name="Classifier" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.28" isImplicit="true"
          opposite="RefUML.ecore.oclas#p.RefUML.Classifier.general"/>
      <ownedProperties xmi:id="p.RefUML.Classifier.Generalization" name="Generalization" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.55"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Generalization.general"/>
      <ownedProperties xmi:id="p.RefUML.Classifier.Class" name="Class" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Class"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Class.nestedClassifier"/>
      <ownedProperties xmi:id="p.RefUML.Classifier.InstanceSpecification" name="InstanceSpecification" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.56"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.InstanceSpecification.classifier"/>
      <ownedProperties xmi:id="p.RefUML.Classifier.RedefinableElement" name="RedefinableElement" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.57"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.RedefinableElement.redefinitionContext"/>
      <ownedProperties name="Classifier" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.28" isImplicit="true"
          opposite="RefUML.ecore.oclas#p.RefUML.Classifier.redefinedClassifier"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.RedefinableElement" name="RedefinableElement" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.NamedElement">
      <ownedComments body="A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier."/>
      <ownedOperations xmi:id="o.RefUML.RedefinableElement.isConsistentWith..RefUML.RedefinableElement" name="isConsistentWith" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.&#xD;&#xA;redefinee.isRedefinitionContextValid(self)&#xD;&#xA;result = false"/>
        <ownedParameters xmi:id="p0o.RefUML.RedefinableElement.isConsistentWith..RefUML.RedefinableElement" name="redefinee" type="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.RedefinableElement.isRedefinitionContextValid..RefUML.RedefinableElement" name="isRedefinitionContextValid"
          type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.&#xD;&#xA;result = redefinitionContext->exists(c | c.allParents()->includes(redefined.redefinitionContext)))"/>
        <ownedParameters xmi:id="p0o.RefUML.RedefinableElement.isRedefinitionContextValid..RefUML.RedefinableElement" name="redefined"
            type="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.RedefinableElement.isLeaf" name="isLeaf" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="false">
        <ownedComments body="Indicates whether it is possible to further specialize a RedefinableElement. If the value is true, then it is not possible to further specialize the RedefinableElement."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.RedefinableElement.redefinedElement" name="redefinedElement" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.58"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.RedefinableElement.RedefinableElement">
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>Set {}</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The redefinable element that is being redefined by this element."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.RedefinableElement.redefinitionContext" name="redefinitionContext" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.49"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Classifier.RedefinableElement">
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>Set {}</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="References the contexts that this element may be redefined from."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.RedefinableElement.RedefinableElement" name="RedefinableElement" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.57"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.RedefinableElement.redefinedElement"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Generalization" name="Generalization" superClasses="RefUML.ecore.oclas#T.RefUML.DirectedRelationship">
      <ownedComments body="A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an indirect instance of the general classifier. Thus, the specific classifier inherits the features of the more general classifier.&#xD;&#xA;A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier."/>
      <ownedProperties xmi:id="p.RefUML.Generalization.isSubstitutable" name="isSubstitutable" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="true">
        <ownedComments body="Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Generalization.general" name="general" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"
          opposite="RefUML.ecore.oclas#p.RefUML.Classifier.Generalization">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the general classifier in the Generalization relationship."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Generalization.generalizationSet" name="generalizationSet" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.54"
          isResolveProxies="false" opposite="RefUML.ecore.oclas#p.RefUML.GeneralizationSet.generalization">
        <ownedComments body="Designates a set in which instances of Generalization is considered members."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Generalization.specific" name="specific" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"
          opposite="RefUML.ecore.oclas#p.RefUML.Classifier.generalization">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the specializing classifier in the Generalization relationship."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.GeneralizationSet" name="GeneralizationSet" superClasses="RefUML.ecore.oclas#T.RefUML.PackageableElement">
      <ownedComments body="A generalization set is a packageable element whose instances define collections of subsets of generalization relationships."/>
      <ownedProperties xmi:id="p.RefUML.GeneralizationSet.isCovering" name="isCovering" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="false">
        <ownedComments body="Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.GeneralizationSet.isDisjoint" name="isDisjoint" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="false">
        <ownedComments body="Indicates whether or not the set of specific Classifiers in a Generalization relationship have instance in common. If isDisjoint is true, the specific Classifiers for a particular GeneralizationSet have no members in common; that is, their intersection is empty. If isDisjoint is false, the specific Classifiers in a particular GeneralizationSet have one or more members in common; that is, their intersection is not empty. For example, Person could have two Generalization relationships, each with the different specific Classifier: Manager or Staff. This would be disjoint because every instance of Person must either be a Manager or Staff. In contrast, Person could have two Generalization relationships involving two specific (and non-covering) Classifiers: Sales Person and Manager. This GeneralizationSet would not be disjoint because there are instances of Person which can be a Sales Person and a Manager."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.GeneralizationSet.powertype" name="powertype" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"
          opposite="RefUML.ecore.oclas#p.RefUML.Classifier.powertypeExtent">
        <ownedComments body="Designates the Classifier that is defined as the power type for the associated GeneralizationSet."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.GeneralizationSet.generalization" name="generalization" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.53"
          isResolveProxies="false" isTransient="true" opposite="RefUML.ecore.oclas#p.RefUML.Generalization.generalizationSet">
        <ownedComments body="Designates the instances of Generalization which are members of a given GeneralizationSet."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Feature" name="Feature" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.RedefinableElement">
      <ownedComments body="A feature declares a behavioral or structural characteristic of instances of classifiers."/>
      <ownedProperties xmi:id="p.RefUML.Feature.isStatic" name="isStatic" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" defaultValueString="false">
        <ownedComments body="Specifies whether this feature characterizes individual instances classified by the classifier (false) or the classifier itself (true)."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Feature.featuringClassifier" name="featuringClassifier" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.49"
          isDerived="true" isReadOnly="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Classifier.feature">
        <ownedAnnotations xsi:type="pivot:Annotation" name="union"/>
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>Set {}</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The Classifiers that have this Feature as a feature."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.OpaqueExpression" name="OpaqueExpression" superClasses="RefUML.ecore.oclas#T.RefUML.ValueSpecification">
      <ownedComments body="An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context.&#xD;&#xA;Provides a mechanism for precisely defining the behavior of an opaque expression. An opaque expression is defined by a behavior restricted to return one result."/>
      <ownedOperations xmi:id="o.RefUML.OpaqueExpression.getResult" name="getResult" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.OpaqueExpression.value" name="value" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
        <ownedComments body="The query value() gives an integer value for an expression intended to produce one.&#xD;&#xA;self.isIntegral()&#xD;&#xA;true"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.OpaqueExpression.isIntegral" name="isIntegral" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isIntegral() tells whether an expression is intended to produce an integer.&#xD;&#xA;result = false"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.OpaqueExpression.isPositive" name="isPositive" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isPositive() tells whether an integer expression has a positive value.&#xD;&#xA;self.isIntegral()&#xD;&#xA;result = false"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.OpaqueExpression.isNonNegative" name="isNonNegative" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isNonNegative() tells whether an integer expression has a non-negative value.&#xD;&#xA;self.isIntegral()&#xD;&#xA;result = false"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.OpaqueExpression.stringValue" name="stringValue" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.OpaqueExpression.body" name="body" type="pivot:SequenceType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.59"
          isUnsettable="true">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
          <ownedDetails name="kind">
            <values>element</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The text of the expression, possibly in multiple languages."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.OpaqueExpression.language" name="language" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.60"
          isUnsettable="true">
        <ownedComments body="Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.MultiplicityElement" name="MultiplicityElement" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.Element">
      <ownedComments body="A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element."/>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.setLower..RefUML.Integer" name="setLower" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedParameters xmi:id="p0o.RefUML.MultiplicityElement.setLower..RefUML.Integer" name="newLower" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.setUpper..RefUML.UnlimitedNatural" name="setUpper" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedParameters xmi:id="p0o.RefUML.MultiplicityElement.setUpper..RefUML.UnlimitedNatural" name="newUpper" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.getLower" name="getLower" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="documentation">
            <values>The derived lower attribute must equal the lowerBound.&#xD;
result = lowerBound()</values>
          </ownedDetails>
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.getUpper" name="getUpper" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="documentation">
            <values>The derived upper attribute must equal the upperBound.&#xD;
result = upperBound()</values>
          </ownedDetails>
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.isMultivalued" name="isMultivalued" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.&#xD;&#xA;upperBound()->notEmpty()&#xD;&#xA;result = upperBound() > 1"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.includesCardinality..RefUML.Integer" name="includesCardinality" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.&#xD;&#xA;upperBound()->notEmpty() and lowerBound()->notEmpty()&#xD;&#xA;result = (lowerBound() &lt;= C) and (upperBound() >= C)"/>
        <ownedParameters xmi:id="p0o.RefUML.MultiplicityElement.includesCardinality..RefUML.Integer" name="C" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.includesMultiplicity..RefUML.MultiplicityElement" name="includesMultiplicity"
          type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.&#xD;&#xA;self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()&#xD;&#xA;result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())"/>
        <ownedParameters xmi:id="p0o.RefUML.MultiplicityElement.includesMultiplicity..RefUML.MultiplicityElement" name="M" type="pivot:Class RefUML.ecore.oclas#T.RefUML.MultiplicityElement"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.lowerBound" name="lowerBound" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>if lowerValue->isEmpty() then 1 else lowerValue.oclAsType(LiteralInteger).value endif</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The query lowerBound() returns the lower bound of the multiplicity as an integer.&#xD;&#xA;result = if lowerValue->isEmpty() then 1 else lowerValue.integerValue() endif"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.upperBound" name="upperBound" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="body">
            <values>if upperValue->isEmpty() then 1 else upperValue.oclAsType(LiteralUnlimitedNatural).value endif</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.&#xD;&#xA;result = if upperValue->isEmpty() then 1 else upperValue.unlimitedValue() endif"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.compatibleWith..RefUML.MultiplicityElement" name="compatibleWith" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.&#xD;&#xA;result = Integer.allInstances()->forAll(i : Integer | self.includesCardinality(i) implies other.includesCardinality(i))"/>
        <ownedParameters xmi:id="p0o.RefUML.MultiplicityElement.compatibleWith..RefUML.MultiplicityElement" name="other" type="pivot:Class RefUML.ecore.oclas#T.RefUML.MultiplicityElement"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.MultiplicityElement.is..RefUML.Integer..RefUML.Integer" name="is" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The operation is determines if the upper and lower bound of the ranges are the ones given.&#xD;&#xA;result = (lowerbound = self.lowerbound and upperbound = self.upperbound)"/>
        <ownedParameters xmi:id="p0o.RefUML.MultiplicityElement.is..RefUML.Integer..RefUML.Integer" name="lowerbound" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer"/>
        <ownedParameters xmi:id="p1o.RefUML.MultiplicityElement.is..RefUML.Integer..RefUML.Integer" name="upperbound" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.MultiplicityElement.isOrdered" name="isOrdered" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="false">
        <ownedComments body="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.MultiplicityElement.isUnique" name="isUnique" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="true">
        <ownedComments body="For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.MultiplicityElement.upper" name="upper" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural"
          defaultValueString="1" isDerived="true" isTransient="true" isVolatile="true">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>upperBound()</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="Specifies the upper bound of the multiplicity interval."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.MultiplicityElement.lower" name="lower" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer"
          defaultValueString="1" isDerived="true" isTransient="true" isVolatile="true">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>lowerBound()</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="Specifies the lower bound of the multiplicity interval."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.MultiplicityElement.upperValue" name="upperValue" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification"
          isComposite="true" opposite="RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.17/@ownedProperties.2">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The specification of the upper bound for this multiplicity."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.MultiplicityElement.lowerValue" name="lowerValue" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification"
          isComposite="true" opposite="RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.17/@ownedProperties.6">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The specification of the lower bound for this multiplicity."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Property" name="Property" superClasses="RefUML.ecore.oclas#T.RefUML.StructuralFeature">
      <ownedComments body="A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association.&#xD;&#xA;A property represents a set of instances that are owned by a containing classifier instance.&#xD;&#xA;A property has the capability of being a deployment target in a deployment relationship. This enables modeling the deployment to hierarchical nodes that have properties functioning as internal parts.&#xD;&#xA;Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. The range of valid values represented by the property can be controlled by setting the property's type.&#xD;&#xA;Property specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."/>
      <ownedOperations xmi:id="o.RefUML.Property.getDefault" name="getDefault" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.isSetDefault" name="isSetDefault" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.setDefault..RefUML.String" name="setDefault" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedParameters xmi:id="p0o.RefUML.Property.setDefault..RefUML.String" name="newDefault" type="pivot:PrimitiveType RefUML.ecore.oclas#String"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.setIsComposite..RefUML.Boolean" name="setIsComposite" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedParameters xmi:id="p0o.RefUML.Property.setIsComposite..RefUML.Boolean" name="newIsComposite" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.setOpposite..RefUML.Property" name="setOpposite" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedParameters xmi:id="p0o.RefUML.Property.setOpposite..RefUML.Property" name="newOpposite" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Property"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.unsetDefault" name="unsetDefault" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.setIsNavigable..RefUML.Boolean" name="setIsNavigable" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Sets the navigability of this property as indicated."/>
        <ownedParameters xmi:id="p0o.RefUML.Property.setIsNavigable..RefUML.Boolean" name="isNavigable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
          <ownedComments body="The new navigability."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.getOtherEnd" name="getOtherEnd" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Property">
        <ownedComments body="Retrieves the other end of the (binary) association in which this property is a member end."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.setBooleanDefaultValue..RefUML.Boolean" name="setBooleanDefaultValue" isRequired="false"
          type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Sets the default value for this property to the specified Boolean value."/>
        <ownedParameters xmi:id="p0o.RefUML.Property.setBooleanDefaultValue..RefUML.Boolean" name="value" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
          <ownedComments body="The new default value."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.setIntegerDefaultValue..RefUML.Integer" name="setIntegerDefaultValue" isRequired="false"
          type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Sets the default value for this property to the specified integer value."/>
        <ownedParameters xmi:id="p0o.RefUML.Property.setIntegerDefaultValue..RefUML.Integer" name="value" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
          <ownedComments body="The new default value."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.setStringDefaultValue..RefUML.String" name="setStringDefaultValue" isRequired="false"
          type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Sets the default value for this property to the specified string value."/>
        <ownedParameters xmi:id="p0o.RefUML.Property.setStringDefaultValue..RefUML.String" name="value" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The new default value."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.setUnlimitedNaturalDefaultValue..RefUML.UnlimitedNatural" name="setUnlimitedNaturalDefaultValue"
          isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Sets the default value for this property to the specified unlimited natural value."/>
        <ownedParameters xmi:id="p0o.RefUML.Property.setUnlimitedNaturalDefaultValue..RefUML.UnlimitedNatural" name="value" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural">
          <ownedComments body="The new default value."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.setNullDefaultValue" name="setNullDefaultValue" isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Sets the default value for this property to the null value."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.isAttribute..RefUML.Property" name="isAttribute" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isAttribute() is true if the Property is defined as an attribute of some classifier.&#xD;&#xA;result = Classifier.allInstances->exists(c | c.attribute->includes(p))"/>
        <ownedParameters xmi:id="p0o.RefUML.Property.isAttribute..RefUML.Property" name="p" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Property"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.getOpposite" name="getOpposite" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Property">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="documentation">
            <values>If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.&#xD;
result = if owningAssociation->isEmpty() and association.memberEnd->size() = 2
  then
    let otherEnd = (association.memberEnd - self)->any() in
      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif
    else Set {}
    endif</values>
          </ownedDetails>
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.isComposite" name="isComposite" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The value of isComposite is true only if aggregation is composite.&#xD;&#xA;result = (self.aggregation = #composite)"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.subsettingContext" name="subsettingContext" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.15">
        <ownedComments body="The query subsettingContext() gives the context for subsetting a property. It consists, in the case of an attribute, of the corresponding classifier, and in the case of an association end, all of the classifiers at the other ends.&#xD;&#xA;result = if association->notEmpty()&#xA;then association.endType-type&#xA;else if classifier->notEmpty() then Set{classifier} else Set{} endif&#xA;endif"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.isNavigable" name="isNavigable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isNavigable() indicates whether it is possible to navigate across the property.&#xD;&#xA;result = not classifier->isEmpty() or association.owningAssociation.navigableOwnedEnd->includes(self)"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Property.isConsistentWith..RefUML.RedefinableElement" name="isConsistentWith" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining property is consistent with a redefined property if the type of the redefining property conforms to the type of the redefined property, the multiplicity of the redefining property (if specified) is contained in the multiplicity of the redefined property, and the redefining property is derived if the redefined property is derived.&#xD;&#xA;redefinee.isRedefinitionContextValid(self)&#xD;&#xA;result = redefinee.oclIsKindOf(Property) and &#xA;  let prop : Property = redefinee.oclAsType(Property) in &#xA;  (prop.type.conformsTo(self.type) and &#xA;  ((prop.lowerBound()->notEmpty() and self.lowerBound()->notEmpty()) implies prop.lowerBound() >= self.lowerBound()) and &#xA;  ((prop.upperBound()->notEmpty() and self.upperBound()->notEmpty()) implies prop.lowerBound() &lt;= self.lowerBound()) and &#xA;  (self.isDerived implies prop.isDerived) and&#xA;  (self.isComposite implies prop.isComposite))"/>
        <ownedParameters xmi:id="p0o.RefUML.Property.isConsistentWith..RefUML.RedefinableElement" name="redefinee" type="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.Property.class" name="class" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Class"
          isReadOnly="true" isTransient="true" opposite="RefUML.ecore.oclas#p.RefUML.Class.ownedAttribute">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the Class that owns the Property."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.datatype" name="datatype" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.DataType"
          opposite="RefUML.ecore.oclas#p.RefUML.DataType.ownedAttribute">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The DataType that owns this Property."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.isDerived" name="isDerived" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" defaultValueString="false">
        <ownedComments body="If isDerived is true, the value of the attribute is derived from information elsewhere.&#xD;&#xA;Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.isDerivedUnion" name="isDerivedUnion" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="false">
        <ownedComments body="Specifies whether the property is derived as the union of all of the properties that are constrained to subset it."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.default" name="default" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
          isDerived="true" isTransient="true" isUnsettable="true">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>null</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="Specifies a String that represents a value to be used when no argument is supplied for the Property.&#xD;&#xA;A String that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.aggregation" name="aggregation" type="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.AggregationKind"
          defaultValueString="none">
        <ownedComments body="Specifies the kind of aggregation that applies to the Property."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.isComposite" name="isComposite" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="false" isDerived="true" isTransient="true" isVolatile="true">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>self.aggregation = AggregationKind::composite</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute.&#xD;&#xA;This is a derived value, indicating whether the aggregation of the Property is composite or not."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.redefinedProperty" name="redefinedProperty" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.48"
          opposite="RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.28/@ownedProperties.15">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the properties that are redefined by this property."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.owningAssociation" name="owningAssociation" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Association"
          opposite="RefUML.ecore.oclas#p.RefUML.Association.ownedEnd">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the owning association of this property, if any."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.defaultValue" name="defaultValue" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.ValueSpecification.Property">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.opposite" name="opposite" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Property"
          isDerived="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.28/@ownedProperties.14">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>if self.association.memberEnd->size() = 2 then&#xD;
	let otherEnd : Property  = association.memberEnd->any( x | x &lt;> self) in &#xD;
&#xD;
	if self.owningAssociation->isEmpty() then&#xD;
		if otherEnd.owningAssociation->isEmpty() then&#xD;
			otherEnd&#xD;
		else&#xD;
			null&#xD;
		endif&#xD;
	else&#xD;
		otherEnd&#xD;
	endif&#xD;
else&#xD;
	null&#xD;
endif</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.subsettedProperty" name="subsettedProperty" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.48"
          opposite="RefUML.ecore.oclas#//@ownedPackages.0/@ownedClasses.28/@ownedProperties.16">
        <ownedComments body="References the properties of which this property is constrained to be a subset."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.association" name="association" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Association"
          opposite="RefUML.ecore.oclas#p.RefUML.Association.memberEnd">
        <ownedComments body="References the association of which this property is a member, if any."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Property.isReadOnly" name="isReadOnly" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" defaultValueString="false">
        <ownedComments body="If isReadOnly is true, the attribute may not be written to after initialization.&#xD;&#xA;If true, the attribute may only be read, and not written."/>
      </ownedProperties>
      <ownedProperties name="Property" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.61" isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Property.opposite"/>
      <ownedProperties name="Property" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.61" isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Property.redefinedProperty"/>
      <ownedProperties name="Property" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.61" isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Property.subsettedProperty"/>
      <ownedProperties xmi:id="p.RefUML.Property.Association" name="Association" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.42"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Association.navigableOwnedEnd"/>
      <ownedProperties xmi:id="p.RefUML.Property.Classifier" name="Classifier" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.28"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Classifier.attribute"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Class" name="Class" superClasses="RefUML.ecore.oclas#T.RefUML.Classifier">
      <ownedComments body="A class describes a set of objects that share the same specifications of features, constraints, and semantics.&#xD;&#xA;A class may be designated as active (i.e., each of its instances having its own thread of control) or passive (i.e., each of its instances executing within the context of some other object). A class may also specify which signals the instances of this class handle.&#xD;&#xA;A class has the capability to have an internal structure and ports.&#xD;&#xA;Class has derived association that indicates how it may be extended through one or more stereotypes. Stereotype is the only kind of metaclass that cannot be extended by stereotypes."/>
      <ownedOperations xmi:id="o.RefUML.Class.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="createOwnedOperation"
          isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Creates an operation with the specified name, parameter names, parameter types, and return type (or null) as an owned operation of this class."/>
        <ownedParameters xmi:id="p0o.RefUML.Class.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="name" isRequired="false"
            type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The name for the new operation, or null."/>
        </ownedParameters>
        <ownedParameters xmi:id="p1o.RefUML.Class.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="parameterNames"
            type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.3">
          <ownedComments body="The parameter names for the new operation, or null."/>
        </ownedParameters>
        <ownedParameters xmi:id="p2o.RefUML.Class.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="parameterTypes"
            type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.15">
          <ownedComments body="The parameter types for the new operation, or null."/>
        </ownedParameters>
        <ownedParameters xmi:id="p3o.RefUML.Class.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="returnType"
            isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
          <ownedComments body="The return type for the new operation, or null."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Class.isMetaclass" name="isMetaclass" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="Determines whether this class is a metaclass."/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.Class.inherit..$$.Set" name="inherit" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39">
        <ownedComments body="The inherit operation is overridden to exclude redefined properties.&#xD;&#xA;result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))"/>
        <ownedParameters xmi:id="p0o.RefUML.Class.inherit..$$.Set" name="inhs" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.Class.nestedClassifier" name="nestedClassifier" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.62"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.Classifier.Class">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References all the Classifiers that are defined (nested) within the Class."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Class.superClass" name="superClass" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.63"
          isDerived="true" isTransient="true" isVolatile="true" opposite="RefUML.ecore.oclas#p.RefUML.Class.Class">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/ocl/examples/OCL">
          <ownedDetails name="derive">
            <values>Set {}</values>
          </ownedDetails>
        </ownedAnnotations>
        <ownedComments body="This gives the superclasses of a class."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Class.isActive" name="isActive" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" defaultValueString="false">
        <ownedComments body="Determines whether an object specified by this class is active or not. If true, then the owning class is referred to as an active class. If false, then such a class is referred to as a passive class."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Class.ownedAttribute" name="ownedAttribute" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.45"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.Property.class"/>
      <ownedProperties xmi:id="p.RefUML.Class.isAbstract" name="isAbstract" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" defaultValueString="false">
        <ownedComments body="True when a class is abstract.&#xD;&#xA;If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships."/>
      </ownedProperties>
      <ownedProperties xmi:id="_kihSAAqvEeeg3O-b2bc_Dg" name="ownedAttribute" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.45"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.Property.class">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The attributes (i.e. the properties) owned by the class."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Class.Class" name="Class" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.64"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Class.superClass"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Model" name="Model" superClasses="RefUML.ecore.oclas#T.RefUML.Package">
      <ownedComments body="A model captures a view of a physical system. It is an abstraction of the physical system, with a certain purpose. This purpose determines what is to be included in the model and what is irrelevant. Thus the model completely describes those aspects of the physical system that are relevant to the purpose of the model, at the appropriate level of detail."/>
      <ownedOperations xmi:id="o.RefUML.Model.isMetamodel" name="isMetamodel" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="Determines whether this model is a metamodel."/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.Model.viewpoint" name="viewpoint" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
          isUnsettable="true">
        <ownedComments body="The name of the viewpoint that is expressed by a model (This name may refer to a profile definition)."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.DataType" name="DataType" superClasses="RefUML.ecore.oclas#T.RefUML.Classifier">
      <ownedComments body="A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types."/>
      <ownedOperations xmi:id="o.RefUML.DataType.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="createOwnedOperation"
          isRequired="false" type="pivot:VoidType http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclVoid">
        <ownedComments body="Creates an operation with the specified name, parameter names, parameter types, and return type (or null) as an owned operation of this data type."/>
        <ownedParameters xmi:id="p0o.RefUML.DataType.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="name" isRequired="false"
            type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The name for the new operation, or null."/>
        </ownedParameters>
        <ownedParameters xmi:id="p1o.RefUML.DataType.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="parameterNames"
            type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.3">
          <ownedComments body="The parameter names for the new operation, or null."/>
        </ownedParameters>
        <ownedParameters xmi:id="p2o.RefUML.DataType.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="parameterTypes"
            type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.15">
          <ownedComments body="The parameter types for the new operation, or null."/>
        </ownedParameters>
        <ownedParameters xmi:id="p3o.RefUML.DataType.createOwnedOperation..RefUML.String..$$.Set..$$.Set..RefUML.Type" name="returnType"
            isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
          <ownedComments body="The return type for the new operation, or null."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.DataType.createOwnedAttribute..RefUML.String..RefUML.Type..RefUML.Integer..RefUML.UnlimitedNatural"
          name="createOwnedAttribute" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Property">
        <ownedComments body="Creates a property with the specified name, type, lower bound, and upper bound as an owned attribute of this data type."/>
        <ownedParameters xmi:id="p0o.RefUML.DataType.createOwnedAttribute..RefUML.String..RefUML.Type..RefUML.Integer..RefUML.UnlimitedNatural"
            name="name" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
          <ownedComments body="The name for the new attribute, or null."/>
        </ownedParameters>
        <ownedParameters xmi:id="p1o.RefUML.DataType.createOwnedAttribute..RefUML.String..RefUML.Type..RefUML.Integer..RefUML.UnlimitedNatural"
            name="type" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
          <ownedComments body="The type for the new attribute, or null."/>
        </ownedParameters>
        <ownedParameters xmi:id="p2o.RefUML.DataType.createOwnedAttribute..RefUML.String..RefUML.Type..RefUML.Integer..RefUML.UnlimitedNatural"
            name="lower" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
          <ownedComments body="The lower bound for the new attribute."/>
        </ownedParameters>
        <ownedParameters xmi:id="p3o.RefUML.DataType.createOwnedAttribute..RefUML.String..RefUML.Type..RefUML.Integer..RefUML.UnlimitedNatural"
            name="upper" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural">
          <ownedComments body="The upper bound for the new attribute."/>
        </ownedParameters>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.DataType.inherit..$$.Set" name="inherit" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39">
        <ownedComments body="The inherit operation is overridden to exclude redefined properties.&#xD;&#xA;result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))"/>
        <ownedParameters xmi:id="p0o.RefUML.DataType.inherit..$$.Set" name="inhs" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.39"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.DataType.ownedAttribute" name="ownedAttribute" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.45"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.Property.datatype">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The Attributes owned by the DataType."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.StructuralFeature" name="StructuralFeature" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.Feature RefUML.ecore.oclas#T.RefUML.TypedElement RefUML.ecore.oclas#T.RefUML.MultiplicityElement">
      <ownedComments body="A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier.&#xD;&#xA;By specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature."/>
      <ownedProperties xmi:id="p.RefUML.StructuralFeature.isReadOnly" name="isReadOnly" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"
          defaultValueString="false">
        <ownedComments body="States whether the feature's value may be modified by a client."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.StructuralFeature.Slot" name="Slot" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.65"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.Slot.definingFeature"/>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:Enumeration" xmi:id="T.RefUML.AggregationKind" name="AggregationKind" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclEnumeration">
      <ownedComments body="AggregationKind is an enumeration type that specifies the literals for defining the kind of aggregation of a property."/>
      <ownedLiterals xmi:id="e.RefUML.AggregationKind.none" name="none"/>
      <ownedLiterals xmi:id="e.RefUML.AggregationKind.shared" name="shared" value="1"/>
      <ownedLiterals xmi:id="e.RefUML.AggregationKind.composite" name="composite" value="2"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.StringExpression" name="StringExpression" superClasses="RefUML.ecore.oclas#T.RefUML.Expression">
      <ownedComments body="An expression that specifies a string value that is derived by concatenating a set of sub string expressions, some of which might be template parameters."/>
      <ownedOperations xmi:id="o.RefUML.StringExpression.stringValue" name="stringValue" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedComments body="The query stringValue() returns the string that concatenates, in order, all the component string literals of all the subexpressions that are part of the StringExpression.&#xD;&#xA;&#xD;&#xA;result = if subExpression->notEmpty()&#xA;then subExpression->iterate(se; stringValue = | stringValue.concat(se.stringValue()))&#xA;else operand->iterate()(op; stringValue =  | stringValue.concat(op.value))"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.StringExpression.subExpression" name="subExpression" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.66"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.StringExpression.owningExpression">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The StringExpressions that constitute this StringExpression."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.StringExpression.owningExpression" name="owningExpression" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.StringExpression"
          opposite="RefUML.ecore.oclas#p.RefUML.StringExpression.subExpression">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The string expression of which this expression is a substring."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.StringExpression.NamedElement" name="NamedElement" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.NamedElement.nameExpression"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Expression" name="Expression" superClasses="RefUML.ecore.oclas#T.RefUML.ValueSpecification">
      <ownedComments body="An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.&#xD;&#xA;An expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications."/>
      <ownedProperties xmi:id="p.RefUML.Expression.symbol" name="symbol" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
          isUnsettable="true">
        <ownedComments body="The symbol associated with the node in the expression tree."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Expression.operand" name="operand" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.67"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.ValueSpecification.Expression">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="Specifies a sequence of operands."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.PackageMerge" name="PackageMerge" superClasses="RefUML.ecore.oclas#T.RefUML.DirectedRelationship">
      <ownedComments body="A package merge defines how the contents of one package are extended by the contents of another package."/>
      <ownedProperties xmi:id="p.RefUML.PackageMerge.mergedPackage" name="mergedPackage" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Package"
          opposite="RefUML.ecore.oclas#p.RefUML.Package.PackageMerge">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the Package that is to be merged with the receiving package of the PackageMerge."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.PackageMerge.receivingPackage" name="receivingPackage" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Package"
          opposite="RefUML.ecore.oclas#p.RefUML.Package.packageMerge">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="References the Package that is being extended with the contents of the merged package of the PackageMerge."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Enumeration" name="Enumeration" superClasses="RefUML.ecore.oclas#T.RefUML.DataType">
      <ownedComments body="An enumeration is a data type whose values are enumerated in the model as enumeration literals."/>
      <ownedProperties xmi:id="p.RefUML.Enumeration.ownedLiteral" name="ownedLiteral" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.68"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.EnumerationLiteral.enumeration">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The ordered set of literals for this Enumeration."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.EnumerationLiteral" name="EnumerationLiteral" superClasses="RefUML.ecore.oclas#T.RefUML.InstanceSpecification">
      <ownedComments body="An enumeration literal is a user-defined data value for an enumeration."/>
      <ownedProperties xmi:id="p.RefUML.EnumerationLiteral.enumeration" name="enumeration" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.Enumeration"
          opposite="RefUML.ecore.oclas#p.RefUML.Enumeration.ownedLiteral">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The Enumeration that this EnumerationLiteral is a member of."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.InstanceSpecification" name="InstanceSpecification" superClasses="RefUML.ecore.oclas#T.RefUML.PackageableElement">
      <ownedComments body="An instance specification is a model element that represents an instance in a modeled system.&#xD;&#xA;An instance specification has the capability of being a deployment target in a deployment relationship, in the case that it is an instance of a node. It is also has the capability of being a deployed artifact, if it is an instance of an artifact."/>
      <ownedProperties xmi:id="p.RefUML.InstanceSpecification.classifier" name="classifier" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.49"
          opposite="RefUML.ecore.oclas#p.RefUML.Classifier.InstanceSpecification">
        <ownedComments body="The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.InstanceSpecification.slot" name="slot" type="pivot:SetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.69"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.Slot.owningInstance">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.InstanceSpecification.specification" name="specification" isRequired="false" type="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.ValueSpecification.InstanceSpecification">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="A specification of how to compute, derive, or construct the instance."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.InstanceSpecification.InstanceValue" name="InstanceValue" type="pivot:BagType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.70"
          isImplicit="true" opposite="RefUML.ecore.oclas#p.RefUML.InstanceValue.instance"/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.Slot" name="Slot" superClasses="RefUML.ecore.oclas#T.RefUML.Element">
      <ownedComments body="A slot specifies that an entity modeled by an instance specification has a value or values for a specific structural feature."/>
      <ownedProperties xmi:id="p.RefUML.Slot.definingFeature" name="definingFeature" type="pivot:Class RefUML.ecore.oclas#T.RefUML.StructuralFeature"
          opposite="RefUML.ecore.oclas#p.RefUML.StructuralFeature.Slot">
        <ownedComments body="The structural feature that specifies the values that may be held by the slot."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Slot.value" name="value" type="pivot:OrderedSetType RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.67"
          isComposite="true" opposite="RefUML.ecore.oclas#p.RefUML.ValueSpecification.Slot">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The value or values corresponding to the defining feature for the owning instance specification."/>
      </ownedProperties>
      <ownedProperties xmi:id="p.RefUML.Slot.owningInstance" name="owningInstance" type="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceSpecification"
          opposite="RefUML.ecore.oclas#p.RefUML.InstanceSpecification.slot">
        <ownedAnnotations xsi:type="pivot:Annotation" name="subsets"/>
        <ownedComments body="The instance specification that owns this slot."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.PrimitiveType" name="PrimitiveType" superClasses="RefUML.ecore.oclas#T.RefUML.DataType">
      <ownedComments body="A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically."/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.LiteralSpecification" name="LiteralSpecification" isAbstract="true" superClasses="RefUML.ecore.oclas#T.RefUML.ValueSpecification">
      <ownedComments body="A literal specification identifies a literal constant being modeled."/>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.LiteralInteger" name="LiteralInteger" superClasses="RefUML.ecore.oclas#T.RefUML.LiteralSpecification">
      <ownedComments body="A literal integer is a specification of an integer value."/>
      <ownedOperations xmi:id="o.RefUML.LiteralInteger.stringValue" name="stringValue" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralInteger.isComputable" name="isComputable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralInteger.integerValue" name="integerValue" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
        <ownedComments body="The query integerValue() gives the value.&#xD;&#xA;result = value"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.LiteralInteger.value" name="value" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer" defaultValueString="0">
        <ownedComments body="The specified Integer value."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.LiteralString" name="LiteralString" superClasses="RefUML.ecore.oclas#T.RefUML.LiteralSpecification">
      <ownedComments body="A literal string is a specification of a string value."/>
      <ownedOperations xmi:id="o.RefUML.LiteralString.integerValue" name="integerValue" type="pivot:PrimitiveType RefUML.ecore.oclas#Integer">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralString.unlimitedValue" name="unlimitedValue" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralString.isComputable" name="isComputable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralString.stringValue" name="stringValue" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedComments body="The query stringValue() gives the value.&#xD;&#xA;result = value"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.LiteralString.value" name="value" isRequired="false" type="pivot:PrimitiveType RefUML.ecore.oclas#String"
          isUnsettable="true">
        <ownedComments body="The specified String value."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.LiteralBoolean" name="LiteralBoolean" superClasses="RefUML.ecore.oclas#T.RefUML.LiteralSpecification">
      <ownedComments body="A literal Boolean is a specification of a Boolean value."/>
      <ownedOperations xmi:id="o.RefUML.LiteralBoolean.stringValue" name="stringValue" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralBoolean.isComputable" name="isComputable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralBoolean.booleanValue" name="booleanValue" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query booleanValue() gives the value.&#xD;&#xA;result = value"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.LiteralBoolean.value" name="value" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean" defaultValueString="false">
        <ownedComments body="The specified Boolean value."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.LiteralNull" name="LiteralNull" superClasses="RefUML.ecore.oclas#T.RefUML.LiteralSpecification">
      <ownedComments body="A literal null specifies the lack of a value."/>
      <ownedOperations xmi:id="o.RefUML.LiteralNull.isComputable" name="isComputable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralNull.isNull" name="isNull" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isNull() returns true.&#xD;&#xA;result = true"/>
      </ownedOperations>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.InstanceValue" name="InstanceValue" superClasses="RefUML.ecore.oclas#T.RefUML.ValueSpecification">
      <ownedComments body="An instance value is a value specification that identifies an instance."/>
      <ownedOperations xmi:id="o.RefUML.InstanceValue.stringValue" name="stringValue" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.InstanceValue.instance" name="instance" type="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceSpecification"
          opposite="RefUML.ecore.oclas#p.RefUML.InstanceSpecification.InstanceValue">
        <ownedComments body="The instance that is the specified value."/>
      </ownedProperties>
    </ownedClasses>
    <ownedClasses xmi:id="T.RefUML.LiteralUnlimitedNatural" name="LiteralUnlimitedNatural" superClasses="RefUML.ecore.oclas#T.RefUML.LiteralSpecification">
      <ownedComments body="A literal unlimited natural is a specification of an unlimited natural number."/>
      <ownedOperations xmi:id="o.RefUML.LiteralUnlimitedNatural.stringValue" name="stringValue" type="pivot:PrimitiveType RefUML.ecore.oclas#String">
        <ownedAnnotations xsi:type="pivot:Annotation" name="http://www.eclipse.org/emf/2002/GenModel">
          <ownedDetails name="suppressedVisibility">
            <values>true</values>
          </ownedDetails>
        </ownedAnnotations>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralUnlimitedNatural.isComputable" name="isComputable" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean">
        <ownedComments body="The query isComputable() is redefined to be true.&#xD;&#xA;result = true"/>
      </ownedOperations>
      <ownedOperations xmi:id="o.RefUML.LiteralUnlimitedNatural.unlimitedValue" name="unlimitedValue" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural">
        <ownedComments body="The query unlimitedValue() gives the value.&#xD;&#xA;result = value"/>
      </ownedOperations>
      <ownedProperties xmi:id="p.RefUML.LiteralUnlimitedNatural.value" name="value" type="pivot:PrimitiveType RefUML.ecore.oclas#UnlimitedNatural"
          defaultValueString="0">
        <ownedComments body="The specified UnlimitedNatural value."/>
      </ownedProperties>
    </ownedClasses>
  </ownedPackages>
  <ownedPackages xmi:id="P.$$" name="$$" URI="http://www.eclipse.org/ocl/2015/Orphanage" nsPrefix="orphanage">
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.71" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:TupleType" name="Tuple" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclTuple">
      <ownedProperties name="message" type="pivot:PrimitiveType RefUML.ecore.oclas#String"/>
      <ownedProperties name="status" type="pivot:PrimitiveType RefUML.ecore.oclas#Boolean"/>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.33" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.72" elementType="pivot:PrimitiveType RefUML.ecore.oclas#String"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:PrimitiveType RefUML.ecore.oclas#String" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.73" elementType="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EObject"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EObject" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.74" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.75" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.76" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.76" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.77" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Comment"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Comment" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.78" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.79" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.80" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Constraintx">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Constraintx" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.81" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Comment">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Comment" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.82" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageableElement"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageableElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.83" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.84" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageMerge"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageMerge" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.85" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Package"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Package" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.86" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageMerge">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageMerge" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.87" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageImport">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageImport" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.88" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.ElementImport">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.ElementImport" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.89" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.90" elementType="pivot:PrimitiveType RefUML.ecore.oclas#String"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:PrimitiveType RefUML.ecore.oclas#String" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.91 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.92"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.92" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.93" elementType="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.94 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.95"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.96" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Dependency"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Dependency" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.97" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.98" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Dependency">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Dependency" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.99" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"
        isNullFree="true" lower="1">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.71" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element"
        isNullFree="true" lower="1">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.100" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.76"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.101 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.102"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.33" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.103" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.ElementImport"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.ElementImport" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.104" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageImport"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageImport" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.105" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Constraintx"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Constraintx" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.99" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.106 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.71"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.107" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Association"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Association" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.108" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Association">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Association" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.109" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.TypedElement">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.TypedElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.110 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.83"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.111 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.112"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Property" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Property" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.111 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.112"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Property" isNullFree="true" lower="2">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Property" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.110 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.83"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" isNullFree="true" lower="1">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.112" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Property"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Property" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.113" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.114" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Feature"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Feature" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.115" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.115" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.116" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.117" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.GeneralizationSet"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.GeneralizationSet" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.118" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.119" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceSpecification">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceSpecification" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.120" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.121" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SequenceType" name="Sequence" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.122"
        elementType="pivot:PrimitiveType RefUML.ecore.oclas#String" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:PrimitiveType RefUML.ecore.oclas#String" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SequenceT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.122 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.72"
        elementType="pivot:PrimitiveType RefUML.ecore.oclas#String" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:PrimitiveType RefUML.ecore.oclas#String" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.123" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Property">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Property" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.124 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.113"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.125" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Class"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Class" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.126" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Class">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Class" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.127" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Slot">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Slot" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.128" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.StringExpression"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.StringExpression" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.129 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.130"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:OrderedSetType" name="OrderedSet" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.131 RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.132"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.EnumerationLiteral" isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.EnumerationLiteral" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedSetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:SetType" name="Set" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.133" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Slot"
        isNullFree="true">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Slot" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..SetT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:BagType" name="Bag" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.134" elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceValue">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceValue" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..BagT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.135"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.136"
        elementType="pivot:PrimitiveType RefUML.ecore.oclas#String">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:PrimitiveType RefUML.ecore.oclas#String" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.137"
        elementType="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EObject">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EObject" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.79"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.78"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.81"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Comment">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Comment" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.DirectedRelationship" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Relationship" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Constraintx">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Constraintx" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Comment">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Comment" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.138"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageableElement">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageableElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.139"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.86"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageMerge">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageMerge" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.140"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Package">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Package" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageMerge">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageMerge" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageImport">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageImport" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.ElementImport">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.ElementImport" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.141"
        elementType="pivot:PrimitiveType RefUML.ecore.oclas#String">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:PrimitiveType RefUML.ecore.oclas#String" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.142"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.142"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.143"
        elementType="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.89"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.89"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.98"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Dependency">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Dependency" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Dependency">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Dependency" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.144"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.115"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.145"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.145"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.88"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.ElementImport">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.ElementImport" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.87"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageImport">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageImport" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.80"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Constraintx">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Constraintx" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.135"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.108"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Association">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Association" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Association">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Association" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.TypedElement">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.TypedElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.139"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.123"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Property">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Property" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.123"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Property">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Property" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.97"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.146"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Feature">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Feature" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.118"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.147"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.GeneralizationSet">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.GeneralizationSet" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Generalization" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceSpecification">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceSpecification" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.120"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.RedefinableElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.136"
        elementType="pivot:PrimitiveType RefUML.ecore.oclas#String">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:PrimitiveType RefUML.ecore.oclas#String" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Property">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Property" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.97"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Classifier" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.126"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Class">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Class" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Class">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Class" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Slot">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Slot" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.148"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.StringExpression">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.StringExpression" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.149"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.149"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="OrderedCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.150"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.EnumerationLiteral">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.EnumerationLiteral" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..OrderedCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.150"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.EnumerationLiteral">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.EnumerationLiteral" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="UniqueCollection" superClasses="RefUML.ecore.oclas#//@ownedPackages.1/@ownedClasses.127"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Slot">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Slot" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..UniqueCollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceValue">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.InstanceValue" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Element">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Element" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:PrimitiveType RefUML.ecore.oclas#String">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:PrimitiveType RefUML.ecore.oclas#String" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EObject">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class http://www.eclipse.org/emf/2002/Ecore.oclas#T.ecore.EObject" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageableElement">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.PackageableElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Package">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Package" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:PrimitiveType RefUML.ecore.oclas#String">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:PrimitiveType RefUML.ecore.oclas#String" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Namespace" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Enumeration RefUML.ecore.oclas#T.RefUML.VisibilityKind" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.NamedElement" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Type">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Type" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.Feature">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.Feature" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.GeneralizationSet">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.GeneralizationSet" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.StringExpression">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.StringExpression" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.ValueSpecification" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
    <ownedClasses xsi:type="pivot:CollectionType" name="Collection" superClasses="http://www.eclipse.org/ocl/2015/Library.oclas#T.ocl.OclAny"
        elementType="pivot:Class RefUML.ecore.oclas#T.RefUML.EnumerationLiteral">
      <ownedBindings>
        <ownedSubstitutions actual="pivot:Class RefUML.ecore.oclas#T.RefUML.EnumerationLiteral" formal="http://www.eclipse.org/ocl/2015/Library.oclas#t.ocl..CollectionT"/>
      </ownedBindings>
    </ownedClasses>
  </ownedPackages>
</pivot:Model>
