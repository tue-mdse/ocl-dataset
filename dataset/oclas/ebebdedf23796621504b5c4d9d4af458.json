[
  {
    "name": "Room",
    "expressions": [
      {
        "operations": {
          "or": 1,
          "=": 2
        },
        "name": "NoHeatingAndCoolingTogether",
        "body": "heating->forAll(e : Heating | e.level = 0) or ac->forAll(e : AirConditioner | e.level = 0)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 4,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "SmartHouse::Room::heating",
          "SmartHouse::Room::ac",
          "SmartHouse::AirConditioner::level",
          "SmartHouse::Heating::level"
        ]
      },
      {
        "operations": {
          "implies": 1,
          "<": 1,
          ">": 1
        },
        "name": "TooColdNeedHeating",
        "body": "temp < 18 implies heating->exists(e : Heating | e.level > 0)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "SmartHouse::Room::temp",
          "SmartHouse::Room::heating",
          "SmartHouse::Heating::level"
        ]
      },
      {
        "operations": {
          "size": 1,
          "sum": 1,
          "*": 1,
          "<": 1,
          "implies": 1,
          ">": 1
        },
        "name": "ExtremelyColdNeedMoreHeating",
        "body": "temp < 10 implies heating.level->sum() > 3 * heating->size()",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 4,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "SmartHouse::Room::temp",
          "SmartHouse::Room::heating",
          "SmartHouse::Heating::level"
        ]
      },
      {
        "operations": {
          "implies": 1,
          ">": 1
        },
        "name": "INeedFreshAir",
        "body": "air > 5 implies window->exists(e : Window | e.opened)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "SmartHouse::Window::opened",
          "SmartHouse::Room::window",
          "SmartHouse::Room::air"
        ]
      },
      {
        "operations": {
          "and": 1,
          "<": 2,
          "implies": 1,
          "=": 1,
          "first": 1,
          "asSequence": 1
        },
        "name": "User__AlwaysTurnOnFirstHeating",
        "body": "temp < 10 and house.eprice < 20 implies heating->asSequence()->first().level = 10",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 3,
          "IntegerLiteralExpImpl": 3,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "SmartHouse::House::eprice",
          "SmartHouse::Room::temp",
          "SmartHouse::Room::heating",
          "SmartHouse::Room::house",
          "SmartHouse::Heating::level"
        ]
      },
      {
        "operations": {
          "implies": 1,
          "=": 1,
          "first": 1,
          "asSequence": 1
        },
        "name": "User__ILoveCurtains",
        "body": "projector.on implies window->asSequence()->first().curtainOn = true",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "BooleanLiteralExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "SmartHouse::Room::projector",
          "SmartHouse::Window::curtainOn",
          "SmartHouse::Projector::on",
          "SmartHouse::Room::window"
        ]
      },
      {
        "operations": {
          "and": 2,
          "implies": 1,
          "=": 1,
          ">": 1
        },
        "name": "ProjectingInDarkness",
        "body": "projector.on and bright > 500 implies light->forAll(e : Light | e.level = 0) and window->forAll(e : Window | e.curtainOn)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 6,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 7
        },
        "properties": [
          "SmartHouse::Room::projector",
          "SmartHouse::Window::curtainOn",
          "SmartHouse::Room::bright",
          "SmartHouse::Projector::on",
          "SmartHouse::Room::window",
          "SmartHouse::Light::level",
          "SmartHouse::Room::light"
        ]
      },
      {
        "operations": {
          "or": 1,
          "=": 2
        },
        "name": "NoWindowOpenWhenHeating",
        "body": "window->forAll(e : Window | e.opened = false) or ac->forAll(e : AirConditioner | e.level = 0)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 4,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 4,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "SmartHouse::Window::opened",
          "SmartHouse::Room::window",
          "SmartHouse::Room::ac",
          "SmartHouse::AirConditioner::level"
        ]
      },
      {
        "operations": {
          "<": 1,
          "implies": 1,
          ">": 1
        },
        "name": "TooLateNoShouting",
        "body": "house.time > 22 implies projector.volume < 4",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "SmartHouse::Room::projector",
          "SmartHouse::Projector::volume",
          "SmartHouse::House::time",
          "SmartHouse::Room::house"
        ]
      },
      {
        "operations": {
          "not": 1,
          "or": 1,
          ">": 1
        },
        "name": "TooColdToOpenWindow",
        "body": "house.outtemp > 5 or window->forAll(e : Window | not e.opened)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "SmartHouse::Room::house",
          "SmartHouse::Window::opened",
          "SmartHouse::Room::window",
          "SmartHouse::House::outtemp"
        ]
      },
      {
        "operations": {
          "and": 1,
          "implies": 1,
          "=": 1,
          ">": 1,
          "first": 1,
          ">=": 1,
          "asSequence": 1
        },
        "name": "User__AlwaysOpenWindow",
        "body": "air > 6 and house.outtemp >= 10 implies window->asSequence()->first().opened = true",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 7,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 5,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "SmartHouse::Room::house",
          "SmartHouse::Window::opened",
          "SmartHouse::Room::window",
          "SmartHouse::Room::air",
          "SmartHouse::House::outtemp"
        ]
      }
    ],
    "properties": [
      "projector",
      "name",
      "light",
      "sensor",
      "temp",
      "heating",
      "wm",
      "bright",
      "house",
      "window",
      "air",
      "cooker",
      "cm",
      "ac",
      "occupied"
    ]
  },
  {
    "name": "WashingMachine",
    "expressions": [
      {
        "operations": {"implies": 1},
        "name": "OnWhenLoaded",
        "body": "loaded implies on",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "SmartHouse::WashingMachine::loaded",
          "SmartHouse::WashingMachine::on"
        ]
      },
      {
        "operations": {
          "implies": 1,
          "=": 1
        },
        "name": "User__WashImmediately",
        "body": "loaded implies on = true",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 2,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "SmartHouse::WashingMachine::loaded",
          "SmartHouse::WashingMachine::on"
        ]
      }
    ],
    "properties": [
      "loaded",
      "room",
      "on"
    ]
  },
  {
    "name": "EV",
    "expressions": [
      {
        "operations": {
          "<": 1,
          "implies": 1
        },
        "name": "LowPricePleaseCharge",
        "body": "if pluged then house.eprice < 10 implies charging else true endif",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "BooleanLiteralExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "SmartHouse::House::eprice",
          "SmartHouse::EV::charging",
          "SmartHouse::EV::house",
          "SmartHouse::EV::pluged"
        ]
      },
      {
        "operations": {
          "implies": 1,
          "<": 1
        },
        "name": "LowLeveNeedCharge",
        "body": "if pluged then level < 30 implies charging else true endif",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "IntegerLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "BooleanLiteralExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "SmartHouse::EV::charging",
          "SmartHouse::EV::level",
          "SmartHouse::EV::pluged"
        ]
      }
    ],
    "properties": [
      "charging",
      "house",
      "level",
      "pluged",
      "name"
    ]
  },
  {
    "name": "Light",
    "expressions": [{
      "operations": {
        "<>": 1,
        "implies": 1,
        "=": 1
      },
      "name": "User__LightWideOpen",
      "body": "level <> 0 implies level = 5",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 2,
        "IntegerLiteralExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": ["SmartHouse::Light::level"]
    }],
    "properties": [
      "Room",
      "level"
    ]
  },
  {
    "name": "Sensor",
    "expressions": [{
      "operations": {
        "implies": 1,
        "<": 2
      },
      "name": "RunningOutOfPower",
      "body": "battery < 20 implies circle < 30",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 3,
        "IntegerLiteralExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "SmartHouse::Sensor::battery",
        "SmartHouse::Sensor::circle"
      ]
    }],
    "properties": [
      "temp",
      "battery",
      "brightness",
      "air",
      "Room",
      "circle"
    ]
  },
  {
    "name": "Person",
    "expressions": [],
    "properties": [
      "name",
      "House",
      "Room"
    ]
  },
  {
    "name": "House",
    "expressions": [
      {
        "operations": {
          "implies": 1,
          "=": 1
        },
        "name": "User__VeryNotSafe",
        "body": "gate.outlocked implies sec.on = true",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 4,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "SmartHouse::Security::on",
          "SmartHouse::House::sec",
          "SmartHouse::House::gate",
          "SmartHouse::Gate::outlocked"
        ]
      },
      {
        "operations": {
          "flatten": 1,
          "not": 1,
          "and": 2,
          "implies": 1,
          "=": 2,
          ">": 1
        },
        "name": "SuperExpensiveNotUseAnything",
        "body": "eprice > 20 implies ev->forAll(e : EV | e.charging = false) and not wh.on and room.heating->flatten()->forAll(e : Heating | e.level = 0)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "OperationCallExpImpl": 8,
          "VariableExpImpl": 7,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 8,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "SmartHouse::House::ev",
          "SmartHouse::House::eprice",
          "SmartHouse::Room::heating",
          "SmartHouse::EV::charging",
          "SmartHouse::House::room",
          "SmartHouse::House::wh",
          "SmartHouse::WaterHeater::on",
          "SmartHouse::Heating::level"
        ]
      },
      {
        "operations": {
          "flatten": 1,
          "not": 1,
          "or": 2,
          "<": 1,
          "implies": 1,
          "=": 1,
          ">": 1
        },
        "name": "TooExpensiveToUseThemTogether",
        "body": "eprice > 15 implies ev->forAll(e : EV | e.charging = false) or not wh.on or room.heating->flatten()->forAll(e : Heating | e.level < 3)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "OperationCallExpImpl": 8,
          "VariableExpImpl": 7,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 8,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "SmartHouse::House::eprice",
          "SmartHouse::House::ev",
          "SmartHouse::Room::heating",
          "SmartHouse::EV::charging",
          "SmartHouse::House::room",
          "SmartHouse::House::wh",
          "SmartHouse::WaterHeater::on",
          "SmartHouse::Heating::level"
        ]
      },
      {
        "operations": {
          "flatten": 1,
          "implies": 1,
          "=": 2
        },
        "name": "NoWindowOpenWhenSecOn",
        "body": "sec.on implies room->select(e : Room | e.name = 'liv').window->flatten()->forAll(e : Window | e.opened = false)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 5,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 6,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "SmartHouse::Security::on",
          "SmartHouse::Window::opened",
          "SmartHouse::Room::name",
          "SmartHouse::House::room",
          "SmartHouse::Room::window",
          "SmartHouse::House::sec"
        ]
      },
      {
        "operations": {"implies": 1},
        "name": "WatchDog",
        "body": "gate.outlocked implies sec.on",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "SmartHouse::Security::on",
          "SmartHouse::House::sec",
          "SmartHouse::Gate::outlocked",
          "SmartHouse::House::gate"
        ]
      }
    ],
    "properties": [
      "eprice",
      "time",
      "ev",
      "room",
      "wh",
      "sec",
      "name",
      "gate",
      "member",
      "outtemp"
    ]
  },
  {
    "name": "Security",
    "expressions": [],
    "properties": [
      "on",
      "house"
    ]
  },
  {
    "name": "CoffeeMaker",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "implies": 1,
          ">": 1
        },
        "name": "KeepItWarm",
        "body": "room.temp > 20 implies not warming",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 3,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "SmartHouse::Room::temp",
          "SmartHouse::CoffeeMaker::warming",
          "SmartHouse::CoffeeMaker::room"
        ]
      },
      {
        "operations": {
          "and": 1,
          "implies": 1,
          "=": 1
        },
        "name": "MakeCoffeeForMeInTheMorning",
        "body": "room.house.time = 7 and loaded implies on",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "SmartHouse::House::time",
          "SmartHouse::CoffeeMaker::on",
          "SmartHouse::Room::house",
          "SmartHouse::CoffeeMaker::room",
          "SmartHouse::CoffeeMaker::loaded"
        ]
      },
      {
        "operations": {"or": 1},
        "name": "NoCarNoCoffee",
        "body": "room.house.ev->exists(e : EV | e.pluged) or on",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "SmartHouse::House::ev",
          "SmartHouse::CoffeeMaker::on",
          "SmartHouse::Room::house",
          "SmartHouse::CoffeeMaker::room",
          "SmartHouse::EV::pluged"
        ]
      },
      {
        "operations": {
          "implies": 1,
          "=": 1
        },
        "name": "User__IWantWarmed",
        "body": "loaded implies warming = true",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "SmartHouse::CoffeeMaker::warming",
          "SmartHouse::CoffeeMaker::loaded"
        ]
      }
    ],
    "properties": [
      "on",
      "warming",
      "room",
      "loaded"
    ]
  },
  {
    "name": "Gate",
    "expressions": [],
    "properties": [
      "house",
      "outlocked"
    ]
  },
  {
    "name": "Projector",
    "expressions": [{
      "operations": {
        "<>": 1,
        "not": 2,
        "or": 1
      },
      "name": "TooNoisyToWatchTVWhenWashing",
      "body": "if room.wm <> null then not room.wm.on or not on else true endif",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 3,
        "NullLiteralExpImpl": 1,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 6,
        "BooleanLiteralExpImpl": 1
      },
      "properties": [
        "SmartHouse::Room::wm",
        "SmartHouse::Projector::on",
        "SmartHouse::Projector::room",
        "SmartHouse::WashingMachine::on"
      ]
    }],
    "properties": [
      "volume",
      "brightness",
      "on",
      "room"
    ]
  },
  {
    "name": "WaterHeater",
    "expressions": [
      {
        "operations": {
          "or": 2,
          "<": 1,
          ">": 1
        },
        "name": "INeedHotWaterInTheMorning",
        "body": "house.time < 2 or house.time > 8 or on",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 4,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "SmartHouse::House::time",
          "SmartHouse::WaterHeater::house",
          "SmartHouse::WaterHeater::on"
        ]
      },
      {
        "operations": {
          "implies": 1,
          "<": 1
        },
        "name": "ColdWaterNeedHeating",
        "body": "temp < 30 implies on",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "SmartHouse::WaterHeater::temp",
          "SmartHouse::WaterHeater::on"
        ]
      },
      {
        "operations": {
          "or": 1,
          "and": 1,
          "<": 2,
          "implies": 1,
          "=": 1,
          ">": 1
        },
        "name": "User__HotWaterAlways",
        "body": "temp < 30 and (house.time < 2 or house.time > 8) implies on = true",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 4,
          "IntegerLiteralExpImpl": 3,
          "PropertyCallExpImpl": 6,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "SmartHouse::House::time",
          "SmartHouse::WaterHeater::temp",
          "SmartHouse::WaterHeater::house",
          "SmartHouse::WaterHeater::on"
        ]
      },
      {
        "operations": {
          "not": 1,
          "or": 1,
          "<": 1
        },
        "name": "DoNotHeatItForever",
        "body": "temp < 50 or not on",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "SmartHouse::WaterHeater::temp",
          "SmartHouse::WaterHeater::on"
        ]
      }
    ],
    "properties": [
      "boost",
      "temp",
      "house",
      "on"
    ]
  },
  {
    "name": "Window",
    "expressions": [],
    "properties": [
      "curtainOn",
      "opened",
      "Room",
      "name"
    ]
  },
  {
    "name": "AirConditioner",
    "expressions": [
      {
        "operations": {
          "implies": 1,
          ">": 2
        },
        "name": "TooHotOpenAC",
        "body": "room.temp > 28 implies level > 5",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "SmartHouse::Room::temp",
          "SmartHouse::AirConditioner::room",
          "SmartHouse::AirConditioner::level"
        ]
      },
      {
        "operations": {
          "<": 1,
          "implies": 1,
          "=": 1
        },
        "name": "CodeNoAC",
        "body": "room.temp < 23 implies level = 0",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "SmartHouse::Room::temp",
          "SmartHouse::AirConditioner::room",
          "SmartHouse::AirConditioner::level"
        ]
      },
      {
        "operations": {
          "implies": 1,
          ">": 2
        },
        "name": "HotOutside",
        "body": "room.house.outtemp > 30 implies level > 5",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 3,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "SmartHouse::Room::house",
          "SmartHouse::AirConditioner::room",
          "SmartHouse::AirConditioner::level",
          "SmartHouse::House::outtemp"
        ]
      },
      {
        "operations": {
          "implies": 1,
          "=": 1,
          ">": 1
        },
        "name": "User__HotOutside",
        "body": "level > 0 implies level = 9",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": ["SmartHouse::AirConditioner::level"]
      }
    ],
    "properties": [
      "room",
      "level",
      "freshAir"
    ]
  },
  {
    "name": "Cooker",
    "expressions": [],
    "properties": [
      "on",
      "Room"
    ]
  },
  {
    "name": "Heating",
    "expressions": [],
    "properties": [
      "name",
      "Room",
      "level"
    ]
  }
]
