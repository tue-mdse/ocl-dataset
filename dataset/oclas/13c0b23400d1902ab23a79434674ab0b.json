[
  {
    "name": "Combination",
    "expressions": [],
    "properties": [
      "controlledValues",
      "OneOf",
      "sequenceValues",
      "currencyValues",
      "booleanValues",
      "bagValues",
      "localizedTextValues",
      "yearMonthValues",
      "fileValues",
      "realValues",
      "timeValues",
      "dateValues",
      "measureRangeValues",
      "compositeValues",
      "complexValues",
      "itemReferenceValues",
      "integerValues",
      "dateTimeValues",
      "nullValues",
      "setValues",
      "measureQualifiedNumberValues",
      "stringValues",
      "rationalValues",
      "measureSingleNumberValues",
      "yearValues"
    ]
  },
  {
    "name": "DateTimeValue",
    "expressions": [],
    "properties": [
      "SequenceValue",
      "BagValue",
      "SetValue",
      "Combination",
      "value",
      "ConditionElement",
      "Field",
      "OneOf"
    ]
  },
  {
    "name": "OneOf",
    "expressions": [],
    "properties": [
      "compositeValues",
      "realValues",
      "setValues",
      "yearMonthValues",
      "dateTimeValues",
      "yearValues",
      "fileValues",
      "bagValues",
      "complexValues",
      "sequenceValues",
      "currencyValues",
      "booleanValues",
      "controlledValues",
      "measureQualifiedNumberValues",
      "localizedTextValues",
      "timeValues",
      "dateValues",
      "stringValues",
      "rationalValues",
      "combinations",
      "measureRangeValues",
      "measureSingleNumberValues",
      "integerValues",
      "itemReferenceValues",
      "nullValues"
    ]
  },
  {
    "name": "YearValue",
    "expressions": [],
    "properties": [
      "SequenceValue",
      "SetValue",
      "Combination",
      "Field",
      "BagValue",
      "OneOf",
      "value",
      "ConditionElement"
    ]
  },
  {
    "name": "BagValue",
    "expressions": [],
    "properties": [
      "integerValues",
      "bagValues",
      "measureRangeValues",
      "dateValues",
      "Combination",
      "controlledValues",
      "booleanValues",
      "measureSingleNumberValues",
      "dateTimeValues",
      "Field",
      "setValues",
      "itemReferenceValues",
      "stringValues",
      "measureQualifiedNumberValues",
      "localizedTextValues",
      "fileValues",
      "nullValues",
      "timeValues",
      "realValues",
      "compositeValues",
      "SequenceValue",
      "complexValues",
      "SetValue",
      "currencyValues",
      "sequenceValues",
      "OneOf",
      "BagValue",
      "yearValues",
      "ConditionElement",
      "rationalValues",
      "yearMonthValues"
    ]
  },
  {
    "name": "CompositeValue",
    "expressions": [],
    "properties": [
      "Field",
      "SetValue",
      "BagValue",
      "OneOf",
      "ConditionElement",
      "fields",
      "Combination",
      "SequenceValue"
    ]
  },
  {
    "name": "YearMonthValue",
    "expressions": [],
    "properties": [
      "OneOf",
      "value",
      "Field",
      "BagValue",
      "Combination",
      "SequenceValue",
      "SetValue",
      "ConditionElement"
    ]
  },
  {
    "name": "Environment",
    "expressions": [],
    "properties": ["propertyValues"]
  },
  {
    "name": "StringValue",
    "expressions": [],
    "properties": [
      "OneOf",
      "Combination",
      "Field",
      "BagValue",
      "SequenceValue",
      "ConditionElement",
      "value",
      "SetValue"
    ]
  },
  {
    "name": "FileValue",
    "expressions": [],
    "properties": [
      "Field",
      "Combination",
      "SequenceValue",
      "ConditionElement",
      "SetValue",
      "BagValue",
      "OneOf",
      "uRI"
    ]
  },
  {
    "name": "LocalizedTextValue",
    "expressions": [],
    "properties": [
      "BagValue",
      "SequenceValue",
      "ConditionElement",
      "SetValue",
      "OneOf",
      "Field",
      "Combination"
    ]
  },
  {
    "name": "ConditionElement",
    "expressions": [{
      "operations": {"matches": 1},
      "name": "patternPropertyRef",
      "body": "self.propertyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["isostdisots_29002_10ed_1techxmlschemavalueSimplified::ConditionElement::propertyRef"]
    }],
    "properties": [
      "realValue",
      "measureQualifiedNumberValue",
      "rationalValue",
      "yearValue",
      "dateTimeValue",
      "yearMonthValue",
      "stringValue",
      "dateValue",
      "localizedTextValue",
      "complexValue",
      "currencyValue",
      "timeValue",
      "controlledValue",
      "itemReferenceValue",
      "Environment",
      "measureSingleNumberValue",
      "sequenceValue",
      "compositeValue",
      "booleanValue",
      "bagValue",
      "setValue",
      "integerValue",
      "propertyRef",
      "nullValue",
      "fileValue",
      "measureRangeValue"
    ]
  },
  {
    "name": "SetValue",
    "expressions": [],
    "properties": [
      "yearMonthValues",
      "BagValue",
      "ConditionElement",
      "yearValues",
      "realValues",
      "stringValues",
      "currencyValues",
      "measureQualifiedNumberValues",
      "dateTimeValues",
      "localizedTextValues",
      "timeValues",
      "SetValue",
      "compositeValues",
      "bagValues",
      "Field",
      "measureRangeValues",
      "SequenceValue",
      "controlledValues",
      "rationalValues",
      "fileValues",
      "itemReferenceValues",
      "complexValues",
      "sequenceValues",
      "OneOf",
      "dateValues",
      "integerValues",
      "setValues",
      "measureSingleNumberValues",
      "Combination",
      "booleanValues",
      "nullValues"
    ]
  },
  {
    "name": "RationalValue",
    "expressions": [],
    "properties": [
      "QualifiedValue",
      "SequenceValue",
      "SetValue",
      "Combination",
      "NumericValue",
      "MeasureSingleNumberValue",
      "Field",
      "numerator",
      "OneOf",
      "BagValue",
      "denominator",
      "ConditionElement",
      "CurrencyValue",
      "wholePart"
    ]
  },
  {
    "name": "CurrencyValue",
    "expressions": [{
      "operations": {"matches": 1},
      "name": "patternCurrencyRef",
      "body": "self.currencyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["isostdisots_29002_10ed_1techxmlschemavalueSimplified::CurrencyValue::currencyRef"]
    }],
    "properties": [
      "realValue",
      "integerValue",
      "rationalValue",
      "OneOf",
      "currencyCode",
      "SetValue",
      "currencyRef",
      "ConditionElement",
      "complexValue",
      "BagValue",
      "SequenceValue",
      "Field",
      "Combination"
    ]
  },
  {
    "name": "MeasureQualifiedNumberValue",
    "expressions": [],
    "properties": [
      "qualifiedValues",
      "SequenceValue",
      "SetValue",
      "BagValue",
      "OneOf",
      "ConditionElement",
      "Combination",
      "Field"
    ]
  },
  {
    "name": "MeasureRangeValue",
    "expressions": [],
    "properties": [
      "lowerValue",
      "Field",
      "SetValue",
      "ConditionElement",
      "Combination",
      "OneOf",
      "upperValue",
      "SequenceValue",
      "BagValue"
    ]
  },
  {
    "name": "IntegerValue",
    "expressions": [],
    "properties": [
      "SetValue",
      "SequenceValue",
      "CurrencyValue",
      "OneOf",
      "Field",
      "Combination",
      "BagValue",
      "value",
      "QualifiedValue",
      "ConditionElement",
      "NumericValue",
      "MeasureSingleNumberValue"
    ]
  },
  {
    "name": "QualifiedValue",
    "expressions": [{
      "operations": {"matches": 1},
      "name": "patternQualifierRef",
      "body": "self.qualifierRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["isostdisots_29002_10ed_1techxmlschemavalueSimplified::QualifiedValue::qualifierRef"]
    }],
    "properties": [
      "complexValue",
      "rationalValue",
      "MeasureQualifiedNumberValue",
      "qualifierCode",
      "qualifierRef",
      "realValue",
      "integerValue"
    ]
  },
  {
    "name": "NumericValue",
    "expressions": [],
    "properties": [
      "MeasureRangeValue",
      "complexValue",
      "integerValue",
      "rationalValue",
      "realValue",
      "MeasureRangeValue"
    ]
  },
  {
    "name": "SequenceValue",
    "expressions": [],
    "properties": [
      "dateValues",
      "setValues",
      "integerValues",
      "ConditionElement",
      "localizedTextValues",
      "stringValues",
      "yearMonthValues",
      "SetValue",
      "nullValues",
      "sequenceValues",
      "currencyValues",
      "compositeValues",
      "dateTimeValues",
      "fileValues",
      "realValues",
      "complexValues",
      "timeValues",
      "booleanValues",
      "SequenceValue",
      "Combination",
      "yearValues",
      "OneOf",
      "controlledValues",
      "Field",
      "measureRangeValues",
      "itemReferenceValues",
      "bagValues",
      "measureQualifiedNumberValues",
      "measureSingleNumberValues",
      "rationalValues",
      "BagValue"
    ]
  },
  {
    "name": "BooleanValue",
    "expressions": [],
    "properties": [
      "OneOf",
      "ConditionElement",
      "SetValue",
      "SequenceValue",
      "Combination",
      "BagValue",
      "value",
      "Field"
    ]
  },
  {
    "name": "MeasureSingleNumberValue",
    "expressions": [],
    "properties": [
      "complexValue",
      "SetValue",
      "Field",
      "Combination",
      "integerValue",
      "ConditionElement",
      "SequenceValue",
      "BagValue",
      "realValue",
      "rationalValue",
      "OneOf"
    ]
  },
  {
    "name": "ItemReferenceValue",
    "expressions": [],
    "properties": [
      "SequenceValue",
      "BagValue",
      "SetValue",
      "itemLocalRef",
      "Combination",
      "Field",
      "OneOf",
      "ConditionElement"
    ]
  },
  {
    "name": "Item",
    "expressions": [],
    "properties": ["ItemReferenceValue"]
  },
  {
    "name": "ControlledValue",
    "expressions": [{
      "operations": {"matches": 1},
      "name": "patternValueRef",
      "body": "self.valueRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["isostdisots_29002_10ed_1techxmlschemavalueSimplified::ControlledValue::valueRef"]
    }],
    "properties": [
      "SequenceValue",
      "valueCode",
      "OneOf",
      "valueRef",
      "SetValue",
      "ConditionElement",
      "BagValue",
      "Combination",
      "Field"
    ]
  },
  {
    "name": "DateValue",
    "expressions": [],
    "properties": [
      "SequenceValue",
      "SetValue",
      "value",
      "BagValue",
      "Combination",
      "Field",
      "OneOf",
      "ConditionElement"
    ]
  },
  {
    "name": "MeasureValue",
    "expressions": [{
      "operations": {"matches": 1},
      "name": "patternUOMRef",
      "body": "self.uOMRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["isostdisots_29002_10ed_1techxmlschemavalueSimplified::MeasureValue::uOMRef"]
    }],
    "properties": [
      "uOMCode",
      "uOMRef"
    ]
  },
  {
    "name": "TimeValue",
    "expressions": [],
    "properties": [
      "ConditionElement",
      "OneOf",
      "value",
      "SequenceValue",
      "SetValue",
      "Field",
      "BagValue",
      "Combination"
    ]
  },
  {
    "name": "Field",
    "expressions": [{
      "operations": {"matches": 1},
      "name": "patternPropertyRef",
      "body": "self.propertyRef.matches('[0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z]{1,1}(-[0-9A-Z:_\\\\.]{1,70})?)?)?(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}(-[0-9A-Z:_\\\\.]{1,35})?--[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})? [0-9]{4}-[0-9A-Z:_\\\\.]{1,35}---[0-9A-Z:_\\\\.]{1,70}(#[0-9A-Z]{2,2}-[0-9A-Z:_\\\\.]{1,131}#[0-9]{1,10})?')",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["isostdisots_29002_10ed_1techxmlschemavalueSimplified::Field::propertyRef"]
    }],
    "properties": [
      "setValue",
      "propertyRef",
      "yearMonthValue",
      "dateTimeValue",
      "controlledValue",
      "itemReferenceValue",
      "measureSingleNumberValue",
      "integerValue",
      "realValue",
      "rationalValue",
      "measureRangeValue",
      "stringValue",
      "bagValue",
      "yearValue",
      "nullValue",
      "CompositeValue",
      "measureQualifiedNumberValue",
      "sequenceValue",
      "timeValue",
      "booleanValue",
      "compositeValue",
      "currencyValue",
      "dateValue",
      "fileValue",
      "complexValue",
      "localizedTextValue"
    ]
  },
  {
    "name": "ComplexValue",
    "expressions": [],
    "properties": [
      "MeasureSingleNumberValue",
      "ConditionElement",
      "NumericValue",
      "SetValue",
      "CurrencyValue",
      "OneOf",
      "BagValue",
      "SequenceValue",
      "Combination",
      "Field",
      "QualifiedValue"
    ]
  },
  {
    "name": "RealValue",
    "expressions": [],
    "properties": [
      "CurrencyValue",
      "BagValue",
      "Field",
      "QualifiedValue",
      "Combination",
      "SequenceValue",
      "OneOf",
      "SetValue",
      "NumericValue",
      "MeasureSingleNumberValue",
      "ConditionElement"
    ]
  },
  {
    "name": "NullValue",
    "expressions": [],
    "properties": [
      "BagValue",
      "Combination",
      "OneOf",
      "SetValue",
      "SequenceValue",
      "ConditionElement",
      "Field"
    ]
  }
]
