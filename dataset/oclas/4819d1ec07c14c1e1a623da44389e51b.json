[
  {
    "name": "Schema",
    "expressions": [
      {
        "operations": {"<>": 1},
        "name": "ERN",
        "body": "entities->forAll(e : Entity | relships->forAll(r : Relship | e.name <> r.name))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 4,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ER::Schema::entities",
          "ER::Relship::name",
          "ER::Entity::name",
          "ER::Schema::relships"
        ]
      },
      {
        "operations": {
          "implies": 1,
          "=": 2
        },
        "name": "EN",
        "body": "entities->forAll(e1 : Entity, e2 : Entity | e1.name = e2.name implies e1 = e2)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "ER::Schema::entities",
          "ER::Entity::name"
        ]
      },
      {
        "operations": {
          "implies": 1,
          "=": 2
        },
        "name": "RN",
        "body": "relships->forAll(r1 : Relship, r2 : Relship | r1.name = r2.name implies r1 = r2)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "ER::Relship::name",
          "ER::Schema::relships"
        ]
      }
    ],
    "properties": [
      "entities",
      "relships"
    ]
  },
  {
    "name": "RelshipEnd",
    "expressions": [],
    "properties": [
      "name",
      "relship",
      "type"
    ]
  },
  {
    "name": "Entity",
    "expressions": [
      {
        "operations": {
          "implies": 1,
          "=": 2
        },
        "name": "EAN",
        "body": "attrs->forAll(a1 : Attribute, a2 : Attribute | a1.name = a2.name implies a1 = a2)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "ER::Entity::attrs",
          "ER::Attribute::name"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "KEY",
        "body": "attrs->exists(a : Attribute | a.isKey = true)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 2,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "ER::Attribute::isKey",
          "ER::Entity::attrs"
        ]
      }
    ],
    "properties": [
      "ends",
      "schema",
      "attrs",
      "name"
    ]
  },
  {
    "name": "Relship",
    "expressions": [{
      "operations": {
        "implies": 1,
        "=": 2
      },
      "name": "REN",
      "body": "ends->forAll(e1 : RelshipEnd, e2 : RelshipEnd | e1.name = e2.name implies e1 = e2)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 5,
        "OperationCallExpImpl": 3,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "ER::RelshipEnd::name",
        "ER::Relship::ends"
      ]
    }],
    "properties": [
      "name",
      "schema",
      "ends"
    ]
  },
  {
    "name": "Attribute",
    "expressions": [],
    "properties": [
      "entity",
      "isKey",
      "name"
    ]
  }
]
