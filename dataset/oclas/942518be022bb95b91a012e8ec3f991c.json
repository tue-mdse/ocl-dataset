[{
  "name": "NamedElementCS",
  "expressions": [
    {
      "operations": {
        "not": 1,
        "oclIsUndefined": 1
      },
      "name": "hasName",
      "body": "\n\tnot name.oclIsUndefined()\n\t\n\t\n",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["classescs::NamedElementCS::name"]
    },
    {
      "operations": {
        "not": 1,
        "oclIsUndefined": 1,
        "oclIsKindOf": 1,
        "and": 1,
        "+": 2,
        "oclAsType": 1,
        "computeName": 1,
        "oclContainer": 1
      },
      "name": "computeName",
      "body": "\n\tlet container = self.oclContainer() in\n\tif not container.oclIsUndefined() and container.oclIsKindOf(NamedElementCS) \n\tthen container.oclAsType(NamedElementCS).computeName() + '::' + self.name\n\telse self.name\n\tendif\n\n",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 9,
        "VariableExpImpl": 6,
        "LetExpImpl": 1,
        "TypeExpImpl": 2,
        "StringLiteralExpImpl": 1,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["classescs::NamedElementCS::name"]
    }
  ],
  "properties": []
}]
