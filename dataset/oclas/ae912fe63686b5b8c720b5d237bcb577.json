[
  {
    "name": "Attribute",
    "expressions": [{
      "operations": {
        "<>": 2,
        "xor": 1
      },
      "name": "AttributeTypeIsValid",
      "body": "self.type <> AttributeType::None xor self.enumeration <> null",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 3,
        "NullLiteralExpImpl": 1,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "forms::Attribute::enumeration",
        "forms::Attribute::type"
      ]
    }],
    "properties": [
      "enumeration",
      "AttributeValueCondition",
      "Entity",
      "mandatory",
      "AttributePageElement",
      "type"
    ]
  },
  {
    "name": "AttributeType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "CompositeCondition",
    "expressions": [{
      "operations": {"=": 1},
      "name": "ComposedConditionTypesAreEqual",
      "body": "self.composedConditions -> forAll(c | c.type = self.type)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "forms::Condition::type",
        "forms::CompositeCondition::composedConditions"
      ]
    }],
    "properties": [
      "compositionType",
      "composedConditions"
    ]
  },
  {
    "name": "CompositeConditionType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RelationshipPageElement",
    "expressions": [
      {
        "operations": {"=": 1},
        "name": "EditingFormRefersToRelationshipTarget",
        "body": "self.relationship.target = self.editingForm.entity",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "forms::Relationship::target",
          "forms::Form::entity",
          "forms::RelationshipPageElement::editingForm",
          "forms::RelationshipPageElement::relationship"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "EditingFormIsNotWelcomeForm",
        "body": "self.editingForm.welcomeForm = false",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "BooleanLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "forms::Form::welcomeForm",
          "forms::RelationshipPageElement::editingForm"
        ]
      }
    ],
    "properties": [
      "editingForm",
      "relationship"
    ]
  },
  {
    "name": "EntityModelElement",
    "expressions": [],
    "properties": ["EntityModel"]
  },
  {
    "name": "NamedElement",
    "expressions": [],
    "properties": ["name"]
  },
  {
    "name": "List",
    "expressions": [],
    "properties": []
  },
  {
    "name": "EntityModel",
    "expressions": [],
    "properties": ["entityModelElements"]
  },
  {
    "name": "Table",
    "expressions": [{
      "operations": {
        "includesAll": 1,
        "oclAsSet": 1,
        "union": 1
      },
      "name": "TableColumnRefersToTargetEntityFeature",
      "body": "self.editingForm.entity.features -> union(self.editingForm.entity -> closure(superType).features) -> includesAll(self.columns.attribute)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 3,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 6,
        "PropertyCallExpImpl": 9
      },
      "properties": [
        "forms::AttributePageElement::attribute",
        "forms::Entity::superType",
        "forms::Form::entity",
        "forms::Table::columns",
        "forms::RelationshipPageElement::editingForm",
        "forms::Entity::features"
      ]
    }],
    "properties": ["columns"]
  },
  {
    "name": "TextArea",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AttributeValueCondition",
    "expressions": [],
    "properties": [
      "value",
      "attribute"
    ]
  },
  {
    "name": "Condition",
    "expressions": [{
      "operations": {
        "excluding": 1,
        "isEmpty": 1,
        "allInstances": 1,
        "=": 1
      },
      "name": "ConditionIDIsUnique",
      "body": "Condition.allInstances() -> select(n | n.conditionID = self.conditionID) ->excluding(self) ->isEmpty()",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 4,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["forms::Condition::conditionID"]
    }],
    "properties": [
      "type",
      "CompositeCondition",
      "Page",
      "PageElement",
      "conditionID"
    ]
  },
  {
    "name": "Enumeration",
    "expressions": [
      {
        "operations": {
          "excluding": 1,
          "isEmpty": 1,
          "allInstances": 1,
          "=": 1
        },
        "name": "EnumerationNameIsUnique",
        "body": "Enumeration.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 3,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["forms::NamedElement::name"]
      },
      {
        "operations": {
          "<>": 2,
          "implies": 1
        },
        "name": "LiteralInEnumerationIsUnique",
        "body": "literals -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 5,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "forms::NamedElement::name",
          "forms::Enumeration::literals"
        ]
      }
    ],
    "properties": [
      "literals",
      "Attribute"
    ]
  },
  {
    "name": "FormModel",
    "expressions": [],
    "properties": ["forms"]
  },
  {
    "name": "DateSelectionField",
    "expressions": [{
      "operations": {"=": 1},
      "name": "DateIsValid",
      "body": "self.attribute.type = AttributeType::Date",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "forms::AttributePageElement::attribute",
        "forms::Attribute::type"
      ]
    }],
    "properties": []
  },
  {
    "name": "Page",
    "expressions": [{
      "operations": {
        "at": 1,
        "matches": 1
      },
      "name": "FirstLetterInPageTitleIsUpperCase",
      "body": "self.title.at(1).matches('[A-Z]')",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 2,
        "IntegerLiteralExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["forms::Page::title"]
    }],
    "properties": [
      "pageElements",
      "condition",
      "title",
      "Form"
    ]
  },
  {
    "name": "Form",
    "expressions": [
      {
        "operations": {
          "selectByKind": 2,
          "includesAll": 1,
          "oclAsSet": 1,
          "union": 2,
          "oclAsType": 2
        },
        "name": "PageElementsReferToFormEntityFeatures",
        "body": "self.entity.features -> union(self.entity -> closure(superType).features) -> includesAll(self.pages.pageElements -> selectByKind(AttributePageElement).attribute.oclAsType(Feature) -> union(self.pages.pageElements -> selectByKind(RelationshipPageElement).relationship.oclAsType(Feature)))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 8,
          "VariableExpImpl": 12,
          "OperationCallExpImpl": 8,
          "TypeExpImpl": 4,
          "PropertyCallExpImpl": 11
        },
        "properties": [
          "forms::AttributePageElement::attribute",
          "forms::Form::pages",
          "forms::Entity::superType",
          "forms::Form::entity",
          "forms::Page::pageElements",
          "forms::Entity::features",
          "forms::RelationshipPageElement::relationship"
        ]
      },
      {
        "operations": {
          "selectByKind": 13,
          "includesAll": 1,
          "union": 5
        },
        "name": "AttributeOfConditionIsValid",
        "body": "\n\t\t(self.pages.pageElements -> selectByKind(AttributePageElement).attribute)\n\t\t-> includesAll(\n\t\tself.pages.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> \n\t\tselectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> \n\t\tselectByKind(AttributeValueCondition).attribute -> union(self.pages.condition -> \n\t\tselectByKind(AttributeValueCondition).attribute) -> union(self.pages.condition -> \n\t\tselectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute)\n\t\t-> union(\n\t\tself.pages.pageElements.condition -> selectByKind(CompositeCondition) -> closure(v:CompositeCondition | v.composedConditions -> \n\t\tselectByKind(CompositeCondition)) -> collect(v:CompositeCondition|v.composedConditions) -> \n\t\tselectByKind(AttributeValueCondition).attribute -> union(self.pages.pageElements.condition -> \n\t\tselectByKind(AttributeValueCondition).attribute) -> union(self.pages.pageElements.condition -> \n\t\tselectByKind(CompositeCondition).composedConditions -> selectByKind(AttributeValueCondition).attribute)\n\t\t))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 23,
          "VariableExpImpl": 30,
          "OperationCallExpImpl": 19,
          "TypeExpImpl": 13,
          "PropertyCallExpImpl": 30
        },
        "properties": [
          "forms::AttributePageElement::attribute",
          "forms::Form::pages",
          "forms::AttributeValueCondition::attribute",
          "forms::Page::pageElements",
          "forms::CompositeCondition::composedConditions",
          "forms::Page::condition",
          "forms::PageElement::condition"
        ]
      },
      {
        "operations": {
          "size": 1,
          "allInstances": 1,
          "=": 2
        },
        "name": "ExactlyOneWelcomePageExists",
        "body": "Form.allInstances() -> select(f | f.welcomeForm = true) -> size() = 1",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 4,
          "IntegerLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "BooleanLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["forms::Form::welcomeForm"]
      },
      {
        "operations": {
          "at": 1,
          "matches": 1
        },
        "name": "FirstLetterInFormTitleIsUpperCase",
        "body": "self.title.at(1).matches('[A-Z]')",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["forms::Form::title"]
      }
    ],
    "properties": [
      "pages",
      "FormModel",
      "entity",
      "welcomeForm",
      "title",
      "RelationshipPageElement",
      "description"
    ]
  },
  {
    "name": "Feature",
    "expressions": [],
    "properties": ["Entity"]
  },
  {
    "name": "Literal",
    "expressions": [],
    "properties": [
      "Enumeration",
      "value"
    ]
  },
  {
    "name": "PageElement",
    "expressions": [{
      "operations": {
        "excluding": 1,
        "isEmpty": 1,
        "allInstances": 1,
        "=": 1
      },
      "name": "ElementIDIsUnique",
      "body": "PageElement.allInstances() -> select(n | n.elementID = self.elementID) ->excluding(self) ->isEmpty()",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 3,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["forms::PageElement::elementID"]
    }],
    "properties": [
      "elementID",
      "Page",
      "label",
      "condition"
    ]
  },
  {
    "name": "Column",
    "expressions": [],
    "properties": ["Table"]
  },
  {
    "name": "ConditionType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "TextField",
    "expressions": [],
    "properties": ["format"]
  },
  {
    "name": "Entity",
    "expressions": [
      {
        "operations": {
          "<>": 2,
          "implies": 1
        },
        "name": "FeatureInEntityIsUnique",
        "body": "features -> forAll(e1, e2 | e1 <> e2 implies e1.name <> e2.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "forms::NamedElement::name",
          "forms::Entity::features"
        ]
      },
      {
        "operations": {
          "excluding": 1,
          "isEmpty": 1,
          "allInstances": 1,
          "=": 1
        },
        "name": "EntityNameIsUnique",
        "body": "Entity.allInstances() -> select(n | n.name = self.name) ->excluding(self) ->isEmpty()",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 3,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["forms::NamedElement::name"]
      },
      {
        "operations": {"<>": 1},
        "name": "NoSelfInheritance",
        "body": "self.superType <> self",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["forms::Entity::superType"]
      }
    ],
    "properties": [
      "Relationship",
      "superType",
      "Entity",
      "features",
      "Form",
      "id"
    ]
  },
  {
    "name": "Relationship",
    "expressions": [
      {
        "operations": {
          "or": 1,
          "and": 1,
          "=": 1,
          "-": 1,
          ">=": 2
        },
        "name": "RelationshipMultiplicityIsValid",
        "body": "self.lowerBound >= 0 and (self.upperBound >= lowerBound or self.upperBound = -1)",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 4,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "forms::Relationship::lowerBound",
          "forms::Relationship::upperBound"
        ]
      },
      {
        "operations": {
          "oclAsSet": 1,
          "=": 1
        },
        "name": "OppositeRelationshipsReferenceEachOther",
        "body": "self.opposite -> forAll(o | o.opposite = self)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": ["forms::Relationship::opposite"]
      },
      {
        "operations": {
          "<>": 1,
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "allInstances": 1,
          "includes": 1,
          "implies": 1,
          "=": 1,
          "first": 1
        },
        "name": "OppositeRelationshipTypeIsValid",
        "body": "self.opposite <> null implies self.target = Entity.allInstances() -> select(e | e.features -> select(f | f.oclIsKindOf(Relationship)) -> includes(self.opposite)) -> asOrderedSet() -> first()",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 8,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "forms::Relationship::target",
          "forms::Entity::features",
          "forms::Relationship::opposite"
        ]
      }
    ],
    "properties": [
      "Relationship",
      "target",
      "lowerBound",
      "opposite",
      "RelationshipPageElement",
      "upperBound"
    ]
  },
  {
    "name": "AttributePageElement",
    "expressions": [],
    "properties": ["attribute"]
  },
  {
    "name": "TimeSelectionField",
    "expressions": [{
      "operations": {"=": 1},
      "name": "TimeIsValid",
      "body": "self.attribute.type = AttributeType::Time",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "forms::AttributePageElement::attribute",
        "forms::Attribute::type"
      ]
    }],
    "properties": []
  },
  {
    "name": "SelectionField",
    "expressions": [{
      "operations": {
        "<>": 1,
        "or": 1,
        "=": 1
      },
      "name": "SelectionFieldAttributeTypeIsValid",
      "body": "self.attribute.type = AttributeType::Boolean or self.attribute.enumeration <> null",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 2,
        "NullLiteralExpImpl": 1,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "forms::Attribute::enumeration",
        "forms::AttributePageElement::attribute",
        "forms::Attribute::type"
      ]
    }],
    "properties": []
  }
]
