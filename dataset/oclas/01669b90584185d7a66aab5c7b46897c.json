[
  {
    "name": "ApplicationValueSpecification",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteSwComponentInstance",
    "expressions": [],
    "properties": [
      "Rte",
      "rteEventToTaskMapping",
      "rteExclusiveAreaImplementation",
      "rteSoftwareComponentInstance"
    ]
  },
  {
    "name": "ISignalIPdu",
    "expressions": [],
    "properties": ["iSignalToPduMapping"]
  },
  {
    "name": "CompuConst",
    "expressions": [],
    "properties": [
      "vt",
      "CompuScale"
    ]
  },
  {
    "name": "BswImplementation",
    "expressions": [],
    "properties": [
      "behavior",
      "RteBswModuleInstance"
    ]
  },
  {
    "name": "VariableDataPrototype",
    "expressions": [],
    "properties": [
      "RVariableInAtomicSwcInstanceRef",
      "VariableDataInstanceInSwc",
      "InvalidationPolicy",
      "SwcInternalBehavior",
      "VariableInAtomicSwcTypeInstanceRef",
      "AutosarVariableRef",
      "VariableDataPrototypeInSystemInstanceRef",
      "SenderReceiverInterface",
      "SenderComSpec",
      "ReceiverComSpec",
      "initValue"
    ]
  },
  {
    "name": "SwPointerTargetProps",
    "expressions": [],
    "properties": [
      "targetCategory",
      "swDataDefProps",
      "SwDataDefProps"
    ]
  },
  {
    "name": "ServerCallPoint",
    "expressions": [],
    "properties": [
      "operationIref",
      "RunnableEntity",
      "operation"
    ]
  },
  {
    "name": "ServiceSwComponentType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "BaseTypeEncodingString",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SwImplPolicyEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "PPortComSpec",
    "expressions": [],
    "properties": ["PPortPrototype"]
  },
  {
    "name": "ComSignal",
    "expressions": [{
      "operations": {
        "not": 1,
        "<>": 1,
        "oclIsUndefined": 1,
        "and": 1
      },
      "name": "transfersImmediately",
      "body": "not comTransferProperty.oclIsUndefined() and comTransferProperty <> ComTransferPropertyEnum::PENDING",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 2,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["ar4x::ecuc::ComSignal::comTransferProperty"]
    }],
    "properties": [
      "comTransferProperty",
      "comSystemTemplateSystemSignal",
      "comHandleId",
      "ComConfig"
    ]
  },
  {
    "name": "RevisionLabelString",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RunnableEntity",
    "expressions": [],
    "properties": [
      "writtenLocalVariable",
      "dataSendPoint",
      "dataReceivePointByArgument",
      "parent",
      "SwcBswRunnableMapping",
      "event",
      "symbol",
      "readLocalVariable",
      "serverCallPoint"
    ]
  },
  {
    "name": "EcucAbstractReferenceValue",
    "expressions": [],
    "properties": [
      "EcucContainerValue",
      "definitionRef"
    ]
  },
  {
    "name": "POperationInstanceInSwc",
    "expressions": [],
    "properties": ["operationInvokedEvent"]
  },
  {
    "name": "ConstantSpecification",
    "expressions": [],
    "properties": [
      "valueSpec",
      "ConstantReference"
    ]
  },
  {
    "name": "PortInCompositionInstanceRef",
    "expressions": [],
    "properties": [
      "DelegationSwConnector",
      "contextComponent"
    ]
  },
  {
    "name": "ApplicationSwComponentType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "PortApiOption",
    "expressions": [],
    "properties": [
      "enableTakeAddress",
      "portArgValue",
      "SwcInternalBehavior",
      "port"
    ]
  },
  {
    "name": "InternalBehavior",
    "expressions": [],
    "properties": [
      "exclusiveArea",
      "dataTypeMapping"
    ]
  },
  {
    "name": "SenderRecCompositeTypeMapping",
    "expressions": [],
    "properties": [
      "SenderRecRecordElementMapping",
      "SenderRecArrayElementMapping",
      "SenderReceiverToSignalGroupMapping"
    ]
  },
  {
    "name": "MemoryAllocationKeywordPolicyType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RVariableInAtomicSwcInstanceRef",
    "expressions": [],
    "properties": [
      "DataReceivedEvent",
      "targetDataElement",
      "contextRPort",
      "DataReceiveErrorEvent"
    ]
  },
  {
    "name": "BswModuleEntry",
    "expressions": [],
    "properties": [
      "callType",
      "BswModuleDescription",
      "serviceId",
      "executionContext",
      "BswModuleEntity"
    ]
  },
  {
    "name": "IndexedArrayElement",
    "expressions": [],
    "properties": [
      "implementationArrayElement",
      "SenderRecArrayElementMapping",
      "index"
    ]
  },
  {
    "name": "SwcInternalBehavior",
    "expressions": [
      {
        "operations": {"asOrderedSet": 1},
        "name": "getUsingDataTypes",
        "body": "self.includedDataTypeSet.dataType->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::m2::SwcInternalBehavior::includedDataTypeSet",
          "ar4x::m2::IncludedDataTypeSet::dataType"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "getImplementationDataTypes": 1
        },
        "name": "getImplementationDataType",
        "body": "let implDataType : ImplementationDataType = getImplementationDataTypes(applicationDataType)->any(true)\n\t\t\t\tin if implDataType.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse implDataType\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 2,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "BooleanLiteralExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {"includes": 1},
        "name": "getReferencerIncludedDataTypeSets",
        "body": "self.includedDataTypeSet\n\t\t\t\t\t->select(i | i.dataType->includes(dataType))",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::m2::SwcInternalBehavior::includedDataTypeSet",
          "ar4x::m2::IncludedDataTypeSet::dataType"
        ]
      },
      {
        "operations": {
          "getImplementationDataType": 1,
          "includes": 1
        },
        "name": "getReferencerIncludedDataTypeSets",
        "body": "self.includedDataTypeSet\n\t\t\t\t\t->select(i | i.dataType\n\t\t\t\t\t\t->collect(t | getImplementationDataType(t))\n\t\t\t\t\t\t->includes(dataType))",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::m2::SwcInternalBehavior::includedDataTypeSet",
          "ar4x::m2::IncludedDataTypeSet::dataType"
        ]
      },
      {
        "operations": {
          "asOrderedSet": 1,
          "=": 1
        },
        "name": "getImplementationDataTypes",
        "body": "self.dataTypeMapping.dataTypeMap->select(m | m.applicationDataType = applicationDataType).implementationDataType->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::DataTypeMappingSet::dataTypeMap",
          "ar4x::m2::DataTypeMap::implementationDataType",
          "ar4x::m2::InternalBehavior::dataTypeMapping",
          "ar4x::m2::DataTypeMap::applicationDataType"
        ]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "getImplementationDataType": 1,
          "oclAsType": 2
        },
        "name": "getImplementationDataType",
        "body": "if dataType.oclIsKindOf(ImplementationDataType)\n\t\t\t\t\tthen dataType.oclAsType(ImplementationDataType)\n\t\t\t\t\telse self.getImplementationDataType(dataType.oclAsType(ApplicationDataType))\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 4,
          "TypeExpImpl": 3,
          "IfExpImpl": 1
        },
        "properties": []
      }
    ],
    "properties": [
      "runnable",
      "event",
      "portApiOption",
      "includedDataTypeSet",
      "parent",
      "SwcBswMapping",
      "explicitInterRunnableVariable"
    ]
  },
  {
    "name": "OperationInstanceInComposition",
    "expressions": [{
      "operations": {},
      "name": "getTargetShortName",
      "body": "self.prototype.prototype.shortName",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "ar4x::instance::OperationInstanceInSwc::prototype",
        "ar4x::instance::OperationInstanceInComposition::prototype",
        "ar4x::m2::Referrable::shortName"
      ]
    }],
    "properties": [
      "prototype",
      "providerConnection",
      "parent",
      "requesterConnection"
    ]
  },
  {
    "name": "DataConstr",
    "expressions": [
      {
        "operations": {"oclIsUndefined": 1},
        "name": "getUpperLimitValue",
        "body": "let upperLimit : Limit = self.dataConstrRule.internalConstrs.upperLimit->any(true)\n\t\t\t\t\t\t\tin if upperLimit.oclIsUndefined()\n\t\t\t\t\t\t\t\tthen null\n\t\t\t\t\t\t\t\telse upperLimit.value\n\t\t\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 1,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "ar4x::m2::Limit::value",
          "ar4x::m2::DataConstr::dataConstrRule",
          "ar4x::m2::InternalConstrs::upperLimit",
          "ar4x::m2::DataConstrRule::internalConstrs"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "getLowerLimitValue",
        "body": "let lowerLimit : Limit = self.dataConstrRule.internalConstrs.lowerLimit->any(true)\n\t\t\t\t\t\t\tin if lowerLimit.oclIsUndefined()\n\t\t\t\t\t\t\t\tthen null\n\t\t\t\t\t\t\t\telse lowerLimit.value\n\t\t\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 1,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "ar4x::m2::Limit::value",
          "ar4x::m2::InternalConstrs::lowerLimit",
          "ar4x::m2::DataConstr::dataConstrRule",
          "ar4x::m2::DataConstrRule::internalConstrs"
        ]
      }
    ],
    "properties": [
      "dataConstrRule",
      "AutosarDataType",
      "SwDataDefProps"
    ]
  },
  {
    "name": "Identifiable",
    "expressions": [],
    "properties": [
      "EcucReferenceValue",
      "category",
      "AnyInstanceRef",
      "AnyInstanceRef",
      "EcucReferrable"
    ]
  },
  {
    "name": "OsIocSenderProperties",
    "expressions": [],
    "properties": [
      "parent",
      "osIocSendingOsApplication",
      "osIocSenderId"
    ]
  },
  {
    "name": "EcucModule",
    "expressions": [],
    "properties": ["referenceBase"]
  },
  {
    "name": "SectionInitializationPolicyType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsSpinlockLockMethodEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ReferenceValueSpecification",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ROperationInAtomicSwcInstanceRef",
    "expressions": [],
    "properties": [
      "ServerCallPoint",
      "targetRequiredOperation",
      "contextRPort"
    ]
  },
  {
    "name": "OsIocCommunication",
    "expressions": [{
      "operations": {
        "oclIsUndefined": 1,
        "=": 1
      },
      "name": "getLoopbackSenderProperties",
      "body": "let loopback : OsIocSenderProperties = osIocSenderProperties\n\t\t\t\t\t->any(osIocSendingOsApplication = self.osIocReceiverProperties.osIocReceivingOsApplication)\n\t\t\t\tin if loopback.oclIsUndefined()\n\t\t\t\t\tthen null else loopback\n\t\t\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 5,
        "LetExpImpl": 1,
        "NullLiteralExpImpl": 1,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "ar4x::ecuc::OsIocSenderProperties::osIocSendingOsApplication",
        "ar4x::ecuc::OsIocCommunication::osIocSenderProperties",
        "ar4x::ecuc::OsIocCommunication::osIocReceiverProperties",
        "ar4x::ecuc::OsIocReceiverProperties::osIocReceivingOsApplication"
      ]
    }],
    "properties": [
      "osIocBufferLength",
      "osIocSenderProperties",
      "osIocReceiverProperties",
      "osIocDataProperties",
      "OsIoc"
    ]
  },
  {
    "name": "NativeDeclarationString",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SwConnector",
    "expressions": [],
    "properties": ["CompositionSwComponentType"]
  },
  {
    "name": "RteBswEventToTaskMapping",
    "expressions": [],
    "properties": [
      "rteBswMappedToTask",
      "RteBswModuleInstance",
      "rteBswPositionInTask",
      "rteBswUsedOsAlarm",
      "rteBswEvent",
      "rteBswUsedOsEvent",
      "rteBswActivationOffset"
    ]
  },
  {
    "name": "Float",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AssemblySwConnector",
    "expressions": [],
    "properties": [
      "provider",
      "requesterIref",
      "requester",
      "providerIref"
    ]
  },
  {
    "name": "SenderReceiverToSignalMapping",
    "expressions": [],
    "properties": [
      "dataElementIref",
      "systemSignal",
      "dataElement"
    ]
  },
  {
    "name": "UnlimitedInteger",
    "expressions": [],
    "properties": []
  },
  {
    "name": "TimingEvent",
    "expressions": [],
    "properties": ["period"]
  },
  {
    "name": "BswModeSenderPolicy",
    "expressions": [],
    "properties": [
      "BswInternalBehavior",
      "queueLength",
      "providedModeGroup"
    ]
  },
  {
    "name": "EcucContainerValue",
    "expressions": [],
    "properties": [
      "referenceValue",
      "EcucContainerValue",
      "EcucModuleConfigurationValues",
      "definitionRef",
      "parameterValue",
      "subContainer"
    ]
  },
  {
    "name": "ISignal",
    "expressions": [],
    "properties": [
      "ISignalToIPduMapping",
      "ISignalGroup",
      "systemSignal"
    ]
  },
  {
    "name": "RteOsInteraction",
    "expressions": [],
    "properties": [
      "rteUsedOsActivation",
      "Rte"
    ]
  },
  {
    "name": "Rte",
    "expressions": [],
    "properties": [
      "rteBswGeneral",
      "rteBswModuleInstance",
      "EcucRoot",
      "rteSwComponentInstance",
      "rteGeneration",
      "rteOsInteraction",
      "rteInitializationBehavior"
    ]
  },
  {
    "name": "NonqueuedSenderComSpec",
    "expressions": [],
    "properties": ["initValue"]
  },
  {
    "name": "BswModuleEntity",
    "expressions": [],
    "properties": [
      "accessedModeGroup",
      "implementedEntry",
      "managedModeGroup",
      "parent",
      "SwcBswRunnableMapping"
    ]
  },
  {
    "name": "SenderReceiverInterface",
    "expressions": [],
    "properties": [
      "dataElement",
      "invalidationPolicy"
    ]
  },
  {
    "name": "EcucReferenceValue",
    "expressions": [],
    "properties": ["value"]
  },
  {
    "name": "ComSignalGroup",
    "expressions": [{
      "operations": {
        "<>": 1,
        "not": 1,
        "oclIsUndefined": 1,
        "and": 1
      },
      "name": "transfersImmediately",
      "body": "not comTransferProperty.oclIsUndefined() and comTransferProperty <> ComTransferPropertyEnum::PENDING",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 4,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["ar4x::ecuc::ComSignalGroup::comTransferProperty"]
    }],
    "properties": [
      "comTransferProperty",
      "ComConfig",
      "comHandleId",
      "comGroupSignal",
      "comSystemTemplateSignalGroup"
    ]
  },
  {
    "name": "DataConstrRule",
    "expressions": [],
    "properties": [
      "internalConstrs",
      "DataConstr"
    ]
  },
  {
    "name": "SwcBswRunnableMapping",
    "expressions": [],
    "properties": [
      "swcRunnable",
      "bswEntity",
      "SwcBswMapping"
    ]
  },
  {
    "name": "Implementation",
    "expressions": [],
    "properties": ["swcBswMapping"]
  },
  {
    "name": "ConstantReference",
    "expressions": [{
      "operations": {
        "oclIsKindOf": 1,
        "getEndValueSpec": 1,
        "oclAsType": 1
      },
      "name": "getEndValueSpec",
      "body": "if constant.valueSpec.oclIsKindOf(ConstantReference)\n\t\t\t\t\tthen constant.valueSpec.oclAsType(ConstantReference).getEndValueSpec()\n\t\t\t\t\telse constant.valueSpec\n\t\t\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 3,
        "TypeExpImpl": 2,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 6
      },
      "properties": [
        "ar4x::m2::ConstantSpecification::valueSpec",
        "ar4x::m2::ConstantReference::constant"
      ]
    }],
    "properties": ["constant"]
  },
  {
    "name": "CompuMethod",
    "expressions": [],
    "properties": [
      "compuInternalToPhys",
      "SwDataDefProps",
      "AutosarDataType"
    ]
  },
  {
    "name": "Os",
    "expressions": [],
    "properties": [
      "osOS",
      "osApplication",
      "EcucRoot",
      "osIoc",
      "osEvent",
      "osTask",
      "osAlarm",
      "osResource",
      "osSpinlock"
    ]
  },
  {
    "name": "BswSchedulableEntity",
    "expressions": [],
    "properties": [
      "event",
      "BswInternalBehavior"
    ]
  },
  {
    "name": "CompositionSwComponentType",
    "expressions": [],
    "properties": [
      "component",
      "RootSwCompositionPrototype",
      "connector"
    ]
  },
  {
    "name": "SwcBswMapping",
    "expressions": [],
    "properties": [
      "swcBehavior",
      "Implementation",
      "bswBehavior",
      "runnableMapping"
    ]
  },
  {
    "name": "ExclusiveArea",
    "expressions": [],
    "properties": [
      "parent",
      "swcConfig",
      "bswConfig",
      "enterExecutableEntity",
      "ExecutableEntity"
    ]
  },
  {
    "name": "Limit",
    "expressions": [],
    "properties": [
      "InternalConstrs",
      "value",
      "CompuScale",
      "CompuScale",
      "InternalConstrs"
    ]
  },
  {
    "name": "TextValueSpecification",
    "expressions": [],
    "properties": ["value"]
  },
  {
    "name": "SwDataDefProps",
    "expressions": [],
    "properties": [
      "dataConstr",
      "swImplPolicy",
      "invalidValue",
      "swAlignment",
      "DataPrototype",
      "ImplementationDataTypeElement",
      "implementationDataType",
      "swAddrMethod",
      "SwPointerTargetProps",
      "baseType",
      "AutosarDataType",
      "compuMethod",
      "swPointerTargetProps"
    ]
  },
  {
    "name": "SenderRecRecordElementMapping",
    "expressions": [],
    "properties": [
      "complexTypeMapping",
      "implementationRecordElement",
      "systemSignal",
      "SenderRecRecordTypeMapping"
    ]
  },
  {
    "name": "DataTypeMappingSet",
    "expressions": [],
    "properties": [
      "dataTypeMap",
      "InternalBehavior",
      "modeRequestTypeMap"
    ]
  },
  {
    "name": "HandleInvalidEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "NumericalValueSpecification",
    "expressions": [],
    "properties": ["value"]
  },
  {
    "name": "EcuC",
    "expressions": [],
    "properties": [
      "ecucPartitionCollection",
      "EcucRoot"
    ]
  },
  {
    "name": "EcucPartition",
    "expressions": [
      {
        "operations": {"oclIsUndefined": 1},
        "name": "isTrusted",
        "body": "let osApp : OsApplication = self.implOsApplication->any(true)\n\t\t\t\t\t\t\tin if osApp.oclIsUndefined()\n\t\t\t\t\t\t\t\t\tthen false\n\t\t\t\t\t\t\t\t\telse osApp.osTrusted\n\t\t\t\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 1,
          "LetExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2,
          "BooleanLiteralExpImpl": 2
        },
        "properties": [
          "ar4x::ecuc::EcucPartition::implOsApplication",
          "ar4x::ecuc::OsApplication::osTrusted"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "getOwnerCore",
        "body": "let osApp : OsApplication = self.implOsApplication->any(true)\n\t\t\t\t\t\t\tin if osApp.oclIsUndefined()\n\t\t\t\t\t\t\t\t\tthen null\n\t\t\t\t\t\t\t\t\telse osApp.osApplicationCoreAssignment\n\t\t\t\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 1,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "ar4x::ecuc::EcucPartition::implOsApplication",
          "ar4x::ecuc::OsApplication::osApplicationCoreAssignment"
        ]
      }
    ],
    "properties": [
      "partitionCanBeRestarted",
      "ecucPartitionSoftwareComponent",
      "EcucPartitionCollection",
      "implOsApplication",
      "ecucPartitionBswModuleExecution"
    ]
  },
  {
    "name": "DataPrototype",
    "expressions": [
      {
        "operations": {"oclIsUndefined": 1},
        "name": "swAddrMethod",
        "body": "if swDataDefProps.swAddrMethod.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swDataDefProps.swAddrMethod\n\t\t\t\t\tendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::swAddrMethod",
          "ar4x::m2::DataPrototype::swDataDefProps"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "swAlignment",
        "body": "if swDataDefProps.swAlignment.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swDataDefProps.swAlignment\n\t\t\t\t\tendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::swAlignment",
          "ar4x::m2::DataPrototype::swDataDefProps"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "getSwImplPolicy",
        "body": "if swDataDefProps.swImplPolicy.oclIsUndefined()\n\t\t\t\t\tthen SwImplPolicyEnum::unspecified\n\t\t\t\t\telse swDataDefProps.swImplPolicy\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "EnumLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::swImplPolicy",
          "ar4x::m2::DataPrototype::swDataDefProps"
        ]
      }
    ],
    "properties": [
      "swAddrMethod",
      "swDataDefProps",
      "swAlignment",
      "type"
    ]
  },
  {
    "name": "SenderReceiverToSignalGroupMapping",
    "expressions": [],
    "properties": [
      "dataElement",
      "typeMapping",
      "signalGroup",
      "dataElementIref"
    ]
  },
  {
    "name": "PositiveInteger",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsSpinlock",
    "expressions": [],
    "properties": [
      "osSpinlockAccessingApplication",
      "RteExclusiveAreaImplementation",
      "Os",
      "RteBswExclusiveAreaImpl",
      "osSpinlockLockMethod"
    ]
  },
  {
    "name": "OsResource",
    "expressions": [],
    "properties": [
      "Os",
      "RteExclusiveAreaImplementation",
      "RteBswExclusiveAreaImpl"
    ]
  },
  {
    "name": "BswCalledEntity",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SwComponentPrototype",
    "expressions": [],
    "properties": [
      "PortInCompositionInstanceRef",
      "PortInstanceInComposition",
      "type",
      "CompositionSwComponentType",
      "RteSwComponentInstance",
      "instance",
      "VariableDataPrototypeInSystemInstanceRef",
      "PortPrototypeInCompositionInstanceRef"
    ]
  },
  {
    "name": "BswInterruptEntity",
    "expressions": [],
    "properties": ["interruptSource"]
  },
  {
    "name": "SwComponentInstanceInSystem",
    "expressions": [],
    "properties": [
      "contextRootComposition",
      "InstanceRoot",
      "ownerPartition",
      "prototype"
    ]
  },
  {
    "name": "EcucReferrable",
    "expressions": [],
    "properties": [
      "source",
      "id",
      "shortName",
      "reference"
    ]
  },
  {
    "name": "InstanceReferrable",
    "expressions": [],
    "properties": ["id"]
  },
  {
    "name": "PPortPrototypeInCompositionInstanceRef",
    "expressions": [],
    "properties": [
      "targetPPort",
      "AssemblySwConnector"
    ]
  },
  {
    "name": "ArrayValueSpecification",
    "expressions": [],
    "properties": ["element"]
  },
  {
    "name": "OsApplicationTrustedFunction",
    "expressions": [],
    "properties": [
      "parent",
      "osTrustedFunctionName"
    ]
  },
  {
    "name": "ArgumentDataPrototype",
    "expressions": [],
    "properties": [
      "direction",
      "ClientServerOperation"
    ]
  },
  {
    "name": "OsIocReceiverProperties",
    "expressions": [],
    "properties": [
      "OsIocCommunication",
      "osIocReceivingOsApplication"
    ]
  },
  {
    "name": "Autosar",
    "expressions": [],
    "properties": [
      "id",
      "arPackage",
      "M2Root"
    ]
  },
  {
    "name": "ApplicationDataType",
    "expressions": [],
    "properties": ["DataTypeMap"]
  },
  {
    "name": "CIdentifier",
    "expressions": [],
    "properties": []
  },
  {
    "name": "DataMapping",
    "expressions": [],
    "properties": ["SystemMapping"]
  },
  {
    "name": "RteEvent",
    "expressions": [],
    "properties": [
      "startOnEvent",
      "SwcInternalBehavior",
      "config"
    ]
  },
  {
    "name": "DataTypeMap",
    "expressions": [],
    "properties": [
      "implementationDataType",
      "DataTypeMappingSet",
      "applicationDataType"
    ]
  },
  {
    "name": "EcucConfigurationVariantEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ModeInBswModuleDescriptionInstanceRef",
    "expressions": [],
    "properties": [
      "BswModeSwitchEvent",
      "contextModeDeclarationGroup",
      "targetMode",
      "BswEvent"
    ]
  },
  {
    "name": "SenderRecRecordTypeMapping",
    "expressions": [],
    "properties": ["recordElementMapping"]
  },
  {
    "name": "ValueSpecification",
    "expressions": [],
    "properties": [
      "SwDataDefProps",
      "VariableDataPrototype",
      "RecordValueSpecification",
      "NonqueuedReceiverComSpec",
      "ArrayValueSpecification",
      "NonqueuedSenderComSpec",
      "AutosarDataType",
      "ConstantSpecification",
      "PortDefinedArgumentValue"
    ]
  },
  {
    "name": "SystemSignal",
    "expressions": [],
    "properties": [
      "SystemSignalGroup",
      "SenderRecRecordElementMapping",
      "SenderReceiverToSignalMapping",
      "SenderRecArrayElementMapping",
      "ISignal"
    ]
  },
  {
    "name": "DataReceivedEvent",
    "expressions": [],
    "properties": [
      "dataIref",
      "data"
    ]
  },
  {
    "name": "VariableDataInstance",
    "expressions": [],
    "properties": [
      "SenderReceiverToSignalGroupMapping",
      "SenderReceiverToSignalMapping"
    ]
  },
  {
    "name": "RecordValueSpecification",
    "expressions": [],
    "properties": ["field"]
  },
  {
    "name": "Compu",
    "expressions": [],
    "properties": [
      "CompuMethod",
      "compuScale"
    ]
  },
  {
    "name": "VariableDataInstanceInSwc",
    "expressions": [
      {
        "operations": {
          "not": 2,
          "oclIsUndefined": 2,
          "getImplementationDataType": 1
        },
        "name": "getSwAlignment",
        "body": "let implType : m2::ImplementationDataType = getImplementationDataType()\n\t\t\t\tin if not self.prototype.swAlignment.oclIsUndefined()\n\t\t\t\t\t\tthen self.prototype.swAlignment\n\t\t\t\t\telse if not implType.swAlignment.oclIsUndefined()\n\t\t\t\t\t\tthen implType.swAlignment\n\t\t\t\t\telse null\n\t\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 5,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::m2::ImplementationDataType::swAlignment",
          "ar4x::m2::DataPrototype::swAlignment"
        ]
      },
      {
        "operations": {
          "getApplicationDataType": 1,
          "<>": 2,
          "not": 2,
          "oclIsUndefined": 2,
          "getSwImplPolicy": 7,
          "and": 2,
          "getImplementationDataType": 1
        },
        "name": "getSwImplPolicy",
        "body": "let implType : m2::ImplementationDataType = getImplementationDataType() , applType : m2::ApplicationDataType\n\t\t\t\t\t= getApplicationDataType()\n\t\t\t\tin if not applType.getSwImplPolicy().oclIsUndefined() and applType.getSwImplPolicy() <> m2::SwImplPolicyEnum::unspecified\n\t\t\t\t\t\tthen applType.getSwImplPolicy()\n\t\t\t\t\telse if not implType.getSwImplPolicy().oclIsUndefined() and implType.getSwImplPolicy() <> m2::SwImplPolicyEnum::unspecified\n\t\t\t\t\t\tthen implType.getSwImplPolicy()\n\t\t\t\t\telse self.prototype.getSwImplPolicy()\n\t\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 9,
          "OperationCallExpImpl": 17,
          "LetExpImpl": 2,
          "EnumLiteralExpImpl": 2,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::instance::VariableDataInstanceInSwc::prototype"]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "getImplementationDataType": 1
        },
        "name": "getBaseType",
        "body": "let implType : m2::ImplementationDataType = getImplementationDataType()\n\t\t\t\tin if not implType.baseType.oclIsUndefined()\n\t\t\t\t\t\tthen implType.baseType\n\t\t\t\t\telse null\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ar4x::m2::ImplementationDataType::baseType"]
      },
      {
        "operations": {
          "getApplicationDataType": 1,
          "not": 2,
          "oclIsUndefined": 2,
          "getImplementationDataType": 1
        },
        "name": "getInvalidValue",
        "body": "let implType : m2::ImplementationDataType = getImplementationDataType() , applType : m2::ApplicationDataType\n\t\t\t\t\t= getApplicationDataType()\n\t\t\t\tin if not applType.invalidValue.oclIsUndefined()\n\t\t\t\t\t\tthen applType.invalidValue\n\t\t\t\t\telse if not implType.invalidValue.oclIsUndefined()\n\t\t\t\t\t\tthen implType.invalidValue\n\t\t\t\t\telse null\n\t\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 6,
          "LetExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": ["ar4x::m2::AutosarDataType::invalidValue"]
      },
      {
        "operations": {
          "getLeafImplementationDataType": 2,
          "getApplicationDataType": 1,
          "not": 4,
          "oclIsUndefined": 4,
          "getImplementationDataType": 1
        },
        "name": "getSwAddrMethod",
        "body": "let implType : m2::ImplementationDataType = getImplementationDataType() , applType : m2::ApplicationDataType\n\t\t\t\t\t= getApplicationDataType()\n\t\t\t\tin if not self.prototype.swAddrMethod.oclIsUndefined()\n\t\t\t\t\t\tthen self.prototype.swAddrMethod\n\t\t\t\t\telse if not implType.swAddrMethod.oclIsUndefined()\n\t\t\t\t\t\tthen implType.swAddrMethod\n\t\t\t\t\telse if not implType.getLeafImplementationDataType().swAddrMethod.oclIsUndefined()\n\t\t\t\t\t\tthen implType.getLeafImplementationDataType().swAddrMethod\n\t\t\t\t\telse if not applType.swAddrMethod.oclIsUndefined()\n\t\t\t\t\t\tthen applType.swAddrMethod\n\t\t\t\t\telse null\n\t\t\t\t\tendif endif endif endif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 12,
          "VariableExpImpl": 10,
          "LetExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 4,
          "PropertyCallExpImpl": 10
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::m2::DataPrototype::swAddrMethod",
          "ar4x::m2::AutosarDataType::swAddrMethod"
        ]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "oclAsType": 1
        },
        "name": "getApplicationDataType",
        "body": "if self.prototype.type.oclIsKindOf(m2::ApplicationDataType)\n\t\t\t\t\tthen self.prototype.type.oclAsType(m2::ApplicationDataType)\n\t\t\t\t\telse null\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 2,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::m2::DataPrototype::type"
        ]
      },
      {
        "operations": {},
        "name": "getTargetShortName",
        "body": "self.prototype.shortName",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::m2::Referrable::shortName"
        ]
      },
      {
        "operations": {
          "getSwImplPolicy": 1,
          "=": 1
        },
        "name": "isEventSemantics",
        "body": "getSwImplPolicy() = m2::SwImplPolicyEnum::queued",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 2,
          "EnumLiteralExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "getImplementationDataType": 1,
          "getOwnerAtomicSwc": 1,
          "oclAsType": 2
        },
        "name": "getImplementationDataType",
        "body": "if self.prototype.type.oclIsKindOf(m2::ImplementationDataType)\n\t\t\t\t\tthen self.prototype.type.oclAsType(m2::ImplementationDataType)\n\t\t\t\t\telse\n\t\t\t\t\t\tgetOwnerAtomicSwc().getImplementationDataType(self.prototype.type.oclAsType(m2::ApplicationPrimitiveDataType))\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 4,
          "TypeExpImpl": 3,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::m2::DataPrototype::type"
        ]
      },
      {
        "operations": {"oclAsType": 1},
        "name": "getOwnerAtomicSwc",
        "body": "self.contextPort.parent.oclAsType(m2::AtomicSwComponentType)",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::m2::PortPrototype::parent",
          "ar4x::instance::VariableDataInstanceInSwc::contextPort"
        ]
      }
    ],
    "properties": [
      "DataReceiveErrorEvent",
      "AutosarVariableRef",
      "InstanceRoot",
      "prototype",
      "DataReceivedEvent",
      "DelegationDataInstanceConnector",
      "instance",
      "DataSendCompletedEvent",
      "contextPort"
    ]
  },
  {
    "name": "InvalidationPolicy",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "and": 1,
          "=": 1
        },
        "name": "isInvalidationReplace",
        "body": "not handleInvalid.oclIsUndefined() and handleInvalid = m2::HandleInvalidEnum::replace",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "EnumLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ar4x::m2::InvalidationPolicy::handleInvalid"]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "and": 1,
          "=": 1
        },
        "name": "isInvalidationKeep",
        "body": "not handleInvalid.oclIsUndefined() and handleInvalid = m2::HandleInvalidEnum::keep",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "EnumLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ar4x::m2::InvalidationPolicy::handleInvalid"]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "or": 1,
          "and": 1,
          "=": 2
        },
        "name": "isInvalidationEnabled",
        "body": "not handleInvalid.oclIsUndefined() and (handleInvalid = m2::HandleInvalidEnum::keep or handleInvalid =\n\t\t\t\t\tm2::HandleInvalidEnum::replace)",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 6,
          "EnumLiteralExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": ["ar4x::m2::InvalidationPolicy::handleInvalid"]
      }
    ],
    "properties": [
      "dataElement",
      "handleInvalid",
      "SenderReceiverInterface"
    ]
  },
  {
    "name": "VariableDataInstanceInComposition",
    "expressions": [
      {
        "operations": {"oclIsKindOf": 1},
        "name": "isProvided",
        "body": "prototype.oclIsKindOf(PVariableDataInstanceInSwc)",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::instance::VariableDataInstanceInComposition::prototype"]
      },
      {
        "operations": {},
        "name": "getTargetShortName",
        "body": "self.prototype.prototype.shortName",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::instance::VariableDataInstanceInComposition::prototype",
          "ar4x::m2::Referrable::shortName"
        ]
      },
      {
        "operations": {"oclIsKindOf": 1},
        "name": "isRequired",
        "body": "prototype.oclIsKindOf(RVariableDataInstanceInSwc)",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::instance::VariableDataInstanceInComposition::prototype"]
      }
    ],
    "properties": [
      "providerConnection",
      "DelegationDataInstanceConnector",
      "requesterConnection",
      "parent",
      "prototype"
    ]
  },
  {
    "name": "RteBswModuleInstance",
    "expressions": [],
    "properties": [
      "Rte",
      "rteBswImplementation",
      "rteBswExclusiveAreaImpl",
      "rteBswEventToTaskMapping",
      "rteBswRequiredModeGroupConnection"
    ]
  },
  {
    "name": "RPortInCompositionInstanceRef",
    "expressions": [],
    "properties": ["targetRPort"]
  },
  {
    "name": "RootSwCompositionPrototype",
    "expressions": [],
    "properties": [
      "System",
      "softwareComposition",
      "SwComponentInstanceInSystem"
    ]
  },
  {
    "name": "SystemMapping",
    "expressions": [],
    "properties": [
      "dataMapping",
      "System"
    ]
  },
  {
    "name": "ArgumentDirectionEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "EcucContainer",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteBswExclusiveAreaImpl",
    "expressions": [],
    "properties": [
      "rteBswExclusiveAreaOsResource",
      "rteExclusiveAreaImplMechanism",
      "RteBswModuleInstance",
      "rteBswExclusiveArea",
      "rteBswExclusiveAreaOsSpinlock"
    ]
  },
  {
    "name": "PortPrototypeInCompositionInstanceRef",
    "expressions": [],
    "properties": ["contextComponent"]
  },
  {
    "name": "VariableInAtomicSwcTypeInstanceRef",
    "expressions": [],
    "properties": [
      "portPrototype",
      "AutosarVariableRef",
      "targetDataPrototype"
    ]
  },
  {
    "name": "BswEvent",
    "expressions": [],
    "properties": [
      "config",
      "disabledInMode",
      "parent",
      "startsOnEvent"
    ]
  },
  {
    "name": "ReceiverComSpec",
    "expressions": [],
    "properties": ["dataElement"]
  },
  {
    "name": "RteBswRequiredModeGroupConnection",
    "expressions": [],
    "properties": [
      "rteBswRequiredModeGroup",
      "parent",
      "rteBswProvidedModeGroup"
    ]
  },
  {
    "name": "VerbatimString",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SynchronousServerCallPoint",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SwBaseType",
    "expressions": [],
    "properties": [
      "SwDataDefProps",
      "baseTypeEncoding",
      "nativeDeclaration",
      "baseTypeSize",
      "ImplementationDataType"
    ]
  },
  {
    "name": "SenderRecArrayElementMapping",
    "expressions": [],
    "properties": [
      "indexedArrayElement",
      "SenderRecArrayTypeMapping",
      "complexTypeMapping",
      "systemSignal"
    ]
  },
  {
    "name": "EcucPartitionCollection",
    "expressions": [{
      "operations": {
        "asOrderedSet": 1,
        "getOwnerCore": 1
      },
      "name": "getAssignedCores",
      "body": "self.ecucPartition.getOwnerCore()\n\t\t\t\t\t->asOrderedSet()",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 2,
        "PropertyCallExpImpl": 1
      },
      "properties": ["ar4x::ecuc::EcucPartitionCollection::ecucPartition"]
    }],
    "properties": [
      "ecucPartition",
      "EcuC"
    ]
  },
  {
    "name": "BackgroundEvent",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsApplication",
    "expressions": [],
    "properties": [
      "OsTask",
      "Os",
      "osTrusted",
      "OsIocSenderProperties",
      "osAppEcucPartition",
      "osAppTask",
      "osApplicationCoreAssignment",
      "osApplicationTrustedFunction",
      "OsSpinlock",
      "OsIocReceiverProperties"
    ]
  },
  {
    "name": "OperationInvokedEvent",
    "expressions": [],
    "properties": [
      "operationIref",
      "operation"
    ]
  },
  {
    "name": "ModeDeclarationGroupPrototype",
    "expressions": [],
    "properties": [
      "BswModuleDescription",
      "RteBswRequiredModeGroupConnection",
      "BswModeSenderPolicy",
      "type",
      "RteBswRequiredModeGroupConnection",
      "ModeInBswModuleDescriptionInstanceRef",
      "BswModuleDescription",
      "BswModuleEntity",
      "BswModuleEntity"
    ]
  },
  {
    "name": "ModeRequestTypeMap",
    "expressions": [],
    "properties": [
      "modeGroup",
      "implementationDataType",
      "DataTypeMappingSet"
    ]
  },
  {
    "name": "Ref",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ArraySizeSemanticsEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AssemblyDataInstanceConnector",
    "expressions": [],
    "properties": [
      "InstanceRoot",
      "requester",
      "provider"
    ]
  },
  {
    "name": "EcucParameterValue",
    "expressions": [],
    "properties": [
      "EcucContainerValue",
      "definitionRef"
    ]
  },
  {
    "name": "Referrable",
    "expressions": [],
    "properties": [
      "shortName",
      "id",
      "reference"
    ]
  },
  {
    "name": "ComGroupSignal",
    "expressions": [],
    "properties": [
      "comSystemTemplateSystemSignal",
      "comHandleId",
      "ComSignalGroup"
    ]
  },
  {
    "name": "AutosarDataPrototype",
    "expressions": [
      {
        "operations": {
          "not": 2,
          "oclIsUndefined": 2,
          "getImplementationDataType": 1
        },
        "name": "getSwAlignment",
        "body": "let implType : m2::ImplementationDataType = getImplementationDataType()\n\t\t\t\tin if not self.swAlignment.oclIsUndefined()\n\t\t\t\t\t\tthen self.swAlignment\n\t\t\t\t\telse if not implType.swAlignment.oclIsUndefined()\n\t\t\t\t\t\tthen implType.swAlignment\n\t\t\t\t\telse null\n\t\t\t\t\tendif endif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 5,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::ImplementationDataType::swAlignment",
          "ar4x::m2::DataPrototype::swAlignment"
        ]
      },
      {
        "operations": {
          "getApplicationDataType": 1,
          "not": 3,
          "oclIsUndefined": 3,
          "getImplementationDataType": 1
        },
        "name": "getSwAddrMethod",
        "body": "let implType : m2::ImplementationDataType = getImplementationDataType() , applType : m2::ApplicationDataType\n\t\t\t\t\t= getApplicationDataType()\n\t\t\t\tin if not self.swAddrMethod.oclIsUndefined()\n\t\t\t\t\t\tthen self.swAddrMethod\n\t\t\t\t\telse if not implType.swAddrMethod.oclIsUndefined()\n\t\t\t\t\t\tthen implType.swAddrMethod\n\t\t\t\t\telse if not applType.swAddrMethod.oclIsUndefined()\n\t\t\t\t\t\tthen applType.swAddrMethod\n\t\t\t\t\telse null\n\t\t\t\t\tendif endif endif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 8,
          "OperationCallExpImpl": 8,
          "LetExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 3,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "ar4x::m2::DataPrototype::swAddrMethod",
          "ar4x::m2::AutosarDataType::swAddrMethod"
        ]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "oclAsType": 1
        },
        "name": "getImplementationDataType",
        "body": "if self.type.oclIsKindOf(m2::ImplementationDataType)\n\t\t\t\t\tthen self.type.oclAsType(m2::ImplementationDataType)\n\t\t\t\t\telse null\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 2,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ar4x::m2::DataPrototype::type"]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "oclAsType": 1
        },
        "name": "getApplicationDataType",
        "body": "if self.type.oclIsKindOf(m2::ApplicationDataType)\n\t\t\t\t\tthen self.type.oclAsType(m2::ApplicationDataType)\n\t\t\t\t\telse null\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 2,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ar4x::m2::DataPrototype::type"]
      }
    ],
    "properties": []
  },
  {
    "name": "QueuedReceiverComSpec",
    "expressions": [],
    "properties": ["queueLength"]
  },
  {
    "name": "EcucRoot",
    "expressions": [],
    "properties": [
      "com",
      "os",
      "ecuC",
      "rte"
    ]
  },
  {
    "name": "PortPrototype",
    "expressions": [],
    "properties": [
      "VariableInAtomicSwcTypeInstanceRef",
      "DelegationSwConnector",
      "RVariableInAtomicSwcInstanceRef",
      "parent",
      "VariableDataPrototypeInSystemInstanceRef",
      "OperationInstanceInSwc",
      "portApiOption",
      "VariableDataInstanceInSwc",
      "PortInstanceInComposition"
    ]
  },
  {
    "name": "ImplementationDataType",
    "expressions": [
      {
        "operations": {"oclIsUndefined": 1},
        "name": "baseType",
        "body": "if swDataDefProps.baseType.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swDataDefProps.baseType\n\t\t\t\t\tendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::baseType",
          "ar4x::m2::AutosarDataType::swDataDefProps"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "isRedefinitionType",
        "body": "category = 'TYPE_REFERENCE'",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::Identifiable::category"]
      },
      {
        "operations": {
          "getLeafImplementationDataType": 1,
          "=": 1
        },
        "name": "isUnionType",
        "body": "getLeafImplementationDataType().category = 'UNION'",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::Identifiable::category"]
      },
      {
        "operations": {
          "getLeafImplementationDataType": 1,
          "=": 1
        },
        "name": "isPrimitiveType",
        "body": "getLeafImplementationDataType().category = 'VALUE'",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::Identifiable::category"]
      },
      {
        "operations": {
          "getLeafImplementationDataType": 1,
          "=": 1
        },
        "name": "isStructType",
        "body": "getLeafImplementationDataType().category = 'STRUCTURE'",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::Identifiable::category"]
      },
      {
        "operations": {
          "getLeafImplementationDataType": 1,
          "=": 1
        },
        "name": "isPointerType",
        "body": "getLeafImplementationDataType().category = 'DATA_REFERENCE'",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 2,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::Identifiable::category"]
      },
      {
        "operations": {
          "getLeafImplementationDataType": 1,
          "=": 1
        },
        "name": "isArrayType",
        "body": "getLeafImplementationDataType().category = 'ARRAY'",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::Identifiable::category"]
      },
      {
        "operations": {
          "not": 1,
          "isPrimitiveType": 1
        },
        "name": "isComplexType",
        "body": "not isPrimitiveType()",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "getLeafImplementationDataType": 1,
          "oclIsUndefined": 1
        },
        "name": "getLeafImplementationDataType",
        "body": "if swDataDefProps.implementationDataType.oclIsUndefined()\n\t\t\t\tthen self\n\t\t\t\telse swDataDefProps.implementationDataType.getLeafImplementationDataType()\n\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::implementationDataType",
          "ar4x::m2::AutosarDataType::swDataDefProps"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "swAlignment",
        "body": "if swDataDefProps.swAlignment.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swDataDefProps.swAlignment\n\t\t\t\t\tendif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::swAlignment",
          "ar4x::m2::AutosarDataType::swDataDefProps"
        ]
      }
    ],
    "properties": [
      "OsIocDataProperties",
      "SwDataDefProps",
      "baseType",
      "subElement",
      "swAlignment",
      "ModeRequestTypeMap",
      "PortDefinedArgumentValue",
      "DataTypeMap"
    ]
  },
  {
    "name": "RteBswGeneral",
    "expressions": [],
    "properties": [
      "rteUseComShadowSignalApi",
      "Rte"
    ]
  },
  {
    "name": "VariableAccess",
    "expressions": [],
    "properties": [
      "RunnableEntity",
      "accessedVariable",
      "RunnableEntity",
      "RunnableEntity",
      "DataSendCompletedEvent",
      "RunnableEntity"
    ]
  },
  {
    "name": "AlignmentType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteInitializationStrategyEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "DataFilter",
    "expressions": [
      {
        "operations": {"<>": 1},
        "name": "isFilterEnabled",
        "body": "dataFilterType <> DataFilterTypeEnum::always",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "EnumLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::DataFilter::dataFilterType"]
      },
      {
        "operations": {
          "and": 6,
          "=": 7
        },
        "name": "isCompatibleWith",
        "body": "self.dataFilterType = another.dataFilterType and self.mask = another.mask and self.max = another.max and\n\t\t\t\t\tself.min = another.min and self.offset = another.offset and self.period = another.period and self.x = another.x",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 13,
          "VariableExpImpl": 14,
          "PropertyCallExpImpl": 14
        },
        "properties": [
          "ar4x::m2::DataFilter::mask",
          "ar4x::m2::DataFilter::dataFilterType",
          "ar4x::m2::DataFilter::min",
          "ar4x::m2::DataFilter::period",
          "ar4x::m2::DataFilter::x",
          "ar4x::m2::DataFilter::offset",
          "ar4x::m2::DataFilter::max"
        ]
      }
    ],
    "properties": [
      "mask",
      "dataFilterType",
      "min",
      "NonqueuedReceiverComSpec",
      "period",
      "offset",
      "x",
      "max"
    ]
  },
  {
    "name": "BswBackgroundEvent",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ISignalToIPduMapping",
    "expressions": [],
    "properties": [
      "ISignalIPdu",
      "ComGroupSignal",
      "ComSignal",
      "iSignalGroup",
      "ComSignalGroup",
      "iSignal"
    ]
  },
  {
    "name": "ISignalGroup",
    "expressions": [],
    "properties": [
      "systemSignalGroup",
      "ISignalToIPduMapping",
      "iSignal"
    ]
  },
  {
    "name": "RteGeneration",
    "expressions": [],
    "properties": ["Rte"]
  },
  {
    "name": "DataFilterTypeEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SystemSignalGroup",
    "expressions": [],
    "properties": [
      "ISignalGroup",
      "SenderReceiverToSignalGroupMapping",
      "systemSignal"
    ]
  },
  {
    "name": "RteExclusiveAreaImplementation",
    "expressions": [],
    "properties": [
      "RteSwComponentInstance",
      "rteExclusiveAreaOsSpinlock",
      "rteExclusiveAreaImplMechanism",
      "rteExclusiveAreaOsResource",
      "rteExclusiveArea"
    ]
  },
  {
    "name": "ApplicationPrimitiveDataType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ClientServerInterface",
    "expressions": [],
    "properties": [
      "possibleError",
      "operation"
    ]
  },
  {
    "name": "EcucModuleConfigurationValues",
    "expressions": [],
    "properties": [
      "ecucDefEdition",
      "EcucValueCollection",
      "container",
      "implementationConfigVariant",
      "definitionRef"
    ]
  },
  {
    "name": "Integer",
    "expressions": [],
    "properties": []
  },
  {
    "name": "CompuScale",
    "expressions": [],
    "properties": [
      "shortLabel",
      "Compu",
      "compuConst",
      "upperLimit",
      "symbol",
      "lowerLimit"
    ]
  },
  {
    "name": "IInstanceRef",
    "expressions": [],
    "properties": ["instanceRef"]
  },
  {
    "name": "ArPackage",
    "expressions": [],
    "properties": [
      "Autosar",
      "element",
      "ArPackage",
      "arPackage"
    ]
  },
  {
    "name": "ComTransferPropertyEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsIoc",
    "expressions": [],
    "properties": [
      "osIocCommunication",
      "Os"
    ]
  },
  {
    "name": "ExecutableEntity",
    "expressions": [],
    "properties": [
      "swAddrMethod",
      "runsInsideExclusiveArea",
      "canEnterExclusiveArea"
    ]
  },
  {
    "name": "EcucInstanceReferenceValue",
    "expressions": [],
    "properties": [
      "valueIref",
      "value"
    ]
  },
  {
    "name": "M2Root",
    "expressions": [],
    "properties": ["autosar"]
  },
  {
    "name": "EcucObject",
    "expressions": [],
    "properties": []
  },
  {
    "name": "EcuAbstractionSwComponentType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RPortPrototype",
    "expressions": [{
      "operations": {
        "oclIsKindOf": 2,
        "asOrderedSet": 2,
        "oclAsType": 2
      },
      "name": "getUsingDataTypes",
      "body": "if self.requiredInterface.oclIsKindOf(SenderReceiverInterface)\n\t\t\t\t\tthen self.requiredInterface.oclAsType(SenderReceiverInterface).dataElement.type\n\t\t\t\t\t\t->asOrderedSet()\n\t\t\t\t\telse if self.requiredInterface.oclIsKindOf(ClientServerInterface)\n\t\t\t\t\t\tthen self.requiredInterface.oclAsType(ClientServerInterface).operation.argument.type\n\t\t\t\t\t\t\t->asOrderedSet()\n\t\t\t\t\t\telse OrderedSet(AutosarDataType){}\n\t\t\t\t\t\tendif\n\t\t\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 3,
        "VariableExpImpl": 7,
        "OperationCallExpImpl": 6,
        "TypeExpImpl": 4,
        "CollectionLiteralExpImpl": 1,
        "IfExpImpl": 2,
        "PropertyCallExpImpl": 9
      },
      "properties": [
        "ar4x::m2::SenderReceiverInterface::dataElement",
        "ar4x::m2::ClientServerOperation::argument",
        "ar4x::m2::ClientServerInterface::operation",
        "ar4x::m2::RPortPrototype::requiredInterface",
        "ar4x::m2::DataPrototype::type"
      ]
    }],
    "properties": [
      "RPortInCompositionInstanceRef",
      "requiredComSpec",
      "RPortPrototypeInCompositionInstanceRef",
      "RVariableDataInstanceInSwc",
      "requiredInterface",
      "ROperationInAtomicSwcInstanceRef"
    ]
  },
  {
    "name": "EcucValueCollection",
    "expressions": [],
    "properties": [
      "ecuExtract",
      "ecucValue"
    ]
  },
  {
    "name": "ModeDeclarationGroup",
    "expressions": [],
    "properties": [
      "ModeDeclarationGroupPrototype",
      "initialMode",
      "modeDeclaration",
      "ModeRequestTypeMap"
    ]
  },
  {
    "name": "TimeValue",
    "expressions": [],
    "properties": []
  },
  {
    "name": "EcucNumericalParamValue",
    "expressions": [],
    "properties": ["value"]
  },
  {
    "name": "InstanceRoot",
    "expressions": [],
    "properties": [
      "assemblyDataInstanceConnector",
      "portInstanceInComposition",
      "operationInstanceInSwc",
      "delegationDataInstanceConnector",
      "assemblyOperationInstanceConnector",
      "swComponentInstanceInSystem",
      "variableDataInstanceInSwc"
    ]
  },
  {
    "name": "ArElement",
    "expressions": [],
    "properties": ["ArPackage"]
  },
  {
    "name": "OsAlarm",
    "expressions": [],
    "properties": [
      "RteEventToTaskMapping",
      "RteBswEventToTaskMapping",
      "expectedConfig",
      "Os"
    ]
  },
  {
    "name": "Identifier",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SwComponentType",
    "expressions": [],
    "properties": [
      "SwComponentPrototype",
      "port"
    ]
  },
  {
    "name": "DataReceiveErrorEvent",
    "expressions": [],
    "properties": [
      "dataIref",
      "data"
    ]
  },
  {
    "name": "AnyInstanceRef",
    "expressions": [],
    "properties": [
      "contextElement",
      "EcucInstanceReferenceValue",
      "target"
    ]
  },
  {
    "name": "VariableDataPrototypeInSystemInstanceRef",
    "expressions": [],
    "properties": [
      "contextPort",
      "SenderReceiverToSignalGroupMapping",
      "contextComponent",
      "SenderReceiverToSignalMapping",
      "targetDataPrototype"
    ]
  },
  {
    "name": "OperationInstanceInSwc",
    "expressions": [{
      "operations": {"oclAsType": 1},
      "name": "getOwnerAtomicSwc",
      "body": "self.contextPort.parent.oclAsType(m2::AtomicSwComponentType)",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "ar4x::instance::OperationInstanceInSwc::contextPort",
        "ar4x::m2::PortPrototype::parent"
      ]
    }],
    "properties": [
      "prototype",
      "contextPort",
      "InstanceRoot",
      "instance",
      "ServerCallPoint"
    ]
  },
  {
    "name": "POperationInAtomicSwcInstanceRef",
    "expressions": [],
    "properties": [
      "contextPPort",
      "OperationInvokedEvent",
      "targetProvidedOperation"
    ]
  },
  {
    "name": "DataSendCompletedEvent",
    "expressions": [{
      "operations": {},
      "name": "eventSourceData",
      "body": "eventSource.accessedVariable.autosarVariable",
      "type": "PropertyImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "ar4x::m2::AutosarVariableRef::autosarVariable",
        "ar4x::m2::VariableAccess::accessedVariable",
        "ar4x::m2::DataSendCompletedEvent::eventSource"
      ]
    }],
    "properties": [
      "eventSourceData",
      "eventSource"
    ]
  },
  {
    "name": "Ar4xRoot",
    "expressions": [],
    "properties": []
  },
  {
    "name": "BswModeSwitchEvent",
    "expressions": [],
    "properties": [
      "activation",
      "modeIref"
    ]
  },
  {
    "name": "BswModuleDescription",
    "expressions": [{
      "operations": {
        "size": 1,
        "isEmpty": 1,
        ">": 1
      },
      "name": "getEnableInternalBehavior",
      "body": "let behavior : Set(BswInternalBehavior) = self.internalBehavior->select(implementation->size() > 0)\n\t\t\t\t\t\t\tin if behavior->isEmpty() then\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tbehavior->any(true)\n\t\t\t\t\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 4,
        "LetExpImpl": 1,
        "NullLiteralExpImpl": 1,
        "IntegerLiteralExpImpl": 1,
        "IfExpImpl": 1,
        "PropertyCallExpImpl": 2,
        "BooleanLiteralExpImpl": 1
      },
      "properties": [
        "ar4x::m2::BswInternalBehavior::implementation",
        "ar4x::m2::BswModuleDescription::internalBehavior"
      ]
    }],
    "properties": [
      "providedModeGroup",
      "requiredModeGroup",
      "internalBehavior",
      "providedEntry"
    ]
  },
  {
    "name": "ComConfig",
    "expressions": [],
    "properties": [
      "comSignalGroup",
      "comSignal",
      "Com"
    ]
  },
  {
    "name": "AtomicSwComponentType",
    "expressions": [
      {
        "operations": {
          "oclIsUndefined": 1,
          "asOrderedSet": 1,
          "getPPorts": 1,
          "union": 2,
          "getRPorts": 1,
          "getUsingDataTypes": 3
        },
        "name": "getUsingDataTypes",
        "body": "let internalUsingDataTypes : Set(AutosarDataType) = if self.internalBehavior.oclIsUndefined()\n\t\t\t\t\tthen Set{}\n\t\t\t\t\telse self.internalBehavior.getUsingDataTypes()\n\t\t\t\t\tendif\n\t\t\t\tin getRPorts().getUsingDataTypes()\n\t\t\t\t\t->union(getPPorts().getUsingDataTypes())\n\t\t\t\t\t->union(internalUsingDataTypes)\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 7,
          "OperationCallExpImpl": 9,
          "LetExpImpl": 1,
          "CollectionLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ar4x::m2::AtomicSwComponentType::internalBehavior"]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "getImplementationDataType": 1
        },
        "name": "getImplementationDataType",
        "body": "if self.internalBehavior.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse self.internalBehavior.getImplementationDataType(dataType)\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ar4x::m2::AtomicSwComponentType::internalBehavior"]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "getPPorts": 1,
          "union": 1,
          "oclAsType": 1,
          "getRPorts": 1
        },
        "name": "getUsingClientServerInterfaces",
        "body": "getRPorts().requiredInterface\n\t\t\t\t\t->union(getPPorts().providedInterface)\n\t\t\t\t\t->select(oclIsKindOf(ClientServerInterface)).oclAsType(ClientServerInterface)\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 6,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "ar4x::m2::RPortPrototype::requiredInterface",
          "ar4x::m2::PPortPrototype::providedInterface"
        ]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "getImplementationDataTypes": 1
        },
        "name": "getImplementationDataTypes",
        "body": "if self.internalBehavior.oclIsUndefined()\n\t\t\t\t\tthen Set{}\n\t\t\t\t\telse self.internalBehavior.getImplementationDataTypes(applicationDataType)\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "CollectionLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["ar4x::m2::AtomicSwComponentType::internalBehavior"]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1
        },
        "name": "getPPorts",
        "body": "self.port\n\t\t\t\t\t->select(oclIsKindOf(PPortPrototype)).oclAsType(PPortPrototype)\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::SwComponentType::port"]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1
        },
        "name": "getRPorts",
        "body": "self.port\n\t\t\t\t\t->select(oclIsKindOf(RPortPrototype)).oclAsType(RPortPrototype)\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::SwComponentType::port"]
      },
      {
        "operations": {
          "oclIsKindOf": 1,
          "asOrderedSet": 1,
          "oclAsType": 1,
          "getUsingDataTypes": 1
        },
        "name": "getUsingApplicationDataTypes",
        "body": "getUsingDataTypes()\n\t\t\t\t\t->select(oclIsKindOf(ApplicationDataType)).oclAsType(ApplicationDataType)\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 3,
          "TypeExpImpl": 2
        },
        "properties": []
      },
      {
        "operations": {
          "asOrderedSet": 1,
          "getImplementationDataType": 1,
          "getUsingDataTypes": 1
        },
        "name": "getUsingImplementationDataTypes",
        "body": "getUsingDataTypes()\n\t\t\t\t\t->collect(t | getImplementationDataType(t))\n\t\t\t\t\t->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3
        },
        "properties": []
      }
    ],
    "properties": ["internalBehavior"]
  },
  {
    "name": "QueuedSenderComSpec",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsIocDataProperties",
    "expressions": [],
    "properties": [
      "osIocDataType",
      "osIocDataPropertyIndex",
      "osIocInitValue",
      "OsIocCommunication"
    ]
  },
  {
    "name": "AutosarVariableRef",
    "expressions": [],
    "properties": [
      "autosarVariable",
      "VariableAccess",
      "autosarVariableIref",
      "localVariable"
    ]
  },
  {
    "name": "M2Object",
    "expressions": [],
    "properties": []
  },
  {
    "name": "NonqueuedReceiverComSpec",
    "expressions": [],
    "properties": [
      "initValue",
      "filter",
      "aliveTimeout"
    ]
  },
  {
    "name": "InternalConstrs",
    "expressions": [],
    "properties": [
      "lowerLimit",
      "DataConstrRule",
      "upperLimit"
    ]
  },
  {
    "name": "IInstanceObject",
    "expressions": [],
    "properties": [
      "instanceId",
      "EcucInstanceReferenceValue"
    ]
  },
  {
    "name": "BswExecutionContextEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SensorActuatorSwComponentType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Numerical",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ServiceProxySwComponentType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "RteInitializationBehavior",
    "expressions": [],
    "properties": [
      "rteInitializationStrategy",
      "Rte",
      "rteSectionInitializationPolicy"
    ]
  },
  {
    "name": "RPortPrototypeInCompositionInstanceRef",
    "expressions": [],
    "properties": [
      "AssemblySwConnector",
      "targetRPort"
    ]
  },
  {
    "name": "PPortPrototype",
    "expressions": [{
      "operations": {
        "oclIsKindOf": 2,
        "asOrderedSet": 2,
        "oclAsType": 2
      },
      "name": "getUsingDataTypes",
      "body": "if self.providedInterface.oclIsKindOf(SenderReceiverInterface)\n\t\t\t\t\tthen self.providedInterface.oclAsType(SenderReceiverInterface).dataElement.type\n\t\t\t\t\t\t->asOrderedSet()\n\t\t\t\t\telse if self.providedInterface.oclIsKindOf(ClientServerInterface)\n\t\t\t\t\t\tthen self.providedInterface.oclAsType(ClientServerInterface).operation.argument.type\n\t\t\t\t\t\t\t->asOrderedSet()\n\t\t\t\t\t\telse OrderedSet(AutosarDataType){}\n\t\t\t\t\t\tendif\n\t\t\t\t\tendif",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 3,
        "VariableExpImpl": 7,
        "OperationCallExpImpl": 6,
        "TypeExpImpl": 4,
        "CollectionLiteralExpImpl": 1,
        "IfExpImpl": 2,
        "PropertyCallExpImpl": 9
      },
      "properties": [
        "ar4x::m2::SenderReceiverInterface::dataElement",
        "ar4x::m2::ClientServerOperation::argument",
        "ar4x::m2::ClientServerInterface::operation",
        "ar4x::m2::DataPrototype::type",
        "ar4x::m2::PPortPrototype::providedInterface"
      ]
    }],
    "properties": [
      "POperationInAtomicSwcInstanceRef",
      "PPortPrototypeInCompositionInstanceRef",
      "providedComSpec",
      "PPortInCompositionInstanceRef",
      "PVariableDataInstanceInSwc",
      "providedInterface"
    ]
  },
  {
    "name": "String",
    "expressions": [],
    "properties": []
  },
  {
    "name": "PVariableDataInstanceInSwc",
    "expressions": [
      {
        "operations": {
          "oclIsUndefined": 1,
          "oclAsType": 1,
          "=": 1
        },
        "name": "getComSpec",
        "body": "let comSpec : m2::SenderComSpec = contextPPort.providedComSpec.oclAsType(m2::SenderComSpec)->any(dataElement = self.prototype)\n\t\t\t\t\t\t\tin if comSpec.oclIsUndefined()\n\t\t\t\t\t\t\t\tthen null\n\t\t\t\t\t\t\t\telse comSpec\n\t\t\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 6,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SenderComSpec::dataElement",
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::m2::PPortPrototype::providedComSpec",
          "ar4x::instance::PVariableDataInstanceInSwc::contextPPort"
        ]
      },
      {
        "operations": {
          "getComSpec": 2,
          "<>": 1,
          "not": 1,
          "oclIsUndefined": 1,
          "and": 1
        },
        "name": "isTAckTimeoutEnabled",
        "body": "not getComSpec().transmissionAcknowledge.oclIsUndefined() and getComSpec().transmissionAcknowledge.timeout <> 0",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 6,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "ar4x::m2::TransmissionAcknowledgementRequest::timeout",
          "ar4x::m2::SenderComSpec::transmissionAcknowledge"
        ]
      },
      {
        "operations": {
          "asOrderedSet": 1,
          "allInstances": 1,
          "=": 1
        },
        "name": "getRelatedDataSendCompletedEvent",
        "body": "ar4x::m2::DataSendCompletedEvent.allInstances()->select(eventSourceData = self)->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::DataSendCompletedEvent::eventSourceData"]
      },
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "getInvalidationPolicy": 2,
          "and": 1,
          "isInvalidationEnabled": 1,
          "oclAsType": 1
        },
        "name": "isInvalidationEnabled",
        "body": "not getInvalidationPolicy().oclIsUndefined() and getInvalidationPolicy().isInvalidationEnabled().oclAsType(Boolean)",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 7,
          "TypeExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {"oclAsType": 1},
        "name": "contextPPort",
        "body": "contextPort.oclAsType(m2::PPortPrototype)",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::instance::VariableDataInstanceInSwc::contextPort"]
      },
      {
        "operations": {
          "oclAsType": 1,
          "=": 1
        },
        "name": "getInvalidationPolicy",
        "body": "contextPPort.providedInterface.oclAsType(m2::SenderReceiverInterface).invalidationPolicy\n\t\t\t\t\t->any(dataElement = self.prototype)",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 3,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::m2::InvalidationPolicy::dataElement",
          "ar4x::instance::PVariableDataInstanceInSwc::contextPPort",
          "ar4x::m2::SenderReceiverInterface::invalidationPolicy",
          "ar4x::m2::PPortPrototype::providedInterface"
        ]
      },
      {
        "operations": {
          "getOwnerAtomicSwc": 1,
          "=": 1
        },
        "name": "isAccessedByDataSendPoint",
        "body": "getOwnerAtomicSwc().internalBehavior.runnable.dataSendPoint->exists(accessedVariable.autosarVariable = self)",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 4,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "ar4x::m2::SwcInternalBehavior::runnable",
          "ar4x::m2::AutosarVariableRef::autosarVariable",
          "ar4x::m2::RunnableEntity::dataSendPoint",
          "ar4x::m2::AtomicSwComponentType::internalBehavior",
          "ar4x::m2::VariableAccess::accessedVariable"
        ]
      },
      {
        "operations": {
          "getComSpec": 1,
          "not": 1,
          "oclIsUndefined": 1
        },
        "name": "isTAckEnabled",
        "body": "not getComSpec().transmissionAcknowledge.oclIsUndefined()",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::SenderComSpec::transmissionAcknowledge"]
      },
      {
        "operations": {
          "getComSpec": 1,
          "oclIsUndefined": 1,
          "oclAsType": 1
        },
        "name": "getInitValue",
        "body": "let initValue : m2::ValueSpecification = getComSpec().oclAsType(m2::NonqueuedSenderComSpec).initValue\n\t\t\t\tin if initValue.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse initValue\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::NonqueuedSenderComSpec::initValue"]
      }
    ],
    "properties": ["contextPPort"]
  },
  {
    "name": "PPortInCompositionInstanceRef",
    "expressions": [],
    "properties": ["targetPPort"]
  },
  {
    "name": "SenderRecArrayTypeMapping",
    "expressions": [],
    "properties": ["arrayElementMapping"]
  },
  {
    "name": "RPortComSpec",
    "expressions": [],
    "properties": ["RPortPrototype"]
  },
  {
    "name": "RVariableDataInstanceInSwc",
    "expressions": [
      {
        "operations": {
          "getComSpec": 1,
          "oclIsUndefined": 1,
          "oclAsType": 1
        },
        "name": "getInitValue",
        "body": "let initValue : m2::ValueSpecification = getComSpec().oclAsType(m2::NonqueuedReceiverComSpec).initValue\n\t\t\t\tin if initValue.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse initValue\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::NonqueuedReceiverComSpec::initValue"]
      },
      {
        "operations": {
          "asOrderedSet": 1,
          "allInstances": 1,
          "=": 1
        },
        "name": "getRelatedDataReceivedEvent",
        "body": "ar4x::m2::DataReceivedEvent.allInstances()->select(data = self)->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::DataReceivedEvent::data"]
      },
      {
        "operations": {
          "getComSpec": 1,
          "oclIsUndefined": 1,
          "oclAsType": 1
        },
        "name": "getFilter",
        "body": "let filter : m2::DataFilter = getComSpec().oclAsType(m2::NonqueuedReceiverComSpec).filter\n\t\t\t\tin if filter.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse filter\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::NonqueuedReceiverComSpec::filter"]
      },
      {
        "operations": {
          "=": 1,
          "oclAsType": 1
        },
        "name": "getInvalidationPolicy",
        "body": "contextRPort.requiredInterface.oclAsType(m2::SenderReceiverInterface).invalidationPolicy\n\t\t\t\t\t->any(dataElement = self.prototype)",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::m2::InvalidationPolicy::dataElement",
          "ar4x::m2::RPortPrototype::requiredInterface",
          "ar4x::m2::SenderReceiverInterface::invalidationPolicy",
          "ar4x::instance::RVariableDataInstanceInSwc::contextRPort"
        ]
      },
      {
        "operations": {"oclAsType": 1},
        "name": "contextRPort",
        "body": "contextPort.oclAsType(m2::RPortPrototype)",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::instance::VariableDataInstanceInSwc::contextPort"]
      },
      {
        "operations": {
          "asOrderedSet": 1,
          "allInstances": 1,
          "=": 1
        },
        "name": "getRelatedDataReceiveErrorEvent",
        "body": "ar4x::m2::DataReceiveErrorEvent.allInstances()->select(data = self)->asOrderedSet()",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::DataReceiveErrorEvent::data"]
      },
      {
        "operations": {
          "getFilter": 2,
          "oclIsUndefined": 1,
          "isFilterEnabled": 1
        },
        "name": "isFilterEnabled",
        "body": "if getFilter().oclIsUndefined()\n\t\t\t\t\tthen false\n\t\t\t\t\telse getFilter().isFilterEnabled()\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "IfExpImpl": 1,
          "BooleanLiteralExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "not": 1,
          "getInvalidationPolicy": 2,
          "oclIsUndefined": 1,
          "and": 1,
          "isInvalidationReplace": 1,
          "oclAsType": 1
        },
        "name": "isInvalidationReplace",
        "body": "not getInvalidationPolicy().oclIsUndefined() and getInvalidationPolicy().isInvalidationReplace().oclAsType(Boolean)",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "not": 1,
          "getInvalidationPolicy": 2,
          "oclIsUndefined": 1,
          "and": 1,
          "isInvalidationEnabled": 1,
          "oclAsType": 1
        },
        "name": "isInvalidationEnabled",
        "body": "not getInvalidationPolicy().oclIsUndefined() and getInvalidationPolicy().isInvalidationEnabled().oclAsType(Boolean)",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "getComSpec": 1,
          "oclIsUndefined": 1,
          "oclAsType": 1
        },
        "name": "getQueueLength",
        "body": "let comSpec : m2::QueuedReceiverComSpec = getComSpec().oclAsType(m2::QueuedReceiverComSpec)\n\t\t\t\tin if comSpec.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse comSpec.queueLength\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::QueuedReceiverComSpec::queueLength"]
      },
      {
        "operations": {
          "oclIsUndefined": 1,
          "=": 1,
          "oclAsType": 1
        },
        "name": "getComSpec",
        "body": "let comSpec : m2::ReceiverComSpec = contextRPort.requiredComSpec.oclAsType(m2::ReceiverComSpec)->any(dataElement = self.prototype)\n\t\t\t\t\t\t\t\tin if comSpec.oclIsUndefined()\n\t\t\t\t\t\t\t\t\tthen null\n\t\t\t\t\t\t\t\t\telse comSpec\n\t\t\t\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 3,
          "LetExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::ReceiverComSpec::dataElement",
          "ar4x::m2::RPortPrototype::requiredComSpec",
          "ar4x::instance::VariableDataInstanceInSwc::prototype",
          "ar4x::instance::RVariableDataInstanceInSwc::contextRPort"
        ]
      },
      {
        "operations": {
          "not": 1,
          "getInvalidationPolicy": 2,
          "oclIsUndefined": 1,
          "and": 1,
          "isInvalidationKeep": 1,
          "oclAsType": 1
        },
        "name": "isInvalidationKeep",
        "body": "not getInvalidationPolicy().oclIsUndefined() and getInvalidationPolicy().isInvalidationKeep().oclAsType(Boolean)",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 7,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1
        },
        "properties": []
      },
      {
        "operations": {
          "getComSpec": 1,
          "not": 1,
          "<>": 1,
          "oclIsUndefined": 1,
          "and": 1,
          "oclAsType": 1
        },
        "name": "isAliveTimeoutEnabled",
        "body": "let comSpec : m2::NonqueuedReceiverComSpec = getComSpec().oclAsType(m2::NonqueuedReceiverComSpec)\n\t\t\t\tin not comSpec.oclIsUndefined() and comSpec.aliveTimeout <> 0",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 3,
          "LetExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["ar4x::m2::NonqueuedReceiverComSpec::aliveTimeout"]
      }
    ],
    "properties": ["contextRPort"]
  },
  {
    "name": "AutosarDataType",
    "expressions": [
      {
        "operations": {"oclIsUndefined": 1},
        "name": "compuMethod",
        "body": "if swDataDefProps.compuMethod.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swDataDefProps.compuMethod\n\t\t\t\t\tendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::AutosarDataType::swDataDefProps",
          "ar4x::m2::SwDataDefProps::compuMethod"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "getSwImplPolicy",
        "body": "if swDataDefProps.swImplPolicy.oclIsUndefined()\n\t\t\t\t\tthen SwImplPolicyEnum::unspecified\n\t\t\t\t\telse swDataDefProps.swImplPolicy\n\t\t\t\t\tendif",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "EnumLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::swImplPolicy",
          "ar4x::m2::AutosarDataType::swDataDefProps"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "invalidValue",
        "body": "if swDataDefProps.invalidValue.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swDataDefProps.invalidValue\n\t\t\t\t\tendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::invalidValue",
          "ar4x::m2::AutosarDataType::swDataDefProps"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "swAddrMethod",
        "body": "if swDataDefProps.swAddrMethod.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swDataDefProps.swAddrMethod\n\t\t\t\t\tendif",
        "type": "PropertyImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::swAddrMethod",
          "ar4x::m2::AutosarDataType::swDataDefProps"
        ]
      },
      {
        "operations": {"oclIsUndefined": 1},
        "name": "dataConstr",
        "body": "if swDataDefProps.dataConstr.oclIsUndefined()\n\t\t\t\t\tthen null\n\t\t\t\t\telse swDataDefProps.dataConstr\n\t\t\t\t\tendif",
        "type": "PropertyImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "NullLiteralExpImpl": 1,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "ar4x::m2::SwDataDefProps::dataConstr",
          "ar4x::m2::AutosarDataType::swDataDefProps"
        ]
      }
    ],
    "properties": [
      "invalidValue",
      "dataConstr",
      "DataPrototype",
      "compuMethod",
      "IncludedDataTypeSet",
      "swDataDefProps",
      "swAddrMethod"
    ]
  },
  {
    "name": "BswInternalBehavior",
    "expressions": [{
      "operations": {
        "oclIsKindOf": 1,
        "asOrderedSet": 1,
        "oclAsType": 1
      },
      "name": "bswSchedulableEntity",
      "body": "entity->select(oclIsKindOf(BswSchedulableEntity)).oclAsType(BswSchedulableEntity)->asOrderedSet()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 3,
        "TypeExpImpl": 2,
        "PropertyCallExpImpl": 1
      },
      "properties": ["ar4x::m2::BswInternalBehavior::entity"]
    }],
    "properties": [
      "event",
      "parent",
      "entity",
      "modeSenderPolicy",
      "implementation",
      "SwcBswMapping",
      "bswSchedulableEntity"
    ]
  },
  {
    "name": "RteEventToTaskMapping",
    "expressions": [],
    "properties": [
      "rteEvent",
      "rteActivationOffset",
      "rteMappedToTask",
      "rteUsedOsEvent",
      "rtePositionInTask",
      "RteSwComponentInstance",
      "rteUsedOsAlarm"
    ]
  },
  {
    "name": "NvBlockSwComponentType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ComplexDeviceDriverSwComponentType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ApplicationError",
    "expressions": [],
    "properties": [
      "ClientServerOperation",
      "errorCode",
      "parent"
    ]
  },
  {
    "name": "EcucTextualParamValue",
    "expressions": [],
    "properties": ["value"]
  },
  {
    "name": "BswCallTypeEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ClientServerOperation",
    "expressions": [],
    "properties": [
      "POperationInAtomicSwcInstanceRef",
      "argument",
      "ClientServerInterface",
      "ROperationInAtomicSwcInstanceRef",
      "OperationInstanceInSwc",
      "possibleError"
    ]
  },
  {
    "name": "TransmissionAcknowledgementRequest",
    "expressions": [],
    "properties": [
      "SenderComSpec",
      "timeout"
    ]
  },
  {
    "name": "ROperationInstanceInSwc",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ImplementationDataTypeElement",
    "expressions": [{
      "operations": {"=": 1},
      "name": "isRedefinitionType",
      "body": "category = 'TYPE_REFERENCE'",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["ar4x::m2::Identifiable::category"]
    }],
    "properties": [
      "IndexedArrayElement",
      "ImplementationDataTypeElement",
      "arraySizeSemantics",
      "arraySize",
      "ImplementationDataType",
      "SenderRecRecordElementMapping",
      "subElement",
      "swDataDefProps"
    ]
  },
  {
    "name": "OsOS",
    "expressions": [{
      "operations": {
        "not": 1,
        "oclIsUndefined": 1
      },
      "name": "isMulticoreOs",
      "body": "not self.osNumberOfCores.oclIsUndefined()",
      "type": "OperationImpl",
      "constructs": {
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["ar4x::ecuc::OsOS::osNumberOfCores"]
    }],
    "properties": [
      "osMasterCoreId",
      "Os",
      "osNumberOfCores"
    ]
  },
  {
    "name": "ModeDeclaration",
    "expressions": [],
    "properties": [
      "ModeDeclarationGroup",
      "ModeDeclarationGroup",
      "ModeInBswModuleDescriptionInstanceRef"
    ]
  },
  {
    "name": "OsEvent",
    "expressions": [],
    "properties": [
      "Os",
      "RteBswEventToTaskMapping",
      "osEventMask",
      "OsTask",
      "RteEventToTaskMapping"
    ]
  },
  {
    "name": "Boolean",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsTask",
    "expressions": [],
    "properties": [
      "Os",
      "mappedRteEvent",
      "osTaskActivation",
      "ownerApplication",
      "mappedRteBswEvent",
      "osTaskPriority",
      "osTaskEvent",
      "osTaskSchedule",
      "osTaskAccessingApplication"
    ]
  },
  {
    "name": "Com",
    "expressions": [],
    "properties": [
      "comConfig",
      "EcucRoot"
    ]
  },
  {
    "name": "SwAddrMethod",
    "expressions": [],
    "properties": [
      "memoryAllocationKeywordPolicy",
      "ExecutableEntity",
      "SwDataDefProps",
      "sectionInitializationPolicy",
      "DataPrototype",
      "AutosarDataType"
    ]
  },
  {
    "name": "DelegationSwConnector",
    "expressions": [],
    "properties": [
      "innerPort",
      "outerPort",
      "innerPortIref"
    ]
  },
  {
    "name": "System",
    "expressions": [],
    "properties": [
      "rootSoftwareComposition",
      "mapping",
      "EcucValueCollection"
    ]
  },
  {
    "name": "BswTimingEvent",
    "expressions": [],
    "properties": ["period"]
  },
  {
    "name": "CategoryString",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ModeActivationKind",
    "expressions": [],
    "properties": []
  },
  {
    "name": "OsTaskScheduleEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "DelegationDataInstanceConnector",
    "expressions": [],
    "properties": [
      "inner",
      "InstanceRoot",
      "outer"
    ]
  },
  {
    "name": "PortInstanceInComposition",
    "expressions": [],
    "properties": [
      "AssemblySwConnector",
      "dataElement",
      "InstanceRoot",
      "AssemblySwConnector",
      "contextComponent",
      "prototype",
      "operation",
      "DelegationSwConnector"
    ]
  },
  {
    "name": "IncludedDataTypeSet",
    "expressions": [],
    "properties": [
      "literalPrefix",
      "dataType",
      "SwcInternalBehavior"
    ]
  },
  {
    "name": "PortInterface",
    "expressions": [],
    "properties": [
      "PPortPrototype",
      "RPortPrototype"
    ]
  },
  {
    "name": "AssemblyOperationInstanceConnector",
    "expressions": [],
    "properties": [
      "requester",
      "provider",
      "InstanceRoot"
    ]
  },
  {
    "name": "RteUsedOsActivation",
    "expressions": [],
    "properties": [
      "rteActivationOsAlarm",
      "RteOsInteraction",
      "rteExpectedActivationOffset",
      "rteExpectedTickDuration"
    ]
  },
  {
    "name": "SenderComSpec",
    "expressions": [],
    "properties": [
      "dataElement",
      "transmissionAcknowledge"
    ]
  },
  {
    "name": "PortDefinedArgumentValue",
    "expressions": [],
    "properties": [
      "valueType",
      "parent",
      "value"
    ]
  },
  {
    "name": "RteExclusiveAreaImplMechanismEnum",
    "expressions": [],
    "properties": []
  }
]
