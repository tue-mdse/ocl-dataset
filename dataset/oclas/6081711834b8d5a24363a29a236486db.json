[{
  "name": "EClass",
  "expressions": [
    {
      "operations": {
        "isA": 2,
        "implies": 2,
        "matches": 1
      },
      "name": "ProcessHasValidOutputPorts",
      "body": "\n\tisA('ProcessType') implies eReferences->forAll(\n\t\tname.matches('^out.*') implies eReferenceType.isA('DataType')\n\t)\n\n",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 4,
        "OperationCallExpImpl": 5,
        "StringLiteralExpImpl": 3,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "ecore::ENamedElement::name",
        "ecore::EReference::eReferenceType",
        "ecore::EClass::eReferences"
      ]
    },
    {
      "operations": {
        "isA": 2,
        "implies": 2,
        "matches": 1
      },
      "name": "ProcessHasValidInputPorts",
      "body": "\n\tisA('ProcessType') implies eReferences->forAll(\n\t\tname.matches('^in.*') implies eReferenceType.isA('DataType')\n\t)\n",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 5,
        "VariableExpImpl": 4,
        "StringLiteralExpImpl": 3,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "ecore::ENamedElement::name",
        "ecore::EReference::eReferenceType",
        "ecore::EClass::eReferences"
      ]
    },
    {
      "operations": {
        "or": 1,
        "oclIsKindOf": 1,
        "and": 1,
        "oclAsType": 1,
        "=": 2
      },
      "name": "isA",
      "body": "\n\tname = typeName or oclIsKindOf(EClass)\n\tand oclAsType(EClass).eAllSuperTypes->exists(name = typeName)\n\n",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 6,
        "OperationCallExpImpl": 6,
        "TypeExpImpl": 2,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "ecore::EClass::eAllSuperTypes",
        "ecore::ENamedElement::name"
      ]
    },
    {
      "operations": {
        "isA": 2,
        "implies": 2,
        "matches": 1
      },
      "name": "DataHasNoExtraProcessRefs",
      "body": "\n\tisA('DataType'\n\t) implies eReferences->forAll(\n\t\teReferenceType.isA('ProcessType') implies name.matches('in|out')\n\t)\n\n",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 5,
        "VariableExpImpl": 4,
        "StringLiteralExpImpl": 3,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "ecore::EReference::eReferenceType",
        "ecore::ENamedElement::name",
        "ecore::EClass::eReferences"
      ]
    }
  ],
  "properties": []
}]
