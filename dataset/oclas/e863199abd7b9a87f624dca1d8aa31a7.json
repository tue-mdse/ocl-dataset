[
  {
    "name": "System",
    "expressions": [{
      "operations": {
        "sum": 1,
        "<": 1,
        "=": 1
      },
      "name": "ResourceConstraint",
      "body": "\n\t\t\tpm->forAll(p : PM | vm\n\t\t\t\t->select(v : VM | (v.plc = p))\n\t\t\t\t->collect(v : VM | v.req)->sum() < p.res\n\t\t\t)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 3,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 6,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "VmPlacement::System::vm",
        "VmPlacement::VM::req",
        "VmPlacement::VM::plc",
        "VmPlacement::PM::res",
        "VmPlacement::System::pm"
      ]
    }],
    "properties": [
      "vm",
      "name",
      "pm"
    ]
  },
  {
    "name": "Artefact",
    "expressions": [],
    "properties": [
      "destination",
      "name",
      "bind"
    ]
  },
  {
    "name": "VM",
    "expressions": [
      {
        "operations": {"includes": 1},
        "name": "FrequentCloser",
        "body": "\n\t\t\tfrequent->forAll(v : VM | self.plc.near->includes(v.plc))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "VmPlacement::VM::plc",
          "VmPlacement::PM::near",
          "VmPlacement::VM::frequent"
        ]
      },
      {
        "operations": {"<>": 1},
        "name": "BackupSplit",
        "body": "backup->forAll(vm : VM | self.plc <> vm.plc)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "VmPlacement::VM::backup",
          "VmPlacement::VM::plc"
        ]
      },
      {
        "operations": {
          "allInstances": 1,
          "=": 1
        },
        "name": "backup",
        "body": "VM.allInstances()->select(host.name = self.host.name)",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "VmPlacement::Artefact::name",
          "VmPlacement::VM::host"
        ]
      }
    ],
    "properties": [
      "req",
      "backup",
      "plc",
      "System",
      "host",
      "name",
      "frequent"
    ]
  },
  {
    "name": "PM",
    "expressions": [],
    "properties": [
      "host",
      "System",
      "name",
      "near",
      "res"
    ]
  }
]
