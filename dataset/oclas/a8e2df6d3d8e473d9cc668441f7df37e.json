[
  {
    "name": "Container",
    "expressions": [{
      "operations": {},
      "name": "sameNameEnvironment",
      "body": "\n\t\t\tenvironments -> isUnique(name)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "kubernetes::Environment::name",
        "kubernetes::Container::environments"
      ]
    }],
    "properties": [
      "name",
      "Deployment",
      "containerPort",
      "environments",
      "image"
    ]
  },
  {
    "name": "Deployment",
    "expressions": [
      {
        "operations": {">": 1},
        "name": "ReplicasNumber",
        "body": "\n\t\t\treplicas>0",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["kubernetes::Deployment::replicas"]
      },
      {
        "operations": {},
        "name": "sameContainerPort",
        "body": "\n\t\t\tcontainers -> isUnique(containerPort)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "kubernetes::Container::containerPort",
          "kubernetes::Deployment::containers"
        ]
      },
      {
        "operations": {},
        "name": "sameNameLabels",
        "body": "\n\t\t\tlabels -> isUnique(key)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "kubernetes::Label::key",
          "kubernetes::Deployment::labels"
        ]
      },
      {
        "operations": {},
        "name": "sameContainerName",
        "body": "\n\t\t\tcontainers -> isUnique(name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "kubernetes::Container::name",
          "kubernetes::Deployment::containers"
        ]
      }
    ],
    "properties": [
      "replicas",
      "Kubernetes",
      "Service",
      "labels",
      "containers"
    ]
  },
  {
    "name": "Environment",
    "expressions": [],
    "properties": [
      "Kubernetes",
      "Container",
      "name",
      "value"
    ]
  },
  {
    "name": "Service",
    "expressions": [],
    "properties": [
      "name",
      "type",
      "port",
      "Kubernetes",
      "deployment",
      "targetPort"
    ]
  },
  {
    "name": "Kubernetes",
    "expressions": [
      {
        "operations": {},
        "name": "sameServiceName",
        "body": "\n\t\t\tservices -> isUnique(name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "kubernetes::Kubernetes::services",
          "kubernetes::Service::name"
        ]
      },
      {
        "operations": {
          "<>": 1,
          "implies": 1,
          "=": 1
        },
        "name": "cloudLocal",
        "body": "\n\t\t\tcloud = CloudType::LOCAL implies services -> forAll (s:Service | s.type<>ServiceType::LoadBalancer)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "EnumLiteralExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "kubernetes::Kubernetes::services",
          "kubernetes::Service::type",
          "kubernetes::Kubernetes::cloud"
        ]
      },
      {
        "operations": {},
        "name": "sameServicePort",
        "body": "\n\t\t\tservices -> isUnique(port)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "kubernetes::Kubernetes::services",
          "kubernetes::Service::port"
        ]
      }
    ],
    "properties": [
      "services",
      "labs",
      "cloud",
      "deps",
      "envs",
      "name"
    ]
  },
  {
    "name": "ServiceType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "CloudType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Label",
    "expressions": [],
    "properties": [
      "Deployment",
      "Kubernetes",
      "key",
      "value"
    ]
  }
]
