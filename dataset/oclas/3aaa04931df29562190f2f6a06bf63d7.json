[
  {
    "name": "Need",
    "expressions": [{
      "operations": {">": 1},
      "name": "positiveQuantity",
      "body": "quantity > 0",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["simplepdl::Need::quantity"]
    }],
    "properties": [
      "ressource",
      "needSet",
      "quantity"
    ]
  },
  {
    "name": "WorkDefinition",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "voidName",
      "body": "name <> ''",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["simplepdl::WorkDefinition::name"]
    }],
    "properties": [
      "name",
      "needSets",
      "linksToSuccessors",
      "linksToPredecessors"
    ]
  },
  {
    "name": "WorkSequence",
    "expressions": [
      {
        "operations": {"<>": 1},
        "name": "reflexivity",
        "body": "self.predecessor <> self.successor",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "simplepdl::WorkSequence::successor",
          "simplepdl::WorkSequence::predecessor"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "nextWDinSameProcess",
        "body": "self.process = self.successor.process",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "simplepdl::WorkSequence::successor",
          "simplepdl::ProcessElement::process"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "previousWDinSameProcess",
        "body": "self.process = self.predecessor.process",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "simplepdl::WorkSequence::predecessor",
          "simplepdl::ProcessElement::process"
        ]
      }
    ],
    "properties": [
      "predecessor",
      "successor",
      "linkType"
    ]
  },
  {
    "name": "Guidance",
    "expressions": [],
    "properties": [
      "element",
      "text"
    ]
  },
  {
    "name": "Ressource",
    "expressions": [
      {
        "operations": {">=": 1},
        "name": "positiveQuantity",
        "body": "quantity >= 0",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["simplepdl::Ressource::quantity"]
      },
      {
        "operations": {"<>": 1},
        "name": "voidName",
        "body": "name <> ''",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["simplepdl::Ressource::name"]
      }
    ],
    "properties": [
      "Need",
      "name",
      "quantity"
    ]
  },
  {
    "name": "ProcessElement",
    "expressions": [{
      "operations": {
        "allInstances": 1,
        "includes": 1,
        "first": 1,
        "asSequence": 1
      },
      "name": "process",
      "body": "Process.allInstances()->select(p : Process | p.processElements->includes(self))->asSequence()->first()",
      "type": "PropertyImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["simplepdl::Process::processElements"]
    }],
    "properties": [
      "Guidance",
      "process"
    ]
  },
  {
    "name": "NeedSet",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "voidName",
      "body": "name <> ''",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["simplepdl::NeedSet::name"]
    }],
    "properties": [
      "needs",
      "wd",
      "name"
    ]
  },
  {
    "name": "WorkSequenceType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Process",
    "expressions": [
      {
        "operations": {
          "<>": 2,
          "oclIsTypeOf": 1,
          "implies": 1
        },
        "name": "sameRessourcesName",
        "body": "self.processElements->select(p : ProcessElement | p.oclIsTypeOf(Ressource))->forAll(j : ProcessElement, k : ProcessElement | j <> k implies j.name <> k.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 4,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "simplepdl::Process::processElements",
          "OclInvalid::oclBadProperty"
        ]
      },
      {
        "operations": {
          "<>": 2,
          "oclIsTypeOf": 1,
          "implies": 1
        },
        "name": "sameWDName",
        "body": "self.processElements->select(p : ProcessElement | p.oclIsTypeOf(WorkDefinition))->forAll(j : ProcessElement, k : ProcessElement | j <> k implies j.name <> k.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 4,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "simplepdl::Process::processElements",
          "OclInvalid::oclBadProperty"
        ]
      },
      {
        "operations": {"<>": 1},
        "name": "nameForbidden",
        "body": "name <> 'Process'",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["simplepdl::Process::name"]
      },
      {
        "operations": {
          "<>": 2,
          "oclIsTypeOf": 1,
          "implies": 1
        },
        "name": "sameNeedSetsName",
        "body": "self.processElements->select(p : ProcessElement | p.oclIsTypeOf(NeedSet))->forAll(j : ProcessElement, k : ProcessElement | j <> k implies j.name <> k.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 4,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "simplepdl::Process::processElements",
          "OclInvalid::oclBadProperty"
        ]
      }
    ],
    "properties": [
      "name",
      "processElements"
    ]
  }
]
