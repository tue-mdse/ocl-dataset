[
  {
    "name": "VisibilityKind",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Property",
    "expressions": [],
    "properties": [
      "type",
      "visibility",
      "Class",
      "multiplicity",
      "Class",
      "Class"
    ]
  },
  {
    "name": "PrimitiveType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Model",
    "expressions": [{
      "operations": {
        "<>": 2,
        "implies": 1
      },
      "name": "uniqueClassNames",
      "body": "self.classes->forAll(c1, c2 | c1 <> c2 implies c1.name <> c2.name)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 5,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "classdiagram::NamedElement::name",
        "classdiagram::Model::classes"
      ]
    }],
    "properties": ["classes"]
  },
  {
    "name": "NamedElement",
    "expressions": [],
    "properties": ["name"]
  },
  {
    "name": "MultiplicityKind",
    "expressions": [],
    "properties": []
  },
  {
    "name": "Class",
    "expressions": [
      {
        "operations": {"=": 1},
        "name": "visibleAttributes",
        "body": "self.attributes -> select(a | a.visibility = VisibilityKind::public)",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "EnumLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "classdiagram::Property::visibility",
          "classdiagram::Class::attributes"
        ]
      },
      {
        "operations": {
          "or": 1,
          "includes": 2
        },
        "name": "identifierIsMember",
        "body": "self.attributes -> includes(self.identifier) or self.supertypes.visibleAttributes -> includes(self.identifier)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 5,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "classdiagram::Class::identifier",
          "classdiagram::Class::visibleAttributes",
          "classdiagram::Class::supertypes",
          "classdiagram::Class::attributes"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "identifierIsMandatoryAndSingleValued",
        "body": "self.identifier.multiplicity = MultiplicityKind::_'1..1'",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "EnumLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "classdiagram::Class::identifier",
          "classdiagram::Property::multiplicity"
        ]
      },
      {
        "operations": {"oclAsSet": 1},
        "name": "supertypes",
        "body": "self -> closure(generalizations.general)",
        "type": "PropertyImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "classdiagram::Class::generalizations",
          "classdiagram::Generalization::general"
        ]
      }
    ],
    "properties": [
      "generalizations",
      "identifier",
      "Class",
      "Model",
      "visibleAttributes",
      "supertypes",
      "attributes",
      "Generalization"
    ]
  },
  {
    "name": "Generalization",
    "expressions": [],
    "properties": [
      "specific",
      "general"
    ]
  }
]
