[
  {
    "name": "Network",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "nameForbidden",
      "body": "\n\t\t\tself.name <> ''",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["petrinet::Network::name"]
    }],
    "properties": [
      "nodes",
      "arcs",
      "name"
    ]
  },
  {
    "name": "Transition",
    "expressions": [
      {
        "operations": {
          "size": 1,
          ">": 1
        },
        "name": "existArcs",
        "body": "\n\t\t\tself.successors->size() > 0",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petrinet::Node::successors"]
      },
      {
        "operations": {"oclIsKindOf": 1},
        "name": "onlyArcsToPlaces",
        "body": "\n\t\t\tself.successors\n\t\t\t->forAll(s | s.target.oclIsKindOf(Place))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "petrinet::Node::successors",
          "petrinet::Arc::target"
        ]
      }
    ],
    "properties": []
  },
  {
    "name": "Node",
    "expressions": [
      {
        "operations": {
          "or": 1,
          "size": 2,
          ">": 2
        },
        "name": "noIsolatedNode",
        "body": "\n            self.predecessors->size() > 0 or self.successors->size() > 0",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "petrinet::Node::predecessors",
          "petrinet::Node::successors"
        ]
      },
      {
        "operations": {"<>": 1},
        "name": "nameForbidden",
        "body": "\n        \tself.name <> ''",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petrinet::Node::name"]
      }
    ],
    "properties": [
      "predecessors",
      "successors",
      "name",
      "reseau"
    ]
  },
  {
    "name": "Arc",
    "expressions": [{
      "operations": {">": 1},
      "name": "tokensCountNotNull",
      "body": "\n\t\t\tself.tokensCount > 0",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["petrinet::Arc::tokensCount"]
    }],
    "properties": [
      "tokensCount",
      "readOnly",
      "reseau",
      "source",
      "kind",
      "target"
    ]
  },
  {
    "name": "Place",
    "expressions": [
      {
        "operations": {"oclIsKindOf": 1},
        "name": "onlyArcToTransitions",
        "body": "\n\t\t\tself.successors\n\t\t\t->forAll(s | s.target.oclIsKindOf(Transition))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "petrinet::Node::successors",
          "petrinet::Arc::target"
        ]
      },
      {
        "operations": {">=": 1},
        "name": "validTokensCount",
        "body": "\n\t\t\tself.tokensCount >= 0",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["petrinet::Place::tokensCount"]
      }
    ],
    "properties": ["tokensCount"]
  },
  {
    "name": "ArcKind",
    "expressions": [],
    "properties": []
  }
]
