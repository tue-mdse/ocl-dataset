[
  {
    "name": "OrderLine",
    "expressions": [],
    "properties": [
      "PurchaseOrder",
      "item",
      "quantity"
    ]
  },
  {
    "name": "PurchaseOrder",
    "expressions": [{
      "operations": {
        "<>": 2,
        "implies": 1
      },
      "name": "nonDuplicatedItems",
      "body": "\n\t\t    lines->forAll(l1, l2 | \n\t\t    \tl1 <> l2 implies l1.item <> l2.item\n\t\t    )",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 5,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "Orders::OrderLine::item",
        "Orders::PurchaseOrder::lines"
      ]
    }],
    "properties": [
      "System",
      "lines",
      "shipTo",
      "billTo"
    ]
  },
  {
    "name": "System",
    "expressions": [],
    "properties": [
      "orders",
      "stock"
    ]
  },
  {
    "name": "Item",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "oclIsUndefined": 1,
          "and": 1,
          ">": 1
        },
        "name": "positivePrice",
        "body": "\n\t\t    not price.oclIsUndefined() and price > 0",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["Orders::Item::price"]
      },
      {
        "operations": {
          "not": 1,
          "<>": 1,
          "oclIsUndefined": 1,
          "and": 1
        },
        "name": "nonEmptyName",
        "body": "\n\t\t    not name.oclIsUndefined() \n\t\t    and name <> ''",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["Orders::Item::name"]
      }
    ],
    "properties": [
      "System",
      "stock",
      "name",
      "price",
      "OrderLine"
    ]
  }
]
