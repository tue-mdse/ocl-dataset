[
  {
    "name": "ParameterModifier",
    "expressions": [],
    "properties": []
  },
  {
    "name": "InfrastructureSignature",
    "expressions": [],
    "properties": [
      "InfrastructureCall",
      "parameters__InfrastructureSignature",
      "infrastructureInterface__InfrastructureSignature"
    ]
  },
  {
    "name": "PCMRandomVariable",
    "expressions": [{
      "operations": {
        "<>": 1,
        "not": 1,
        "oclIsUndefined": 1,
        "and": 1
      },
      "name": "SpecificationMustNotBeNULL",
      "body": "not self.specification.oclIsUndefined() and self.specification <> ''",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 4,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["OclInvalid::oclBadProperty"]
    }],
    "properties": [
      "communicationLinkResourceSpecifcation_throughput_PCMRandomVariable",
      "resourceCall__PCMRandomVariable",
      "communicationLinkResourceSpecification_latency_PCMRandomVariable",
      "specifiedExecutionTime_PCMRandomVariable",
      "loopAction_PCMRandomVariable",
      "processingResourceSpecification_processingRate_PCMRandomVariable",
      "closedWorkload_PCMRandomVariable",
      "passiveResource_capacity_PCMRandomVariable",
      "delay_TimeSpecification",
      "assemblyEventConnector__FilterCondition",
      "guardedBranchTransition_PCMRandomVariable",
      "openWorkload_PCMRandomVariable",
      "eventChannelSinkConnector__FilterCondition",
      "infrastructureCall__PCMRandomVariable",
      "variableCharacterisation_Specification",
      "parametricResourceDemand_PCMRandomVariable",
      "loop_LoopIteration"
    ]
  },
  {
    "name": "OperationSignature",
    "expressions": [{
      "operations": {},
      "name": "ParameterNamesHaveToBeUniqueForASignature",
      "body": "self.parameters__OperationSignature->isUnique(p : Parameter |\r\n\tp.parameterName\r\n)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "pcm::repository::Parameter::parameterName",
        "pcm::repository::OperationSignature::parameters__OperationSignature"
      ]
    }],
    "properties": [
      "returnType__OperationSignature",
      "EntryLevelSystemCall",
      "interface__OperationSignature",
      "parameters__OperationSignature",
      "ExternalCallAction"
    ]
  },
  {
    "name": "ResourceContainer",
    "expressions": [],
    "properties": [
      "activeResourceSpecifications_ResourceContainer",
      "parentResourceContainer__ResourceContainer",
      "LinkingResource",
      "nestedResourceContainers__ResourceContainer",
      "AllocationContext",
      "resourceEnvironment_ResourceContainer"
    ]
  },
  {
    "name": "ResourceType",
    "expressions": [],
    "properties": ["resourceRepository_ResourceType"]
  },
  {
    "name": "ProvidesComponentType",
    "expressions": [{
      "operations": {
        "size": 1,
        "oclIsTypeOf": 1,
        "implies": 1,
        ">=": 1
      },
      "name": "AtLeastOneInterfaceHasToBeProvidedByAUsefullProvidesComponentType",
      "body": "self.oclIsTypeOf(ProvidesComponentType)\r\nimplies\r\nself.providedRoles_InterfaceProvidingEntity->size() >= 1",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 2,
        "IntegerLiteralExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::core::entity::InterfaceProvidingEntity::providedRoles_InterfaceProvidingEntity"]
    }],
    "properties": ["CompleteComponentType"]
  },
  {
    "name": "QoSAnnotations",
    "expressions": [{
      "operations": {
        "<>": 3,
        "or": 1,
        "oclIsTypeOf": 1,
        "implies": 1
      },
      "name": "MultipleReliabilityAnnotationsPerExternalCallNotAllowed",
      "body": "self.specifiedQoSAnnotations_QoSAnnotations->select(oclIsTypeOf(pcm::qosannotations::qos_reliability::SpecifiedReliabilityAnnotation))->forAll( x, y | ( x<>y ) implies ( ( x.role_SpecifiedQoSAnnotation <> y.role_SpecifiedQoSAnnotation )  or ( x.signature_SpecifiedQoSAnnation <> y.signature_SpecifiedQoSAnnation ) ) )",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "VariableExpImpl": 8,
        "OperationCallExpImpl": 6,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "pcm::qosannotations::SpecifiedQoSAnnotation::role_SpecifiedQoSAnnotation",
        "pcm::qosannotations::SpecifiedQoSAnnotation::signature_SpecifiedQoSAnnation",
        "pcm::qosannotations::QoSAnnotations::specifiedQoSAnnotations_QoSAnnotations"
      ]
    }],
    "properties": [
      "system_QoSAnnotations",
      "specifiedQoSAnnotations_QoSAnnotations",
      "specifiedOutputParameterAbstractions_QoSAnnotations"
    ]
  },
  {
    "name": "Loop",
    "expressions": [],
    "properties": [
      "loopIteration_Loop",
      "bodyBehaviour_Loop"
    ]
  },
  {
    "name": "Signature",
    "expressions": [],
    "properties": [
      "SpecifiedOutputParameterAbstraction",
      "failureType",
      "SpecifiedQoSAnnotation",
      "exceptions__Signature",
      "ServiceEffectSpecification"
    ]
  },
  {
    "name": "HardwareInducedFailureType",
    "expressions": [{
      "operations": {
        "not": 1,
        "<>": 1,
        "oclIsTypeOf": 1,
        "and": 1
      },
      "name": "HardwareInducedFailureTypeHasProcessingResourceType",
      "body": "( self.processingResourceType__HardwareInducedFailureType <> null ) and ( not ( self.processingResourceType__HardwareInducedFailureType.oclIsTypeOf( pcm::resourcetype::CommunicationLinkResourceType ) ) )",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 2,
        "OperationCallExpImpl": 4,
        "NullLiteralExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": ["pcm::reliability::HardwareInducedFailureType::processingResourceType__HardwareInducedFailureType"]
    }],
    "properties": ["processingResourceType__HardwareInducedFailureType"]
  },
  {
    "name": "ResourceInterfaceRequiringEntity",
    "expressions": [],
    "properties": ["resourceRequiredRoles__ResourceInterfaceRequiringEntity"]
  },
  {
    "name": "ProvidedInfrastructureDelegationConnector",
    "expressions": [],
    "properties": [
      "outerProvidedRole__ProvidedInfrastructureDelegationConnector",
      "innerProvidedRole__ProvidedInfrastructureDelegationConnector",
      "assemblyContext__ProvidedInfrastructureDelegationConnector"
    ]
  },
  {
    "name": "ResourceTimeoutFailureType",
    "expressions": [],
    "properties": ["passiveResource__ResourceTimeoutFailureType"]
  },
  {
    "name": "ScenarioBehaviour",
    "expressions": [
      {
        "operations": {
          "not": 6,
          "oclIsUndefined": 2,
          "oclIsTypeOf": 4,
          "and": 3,
          "oclAsType": 2
        },
        "name": "EachuseractionexceptStartandStopmusthaveapredecessorandsuccessor",
        "body": "not self.actions_ScenarioBehaviour->select(s|not s.oclIsTypeOf(Start) and not s.oclIsTypeOf(Stop))->exists(a|a.oclAsType(AbstractUserAction).predecessor.oclIsUndefined()) and not self.actions_ScenarioBehaviour->select(s|not s.oclIsTypeOf(Start) and not s.oclIsTypeOf(Stop))->exists(a|a.oclAsType(AbstractUserAction).successor.oclIsUndefined())",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "OperationCallExpImpl": 17,
          "VariableExpImpl": 8,
          "TypeExpImpl": 6,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::usagemodel::AbstractUserAction::successor",
          "pcm::usagemodel::ScenarioBehaviour::actions_ScenarioBehaviour",
          "pcm::usagemodel::AbstractUserAction::predecessor"
        ]
      },
      {
        "operations": {
          "size": 1,
          "oclIsTypeOf": 1,
          "=": 1
        },
        "name": "Exactlyonestop",
        "body": "self.actions_ScenarioBehaviour->select(s|s.oclIsTypeOf(Stop))->size() = 1",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 3,
          "IntegerLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["pcm::usagemodel::ScenarioBehaviour::actions_ScenarioBehaviour"]
      },
      {
        "operations": {
          "size": 1,
          "oclIsTypeOf": 1,
          "=": 1
        },
        "name": "Exactlyonestart",
        "body": "self.actions_ScenarioBehaviour->select(s|s.oclIsTypeOf(Start))->size() = 1",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["pcm::usagemodel::ScenarioBehaviour::actions_ScenarioBehaviour"]
      }
    ],
    "properties": [
      "usageScenario_SenarioBehaviour",
      "branchTransition_ScenarioBehaviour",
      "loop_ScenarioBehaviour",
      "actions_ScenarioBehaviour"
    ]
  },
  {
    "name": "FailureType",
    "expressions": [],
    "properties": [
      "Signature",
      "FailureHandlingEntity",
      "ExternalFailureOccurrenceDescription",
      "repository__FailureType"
    ]
  },
  {
    "name": "Branch",
    "expressions": [{
      "operations": {
        "and": 1,
        "oclAsSet": 2,
        "sum": 2,
        "<": 1,
        ">": 1
      },
      "name": "AllBranchProbabilitiesMustSumUpTo1",
      "body": "self->collect(branchTransitions_Branch.branchProbability)->sum() > 0.999 and self->collect(branchTransitions_Branch.branchProbability)->sum() <1.001",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 4,
        "VariableExpImpl": 6,
        "OperationCallExpImpl": 7,
        "RealLiteralExpImpl": 2,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "pcm::usagemodel::BranchTransition::branchProbability",
        "pcm::usagemodel::Branch::branchTransitions_Branch"
      ]
    }],
    "properties": ["branchTransitions_Branch"]
  },
  {
    "name": "ForkAction",
    "expressions": [],
    "properties": [
      "synchronisingBehaviours_ForkAction",
      "asynchronousForkedBehaviours_ForkAction"
    ]
  },
  {
    "name": "RecoveryAction",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "PrimaryBehaviourOfRecoveryActionMustBeSet",
      "body": "self.primaryBehaviour__RecoveryAction <> null",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "NullLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::seff::seff_reliability::RecoveryAction::primaryBehaviour__RecoveryAction"]
    }],
    "properties": [
      "primaryBehaviour__RecoveryAction",
      "recoveryActionBehaviours__RecoveryAction"
    ]
  },
  {
    "name": "InterfaceRequiringEntity",
    "expressions": [],
    "properties": ["requiredRoles_InterfaceRequiringEntity"]
  },
  {
    "name": "ResourceDemandingBehaviour",
    "expressions": [
      {
        "operations": {
          "not": 6,
          "oclIsUndefined": 2,
          "oclIsTypeOf": 4,
          "and": 3,
          "oclAsType": 2
        },
        "name": "EachActionExceptStartActionandStopActionMustHhaveAPredecessorAndSuccessor",
        "body": "not self.steps_Behaviour->select(s|not s.oclIsTypeOf(StartAction) and not s.oclIsTypeOf(StopAction))->exists(a|a.oclAsType(AbstractAction).predecessor_AbstractAction.oclIsUndefined()) and not self.steps_Behaviour->select(s|not s.oclIsTypeOf(StartAction) and not s.oclIsTypeOf(StopAction))->exists(a|a.oclAsType(AbstractAction).successor_AbstractAction.oclIsUndefined())",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "OperationCallExpImpl": 17,
          "VariableExpImpl": 8,
          "TypeExpImpl": 6,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::seff::ResourceDemandingBehaviour::steps_Behaviour",
          "pcm::seff::AbstractAction::predecessor_AbstractAction",
          "pcm::seff::AbstractAction::successor_AbstractAction"
        ]
      },
      {
        "operations": {
          "size": 1,
          "oclIsTypeOf": 1,
          "=": 1
        },
        "name": "ExactlyOneStopAction",
        "body": "self.steps_Behaviour->select(s|s.oclIsTypeOf(StopAction))->size() = 1",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 3,
          "IntegerLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["pcm::seff::ResourceDemandingBehaviour::steps_Behaviour"]
      },
      {
        "operations": {
          "size": 1,
          "oclIsTypeOf": 1,
          "=": 1
        },
        "name": "ExactlyOneStartAction",
        "body": "self.steps_Behaviour->select(s|s.oclIsTypeOf(StartAction))->size() = 1",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["pcm::seff::ResourceDemandingBehaviour::steps_Behaviour"]
      }
    ],
    "properties": [
      "steps_Behaviour",
      "abstractBranchTransition_ResourceDemandingBehaviour",
      "abstractLoopAction_ResourceDemandingBehaviour"
    ]
  },
  {
    "name": "ResourceProvidedRole",
    "expressions": [],
    "properties": [
      "resourceInterfaceProvidingEntity__ResourceProvidedRole",
      "providedResourceInterface__ResourceProvidedRole"
    ]
  },
  {
    "name": "ExternalFailureOccurrenceDescription",
    "expressions": [{
      "operations": {
        "not": 1,
        "oclIsTypeOf": 1
      },
      "name": "NoResourceTimeoutFailureAllowedForExternalFailureOccurrenceDescription",
      "body": "not self.failureType__ExternalFailureOccurrenceDescription.oclIsTypeOf(ResourceTimeoutFailureType)",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::reliability::ExternalFailureOccurrenceDescription::failureType__ExternalFailureOccurrenceDescription"]
    }],
    "properties": [
      "specifiedReliabilityAnnotation__ExternalFailureOccurrenceDescription",
      "failureType__ExternalFailureOccurrenceDescription"
    ]
  },
  {
    "name": "OperationRequiredRole",
    "expressions": [],
    "properties": [
      "ExternalCallAction",
      "RequiredDelegationConnector",
      "requiredInterface__OperationRequiredRole",
      "RequiredDelegationConnector",
      "AssemblyConnector"
    ]
  },
  {
    "name": "RequiredRole",
    "expressions": [],
    "properties": ["requiringEntity_RequiredRole"]
  },
  {
    "name": "VariableCharacterisationType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ResourceRequiredRole",
    "expressions": [],
    "properties": [
      "ResourceCall",
      "RequiredResourceDelegationConnector",
      "requiredResourceInterface__ResourceRequiredRole",
      "RequiredResourceDelegationConnector",
      "resourceInterfaceRequiringEntity__ResourceRequiredRole",
      "ResourceRequiredDelegationConnector",
      "ResourceRequiredDelegationConnector"
    ]
  },
  {
    "name": "SourceRole",
    "expressions": [],
    "properties": [
      "SourceDelegationConnector",
      "AssemblyEventConnector",
      "eventGroup__SourceRole",
      "EmitEventAction",
      "EventChannelSourceConnector",
      "SourceDelegationConnector"
    ]
  },
  {
    "name": "SubSystem",
    "expressions": [],
    "properties": []
  },
  {
    "name": "SpecifiedOutputParameterAbstraction",
    "expressions": [],
    "properties": [
      "expectedExternalOutputs_SpecifiedOutputParameterAbstraction",
      "signature_SpecifiedOutputParameterAbstraction",
      "role_SpecifiedOutputParameterAbstraction",
      "qosAnnotations_SpecifiedOutputParameterAbstraction"
    ]
  },
  {
    "name": "CompositeDataType",
    "expressions": [],
    "properties": [
      "parentType_CompositeDataType",
      "innerDeclaration_CompositeDataType",
      "CompositeDataType"
    ]
  },
  {
    "name": "CharacterisedVariable",
    "expressions": [],
    "properties": ["characterisationType"]
  },
  {
    "name": "ClosedWorkload",
    "expressions": [
      {
        "operations": {
          "<>": 1,
          "not": 1,
          "oclIsUndefined": 1,
          "and": 1
        },
        "name": "PopulationInClosedWorkloadNeedsToBeSpecified",
        "body": "not self.population.oclIsUndefined() and self.population <> ''",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": ["pcm::usagemodel::ClosedWorkload::population"]
      },
      {
        "operations": {
          "<>": 1,
          "not": 1,
          "oclIsUndefined": 1,
          "and": 1
        },
        "name": "ThinkTimeInClosedWorkloadNeedsToBeSpecified",
        "body": "not self.thinkTime_ClosedWorkload.oclIsUndefined() and self.thinkTime_ClosedWorkload.specification <> ''",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "OclInvalid::oclBadProperty",
          "pcm::usagemodel::ClosedWorkload::thinkTime_ClosedWorkload"
        ]
      }
    ],
    "properties": [
      "thinkTime_ClosedWorkload",
      "population"
    ]
  },
  {
    "name": "Parameter",
    "expressions": [],
    "properties": [
      "dataType__Parameter",
      "eventType__Parameter",
      "modifier__Parameter",
      "operationSignature__Parameter",
      "parameterName",
      "CollectionIteratorAction",
      "resourceSignature__Parameter",
      "RequiredCharacterisation",
      "infrastructureSignature__Parameter"
    ]
  },
  {
    "name": "InfrastructureProvidedRole",
    "expressions": [],
    "properties": [
      "providedInterface__InfrastructureProvidedRole",
      "ProvidedInfrastructureDelegationConnector",
      "AssemblyInfrastructureConnector",
      "ProvidedInfrastructureDelegationConnector"
    ]
  },
  {
    "name": "RequiredCharacterisation",
    "expressions": [],
    "properties": [
      "type",
      "interface_RequiredCharacterisation",
      "parameter"
    ]
  },
  {
    "name": "OperationInterface",
    "expressions": [{
      "operations": {},
      "name": "SignaturesHaveToBeUniqueForAnInterface",
      "body": "-- full signature has to be unique \r\n-- (use of ocl-tupels) #\r\nlet sigs : Bag(\r\n\t-- parameters: Sequence of DataType, NOT name #\r\n\t-- exceptions have not to be considered #\r\n\tTuple(returnType : DataType, serviceName : String, parameters : Sequence(DataType) ) \r\n) = \r\nself.signatures__OperationInterface->collect(sig : OperationSignature |\r\n\tTuple{\r\n\t\treturnType : DataType = sig.returnType__OperationSignature,\r\n\t\tserviceName : String = sig.entityName,\r\n\t\tparameters : Sequence(DataType) = sig.parameters__OperationSignature.dataType__Parameter\r\n\t}\r\n)\r\nin\r\nsigs->isUnique(s|s)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 3,
        "VariableExpImpl": 7,
        "LetExpImpl": 1,
        "TupleLiteralExpImpl": 1,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "pcm::repository::OperationInterface::signatures__OperationInterface",
        "pcm::repository::Parameter::dataType__Parameter",
        "pcm::repository::OperationSignature::returnType__OperationSignature",
        "pcm::core::entity::NamedElement::entityName",
        "pcm::repository::OperationSignature::parameters__OperationSignature"
      ]
    }],
    "properties": [
      "OperationProvidedRole",
      "signatures__OperationInterface",
      "OperationRequiredRole"
    ]
  },
  {
    "name": "EmitEventAction",
    "expressions": [],
    "properties": [
      "sourceRole__EmitEventAction",
      "eventType__EmitEventAction"
    ]
  },
  {
    "name": "Allocation",
    "expressions": [
      {
        "operations": {
          "<>": 1,
          "or": 1,
          "oclIsTypeOf": 1,
          "and": 4,
          "includes": 2,
          "implies": 1,
          "oclAsType": 1,
          "=": 4
        },
        "name": "CommunicatingServersHaveToBeConnectedByLinkingResource",
        "body": "self.allocationContexts_Allocation->forAll(a | self.allocationContexts_Allocation->forAll(b | \r\n    --- if a and b are not on the same server\r\n    (a.resourceContainer_AllocationContext <> b.resourceContainer_AllocationContext \r\n    and\r\n    --  and if the assembly contexts of a and b are connected\r\n      self.system_Allocation.connectors__ComposedStructure->select(conn | conn.oclIsTypeOf(pcm::core::composition::AssemblyConnector)).oclAsType(pcm::core::composition::AssemblyConnector)->exists(conn | \r\n         (conn.providingAssemblyContext_AssemblyConnector = a.assemblyContext_AllocationContext  \r\n         and \r\n         conn.requiringAssemblyContext_AssemblyConnector = b.assemblyContext_AllocationContext )\r\n         or \r\n          (conn.providingAssemblyContext_AssemblyConnector = b.assemblyContext_AllocationContext  \r\n         and \r\n         conn.requiringAssemblyContext_AssemblyConnector = a.assemblyContext_AllocationContext )\r\n       )\r\n     )\r\n     -- then the servers have to be connected by a linking resource\r\n     implies \r\n     self.targetResourceEnvironment_Allocation.linkingResources__ResourceEnvironment->exists(l | \r\n        -- l connects the two\r\n        l.connectedResourceContainers_LinkingResource->includes(a.resourceContainer_AllocationContext)\r\n        and \r\n        l.connectedResourceContainers_LinkingResource->includes(b.resourceContainer_AllocationContext)\r\n     )\r\n  ))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 6,
          "VariableExpImpl": 20,
          "OperationCallExpImpl": 15,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 20
        },
        "properties": [
          "pcm::core::composition::ComposedStructure::connectors__ComposedStructure",
          "pcm::allocation::AllocationContext::resourceContainer_AllocationContext",
          "pcm::resourceenvironment::LinkingResource::connectedResourceContainers_LinkingResource",
          "pcm::core::composition::AssemblyConnector::requiringAssemblyContext_AssemblyConnector",
          "pcm::core::composition::AssemblyConnector::providingAssemblyContext_AssemblyConnector",
          "pcm::allocation::Allocation::targetResourceEnvironment_Allocation",
          "pcm::allocation::Allocation::system_Allocation",
          "pcm::allocation::AllocationContext::assemblyContext_AllocationContext",
          "pcm::resourceenvironment::ResourceEnvironment::linkingResources__ResourceEnvironment",
          "pcm::allocation::Allocation::allocationContexts_Allocation"
        ]
      },
      {
        "operations": {
          "or": 1,
          "size": 1,
          "oclIsTypeOf": 2,
          "oclAsSet": 1,
          "union": 1,
          "oclAsType": 1,
          "=": 2
        },
        "name": "EachAssemblyContextWithinSystemHasToBeAllocatedExactlyOnce",
        "body": "-- Get all AssemblyContexts used by this system, that is \r\n-- 1) the AssemblyContexts directly used in the system and \r\nself.system_Allocation.assemblyContexts__ComposedStructure\r\n-- 2) the AssemblyContexts used by SubSystems in the System. Note that if a SubSystem also contains other Subsystems,\r\n-- we need to get those AssemblyContexts too: Thus, we use a closure here\r\n->union(self.system_Allocation.assemblyContexts__ComposedStructure->closure(\r\nencapsulatedComponent__AssemblyContext->select(composites|composites.oclIsTypeOf(pcm::subsystem::SubSystem)).oclAsType(pcm::subsystem::SubSystem)\r\n.assemblyContexts__ComposedStructure))\r\n--Now, after we collected all AssemblyContexts somehow used, we check whether they need to be allocated \r\n--and if yes, if they are allocated.\r\n->forAll(assemblyCtx|\r\n--AssemblyContexts that contain SubSystems do not need to be allocated\r\nassemblyCtx.encapsulatedComponent__AssemblyContext.oclIsTypeOf(pcm::subsystem::SubSystem) or\r\n--All others need to be allocated. \r\nself.allocationContexts_Allocation->select(allocationCtx|\r\nallocationCtx.assemblyContext_AllocationContext = assemblyCtx)->size() = 1)",
        "type": "OperationImpl",
        "constructs": {
          "IteratorExpImpl": 6,
          "VariableExpImpl": 10,
          "OperationCallExpImpl": 9,
          "IntegerLiteralExpImpl": 1,
          "TypeExpImpl": 3,
          "PropertyCallExpImpl": 9
        },
        "properties": [
          "pcm::core::composition::AssemblyContext::encapsulatedComponent__AssemblyContext",
          "pcm::allocation::Allocation::system_Allocation",
          "pcm::allocation::AllocationContext::assemblyContext_AllocationContext",
          "pcm::allocation::Allocation::allocationContexts_Allocation",
          "pcm::core::composition::ComposedStructure::assemblyContexts__ComposedStructure"
        ]
      }
    ],
    "properties": [
      "targetResourceEnvironment_Allocation",
      "system_Allocation",
      "allocationContexts_Allocation"
    ]
  },
  {
    "name": "EventChannelSinkConnector",
    "expressions": [],
    "properties": [
      "eventChannel__EventChannelSinkConnector",
      "sinkRole__EventChannelSinkConnector",
      "assemblyContext__EventChannelSinkConnector",
      "filterCondition__EventChannelSinkConnector"
    ]
  },
  {
    "name": "EventType",
    "expressions": [],
    "properties": [
      "parameter__EventType",
      "eventGroup__EventType",
      "EmitEventAction"
    ]
  },
  {
    "name": "CompleteComponentType",
    "expressions": [
      {
        "operations": {
          "or": 4,
          "size": 2,
          "oclIsTypeOf": 4,
          "implies": 1,
          ">=": 2
        },
        "name": "AtLeastOneInterfaceHasToBeProvidedOrRequiredByAUsefullCompleteComponentType",
        "body": "(\r\n\tself.oclIsTypeOf(CompleteComponentType)\r\n\tor\r\n\tself.oclIsTypeOf(ImplementationComponentType)\r\n\tor\r\n\tself.oclIsTypeOf(CompositeComponent)\r\n\tor\r\n\tself.oclIsTypeOf(BasicComponent)\r\n)\r\nimplies\r\n(\r\n\tself.providedRoles_InterfaceProvidingEntity->size() >= 1\r\n\tor\r\n\tself.requiredRoles_InterfaceRequiringEntity->size() >= 1\r\n)",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 13,
          "VariableExpImpl": 6,
          "IntegerLiteralExpImpl": 2,
          "TypeExpImpl": 4,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "pcm::core::entity::InterfaceProvidingEntity::providedRoles_InterfaceProvidingEntity",
          "pcm::core::entity::InterfaceRequiringEntity::requiredRoles_InterfaceRequiringEntity"
        ]
      },
      {
        "operations": {},
        "name": "providedInterfacesHaveToConformToProvidedType2",
        "body": "-- CompleteTypes provided Interfaces have to be a superset\r\n-- of ProvidesComponentType provided Interfaces #\r\n--\r\n-- ACCx are used to accumulate Sets/Bags; usually only the very inner ACCx is used at all.\r\n--\r\n-- Recursive Query for parent Interface IDs\r\n-- see \"lpar2005.pdf\" (Second-order principles in specification languages for Object-Oriented Programs; Beckert, Tretelman) pp. 11 #\r\n--let parentInterfaces : Bag(Interface) =\r\n--\tself.providedRoles->iterate(r : ProvidedRole; acc2 : Bag(Interface) = Bag{} |\r\n--\t\tacc2->union(r.providedInterface.parentInterface->asBag()) -- asBag required to allow Set operations #\r\n--\t) in\r\n--let anchestorInterfaces : Bag(Interface) =\r\n--\tself.providedRoles->iterate(r : ProvidedRole; acc4 : Bag(Interface) = Bag{} |\r\n--\t\tacc4->union(r.providedInterface.parentInterface->asBag()) -- asBag required to allow Set operations #\r\n--\t)->union( -- union with anchestors found in former recursion #\r\n--\t\tself.providedRoles->iterate(r : ProvidedRole; acc6 : Bag(Interface) = Bag{} |\r\n--\t\t\tacc6->union(r.providedInterface.parentInterface.anchestorInterfaces) --already Set/Bag\r\n--\t\t)\r\n--\t) in\r\n--\t-- Directly provided anchestorInterfaces need to be a superset of provided interfaces of Supertype #\r\n--\tanchestorInterfaces.identifier.id->includesAll(\r\n--\t\tself.parentProvidesComponentTypes->iterate(pt : ProvidesComponentType; acc1 : Bag(String) = Bag{} |\r\n--\t\t\tpt.providedRoles->iterate(r : ProvidedRole; acc2 : Bag(String) = Bag{} |\r\n--\t\t\t\tacc2->union(r.providedInterface.identifier.id->asBag()) -- asBag required to allow Set operations #\r\n--\t\t\t)\r\n--\t\t)\r\n--\t)\r\ntrue",
        "type": "ConstraintImpl",
        "constructs": {"BooleanLiteralExpImpl": 1},
        "properties": []
      }
    ],
    "properties": [
      "ImplementationComponentType",
      "parentProvidesComponentTypes"
    ]
  },
  {
    "name": "CollectionIteratorAction",
    "expressions": [],
    "properties": ["parameter_CollectionIteratorAction"]
  },
  {
    "name": "Repository",
    "expressions": [],
    "properties": [
      "components__Repository",
      "failureTypes__Repository",
      "repositoryDescription",
      "dataTypes__Repository",
      "interfaces__Repository"
    ]
  },
  {
    "name": "EventGroup",
    "expressions": [],
    "properties": [
      "SinkRole",
      "SourceRole",
      "EventChannel",
      "eventTypes__EventGroup"
    ]
  },
  {
    "name": "OperationProvidedRole",
    "expressions": [],
    "properties": [
      "ProvidedDelegationConnector",
      "AssemblyConnector",
      "EntryLevelSystemCall",
      "providedInterface__OperationProvidedRole",
      "ProvidedDelegationConnector"
    ]
  },
  {
    "name": "InfrastructureRequiredRole",
    "expressions": [],
    "properties": [
      "requiredInterface__InfrastructureRequiredRole",
      "InfrastructureCall",
      "RequiredInfrastructureDelegationConnector",
      "AssemblyInfrastructureConnector",
      "RequiredInfrastructureDelegationConnector"
    ]
  },
  {
    "name": "ServiceEffectSpecification",
    "expressions": [{
      "operations": {
        "oclIsKindOf": 4,
        "and": 2,
        "oclAsType": 4,
        "=": 2
      },
      "name": "ReferencedSignatureMustBelongToInterfaceReferencedByProvidedRole",
      "body": "if self.describedService__SEFF.oclIsKindOf(pcm::repository::OperationSignature) then\r\n\tself.basicComponent_ServiceEffectSpecification.providedRoles_InterfaceProvidingEntity->exists(p | p.oclIsKindOf(pcm::repository::OperationProvidedRole) and (p.oclAsType(pcm::repository::OperationProvidedRole).providedInterface__OperationProvidedRole = self.describedService__SEFF.oclAsType(pcm::repository::OperationSignature).interface__OperationSignature))\r\nelse\r\n\tif self.describedService__SEFF.oclIsKindOf(pcm::repository::EventType) then\r\n\t\tself.basicComponent_ServiceEffectSpecification.providedRoles_InterfaceProvidingEntity->exists(p | p.oclIsKindOf(pcm::repository::SinkRole) and (p.oclAsType(pcm::repository::SinkRole).eventGroup__SinkRole = self.describedService__SEFF.oclAsType(pcm::repository::EventType).eventGroup__EventType))\r\n\telse\r\n\t\ttrue\r\n\tendif\r\nendif",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "VariableExpImpl": 10,
        "OperationCallExpImpl": 12,
        "TypeExpImpl": 8,
        "IfExpImpl": 2,
        "PropertyCallExpImpl": 12,
        "BooleanLiteralExpImpl": 1
      },
      "properties": [
        "pcm::seff::ServiceEffectSpecification::basicComponent_ServiceEffectSpecification",
        "pcm::repository::OperationProvidedRole::providedInterface__OperationProvidedRole",
        "pcm::seff::ServiceEffectSpecification::describedService__SEFF",
        "pcm::core::entity::InterfaceProvidingEntity::providedRoles_InterfaceProvidingEntity",
        "pcm::repository::EventType::eventGroup__EventType",
        "pcm::repository::SinkRole::eventGroup__SinkRole",
        "pcm::repository::OperationSignature::interface__OperationSignature"
      ]
    }],
    "properties": [
      "seffTypeID",
      "basicComponent_ServiceEffectSpecification",
      "describedService__SEFF"
    ]
  },
  {
    "name": "PassiveResource",
    "expressions": [],
    "properties": [
      "resourceTimeoutFailureType__PassiveResource",
      "capacity_PassiveResource",
      "basicComponent_PassiveResource",
      "AcquireAction",
      "ReleaseAction"
    ]
  },
  {
    "name": "Connector",
    "expressions": [],
    "properties": ["parentStructure__Connector"]
  },
  {
    "name": "ExternalCallAction",
    "expressions": [
      {
        "operations": {"includes": 1},
        "name": "SignatureBelongsToRole",
        "body": "self.role_ExternalService.requiredInterface__OperationRequiredRole.signatures__OperationInterface->includes(self.calledService_ExternalService)",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::seff::ExternalCallAction::role_ExternalService",
          "pcm::repository::OperationInterface::signatures__OperationInterface",
          "pcm::repository::OperationRequiredRole::requiredInterface__OperationRequiredRole",
          "pcm::seff::ExternalCallAction::calledService_ExternalService"
        ]
      },
      {
        "operations": {
          "eContainer": 1,
          "oclIsKindOf": 1,
          "oclAsSet": 1,
          "includes": 1,
          "oclAsType": 2
        },
        "name": "OperationRequiredRoleMustBeReferencedByContainer",
        "body": "self.oclAsType(ecore::EObject)->closure(eContainer())->select( entity | entity.oclIsKindOf(pcm::core::entity::InterfaceRequiringEntity)).oclAsType(pcm::core::entity::InterfaceRequiringEntity).requiredRoles_InterfaceRequiringEntity->includes(self.role_ExternalService)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 6,
          "TypeExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "pcm::seff::ExternalCallAction::role_ExternalService",
          "pcm::core::entity::InterfaceRequiringEntity::requiredRoles_InterfaceRequiringEntity"
        ]
      }
    ],
    "properties": [
      "role_ExternalService",
      "retryCount",
      "calledService_ExternalService"
    ]
  },
  {
    "name": "DummyClass",
    "expressions": [],
    "properties": []
  },
  {
    "name": "FailureOccurrenceDescription",
    "expressions": [{
      "operations": {
        "<=": 1,
        "and": 1,
        "oclAsType": 2,
        ">=": 1
      },
      "name": "EnsureValidFailureProbabilityRange",
      "body": "(self.failureProbability.oclAsType(Real) <= 1.0) and (self.failureProbability.oclAsType(Real) >= 0.0)",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 5,
        "VariableExpImpl": 2,
        "RealLiteralExpImpl": 2,
        "TypeExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": ["pcm::reliability::FailureOccurrenceDescription::failureProbability"]
    }],
    "properties": ["failureProbability"]
  },
  {
    "name": "AssemblyContext",
    "expressions": [],
    "properties": [
      "UserData",
      "EventChannelSourceConnector",
      "AssemblyConnector",
      "encapsulatedComponent__AssemblyContext",
      "RequiredInfrastructureDelegationConnector",
      "EventChannelSinkConnector",
      "ComponentSpecifiedExecutionTime",
      "AssemblyConnector",
      "ProvidedInfrastructureDelegationConnector",
      "RequiredDelegationConnector",
      "configParameterUsages__AssemblyContext",
      "ProvidedDelegationConnector",
      "parentStructure__AssemblyContext",
      "AllocationContext",
      "AssemblyEventConnector",
      "AssemblyInfrastructureConnector",
      "RequiredResourceDelegationConnector",
      "AssemblyEventConnector",
      "SourceDelegationConnector",
      "SinkDelegationConnector",
      "AssemblyInfrastructureConnector"
    ]
  },
  {
    "name": "ImplementationComponentType",
    "expressions": [
      {
        "operations": {},
        "name": "providedInterfacesHaveToConformToCompleteType",
        "body": "-- ### EXACT COPY FROM ABOVE ###\r\n-- ImplementationComponentTypes provided Interfaces have to be a superset\r\n-- of CompleteComponentType provided Interfaces #\r\n--\r\n-- ACCx are used to accumulate Sets/Bags; usually only the very inner ACCx is used at all.\r\n--\r\n-- Recursive Query for parent Interface IDs\r\n-- see 'lpar2005.pdf' (Second-order principles in specification languages for Object-Oriented Programs; Beckert, Tretelman) pp. 11 #\r\n--let parentInterfaces : Bag(Interface) =\r\n--\tself.providedRoles->iterate(r : ProvidedRole; acc2 : Bag(Interface) = Bag{} |\r\n--\t\tacc2->union(r.providedInterface.parentInterface->asBag()) -- asBag required to allow Set operations #\r\n--\t) in\r\n--let anchestorInterfaces : Bag(Interface) =\r\n--\tself.providedRoles->iterate(r : ProvidedRole; acc4 : Bag(Interface) = Bag{} |\r\n--\t\tacc4->union(r.providedInterface.parentInterface->asBag()) -- asBag required to allow Set operations #\r\n--\t)->union( -- union with anchestors found in former recursion #\r\n--\t\tself.providedRoles->iterate(r : ProvidedRole; acc6 : Bag(Interface) = Bag{} |\r\n--\t\t\tacc6->union(r.providedInterface.parentInterface.anchestorInterfaces) --already Set/Bag\r\n--\t\t)\r\n--\t) in\r\n\t-- Directly provided anchestorInterfaces need to be a superset of provided interfaces of Supertype #\r\n--\tanchestorInterfaces.identifier.id->includesAll(\r\n--\t\tself.parentProvidesComponentTypes->iterate(pt : ProvidesComponentType; acc1 : Bag(String) = Bag{} |\r\n--\t\t\tpt.providedRoles->iterate(r : ProvidedRole; acc2 : Bag(String) = Bag{} |\r\n--\t\t\t\tacc2->union(r.providedInterface.identifier.id->asBag()) -- asBag required to allow Set operations #\r\n--\t\t\t)\r\n--\t\t)\r\n--\t)\r\ntrue",
        "type": "ConstraintImpl",
        "constructs": {"BooleanLiteralExpImpl": 1},
        "properties": []
      },
      {
        "operations": {
          "or": 1,
          "size": 2,
          "oclIsTypeOf": 3,
          "=": 5
        },
        "name": "ProvidedInterfaceHaveToConformToComponentType",
        "body": "-- assures that InfrastructureComponents only have InfrastructureInterfaces and that BusinessComponents only have OperationInterfaces or EventGroups\r\nif self.componentType = ComponentType::INFRASTRUCTURE_COMPONENT then\r\n\tself.providedRoles_InterfaceProvidingEntity->select(role | role.oclIsTypeOf(OperationInterface) or role.oclIsTypeOf(EventGroup))->size() = 0\r\nelse if self.componentType = ComponentType::BUSINESS_COMPONENT then\r\n\tself.providedRoles_InterfaceProvidingEntity->select(role | role.oclIsTypeOf(InfrastructureInterface))->size() = 0\r\nelse\r\n\t1 = 0\r\nendif\r\nendif",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 11,
          "VariableExpImpl": 7,
          "IntegerLiteralExpImpl": 4,
          "EnumLiteralExpImpl": 2,
          "TypeExpImpl": 3,
          "IfExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::core::entity::InterfaceProvidingEntity::providedRoles_InterfaceProvidingEntity",
          "pcm::repository::ImplementationComponentType::componentType"
        ]
      },
      {
        "operations": {},
        "name": "RequiredInterfacesHaveToConformToCompleteType",
        "body": "-- ImplementationTypes required Interfaces have to be a subset\r\n-- of CompleteComponentType required Interfaces #\r\n--\r\n-- ACCx are used to accumulate Sets/Bags; usually only the very inner ACCx is used at all.\r\n--\r\n-- Recursive Query for parent Interface IDs\r\n-- see 'lpar2005.pdf' (Second-order principles in specification languages for Object-Oriented Programs; Beckert, Tretelman) pp. 11 #\r\n--let parentInterfaces : Bag(Interface) =\r\n--\tself.parentCompleteComponentTypes->iterate(pt : CompleteComponentType; acc1 : Bag(Interface) = Bag{} |\r\n--\t\tacc1->union(pt.requiredRoles->iterate(r : RequiredRole; acc2 : Bag(Interface) = Bag{} |\r\n--\t\t\tacc2->union(r.requiredInterface.parentInterface->asBag()) -- asBag required to allow Set operations #\r\n--\t\t))\r\n--\t) in\r\n--let anchestorInterfaces : Bag(Interface) =\r\n--\tself.parentCompleteComponentTypes->iterate(pt : CompleteComponentType; acc3 : Bag(Interface) = Bag{} |\r\n--\t\tacc3->union(pt.requiredRoles->iterate(r : RequiredRole; acc4 : Bag(Interface) = Bag{} |\r\n--\t\t\tacc4->union(r.requiredInterface.parentInterface->asBag()) -- asBag required to allow Set operations #\r\n--\t\t))\r\n--\t)->union( -- union with anchestors found in former recursion #\r\n--\t\tself.parentCompleteComponentTypes->iterate(pt : CompleteComponentType; acc5 : Bag(Interface) = Bag{} |\r\n--\t\t\tacc5->union(pt.requiredRoles->iterate(r : RequiredRole; acc6 : Bag(Interface) = Bag{} |\r\n--\t\t\t\tacc6->union(r.requiredInterface.parentInterface.anchestorInterfaces) --already Set/Bag\r\n--\t\t\t))\r\n--\t\t)\r\n--\t) in\r\n-- Directly required interfaces need to be a subset of required anchestorInterfaces of Supertype #\r\n--anchestorInterfaces.identifier.id->includesAll(\r\n--\tself.requiredRoles->iterate(p : RequiredRole; acc7 : Bag(String) = Bag{} |\r\n--\t\tacc7->union(p.requiredInterface.identifier.id->asBag())\r\n--\t)\t\r\n--)\r\ntrue",
        "type": "ConstraintImpl",
        "constructs": {"BooleanLiteralExpImpl": 1},
        "properties": []
      },
      {
        "operations": {
          "oclIsTypeOf": 2,
          "isEmpty": 1,
          "notEmpty": 1,
          "asSet": 2,
          "oclAsType": 2,
          "-": 1
        },
        "name": "ProvideSameOrMoreInterfacesAsCompleteComponentType",
        "body": "-- ImplementationComponent has to provide the same or more interfaces like the CompleteComponentType (if set) #\r\n\tif\r\n\t\t -- apply constraint only for non-empty CompleteComponentTypes #\r\n\t\tself.parentCompleteComponentTypes->notEmpty()\r\n\tthen\r\n\t\tlet\r\n\t\t\t--own interfaces:\r\n\t\t\townInterfaces : Set(OperationInterface)\r\n\t\t\t  = self.providedRoles_InterfaceProvidingEntity->select(pr|pr.oclIsTypeOf(OperationProvidedRole))->collect(pr : ProvidedRole | pr.oclAsType (OperationProvidedRole).providedInterface__OperationProvidedRole)->asSet()\r\n    in    \r\n    \t--complete type interfaces:\r\n    \tself.parentCompleteComponentTypes->forAll\r\n      ( p : CompleteComponentType |\r\n        (\r\n        \tp.providedRoles_InterfaceProvidingEntity->select(pr|pr.oclIsTypeOf(OperationProvidedRole))->collect(pr : ProvidedRole | pr.oclAsType (OperationProvidedRole).providedInterface__OperationProvidedRole)->asSet()\r\n        \t-\r\n        \townInterfaces\r\n      \t)->isEmpty()\r\n    \t)\r\n\telse\r\n\t\ttrue\r\n\tendif",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 5,
          "OperationCallExpImpl": 9,
          "VariableExpImpl": 9,
          "LetExpImpl": 1,
          "TypeExpImpl": 4,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 6,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "pcm::repository::OperationProvidedRole::providedInterface__OperationProvidedRole",
          "pcm::core::entity::InterfaceProvidingEntity::providedRoles_InterfaceProvidingEntity",
          "pcm::repository::ImplementationComponentType::parentCompleteComponentTypes"
        ]
      },
      {
        "operations": {
          "oclIsTypeOf": 2,
          "isEmpty": 1,
          "notEmpty": 1,
          "asSet": 2,
          "-": 1,
          "oclAsType": 2
        },
        "name": "RequireSameOrFewerInterfacesAsCompleteComponentType",
        "body": "-- ImplementationComponent has to require the same or fewer interfaces like the CompleteComponentType (if set) #\r\n\tif\r\n\t\t-- apply constraint only for non-empty CompleteComponentTypes #\r\n\t\tself.parentCompleteComponentTypes->notEmpty()\r\n\tthen\r\n\t    let\r\n\t      --own interfaces:\r\n\t      ownInterfaces : Set(OperationInterface) \r\n\t        = self.requiredRoles_InterfaceRequiringEntity->select(rr|rr.oclIsTypeOf(OperationRequiredRole))->collect(rr : RequiredRole | rr.oclAsType (OperationRequiredRole).requiredInterface__OperationRequiredRole)->asSet()\r\n\t    in\r\n\t      --complete type interfaces:\r\n\t      self.parentCompleteComponentTypes->forAll\r\n\t      ( p : CompleteComponentType |\r\n\t      \t(\r\n\t\t      \townInterfaces\r\n\t\t        -\r\n\t\t        p.requiredRoles_InterfaceRequiringEntity->select(rr|rr.oclIsTypeOf(OperationRequiredRole))->collect(rr : RequiredRole | rr.oclAsType (OperationRequiredRole).requiredInterface__OperationRequiredRole)->asSet()\r\n\t      \t)->isEmpty()\r\n\t    \t)\r\n\telse\r\n\t\ttrue\r\n\tendif",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 5,
          "VariableExpImpl": 9,
          "OperationCallExpImpl": 9,
          "LetExpImpl": 1,
          "TypeExpImpl": 4,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 6,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "pcm::repository::ImplementationComponentType::parentCompleteComponentTypes",
          "pcm::repository::OperationRequiredRole::requiredInterface__OperationRequiredRole",
          "pcm::core::entity::InterfaceRequiringEntity::requiredRoles_InterfaceRequiringEntity"
        ]
      }
    ],
    "properties": [
      "parentCompleteComponentTypes",
      "componentParameterUsage_ImplementationComponentType",
      "componentType"
    ]
  },
  {
    "name": "SpecifiedReliabilityAnnotation",
    "expressions": [
      {
        "operations": {
          "oclIsTypeOf": 2,
          "and": 1,
          "oclAsType": 1
        },
        "name": "SpecifiedReliabilityAnnotationMustReferenceRequiredRoleOfASystem",
        "body": "(self.role_SpecifiedQoSAnnotation.oclIsTypeOf(pcm::repository::OperationRequiredRole)) and (self.role_SpecifiedQoSAnnotation.oclAsType(pcm::repository::OperationRequiredRole).requiringEntity_RequiredRole.oclIsTypeOf(pcm::system::System))\r\n\r\n\r\n",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 2,
          "TypeExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "pcm::qosannotations::SpecifiedQoSAnnotation::role_SpecifiedQoSAnnotation",
          "pcm::repository::RequiredRole::requiringEntity_RequiredRole"
        ]
      },
      {
        "operations": {
          "<>": 2,
          "implies": 1
        },
        "name": "MultipleExternalOccurrenceDescriptionsPerFailureTypeNotAllowed",
        "body": "self.externalFailureOccurrenceDescriptions__SpecifiedReliabilityAnnotation->forAll(x:pcm::reliability::ExternalFailureOccurrenceDescription,y:pcm::reliability::ExternalFailureOccurrenceDescription  | x<>y implies x.failureType__ExternalFailureOccurrenceDescription <> y.failureType__ExternalFailureOccurrenceDescription )",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "pcm::reliability::ExternalFailureOccurrenceDescription::failureType__ExternalFailureOccurrenceDescription",
          "pcm::qosannotations::qos_reliability::SpecifiedReliabilityAnnotation::externalFailureOccurrenceDescriptions__SpecifiedReliabilityAnnotation"
        ]
      },
      {
        "operations": {
          "<=": 1,
          "sum": 1,
          "oclAsType": 1
        },
        "name": "SumOfReliabilityAnnotationFailureProbabilitiesMustNotExceed1",
        "body": "self.externalFailureOccurrenceDescriptions__SpecifiedReliabilityAnnotation.failureProbability.oclAsType(Real)->sum()<=1.0",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 3,
          "RealLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "pcm::reliability::FailureOccurrenceDescription::failureProbability",
          "pcm::qosannotations::qos_reliability::SpecifiedReliabilityAnnotation::externalFailureOccurrenceDescriptions__SpecifiedReliabilityAnnotation"
        ]
      }
    ],
    "properties": ["externalFailureOccurrenceDescriptions__SpecifiedReliabilityAnnotation"]
  },
  {
    "name": "BasicComponent",
    "expressions": [{
      "operations": {
        "<>": 2,
        "implies": 2,
        "=": 1
      },
      "name": "NoSeffTypeUsedTwice",
      "body": "self.serviceEffectSpecifications__BasicComponent->forAll(p1, p2 |\r\n  p1 <> p2 implies (p1.describedService__SEFF = p2.describedService__SEFF implies p1.seffTypeID <> p2.seffTypeID))",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 7,
        "OperationCallExpImpl": 5,
        "PropertyCallExpImpl": 5
      },
      "properties": [
        "pcm::seff::ServiceEffectSpecification::seffTypeID",
        "pcm::seff::ServiceEffectSpecification::describedService__SEFF",
        "pcm::repository::BasicComponent::serviceEffectSpecifications__BasicComponent"
      ]
    }],
    "properties": [
      "passiveResource_BasicComponent",
      "serviceEffectSpecifications__BasicComponent"
    ]
  },
  {
    "name": "LinkingResource",
    "expressions": [],
    "properties": [
      "communicationLinkResourceSpecifications_LinkingResource",
      "connectedResourceContainers_LinkingResource",
      "resourceEnvironment_LinkingResource"
    ]
  },
  {
    "name": "InnerDeclaration",
    "expressions": [],
    "properties": [
      "datatype_InnerDeclaration",
      "compositeDataType_InnerDeclaration"
    ]
  },
  {
    "name": "ResourceRequiredDelegationConnector",
    "expressions": [],
    "properties": [
      "parentStructure_ResourceRequiredDelegationConnector",
      "outerResourceRequiredRole_ResourceRequiredDelegationConnector",
      "innerResourceRequiredRole_ResourceRequiredDelegationConnector"
    ]
  },
  {
    "name": "InterfaceProvidingEntity",
    "expressions": [],
    "properties": ["providedRoles_InterfaceProvidingEntity"]
  },
  {
    "name": "VariableUsage",
    "expressions": [],
    "properties": [
      "callReturnAction__VariableUsage",
      "setVariableAction_VariableUsage",
      "namedReference__VariableUsage",
      "ImplementationComponentType",
      "variableCharacterisation_VariableUsage",
      "entryLevelSystemCall_InputParameterUsage",
      "callAction__VariableUsage",
      "assemblyContext__VariableUsage",
      "synchronisationPoint_VariableUsage",
      "specifiedOutputParameterAbstraction_expectedExternalOutputs_VariableUsage",
      "userData_VariableUsage",
      "entryLevelSystemCall_OutputParameterUsage"
    ]
  },
  {
    "name": "ComponentSpecifiedExecutionTime",
    "expressions": [],
    "properties": ["assemblyContext_ComponentSpecifiedExecutionTime"]
  },
  {
    "name": "Delay",
    "expressions": [],
    "properties": ["timeSpecification_Delay"]
  },
  {
    "name": "UserData",
    "expressions": [],
    "properties": [
      "assemblyContext_userData",
      "usageModel_UserData",
      "userDataParameterUsages_UserData"
    ]
  },
  {
    "name": "InterfaceProvidingRequiringEntity",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ProvidedDelegationConnector",
    "expressions": [
      {
        "operations": {"=": 1},
        "name": "ComponentOfAssemblyContextAndInnerRoleProvidingComponentNeedToBeTheSame",
        "body": "self.innerProvidedRole_ProvidedDelegationConnector.providingEntity_ProvidedRole = self.assemblyContext_ProvidedDelegationConnector.encapsulatedComponent__AssemblyContext",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::core::composition::ProvidedDelegationConnector::assemblyContext_ProvidedDelegationConnector",
          "pcm::core::composition::AssemblyContext::encapsulatedComponent__AssemblyContext",
          "pcm::core::composition::ProvidedDelegationConnector::innerProvidedRole_ProvidedDelegationConnector",
          "pcm::repository::ProvidedRole::providingEntity_ProvidedRole"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "ProvidedDelegationConnectorandtheconnectedComponentmustbepartofthesamecompositestructure",
        "body": "self.parentStructure__Connector = self.assemblyContext_ProvidedDelegationConnector.parentStructure__AssemblyContext",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "pcm::core::composition::AssemblyContext::parentStructure__AssemblyContext",
          "pcm::core::composition::ProvidedDelegationConnector::assemblyContext_ProvidedDelegationConnector",
          "pcm::core::composition::Connector::parentStructure__Connector"
        ]
      }
    ],
    "properties": [
      "outerProvidedRole_ProvidedDelegationConnector",
      "assemblyContext_ProvidedDelegationConnector",
      "innerProvidedRole_ProvidedDelegationConnector"
    ]
  },
  {
    "name": "FailureHandlingEntity",
    "expressions": [],
    "properties": ["failureTypes_FailureHandlingEntity"]
  },
  {
    "name": "VariableCharacterisation",
    "expressions": [],
    "properties": [
      "type",
      "specification_VariableCharacterisation",
      "variableUsage_VariableCharacterisation"
    ]
  },
  {
    "name": "SpecifiedExecutionTime",
    "expressions": [],
    "properties": ["specification_SpecifiedExecutionTime"]
  },
  {
    "name": "Role",
    "expressions": [],
    "properties": [
      "SpecifiedOutputParameterAbstraction",
      "SpecifiedQoSAnnotation"
    ]
  },
  {
    "name": "ExceptionType",
    "expressions": [],
    "properties": [
      "exceptionName",
      "exceptionMessage",
      "Signature"
    ]
  },
  {
    "name": "ResourceInterface",
    "expressions": [],
    "properties": [
      "resourceRepository__ResourceInterface",
      "resourceSignatures__ResourceInterface",
      "ResourceProvidedRole",
      "ResourceRequiredRole"
    ]
  },
  {
    "name": "NamedElement",
    "expressions": [],
    "properties": ["entityName"]
  },
  {
    "name": "DelegationConnector",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ResourceDemandingInternalBehaviour",
    "expressions": [],
    "properties": [
      "InternalCallAction",
      "resourceDemandingSEFF_ResourceDemandingInternalBehaviour"
    ]
  },
  {
    "name": "SynchronisationPoint",
    "expressions": [],
    "properties": [
      "forkAction_SynchronisationPoint",
      "outputParameterUsage_SynchronisationPoint",
      "synchronousForkedBehaviours_SynchronisationPoint"
    ]
  },
  {
    "name": "ComposedStructure",
    "expressions": [
      {
        "operations": {
          "<>": 2,
          "oclIsTypeOf": 1,
          "implies": 1,
          "oclAsType": 1
        },
        "name": "MultipleConnectorsConstraint",
        "body": "self.connectors__ComposedStructure->select(conn | conn.oclIsTypeOf(pcm::core::composition::ProvidedDelegationConnector)).oclAsType(pcm::core::composition::ProvidedDelegationConnector)->forAll( c1, c2 | c1 <> c2 implies c1.outerProvidedRole_ProvidedDelegationConnector <> c2.outerProvidedRole_ProvidedDelegationConnector)\r\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 7,
          "OperationCallExpImpl": 5,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "pcm::core::composition::ProvidedDelegationConnector::outerProvidedRole_ProvidedDelegationConnector",
          "pcm::core::composition::ComposedStructure::connectors__ComposedStructure"
        ]
      },
      {
        "operations": {
          "<>": 2,
          "oclIsTypeOf": 1,
          "and": 1,
          "implies": 1,
          "=": 1,
          "oclAsType": 1
        },
        "name": "MultipleConnectorsConstraintForAssemblyConnectors",
        "body": "self.connectors__ComposedStructure->select(conn | conn.oclIsTypeOf(pcm::core::composition::AssemblyConnector)).oclAsType(AssemblyConnector)->forAll( c1, c2 | ( (c1 <> c2) and ( c1.requiringAssemblyContext_AssemblyConnector = c2.requiringAssemblyContext_AssemblyConnector ) ) implies c1.requiredRole_AssemblyConnector <> c2.requiredRole_AssemblyConnector )\r\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "VariableExpImpl": 9,
          "OperationCallExpImpl": 7,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 5
        },
        "properties": [
          "pcm::core::composition::ComposedStructure::connectors__ComposedStructure",
          "pcm::core::composition::AssemblyConnector::requiringAssemblyContext_AssemblyConnector",
          "pcm::core::composition::AssemblyConnector::requiredRole_AssemblyConnector"
        ]
      }
    ],
    "properties": [
      "connectors__ComposedStructure",
      "resourceRequiredDelegationConnectors_ComposedStructure",
      "eventChannel__ComposedStructure",
      "assemblyContexts__ComposedStructure"
    ]
  },
  {
    "name": "AbstractLoopAction",
    "expressions": [],
    "properties": ["bodyBehaviour_Loop"]
  },
  {
    "name": "CallAction",
    "expressions": [],
    "properties": ["inputVariableUsages__CallAction"]
  },
  {
    "name": "DataType",
    "expressions": [],
    "properties": [
      "CollectionDataType",
      "OperationSignature",
      "Parameter",
      "InnerDeclaration",
      "repository__DataType"
    ]
  },
  {
    "name": "SpecifiedQoSAnnotation",
    "expressions": [],
    "properties": [
      "role_SpecifiedQoSAnnotation",
      "signature_SpecifiedQoSAnnation",
      "qosAnnotations_SpecifiedQoSAnnotation"
    ]
  },
  {
    "name": "RequiredDelegationConnector",
    "expressions": [
      {
        "operations": {"=": 1},
        "name": "RequiringEntityOfOuterRequiredRoleMustBeTheSameAsTheParentOfTheRequiredDelegationConnector",
        "body": "self.outerRequiredRole_RequiredDelegationConnector.requiringEntity_RequiredRole=self.parentStructure__Connector",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "pcm::core::composition::RequiredDelegationConnector::outerRequiredRole_RequiredDelegationConnector",
          "pcm::repository::RequiredRole::requiringEntity_RequiredRole",
          "pcm::core::composition::Connector::parentStructure__Connector"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "RequiredDelegationConnectorandtheconnectedComponentmustbepartofthesamecompositestructure",
        "body": "self.parentStructure__Connector = self.assemblyContext_RequiredDelegationConnector.parentStructure__AssemblyContext",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "pcm::core::composition::AssemblyContext::parentStructure__AssemblyContext",
          "pcm::core::composition::RequiredDelegationConnector::assemblyContext_RequiredDelegationConnector",
          "pcm::core::composition::Connector::parentStructure__Connector"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "ComponentOfAssemblyContextAndInnerRoleRequiringComponentNeedToBeTheSame",
        "body": "self.innerRequiredRole_RequiredDelegationConnector.requiringEntity_RequiredRole = self.assemblyContext_RequiredDelegationConnector.encapsulatedComponent__AssemblyContext",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::core::composition::AssemblyContext::encapsulatedComponent__AssemblyContext",
          "pcm::core::composition::RequiredDelegationConnector::assemblyContext_RequiredDelegationConnector",
          "pcm::repository::RequiredRole::requiringEntity_RequiredRole",
          "pcm::core::composition::RequiredDelegationConnector::innerRequiredRole_RequiredDelegationConnector"
        ]
      }
    ],
    "properties": [
      "assemblyContext_RequiredDelegationConnector",
      "outerRequiredRole_RequiredDelegationConnector",
      "innerRequiredRole_RequiredDelegationConnector"
    ]
  },
  {
    "name": "Start",
    "expressions": [{
      "operations": {"oclIsUndefined": 1},
      "name": "StartHasNoPredecessor",
      "body": "self.predecessor.oclIsUndefined()",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::usagemodel::AbstractUserAction::predecessor"]
    }],
    "properties": []
  },
  {
    "name": "PrimitiveTypeEnum",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AbstractUserAction",
    "expressions": [],
    "properties": [
      "scenarioBehaviour_AbstractUserAction",
      "successor",
      "predecessor"
    ]
  },
  {
    "name": "ReleaseAction",
    "expressions": [],
    "properties": ["passiveResource_ReleaseAction"]
  },
  {
    "name": "AcquireAction",
    "expressions": [{
      "operations": {
        "oclAsType": 1,
        ">=": 1
      },
      "name": "TimeoutValueOfAcquireActionMustNotBeNegative",
      "body": "self.timeoutValue.oclAsType(Real) >= 0.0",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 1,
        "RealLiteralExpImpl": 1,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::seff::AcquireAction::timeoutValue"]
    }],
    "properties": [
      "timeout",
      "timeoutValue",
      "passiveresource_AcquireAction"
    ]
  },
  {
    "name": "SinkRole",
    "expressions": [],
    "properties": [
      "SinkDelegationConnector",
      "SinkDelegationConnector",
      "EventChannelSinkConnector",
      "AssemblyEventConnector",
      "eventGroup__SinkRole"
    ]
  },
  {
    "name": "StartAction",
    "expressions": [{
      "operations": {"oclIsUndefined": 1},
      "name": "StartActionPredecessorMustNotBeDefined",
      "body": "self.predecessor_AbstractAction.oclIsUndefined()",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::seff::AbstractAction::predecessor_AbstractAction"]
    }],
    "properties": []
  },
  {
    "name": "AbstractInternalControlFlowAction",
    "expressions": [],
    "properties": [
      "infrastructureCall__Action",
      "resourceCall__Action",
      "resourceDemand_Action"
    ]
  },
  {
    "name": "SchedulingPolicy",
    "expressions": [],
    "properties": [
      "ProcessingResourceSpecification",
      "resourceRepository__SchedulingPolicy"
    ]
  },
  {
    "name": "PrimitiveDataType",
    "expressions": [],
    "properties": ["type"]
  },
  {
    "name": "OpenWorkload",
    "expressions": [{
      "operations": {
        "<>": 1,
        "not": 1,
        "oclIsUndefined": 1,
        "and": 1
      },
      "name": "InterArrivalTimeInOpenWorkloadNeedsToBeSpecified",
      "body": "not self.interArrivalTime_OpenWorkload.oclIsUndefined() and self.interArrivalTime_OpenWorkload.specification <> ''",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 2,
        "StringLiteralExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "OclInvalid::oclBadProperty",
        "pcm::usagemodel::OpenWorkload::interArrivalTime_OpenWorkload"
      ]
    }],
    "properties": ["interArrivalTime_OpenWorkload"]
  },
  {
    "name": "ResourceCall",
    "expressions": [
      {
        "operations": {"includes": 1},
        "name": "ResourceSignatureBelongsToResourceRequiredRole",
        "body": "self.resourceRequiredRole__ResourceCall.requiredResourceInterface__ResourceRequiredRole.resourceSignatures__ResourceInterface->includes(self.signature__ResourceCall)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::seff::seff_performance::ResourceCall::signature__ResourceCall",
          "pcm::resourcetype::ResourceInterface::resourceSignatures__ResourceInterface",
          "pcm::core::entity::ResourceRequiredRole::requiredResourceInterface__ResourceRequiredRole",
          "pcm::seff::seff_performance::ResourceCall::resourceRequiredRole__ResourceCall"
        ]
      },
      {
        "operations": {
          "eContainer": 1,
          "oclIsKindOf": 1,
          "oclAsSet": 1,
          "includes": 1,
          "oclAsType": 2
        },
        "name": "ResourceRequiredRoleMustBeReferencedByComponent",
        "body": "self.oclAsType(ecore::EObject)->closure(eContainer())->select( entity | entity.oclIsKindOf(pcm::core::entity::ResourceInterfaceRequiringEntity)).oclAsType(pcm::core::entity::ResourceInterfaceRequiringEntity).resourceRequiredRoles__ResourceInterfaceRequiringEntity->includes(self.resourceRequiredRole__ResourceCall)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "OperationCallExpImpl": 6,
          "VariableExpImpl": 6,
          "TypeExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "pcm::core::entity::ResourceInterfaceRequiringEntity::resourceRequiredRoles__ResourceInterfaceRequiringEntity",
          "pcm::seff::seff_performance::ResourceCall::resourceRequiredRole__ResourceCall"
        ]
      },
      {
        "operations": {
          "size": 1,
          "and": 1,
          "=": 3
        },
        "name": "SignatureRoleCombinationMustBeUniqueWithinAbstractInternalControlFlowAction",
        "body": "self.action__ResourceCall.resourceCall__Action->select(call | call.resourceRequiredRole__ResourceCall=self.resourceRequiredRole__ResourceCall and call.signature__ResourceCall=self.signature__ResourceCall)->size() = 1",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 5,
          "VariableExpImpl": 5,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "pcm::seff::seff_performance::ResourceCall::action__ResourceCall",
          "pcm::seff::seff_performance::ResourceCall::signature__ResourceCall",
          "pcm::seff::seff_performance::ResourceCall::resourceRequiredRole__ResourceCall",
          "pcm::seff::AbstractInternalControlFlowAction::resourceCall__Action"
        ]
      }
    ],
    "properties": [
      "numberOfCalls__ResourceCall",
      "action__ResourceCall",
      "signature__ResourceCall",
      "resourceRequiredRole__ResourceCall"
    ]
  },
  {
    "name": "SoftwareInducedFailureType",
    "expressions": [],
    "properties": ["internalFailureOccurrenceDescriptions__SoftwareInducedFailureType"]
  },
  {
    "name": "BranchAction",
    "expressions": [
      {
        "operations": {
          "oclIsTypeOf": 3,
          "and": 1,
          "sum": 2,
          "<": 1,
          "oclAsType": 2,
          ">": 1
        },
        "name": "AllProbabilisticBranchProbabilitiesMustSumUpTo1",
        "body": "if self.branches_Branch->forAll(oclIsTypeOf(ProbabilisticBranchTransition)) then \r\n\tself.branches_Branch->select(pbt|pbt.oclIsTypeOf(ProbabilisticBranchTransition))->collect(pbt|pbt.oclAsType(ProbabilisticBranchTransition).branchProbability)->sum() > 0.9999 \r\n\tand self.branches_Branch->select(pbt|pbt.oclIsTypeOf(ProbabilisticBranchTransition))->collect(pbt|pbt.oclAsType(ProbabilisticBranchTransition).branchProbability)->sum() < 1.0001 \r\n\telse true \r\nendif",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 5,
          "OperationCallExpImpl": 10,
          "VariableExpImpl": 8,
          "RealLiteralExpImpl": 2,
          "TypeExpImpl": 5,
          "IfExpImpl": 1,
          "PropertyCallExpImpl": 5,
          "BooleanLiteralExpImpl": 1
        },
        "properties": [
          "pcm::seff::ProbabilisticBranchTransition::branchProbability",
          "pcm::seff::BranchAction::branches_Branch"
        ]
      },
      {
        "operations": {
          "or": 1,
          "oclIsTypeOf": 2
        },
        "name": "EitherGuardedBranchesOrProbabilisiticBranchTransitions",
        "body": "self.branches_Branch->forAll(bt|bt.oclIsTypeOf(ProbabilisticBranchTransition)) \r\nor self.branches_Branch->forAll(bt|bt.oclIsTypeOf(GuardedBranchTransition))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 4,
          "TypeExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": ["pcm::seff::BranchAction::branches_Branch"]
      }
    ],
    "properties": ["branches_Branch"]
  },
  {
    "name": "LoopAction",
    "expressions": [],
    "properties": ["iterationCount_LoopAction"]
  },
  {
    "name": "System",
    "expressions": [{
      "operations": {
        "not": 1,
        "isEmpty": 1
      },
      "name": "SystemMustHaveAtLeastOneProvidedRole",
      "body": "not self.providedRoles_InterfaceProvidingEntity->isEmpty()",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 2,
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::core::entity::InterfaceProvidingEntity::providedRoles_InterfaceProvidingEntity"]
    }],
    "properties": [
      "qosAnnotations_System",
      "Allocation"
    ]
  },
  {
    "name": "CompositeComponent",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ResourceInterfaceProvidingRequiringEntity",
    "expressions": [],
    "properties": []
  },
  {
    "name": "UsageModel",
    "expressions": [],
    "properties": [
      "usageScenario_UsageModel",
      "userData_UsageModel"
    ]
  },
  {
    "name": "AllocationContext",
    "expressions": [{
      "operations": {
        "not": 2,
        "oclIsUndefined": 2,
        "xor": 1
      },
      "name": "OneAssemblyContextOrOneEventChannelShouldBeReferred",
      "body": "not(self.assemblyContext_AllocationContext.oclIsUndefined()) xor not(self.eventChannel__AllocationContext.oclIsUndefined())",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 5,
        "VariableExpImpl": 2,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "pcm::allocation::AllocationContext::assemblyContext_AllocationContext",
        "pcm::allocation::AllocationContext::eventChannel__AllocationContext"
      ]
    }],
    "properties": [
      "resourceContainer_AllocationContext",
      "allocation_AllocationContext",
      "assemblyContext_AllocationContext",
      "eventChannel__AllocationContext"
    ]
  },
  {
    "name": "ProvidedRole",
    "expressions": [],
    "properties": ["providingEntity_ProvidedRole"]
  },
  {
    "name": "CallReturnAction",
    "expressions": [],
    "properties": ["returnVariableUsage__CallReturnAction"]
  },
  {
    "name": "RequiredResourceDelegationConnector",
    "expressions": [],
    "properties": [
      "outerRequiredRole__RequiredResourceDelegationConnector",
      "innerRequiredRole__RequiredResourceDelegationConnector",
      "assemblyContext__RequiredResourceDelegationConnector"
    ]
  },
  {
    "name": "EventChannel",
    "expressions": [],
    "properties": [
      "eventChannelSinkConnector__EventChannel",
      "eventGroup__EventChannel",
      "AllocationContext",
      "eventChannelSourceConnector__EventChannel",
      "parentStructure__EventChannel"
    ]
  },
  {
    "name": "ProcessingResourceSpecification",
    "expressions": [],
    "properties": [
      "schedulingPolicy",
      "requiredByContainer",
      "MTTR",
      "activeResourceType_ActiveResourceSpecification",
      "processingRate_ProcessingResourceSpecification",
      "MTTF",
      "numberOfReplicas",
      "resourceContainer_ProcessingResourceSpecification"
    ]
  },
  {
    "name": "RequiredInfrastructureDelegationConnector",
    "expressions": [],
    "properties": [
      "outerRequiredRole__RequiredInfrastructureDelegationConnector",
      "assemblyContext__RequiredInfrastructureDelegationConnector",
      "innerRequiredRole__RequiredInfrastructureDelegationConnector"
    ]
  },
  {
    "name": "StopAction",
    "expressions": [{
      "operations": {"oclIsUndefined": 1},
      "name": "StopActionSuccessorMustNotBeDefined",
      "body": "self.successor_AbstractAction.oclIsUndefined()",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::seff::AbstractAction::successor_AbstractAction"]
    }],
    "properties": []
  },
  {
    "name": "GuardedBranchTransition",
    "expressions": [],
    "properties": ["branchCondition_GuardedBranchTransition"]
  },
  {
    "name": "ResourceInterfaceProvidingEntity",
    "expressions": [],
    "properties": ["resourceProvidedRoles__ResourceInterfaceProvidingEntity"]
  },
  {
    "name": "RepositoryComponent",
    "expressions": [],
    "properties": [
      "repository__RepositoryComponent",
      "AssemblyContext"
    ]
  },
  {
    "name": "ParametricResourceDemand",
    "expressions": [{
      "operations": {
        "size": 1,
        "=": 2
      },
      "name": "DemandedProcessingResourceMustBeUniqueWithinAbstractInternalControlFlowAction",
      "body": "self.action_ParametricResourceDemand.resourceDemand_Action->select(prd | prd.requiredResource_ParametricResourceDemand=self.requiredResource_ParametricResourceDemand)->size() = 1",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 3,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 4
      },
      "properties": [
        "pcm::seff::seff_performance::ParametricResourceDemand::action_ParametricResourceDemand",
        "pcm::seff::seff_performance::ParametricResourceDemand::requiredResource_ParametricResourceDemand",
        "pcm::seff::AbstractInternalControlFlowAction::resourceDemand_Action"
      ]
    }],
    "properties": [
      "action_ParametricResourceDemand",
      "specification_ParametericResourceDemand",
      "requiredResource_ParametricResourceDemand"
    ]
  },
  {
    "name": "CollectionDataType",
    "expressions": [],
    "properties": ["innerType_CollectionDataType"]
  },
  {
    "name": "InfrastructureCall",
    "expressions": [
      {
        "operations": {
          "eContainer": 1,
          "oclIsKindOf": 1,
          "oclAsSet": 1,
          "includes": 1,
          "oclAsType": 2
        },
        "name": "ReferencedRequiredRoleMustBeRequiredByComponent",
        "body": "self.oclAsType(ecore::EObject)->closure(eContainer())->select( entity | entity.oclIsKindOf(pcm::core::entity::InterfaceRequiringEntity)).oclAsType(pcm::core::entity::InterfaceRequiringEntity).requiredRoles_InterfaceRequiringEntity->includes(self.requiredRole__InfrastructureCall)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "VariableExpImpl": 6,
          "OperationCallExpImpl": 6,
          "TypeExpImpl": 3,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "pcm::seff::seff_performance::InfrastructureCall::requiredRole__InfrastructureCall",
          "pcm::core::entity::InterfaceRequiringEntity::requiredRoles_InterfaceRequiringEntity"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "SignatureMustBelongToUsedRequiredRole",
        "body": "signature__InfrastructureCall.infrastructureInterface__InfrastructureSignature = requiredRole__InfrastructureCall.requiredInterface__InfrastructureRequiredRole",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::seff::seff_performance::InfrastructureCall::requiredRole__InfrastructureCall",
          "pcm::repository::InfrastructureRequiredRole::requiredInterface__InfrastructureRequiredRole",
          "pcm::repository::InfrastructureSignature::infrastructureInterface__InfrastructureSignature",
          "pcm::seff::seff_performance::InfrastructureCall::signature__InfrastructureCall"
        ]
      },
      {
        "operations": {
          "size": 1,
          "and": 1,
          "=": 3
        },
        "name": "SignatureRoleCombinationMustBeUniqueWithinAbstractInternalControlFlowAction",
        "body": "self.action__InfrastructureCall.infrastructureCall__Action->select(call | call.requiredRole__InfrastructureCall = self.requiredRole__InfrastructureCall and call.signature__InfrastructureCall=self.signature__InfrastructureCall)->size() = 1",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 5,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "pcm::seff::seff_performance::InfrastructureCall::requiredRole__InfrastructureCall",
          "pcm::seff::seff_performance::InfrastructureCall::signature__InfrastructureCall",
          "pcm::seff::seff_performance::InfrastructureCall::action__InfrastructureCall",
          "pcm::seff::AbstractInternalControlFlowAction::infrastructureCall__Action"
        ]
      }
    ],
    "properties": [
      "requiredRole__InfrastructureCall",
      "signature__InfrastructureCall",
      "action__InfrastructureCall",
      "numberOfCalls__InfrastructureCall"
    ]
  },
  {
    "name": "InternalFailureOccurrenceDescription",
    "expressions": [{
      "operations": {
        "not": 1,
        "oclIsTypeOf": 1
      },
      "name": "NoResourceTimeoutFailureAllowedForInternalFailureOccurrenceDescription",
      "body": "not self.softwareInducedFailureType__InternalFailureOccurrenceDescription.oclIsTypeOf(ResourceTimeoutFailureType)",
      "type": "OperationImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 2,
        "TypeExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::reliability::InternalFailureOccurrenceDescription::softwareInducedFailureType__InternalFailureOccurrenceDescription"]
    }],
    "properties": [
      "softwareInducedFailureType__InternalFailureOccurrenceDescription",
      "internalAction__InternalFailureOccurrenceDescription"
    ]
  },
  {
    "name": "CommunicationLinkResourceSpecification",
    "expressions": [],
    "properties": [
      "throughput_CommunicationLinkResourceSpecification",
      "failureProbability",
      "linkingResource_CommunicationLinkResourceSpecification",
      "communicationLinkResourceType_CommunicationLinkResourceSpecification",
      "latency_CommunicationLinkResourceSpecification"
    ]
  },
  {
    "name": "SourceDelegationConnector",
    "expressions": [],
    "properties": [
      "outerSourceRole__SourceRole",
      "innerSourceRole__SourceRole",
      "assemblyContext__SourceDelegationConnector"
    ]
  },
  {
    "name": "SystemSpecifiedExecutionTime",
    "expressions": [{
      "operations": {
        "oclIsTypeOf": 2,
        "and": 1,
        "oclAsType": 1
      },
      "name": "SystemSpecifiedExecutionTimeMustReferenceRequiredRoleOfASystem",
      "body": "(self.role_SpecifiedQoSAnnotation.oclIsTypeOf(pcm::repository::OperationRequiredRole)) and (self.role_SpecifiedQoSAnnotation.oclAsType(pcm::repository::OperationRequiredRole).requiringEntity_RequiredRole.oclIsTypeOf(pcm::system::System))\r\n",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 2,
        "TypeExpImpl": 3,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "pcm::qosannotations::SpecifiedQoSAnnotation::role_SpecifiedQoSAnnotation",
        "pcm::repository::RequiredRole::requiringEntity_RequiredRole"
      ]
    }],
    "properties": []
  },
  {
    "name": "AbstractBranchTransition",
    "expressions": [],
    "properties": [
      "branchBehaviour_BranchTransition",
      "branchAction_AbstractBranchTransition"
    ]
  },
  {
    "name": "UsageScenario",
    "expressions": [],
    "properties": [
      "usageModel_UsageScenario",
      "scenarioBehaviour_UsageScenario",
      "workload_UsageScenario"
    ]
  },
  {
    "name": "Workload",
    "expressions": [],
    "properties": ["usageScenario_Workload"]
  },
  {
    "name": "RecoveryActionBehaviour",
    "expressions": [
      {
        "operations": {
          "not": 1,
          "includes": 1
        },
        "name": "RecoveryActionBehaviourIsNotSuccessorOfItself",
        "body": "not self.failureHandlingAlternatives__RecoveryActionBehaviour->includes(self)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 2,
          "PropertyCallExpImpl": 1
        },
        "properties": ["pcm::seff::seff_reliability::RecoveryActionBehaviour::failureHandlingAlternatives__RecoveryActionBehaviour"]
      },
      {
        "operations": {
          "<>": 1,
          "not": 1,
          "and": 2,
          "includes": 2
        },
        "name": "RecoveryActionBehaviourHasOnlyOnePredecessor",
        "body": "not self.recoveryAction__RecoveryActionBehaviour.recoveryActionBehaviours__RecoveryAction->\r\n\texists(x,y:RecoveryActionBehaviour | x<>y\r\n\t\tand x.failureHandlingAlternatives__RecoveryActionBehaviour->includes(self)\r\n\t\tand y.failureHandlingAlternatives__RecoveryActionBehaviour->includes(self))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 7,
          "OperationCallExpImpl": 6,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::seff::seff_reliability::RecoveryActionBehaviour::failureHandlingAlternatives__RecoveryActionBehaviour",
          "pcm::seff::seff_reliability::RecoveryAction::recoveryActionBehaviours__RecoveryAction",
          "pcm::seff::seff_reliability::RecoveryActionBehaviour::recoveryAction__RecoveryActionBehaviour"
        ]
      },
      {
        "operations": {
          "<>": 1,
          "not": 1,
          "and": 1,
          "includes": 1
        },
        "name": "SuccessorsOfRecoveryActionBehaviourHandleDisjointFailureTypes",
        "body": "not self.failureHandlingAlternatives__RecoveryActionBehaviour->\r\n\texists(x,y:RecoveryActionBehaviour | x<>y and\r\n\tx.failureTypes_FailureHandlingEntity->\r\n\t\texists(f:pcm::reliability::FailureType |\r\n\t\ty.failureTypes_FailureHandlingEntity->includes(f)))",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 6,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "pcm::seff::seff_reliability::FailureHandlingEntity::failureTypes_FailureHandlingEntity",
          "pcm::seff::seff_reliability::RecoveryActionBehaviour::failureHandlingAlternatives__RecoveryActionBehaviour"
        ]
      }
    ],
    "properties": [
      "RecoveryActionBehaviour",
      "failureHandlingAlternatives__RecoveryActionBehaviour",
      "recoveryAction__RecoveryActionBehaviour",
      "RecoveryAction"
    ]
  },
  {
    "name": "ComponentType",
    "expressions": [],
    "properties": []
  },
  {
    "name": "AssemblyInfrastructureConnector",
    "expressions": [],
    "properties": [
      "requiringAssemblyContext__AssemblyInfrastructureConnector",
      "providedRole__AssemblyInfrastructureConnector",
      "providingAssemblyContext__AssemblyInfrastructureConnector",
      "requiredRole__AssemblyInfrastructureConnector"
    ]
  },
  {
    "name": "Stop",
    "expressions": [{
      "operations": {"oclIsUndefined": 1},
      "name": "StopHasNoSuccessor",
      "body": "self.successor.oclIsUndefined()",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 1,
        "VariableExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::usagemodel::AbstractUserAction::successor"]
    }],
    "properties": []
  },
  {
    "name": "AbstractAction",
    "expressions": [],
    "properties": [
      "predecessor_AbstractAction",
      "resourceDemandingBehaviour_AbstractAction",
      "successor_AbstractAction"
    ]
  },
  {
    "name": "AssemblyEventConnector",
    "expressions": [],
    "properties": [
      "sinkRole__AssemblyEventConnector",
      "filterCondition__AssemblyEventConnector",
      "sourceRole__AssemblyEventConnector",
      "sourceAssemblyContext__AssemblyEventConnector",
      "sinkAssemblyContext__AssemblyEventConnector"
    ]
  },
  {
    "name": "AssemblyConnector",
    "expressions": [
      {
        "operations": {"includes": 1},
        "name": "AssemblyConnectorsReferencedRequiredRoleAndChildContextMustMatch",
        "body": "self.requiringAssemblyContext_AssemblyConnector.encapsulatedComponent__AssemblyContext.requiredRoles_InterfaceRequiringEntity->includes(self.requiredRole_AssemblyConnector)\r\n\r\n",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::core::composition::AssemblyContext::encapsulatedComponent__AssemblyContext",
          "pcm::core::composition::AssemblyConnector::requiringAssemblyContext_AssemblyConnector",
          "pcm::core::entity::InterfaceRequiringEntity::requiredRoles_InterfaceRequiringEntity",
          "pcm::core::composition::AssemblyConnector::requiredRole_AssemblyConnector"
        ]
      },
      {
        "operations": {"includes": 1},
        "name": "AssemblyConnectorsReferencedProvidedRolesAndChildContextMustMatch",
        "body": "self.providingAssemblyContext_AssemblyConnector.encapsulatedComponent__AssemblyContext.providedRoles_InterfaceProvidingEntity->includes(self.providedRole_AssemblyConnector)\r\n\r\n",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::core::composition::AssemblyContext::encapsulatedComponent__AssemblyContext",
          "pcm::core::composition::AssemblyConnector::providingAssemblyContext_AssemblyConnector",
          "pcm::core::composition::AssemblyConnector::providedRole_AssemblyConnector",
          "pcm::core::entity::InterfaceProvidingEntity::providedRoles_InterfaceProvidingEntity"
        ]
      },
      {
        "operations": {"=": 1},
        "name": "AssemblyConnectorsReferencedInterfacesMustMatch",
        "body": "self.providedRole_AssemblyConnector.providedInterface__OperationProvidedRole = self.requiredRole_AssemblyConnector.requiredInterface__OperationRequiredRole",
        "type": "OperationImpl",
        "constructs": {
          "OperationCallExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::repository::OperationProvidedRole::providedInterface__OperationProvidedRole",
          "pcm::core::composition::AssemblyConnector::providedRole_AssemblyConnector",
          "pcm::repository::OperationRequiredRole::requiredInterface__OperationRequiredRole",
          "pcm::core::composition::AssemblyConnector::requiredRole_AssemblyConnector"
        ]
      }
    ],
    "properties": [
      "requiringAssemblyContext_AssemblyConnector",
      "providingAssemblyContext_AssemblyConnector",
      "providedRole_AssemblyConnector",
      "requiredRole_AssemblyConnector"
    ]
  },
  {
    "name": "InternalCallAction",
    "expressions": [],
    "properties": ["calledResourceDemandingInternalBehaviour"]
  },
  {
    "name": "EntryLevelSystemCall",
    "expressions": [
      {
        "operations": {"oclIsTypeOf": 1},
        "name": "EntryLevelSystemCallMustReferenceProvidedRoleOfASystem",
        "body": "self.providedRole_EntryLevelSystemCall.providingEntity_ProvidedRole.oclIsTypeOf(pcm::system::System)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "pcm::usagemodel::EntryLevelSystemCall::providedRole_EntryLevelSystemCall",
          "pcm::repository::ProvidedRole::providingEntity_ProvidedRole"
        ]
      },
      {
        "operations": {"includes": 1},
        "name": "EntryLevelSystemCallSignatureMustMatchItsProvidedRole",
        "body": "self.providedRole_EntryLevelSystemCall.providedInterface__OperationProvidedRole.signatures__OperationInterface->includes(self.operationSignature__EntryLevelSystemCall)",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "pcm::usagemodel::EntryLevelSystemCall::operationSignature__EntryLevelSystemCall",
          "pcm::repository::OperationInterface::signatures__OperationInterface",
          "pcm::usagemodel::EntryLevelSystemCall::providedRole_EntryLevelSystemCall",
          "pcm::repository::OperationProvidedRole::providedInterface__OperationProvidedRole"
        ]
      }
    ],
    "properties": [
      "operationSignature__EntryLevelSystemCall",
      "outputParameterUsages_EntryLevelSystemCall",
      "providedRole_EntryLevelSystemCall",
      "inputParameterUsages_EntryLevelSystemCall",
      "priority"
    ]
  },
  {
    "name": "SinkDelegationConnector",
    "expressions": [],
    "properties": [
      "outerSinkRole__SinkRole",
      "assemblyContext__SinkDelegationConnector",
      "innerSinkRole__SinkRole"
    ]
  },
  {
    "name": "Interface",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "NoProtocolTypeIDUsedTwice",
      "body": "self.protocols__Interface->forAll(p1, p2 |\r\np1.protocolTypeID <> p2.protocolTypeID)\r\n",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 1,
        "VariableExpImpl": 3,
        "OperationCallExpImpl": 1,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "pcm::repository::Interface::protocols__Interface",
        "pcm::protocol::Protocol::protocolTypeID"
      ]
    }],
    "properties": [
      "requiredCharacterisations",
      "parentInterfaces__Interface",
      "protocols__Interface",
      "repository__Interface",
      "Interface"
    ]
  },
  {
    "name": "ResourceEnvironment",
    "expressions": [],
    "properties": [
      "linkingResources__ResourceEnvironment",
      "Allocation",
      "resourceContainer_ResourceEnvironment"
    ]
  },
  {
    "name": "ResourceRepository",
    "expressions": [],
    "properties": [
      "schedulingPolicies__ResourceRepository",
      "availableResourceTypes_ResourceRepository",
      "resourceInterfaces__ResourceRepository"
    ]
  },
  {
    "name": "ResourceSignature",
    "expressions": [],
    "properties": [
      "resourceServiceId",
      "ResourceCall",
      "parameter__ResourceSignature",
      "resourceInterface__ResourceSignature"
    ]
  },
  {
    "name": "ProbabilisticBranchTransition",
    "expressions": [],
    "properties": ["branchProbability"]
  },
  {
    "name": "ProcessingResourceType",
    "expressions": [],
    "properties": [
      "hardwareInducedFailureType__ProcessingResourceType",
      "ProcessingResourceSpecification",
      "ParametricResourceDemand"
    ]
  },
  {
    "name": "SetVariableAction",
    "expressions": [],
    "properties": ["localVariableUsages_SetVariableAction"]
  },
  {
    "name": "BranchTransition",
    "expressions": [],
    "properties": [
      "branchProbability",
      "branchedBehaviour_BranchTransition",
      "branch_BranchTransition"
    ]
  },
  {
    "name": "NetworkInducedFailureType",
    "expressions": [{
      "operations": {"<>": 1},
      "name": "NetworkInducedFailureTypeHasCommunicationLinkResourceType",
      "body": "self.communicationLinkResourceType__NetworkInducedFailureType <> null",
      "type": "ConstraintImpl",
      "constructs": {
        "VariableExpImpl": 1,
        "OperationCallExpImpl": 1,
        "NullLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["pcm::reliability::NetworkInducedFailureType::communicationLinkResourceType__NetworkInducedFailureType"]
    }],
    "properties": ["communicationLinkResourceType__NetworkInducedFailureType"]
  },
  {
    "name": "ForkedBehaviour",
    "expressions": [],
    "properties": [
      "synchronisationPoint_ForkedBehaviour",
      "forkAction_ForkedBehaivour"
    ]
  },
  {
    "name": "InternalAction",
    "expressions": [
      {
        "operations": {
          "<=": 1,
          "sum": 1,
          "oclAsType": 1
        },
        "name": "SumOfInternalActionFailureProbabilitiesMustNotExceed1",
        "body": "self.internalFailureOccurrenceDescriptions__InternalAction.failureProbability.oclAsType(Real)->sum()<=1.0\r\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "VariableExpImpl": 3,
          "OperationCallExpImpl": 3,
          "RealLiteralExpImpl": 1,
          "TypeExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "pcm::seff::InternalAction::internalFailureOccurrenceDescriptions__InternalAction",
          "pcm::reliability::FailureOccurrenceDescription::failureProbability"
        ]
      },
      {
        "operations": {
          "<>": 2,
          "implies": 1
        },
        "name": "MultipleInternalOccurrenceDescriptionsPerFailureTypeNotAllowed",
        "body": "self.internalFailureOccurrenceDescriptions__InternalAction->forAll(x:pcm::reliability::InternalFailureOccurrenceDescription,y:pcm::reliability::InternalFailureOccurrenceDescription  | x<>y implies x.softwareInducedFailureType__InternalFailureOccurrenceDescription <> y.softwareInducedFailureType__InternalFailureOccurrenceDescription )\r\n",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 5,
          "OperationCallExpImpl": 3,
          "PropertyCallExpImpl": 3
        },
        "properties": [
          "pcm::reliability::InternalFailureOccurrenceDescription::softwareInducedFailureType__InternalFailureOccurrenceDescription",
          "pcm::seff::InternalAction::internalFailureOccurrenceDescriptions__InternalAction"
        ]
      }
    ],
    "properties": ["internalFailureOccurrenceDescriptions__InternalAction"]
  },
  {
    "name": "InfrastructureInterface",
    "expressions": [],
    "properties": [
      "InfrastructureRequiredRole",
      "InfrastructureProvidedRole",
      "infrastructureSignatures__InfrastructureInterface"
    ]
  },
  {
    "name": "CommunicationLinkResourceType",
    "expressions": [],
    "properties": [
      "networkInducedFailureType__CommunicationLinkResourceType",
      "CommunicationLinkResourceSpecification"
    ]
  },
  {
    "name": "Protocol",
    "expressions": [],
    "properties": [
      "Interface",
      "protocolTypeID"
    ]
  },
  {
    "name": "ResourceDemandingSEFF",
    "expressions": [],
    "properties": ["resourceDemandingInternalBehaviours"]
  },
  {
    "name": "EventChannelSourceConnector",
    "expressions": [],
    "properties": [
      "assemblyContext__EventChannelSourceConnector",
      "sourceRole__EventChannelSourceRole",
      "eventChannel__EventChannelSourceConnector"
    ]
  },
  {
    "name": "Entity",
    "expressions": [],
    "properties": []
  },
  {
    "name": "ComposedProvidingRequiringEntity",
    "expressions": [{
      "operations": {
        "oclIsTypeOf": 1,
        "oclAsType": 1,
        "=": 1
      },
      "name": "ProvidedRolesMustBeBound",
      "body": "self.providedRoles_InterfaceProvidingEntity->forAll(role|self.connectors__ComposedStructure->select(conn | conn.oclIsTypeOf(pcm::core::composition::ProvidedDelegationConnector)).oclAsType(pcm::core::composition::ProvidedDelegationConnector)->exists(connector|connector.outerProvidedRole_ProvidedDelegationConnector = role))\r\n\r\n",
      "type": "OperationImpl",
      "constructs": {
        "IteratorExpImpl": 4,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 6,
        "TypeExpImpl": 2,
        "PropertyCallExpImpl": 3
      },
      "properties": [
        "pcm::core::composition::ProvidedDelegationConnector::outerProvidedRole_ProvidedDelegationConnector",
        "pcm::core::composition::ComposedStructure::connectors__ComposedStructure",
        "pcm::core::entity::InterfaceProvidingEntity::providedRoles_InterfaceProvidingEntity"
      ]
    }],
    "properties": []
  }
]
