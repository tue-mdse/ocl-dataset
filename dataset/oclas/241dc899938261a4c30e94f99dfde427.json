[
  {
    "name": "Pipe",
    "expressions": [],
    "properties": [
      "RSSModel",
      "id",
      "target",
      "src"
    ]
  },
  {
    "name": "Sort",
    "expressions": [],
    "properties": [
      "orderDirection",
      "orderType"
    ]
  },
  {
    "name": "Source",
    "expressions": [
      {
        "operations": {
          "=": 1,
          "substring": 1
        },
        "name": "S3",
        "body": "let s : String = self.url.substring(1, 7) in s = 'http://'",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 2,
          "LetExpImpl": 1,
          "IntegerLiteralExpImpl": 2,
          "StringLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rss::Source::url"]
      },
      {
        "operations": {
          "size": 1,
          ">": 1
        },
        "name": "S2",
        "body": "self.url.size() > 0",
        "type": "ConstraintImpl",
        "constructs": {
          "OperationCallExpImpl": 2,
          "VariableExpImpl": 1,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rss::Source::url"]
      },
      {
        "operations": {
          "size": 1,
          ">": 1
        },
        "name": "S1",
        "body": "self.name.size() > 0",
        "type": "ConstraintImpl",
        "constructs": {
          "VariableExpImpl": 1,
          "OperationCallExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 1
        },
        "properties": ["rss::Source::name"]
      }
    ],
    "properties": [
      "output",
      "url",
      "RSSModel",
      "name"
    ]
  },
  {
    "name": "PresentationCell",
    "expressions": [],
    "properties": [
      "Layout",
      "inputs",
      "row",
      "column",
      "theme"
    ]
  },
  {
    "name": "Layout",
    "expressions": [
      {
        "operations": {
          "<=": 1,
          "and": 1,
          "oclAsSet": 1,
          ">": 1
        },
        "name": "L2",
        "body": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.column <= self.columns and c.column > 0)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 5,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "rss::PresentationCell::column",
          "rss::Layout::columns",
          "rss::Layout::cells"
        ]
      },
      {
        "operations": {
          "<=": 1,
          "and": 1,
          "oclAsSet": 1,
          ">": 1
        },
        "name": "L1",
        "body": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | c.row <= self.rows and c.row > 0)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 2,
          "OperationCallExpImpl": 4,
          "VariableExpImpl": 5,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 4
        },
        "properties": [
          "rss::PresentationCell::row",
          "rss::Layout::cells",
          "rss::Layout::rows"
        ]
      },
      {
        "operations": {
          "size": 1,
          "and": 1,
          "oclAsSet": 2,
          "=": 3
        },
        "name": "L3",
        "body": "self.oclAsSet()->collect(cells)->forAll(c : PresentationCell | self.oclAsSet()->collect(cells)->select(pc : PresentationCell | (pc.row = c.row and pc.column = c.column))->size() = 1)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 4,
          "VariableExpImpl": 8,
          "OperationCallExpImpl": 7,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "rss::PresentationCell::column",
          "rss::PresentationCell::row",
          "rss::Layout::cells"
        ]
      }
    ],
    "properties": [
      "theme",
      "columns",
      "RSSModel",
      "cells",
      "rows"
    ]
  },
  {
    "name": "Filter",
    "expressions": [{
      "operations": {
        "size": 1,
        "oclAsSet": 1,
        ">": 1
      },
      "name": "F1",
      "body": "self.oclAsSet()->collect(text)->forAll(c : String | c.size() > 0)",
      "type": "ConstraintImpl",
      "constructs": {
        "IteratorExpImpl": 2,
        "OperationCallExpImpl": 3,
        "VariableExpImpl": 3,
        "IntegerLiteralExpImpl": 1,
        "PropertyCallExpImpl": 1
      },
      "properties": ["rss::Filter::text"]
    }],
    "properties": [
      "toDate",
      "fromDate",
      "text"
    ]
  },
  {
    "name": "OutTerminal",
    "expressions": [],
    "properties": [
      "Pipe",
      "id",
      "Block",
      "Source"
    ]
  },
  {
    "name": "Block",
    "expressions": [],
    "properties": [
      "RSSModel",
      "inputs",
      "output"
    ]
  },
  {
    "name": "InTerminal",
    "expressions": [],
    "properties": [
      "id",
      "Pipe",
      "PresentationCell",
      "Block"
    ]
  },
  {
    "name": "RSSModel",
    "expressions": [],
    "properties": [
      "blocks",
      "presentation",
      "pipes",
      "sources"
    ]
  }
]
