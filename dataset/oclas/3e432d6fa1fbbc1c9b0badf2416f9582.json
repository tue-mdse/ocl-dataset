[
  {
    "name": "Application",
    "expressions": [
      {
        "operations": {
          "implies": 1,
          "=": 2
        },
        "name": "emptyPort",
        "body": "\n\t\t\tself.microservices->forAll(m:Microservice | m.port = 0) implies self.microservices.port = self.microservices.imagePort",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 3,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 6,
          "IntegerLiteralExpImpl": 1,
          "PropertyCallExpImpl": 6
        },
        "properties": [
          "microservices::Application::microservices",
          "microservices::Microservice::port",
          "microservices::Microservice::imagePort"
        ]
      },
      {
        "operations": {},
        "name": "samePort",
        "body": "\n\t\t\tself.microservices->isUnique(m:Microservice | m.port)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "microservices::Application::microservices",
          "microservices::Microservice::port"
        ]
      },
      {
        "operations": {},
        "name": "sameName",
        "body": "\n\t\t\tself.microservices->isUnique(m:Microservice | m.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "microservices::Application::microservices",
          "microservices::Microservice::name"
        ]
      }
    ],
    "properties": [
      "groups",
      "connections",
      "name",
      "microservices"
    ]
  },
  {
    "name": "Group",
    "expressions": [],
    "properties": [
      "Application",
      "microservices",
      "name"
    ]
  },
  {
    "name": "Microservice",
    "expressions": [
      {
        "operations": {
          "<=": 1,
          "size": 1,
          "=": 1
        },
        "name": "dosExternal",
        "body": "\n\t\t\tself.toConnection ->select(type = ConnectionType::EXTERNAL)->size()<=1",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "OperationCallExpImpl": 3,
          "VariableExpImpl": 2,
          "IntegerLiteralExpImpl": 1,
          "EnumLiteralExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "microservices::Microservice::toConnection",
          "microservices::Connection::type"
        ]
      },
      {
        "operations": {"oclAsSet": 1},
        "name": "sameName",
        "body": "\n\t\t\tself.group->isUnique(g:Group | g.name)",
        "type": "ConstraintImpl",
        "constructs": {
          "IteratorExpImpl": 1,
          "VariableExpImpl": 2,
          "OperationCallExpImpl": 1,
          "PropertyCallExpImpl": 2
        },
        "properties": [
          "microservices::Group::name",
          "microservices::Microservice::group"
        ]
      }
    ],
    "properties": [
      "Application",
      "toConnection",
      "image",
      "fromConnection",
      "name",
      "port",
      "imagePort",
      "group"
    ]
  },
  {
    "name": "Connection",
    "expressions": [{
      "operations": {
        "oclAsSet": 1,
        "isEmpty": 1,
        "implies": 1,
        "=": 1
      },
      "name": "external",
      "body": "\n\t\t\ttype = ConnectionType::EXTERNAL implies toMicroservice->isEmpty()",
      "type": "ConstraintImpl",
      "constructs": {
        "OperationCallExpImpl": 4,
        "VariableExpImpl": 2,
        "EnumLiteralExpImpl": 1,
        "PropertyCallExpImpl": 2
      },
      "properties": [
        "microservices::Connection::type",
        "microservices::Connection::toMicroservice"
      ]
    }],
    "properties": [
      "fromMicroservice",
      "type",
      "toMicroservice",
      "Application"
    ]
  },
  {
    "name": "ConnectionType",
    "expressions": [],
    "properties": []
  }
]
