<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="wcore" nsURI="http://www.eclipse.org/emf/2002/Wcore" nsPrefix="wcore">
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
    <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
    <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="ProcessContainer" eSuperTypes="../../org.eclipse.emf.ecore/model/Ecore.ecore#//EPackage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="oneMainProcess"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
      <details key="oneMainProcess" value="self.processes->select(p : Process | p.name = 'Main')->size() = 1"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="processes" upperBound="-1"
        eType="#//Process" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Process" eSuperTypes="../../org.eclipse.emf.ecore/model/Ecore.ecore#//ENamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="oneProcessSelectorInMainProcess"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
      <details key="oneProcessSelectorInMainProcess" value="self.name = 'Main' implies containProcessSelectorTask(self.startTask.oclAsType(wcore::Task))"/>
    </eAnnotations>
    <eOperations name="containProcessSelectorTask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="body" value="if (t.oclIsTypeOf(wcore::If)) then containProcessSelectorTask(t.oclAsType(wcore::If)._body.oclAsType(wcore::Task)) else&#xD;&#xA;if (t.oclIsTypeOf(wcore::While)) then containProcessSelectorTask(t.oclAsType(wcore::While)._body.oclAsType(wcore::Task)) else&#xD;&#xA;if (t.oclIsTypeOf(wcore::IfElse)) then containProcessSelectorTask(t.oclAsType(wcore::IfElse)._body.oclAsType(wcore::Task)) and containProcessSelectorTask(t.oclAsType(wcore::IfElse)._elseBody.oclAsType(wcore::Task)) else&#xD;&#xA;if (t.oclIsTypeOf(wcore::Sequence)) then containProcessSelectorTask(t.oclAsType(wcore::Sequence)._body.oclAsType(wcore::Task)) or containProcessSelectorTask(t.oclAsType(wcore::Sequence).follower.oclAsType(wcore::Task)) else&#xD;&#xA;t.oclIsTypeOf(wcore::ProcessSelector) &#xD;&#xA;endif endif endif endif"/>
      </eAnnotations>
      <eParameters name="t" eType="#//Task"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variables" upperBound="-1"
        eType="#//Variable" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="startTask" lowerBound="1"
        eType="#//Task" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="return" upperBound="-1"
        eType="#//Variable" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Task" abstract="true" eSuperTypes="../../org.eclipse.emf.ecore/model/Ecore.ecore#//ENamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="permissions" upperBound="-1"
        eType="#//Permission" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Permission" eSuperTypes="../../org.eclipse.emf.ecore/model/Ecore.ecore#//ENamedElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="permission" lowerBound="1"
        eType="#//Permissions"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Variable" eSuperTypes="../../org.eclipse.emf.ecore/model/Ecore.ecore#//ETypedElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="changeable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="scope" lowerBound="1" eType="#//Scope"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Create" eSuperTypes="#//Task">
    <eStructuralFeatures xsi:type="ecore:EReference" name="eClass" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="return" lowerBound="1"
        eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="anchor" eType="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InvokeOperation" eSuperTypes="#//Task">
    <eStructuralFeatures xsi:type="ecore:EReference" name="context" lowerBound="1"
        eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operation" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EOperation"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
        eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="return" eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="long" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InvokeProcess" eSuperTypes="#//Task">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="conformingArgumentsToParameters"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
      <details key="conformingArgumentsToParameters" value="self.arguments -> size() = self.subProcess.variables -> select(v:wcore::Variable|v.scope.oclAsType(wcore::Scope)=wcore::Scope::GLOBAL) ->size() and&#xD;&#xA;Sequence{1..self.arguments -> size()} -> forAll(i:Integer | let var1:wcore::Variable = self.arguments->at(i), var2:wcore::Variable=self.subProcess.variables->select(v:wcore::Variable|v.scope.oclAsType(wcore::Scope)=wcore::Scope::GLOBAL)->at(i) in var1.oclAsType(wcore::Variable).eType=var2.oclAsType(wcore::Variable).eType)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subProcess" lowerBound="1"
        eType="#//Process"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
        eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="return" upperBound="-1"
        eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="synchronized" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InvokeGUI" eSuperTypes="#//Task">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="MapPageOutput LoginPageOutput LoginPageInput ViewPageOutput EditPage SelectableListPageOutput SelectablePageInput"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
      <details key="MapPageOutput" value="self.page.oclIsTypeOf(gcore::MapPage) implies self.outputData -> size() = 2 and self.outputData -> forAll(var:Variable|var.eType=ecore::EDouble)"/>
      <details key="LoginPageOutput" value="self.page.oclIsTypeOf(gcore::LoginPage) implies self.outputData -> size() = 1 and self.outputData -> forAll(var:Variable|var.eType=ecore::EBoolean)"/>
      <details key="LoginPageInput" value="self.page.oclIsTypeOf(gcore::LoginPage) implies self.input -> size() = 2 and self.input -> forAll(var:Variable|var.eType=ecore::EString)"/>
      <details key="ViewPageOutput" value="self.page.oclIsTypeOf(gcore::ViewPage) implies self.outputData -> size() = 1 and self.outputData -> forAll(var:Variable|var.eType.oclIsKindOf(ecore::EObject))"/>
      <details key="EditPage" value="self.page.oclIsTypeOf(gcore::EditPage) implies self.outputData -> size() = 1 and self.input -> size() = 1 and self.input -> forAll(var:Variable|var.eType=self.outputData -> at(1).eType)"/>
      <details key="SelectableListPageOutput" value="self.page.oclIsTypeOf(gcore::SelectableListPage) or self.page.oclIsTypeOf(gcore::ListPage) implies self.outputData -> size() = 1 and self.outputData -> forAll(var:Variable|var.upperBound=-1)"/>
      <details key="SelectablePageInput" value="self.page.oclIsTypeOf(gcore::SelectableListPage) implies self.input -> size() = 1 and self.input -> forAll(var:Variable|var.eType=self.outputData -> at(1).eType and var.upperBound=1)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outputAction" upperBound="-1"
        eType="#//Variable" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outputData" upperBound="-1"
        eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="input" upperBound="-1"
        eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="page" lowerBound="1" eType="ecore:EClass Gcore.ecore#//Page"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="If" eSuperTypes="#//Task">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
        eType="#//Expression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1" eType="#//Task"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IfElse" eSuperTypes="#//If">
    <eStructuralFeatures xsi:type="ecore:EReference" name="elseBody" lowerBound="1"
        eType="#//Task" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="While" eSuperTypes="#//If"/>
  <eClassifiers xsi:type="ecore:EClass" name="Assign" eSuperTypes="#//Task">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhs" lowerBound="1" eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhs" lowerBound="1" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Sequence" eSuperTypes="#//Task">
    <eStructuralFeatures xsi:type="ecore:EReference" name="body" lowerBound="1" eType="#//Task"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="follower" lowerBound="1"
        eType="#//Task" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Expression" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="TerminalExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="refers" lowerBound="1"
        eType="#//Variable"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" lowerBound="1"
        eType="#//UnaryOperators"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rightExpression" lowerBound="1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BinaryExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" lowerBound="1"
        eType="#//BinaryOperators"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="leftExpressions" lowerBound="1"
        eType="#//Expression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rightExpression" lowerBound="1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Delete" eSuperTypes="#//Task">
    <eStructuralFeatures xsi:type="ecore:EReference" name="object" lowerBound="1"
        eType="#//Variable"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Read" eSuperTypes="#//Task">
    <eStructuralFeatures xsi:type="ecore:EReference" name="object" eType="#//Variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="return" lowerBound="1"
        eType="#//Variable"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CrudGui" eSuperTypes="#//Task">
    <eStructuralFeatures xsi:type="ecore:EReference" name="contain" lowerBound="1"
        eType="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="privileges" lowerBound="1"
        eType="#//Privileges"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="anchor" eType="ecore:EClass ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ProcessSelector" eSuperTypes="#//Task">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="oneGUITaskInAllSubProcesses"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
      <details key="oneGUITaskInAllSubProcesses" value="self.oclAsType(wcore::ProcessSelector).processes -> select(proc:wcore::Process|containInvokeGUITask(proc.startTask.oclAsType(wcore::Task))) -> size() = (self.oclAsType(wcore::ProcessSelector).processes -> size())"/>
    </eAnnotations>
    <eOperations name="containInvokeGUITask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL">
        <details key="body" value="if (t.oclIsTypeOf(wcore::If)) then containInvokeGUITask(t.oclAsType(wcore::If)._body.oclAsType(wcore::Task)) else&#xD;&#xA;if (t.oclIsTypeOf(wcore::While)) then containInvokeGUITask(t.oclAsType(wcore::While)._body.oclAsType(wcore::Task)) else&#xD;&#xA;if (t.oclIsTypeOf(wcore::IfElse)) then containInvokeGUITask(t.oclAsType(wcore::IfElse)._body.oclAsType(wcore::Task)) or containInvokeGUITask(t.oclAsType&#xD;&#xD;&#xA;(wcore::IfElse)._elseBody.oclAsType(wcore::Task)) else&#xD;&#xA;if (t.oclIsTypeOf(wcore::Sequence)) then containInvokeGUITask(t.oclAsType(wcore::Sequence)._body.oclAsType(wcore::Task)) or containInvokeGUITask(t.oclAsType&#xD;&#xD;&#xA;(wcore::Sequence).follower.oclAsType(wcore::Task)) else&#xD;&#xA;if (t.oclIsTypeOf(wcore::InvokeProcess)) then containInvokeGUITask(t.oclAsType(wcore::InvokeProcess).subProcess.startTask.oclAsType(wcore::Task)) else&#xD;&#xA;if (t.oclIsTypeOf(wcore::ProcessSelector)) then t.oclAsType(wcore::ProcessSelector).processes -> select(proc:wcore::Process|containInvokeGUITask&#xD;&#xD;&#xA;(proc.startTask.oclAsType(wcore::Task))) -> size() = (t.oclAsType(wcore::ProcessSelector).processes -> size()) else&#xD;&#xA;t.oclIsTypeOf(wcore::InvokeGUI) or t.oclIsTypeOf(wcore::CrudGui)&#xD;&#xA;endif endif endif endif endif endif"/>
      </eAnnotations>
      <eParameters name="t" eType="#//Task"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="page" lowerBound="1" eType="ecore:EClass Gcore.ecore#//Page"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="processes" lowerBound="1"
        upperBound="-1" eType="#//Process"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Permissions">
    <eLiterals name="INTERNET"/>
    <eLiterals name="FILE_SYSTEM" value="1"/>
    <eLiterals name="CALL" value="2"/>
    <eLiterals name="ACCESS_FINE_LOCATION" value="3" literal="ACCESS_FINE_LOCATION"/>
    <eLiterals name="ACCESS_NETWORK_STATE" value="4"/>
    <eLiterals name="CAMERA" value="5" literal="CAMERA"/>
    <eLiterals name="WRITE_CALENDAR" value="6" literal="WRITE_CALENDAR"/>
    <eLiterals name="READ_CALENDAR" value="7" literal="READ_CALENDAR"/>
    <eLiterals name="MICROPHONE" value="8" literal="MICROPHONE"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="UnaryOperators">
    <eLiterals name="NOT"/>
    <eLiterals name="HEAD" value="1"/>
    <eLiterals name="ID" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="BinaryOperators">
    <eLiterals name="AND"/>
    <eLiterals name="CONTAINS" value="1"/>
    <eLiterals name="CONCAT" value="2"/>
    <eLiterals name="EQUAL" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Privileges">
    <eLiterals name="READ_ONLY"/>
    <eLiterals name="MODIFY" value="1"/>
    <eLiterals name="MODIFY_CREATE" value="2"/>
    <eLiterals name="ALL" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Scope">
    <eLiterals name="LOCAL"/>
    <eLiterals name="GLOBAL" value="1"/>
  </eClassifiers>
</ecore:EPackage>
