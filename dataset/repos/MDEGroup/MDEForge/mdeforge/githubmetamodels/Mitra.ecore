<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="mitra" nsURI="http://www.jevopi.de/Mitra" nsPrefix="mitra">
  <eClassifiers xsi:type="ecore:EClass" name="Module">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="packageName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="imports" upperBound="-1"
        eType="#//ModuleReference" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metamodelDeclarations"
        upperBound="-1" eType="#//MetamodelDeclaration" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotationDefinitions"
        upperBound="-1" eType="#//AnnotationsDefinition" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ruleDeclarations" upperBound="-1"
        eType="#//RuleDeclaration" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ModuleReference">
    <eStructuralFeatures xsi:type="ecore:EReference" name="module" eType="#//Module"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MetamodelDeclaration">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="properties" upperBound="-1"
        eType="#//Property" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="replaces" unique="false"
        upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Property">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="VisibilityModifier">
    <eLiterals name="public" literal="public"/>
    <eLiterals name="private" value="1" literal="private"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RuleDeclaration">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotations" upperBound="-1"
        eType="#//Annotation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" eType="#//VisibilityModifier"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="exec" eType="#//ExecutionModifier"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="traced" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stealth" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="virtual" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="multi" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="formalParameters" upperBound="-1"
        eType="#//FormalParameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="returnParameters" upperBound="-1"
        eType="#//ReturnParameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="implementedRules" upperBound="-1"
        eType="#//SimpleRuleReference" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="overriddenRule" eType="#//SimpleRuleReference"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="excludingRules" upperBound="-1"
        eType="#//SimpleRuleReference" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="trigger" eType="#//Trigger"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="javaSpec" eType="#//JavaSpec"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="body" eType="#//Block"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RuleReference">
    <eStructuralFeatures xsi:type="ecore:EReference" name="ruleDeclaration" eType="#//RuleDeclaration"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SimpleRuleReference" eSuperTypes="#//RuleReference">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameterReferences" upperBound="-1"
        eType="#//SimpleParameterReference" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="returnReferences" upperBound="-1"
        eType="#//SimpleParameterReference" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="QualifiedRuleReference" eSuperTypes="#//RuleReference">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameterReferences" upperBound="-1"
        eType="#//QualifiedParameterReference" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="returnReferences" upperBound="-1"
        eType="#//QualifiedParameterReference" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterReference"/>
  <eClassifiers xsi:type="ecore:EClass" name="SimpleParameterReference" eSuperTypes="#//ParameterReference">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//Type" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="QualifiedParameterReference" eSuperTypes="#//ParameterReference">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="vardecl" eType="#//TypedVarDeclaration"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Trigger">
    <eStructuralFeatures xsi:type="ecore:EReference" name="triggerRules" upperBound="-1"
        eType="#//QualifiedRuleReference" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="with" eType="#//Block"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="when" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaSpec">
    <eStructuralFeatures xsi:type="ecore:EReference" name="properties" upperBound="-1"
        eType="#//Property" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ExecutionModifier">
    <eLiterals name="called" literal="called"/>
    <eLiterals name="abstract" value="1" literal="abstract"/>
    <eLiterals name="manual" value="2" literal="manual"/>
    <eLiterals name="auto" value="3" literal="auto"/>
    <eLiterals name="confirm" value="4" literal="confirm"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter">
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotations" upperBound="-1"
        eType="#//Annotation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="modifier" eType="#//ParameterModifier"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="vardecl" eType="#//TypedVarDeclaration"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FormalParameter" eSuperTypes="#//Parameter">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReturnParameter" eSuperTypes="#//Parameter">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ParameterModifier">
    <eLiterals name="use" literal="use"/>
    <eLiterals name="from" value="1" literal="from"/>
    <eLiterals name="into" value="2" literal="into"/>
    <eLiterals name="return" literal="return"/>
    <eLiterals name="create" value="1" literal="create"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Type"/>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceType" eSuperTypes="#//Type">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metamodelDeclaration" eType="#//MetamodelDeclaration"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="eClassifier" eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EClassifier"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType" eSuperTypes="#//Type">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="primitiveType" eType="#//PrimitiveTypeSpec"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="PrimitiveTypeSpec">
    <eLiterals name="void" literal="void"/>
    <eLiterals name="any" value="1" literal="any"/>
    <eLiterals name="string" value="2" literal="String"/>
    <eLiterals name="int" value="3" literal="int"/>
    <eLiterals name="boolean" value="4" literal="boolean"/>
    <eLiterals name="real" value="5" literal="real"/>
    <eLiterals name="type" value="6" literal="Type"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CollectionType" eSuperTypes="#//Type">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="collectionType" eType="#//CollectionTypeSpec"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typePar" eType="#//Type"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="CollectionTypeSpec">
    <eLiterals name="Collection" literal="Collection"/>
    <eLiterals name="Set" value="1" literal="Set"/>
    <eLiterals name="OrderedSet" value="2" literal="OrderedSet"/>
    <eLiterals name="Bag" value="3" literal="Bag"/>
    <eLiterals name="Sequence" value="4" literal="Sequence"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Block" eSuperTypes="#//Statement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="statements" upperBound="-1"
        eType="#//BlockStatement" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BlockStatement"/>
  <eClassifiers xsi:type="ecore:EClass" name="Statement" eSuperTypes="#//BlockStatement"/>
  <eClassifiers xsi:type="ecore:EClass" name="LocalVariableDeclarationStatement" eSuperTypes="#//BlockStatement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="localVariableDeclaration"
        eType="#//LocalVariableDeclaration" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LocalVariableDeclaration">
    <eStructuralFeatures xsi:type="ecore:EReference" name="vardecl" eType="#//TypedVarDeclaration"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VarDeclaration">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//Type" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TypedVarDeclaration" eSuperTypes="#//VarDeclaration"/>
  <eClassifiers xsi:type="ecore:EClass" name="InferredVarDeclaration" eSuperTypes="#//VarDeclaration"/>
  <eClassifiers xsi:type="ecore:EClass" name="ExpressionStatement" eSuperTypes="#//Statement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="statementExpression" eType="#//StatementExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StatementExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="EmptyStatement" eSuperTypes="#//Statement"/>
  <eClassifiers xsi:type="ecore:EClass" name="ReturnStatement" eSuperTypes="#//Statement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IfStatement" eSuperTypes="#//Statement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="trueStatement" eType="#//Statement"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elseStatement" eType="#//Statement"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WhileStatement" eSuperTypes="#//Statement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="statement" eType="#//Statement"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DoStatement" eSuperTypes="#//Statement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="statement" eType="#//Statement"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ForInit">
    <eStructuralFeatures xsi:type="ecore:EReference" name="statementExpressions" upperBound="-1"
        eType="#//StatementExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="varDeclarations" upperBound="-1"
        eType="#//LocalVariableDeclaration" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ForUpdate">
    <eStructuralFeatures xsi:type="ecore:EReference" name="statementExpression" upperBound="-1"
        eType="#//StatementExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ForStatement" eSuperTypes="#//Statement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="loopVariable" eType="#//LoopVariable"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="forInit" eType="#//ForInit"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="forUpdate" eType="#//ForUpdate"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="statement" eType="#//Statement"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LoopVariable">
    <eStructuralFeatures xsi:type="ecore:EReference" name="vardecl" eType="#//VarDeclaration"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BreakStatement" eSuperTypes="#//Statement"/>
  <eClassifiers xsi:type="ecore:EClass" name="ThrowStatement" eSuperTypes="#//Statement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TryStatement" eSuperTypes="#//Statement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="tryBlock" eType="#//Block"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="catches" upperBound="-1"
        eType="#//Catch" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="finallyBlock" eType="#//Block"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Catch">
    <eStructuralFeatures xsi:type="ecore:EReference" name="formalParameter" eType="#//FormalParameter"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="block" eType="#//Block"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Expression"/>
  <eClassifiers xsi:type="ecore:EEnum" name="BooleanOperator">
    <eLiterals name="and" literal="&amp;"/>
    <eLiterals name="or" value="1" literal="|"/>
    <eLiterals name="andsc" value="2" literal="&amp;&amp;"/>
    <eLiterals name="orsc" value="3" literal="||"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="EqualityOperator">
    <eLiterals name="eq" literal="=="/>
    <eLiterals name="neq" value="1" literal="!="/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="RelationalOperator">
    <eLiterals name="lt" literal="&lt;"/>
    <eLiterals name="gt" value="1" literal=">"/>
    <eLiterals name="leq" value="2" literal="&lt;="/>
    <eLiterals name="geq" value="3" literal=">="/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="MathOperator">
    <eLiterals name="add" literal="+"/>
    <eLiterals name="sub" value="1" literal="-"/>
    <eLiterals name="mul" value="2" literal="*"/>
    <eLiterals name="div" value="3" literal="/"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="UnaryMathOperator">
    <eLiterals name="plus" literal="+"/>
    <eLiterals name="minus" value="1" literal="-"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TerminalExpression" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Literal" eSuperTypes="#//TerminalExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="StringLiteral" eSuperTypes="#//Literal">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stringValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IntLiteral" eSuperTypes="#//Literal">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="intValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RealLiteral" eSuperTypes="#//Literal">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="floatValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteral" eSuperTypes="#//Literal">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="booleanValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NullLiteral" eSuperTypes="#//Literal"/>
  <eClassifiers xsi:type="ecore:EClass" name="ClassInstanceCreationExpression" eSuperTypes="#//StatementExpression #//TerminalExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//Type" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RuleInvocation" eSuperTypes="#//StatementExpression #//TerminalExpression">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ruleDeclaration" eType="#//RuleDeclaration"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RuleInvocationSuper" eSuperTypes="#//StatementExpression #//TerminalExpression">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Feature">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MethodInvocation" eSuperTypes="#//Feature">
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureMethodInvocation" eSuperTypes="#//MethodInvocation #//MetamodelFeature">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NativeOperationInvocation" eSuperTypes="#//MethodInvocation"/>
  <eClassifiers xsi:type="ecore:EClass" name="MetamodelFeature"/>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureField" eSuperTypes="#//Feature #//MetamodelFeature">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="VariableAccess" eSuperTypes="#//StatementExpression #//TerminalExpression">
    <eOperations name="toString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if (eIsProxy()) return super.toString();&#xA;return ToString.valueOf(this);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="prefixOperator" eType="#//PPOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variable" eType="#//VarDeclaration"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="features" upperBound="-1"
        eType="#//Feature" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="default" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="postfixOperator" eType="#//PPOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StaticAccess" eSuperTypes="#//StatementExpression #//TerminalExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//Type" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="features" upperBound="-1"
        eType="#//Feature" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="AssignmentOperator">
    <eLiterals name="set" literal="="/>
    <eLiterals name="add" value="1" literal="+="/>
    <eLiterals name="sub" value="2" literal="-="/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="PPOperator">
    <eLiterals name="NULL" literal="NULL"/>
    <eLiterals name="inc" value="1" literal="++"/>
    <eLiterals name="dec" value="2" literal="--"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnnotationsDefinition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotationDecls" upperBound="-1"
        eType="#//AnnotationDecl" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnnotationDecl">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="targets" unique="false"
        upperBound="-1" eType="#//AnnotationTargetSpec"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valuetype" eType="#//PrimitiveType"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="many" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="required" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="default" eType="#//Literal"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="propertyDecls" upperBound="-1"
        eType="#//AnnotationPropertyDecl" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="AnnotationTargetSpec">
    <eLiterals name="module" literal="module"/>
    <eLiterals name="rule" value="1" literal="rule"/>
    <eLiterals name="parameter" value="2" literal="parameter"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnnotationPropertyDecl">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//PrimitiveType"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="required" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="default" eType="#//Literal"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Annotation">
    <eStructuralFeatures xsi:type="ecore:EReference" name="decl" eType="#//AnnotationDecl"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="values" upperBound="-1"
        eType="#//Literal" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="properties" upperBound="-1"
        eType="#//AnnotationProperty" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnnotationProperty">
    <eStructuralFeatures xsi:type="ecore:EReference" name="decl" eType="#//AnnotationPropertyDecl"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" eType="#//Literal"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Assignment" eSuperTypes="#//StatementExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhs" upperBound="-1" eType="#//VariableAccess"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" eType="#//AssignmentOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IteratorExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="variable" eType="#//LoopVariable"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhs" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="op" eType="#//BooleanOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhs" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EqualityExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhs" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="op" eType="#//EqualityOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhs" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RelationalExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhs" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="op" eType="#//RelationalOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhs" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MathExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhs" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="op" eType="#//MathOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhs" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryCastExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//Type" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryBooleanExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryMathExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="op" eType="#//UnaryMathOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InstanceOfExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//Type" containment="true"/>
  </eClassifiers>
</ecore:EPackage>
