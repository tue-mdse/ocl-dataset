import List : 'List.ecore#/'

package List

context Storage
inv bus: items
           ->select(item | not item.next.oclIsUndefined())
           ->forAll(i1, i2 | i1 <> i2 implies i1.next <> i2.next)

context Storage
inv oneHead: items->one(i1 | i1->forAll(i2 | i2.next <> i1))

context Storage
inv oneLast: items->one(item | item.next.oclIsUndefined())

context Storage
inv sorted: items->forAll(item | not item.next.oclIsUndefined() implies item.next.value > item.value)

context Storage
inv allStored: Item.allInstances() = items

endpackage
