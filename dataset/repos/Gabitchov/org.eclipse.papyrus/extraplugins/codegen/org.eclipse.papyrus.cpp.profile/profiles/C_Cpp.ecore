<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="C_Cpp" nsURI="http://www.eclipse.org/papyrus/C_Cpp/1" nsPrefix="C_Cpp">
  <eClassifiers xsi:type="ecore:EClass" name="Ptr">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&quot;declaration&quot; attribute should only be used, if more than one indirections of pointers (often &quot;**&quot;)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_parameter" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Parameter"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_property" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Property"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="declaration" ordered="false"
        unique="false" eType="ecore:EDataType types.ecore#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Include">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An arbitrary string that is added to header and body file. Although primarily intended for manual include directives, it can be used for arbitrary definitions.&#xA;&quot;preBody&quot; is added to a C++ body file before automatic include statements, &quot;body&quot; after"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" ordered="false" eType="ecore:EDataType types.ecore#//String"
        defaultValueLiteral=""/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="preBody" ordered="false"
        eType="ecore:EDataType types.ecore#//String" defaultValueLiteral=""/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="header" ordered="false"
        eType="ecore:EDataType types.ecore#//String" defaultValueLiteral=""/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_package" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Package"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_class" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Class"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_PackageImport" ordered="false"
        eType="ecore:EClass uml.ecore#//PackageImport"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ManualGeneration">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Some toolkits require a quite particular way of use. For instance, LTTng requires the use of C (not C++) for the declaration of a trace provider and the header file is read several time with redefined macros. Therefore, the code generator supports a &quot;manual&quot; generation mode, in which primarily the contents of the CppInclude directive is written."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="extensionBody" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExternLibrary">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Mark a package as External Library. If this package is used, the associated CDT project will be configured accordingly."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="includePaths" ordered="false"
        unique="false" upperBound="-1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_package" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//Package"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="libPaths" ordered="false"
        upperBound="-1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="macros" ordered="false"
        upperBound="-1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="libs" ordered="false" upperBound="-1"
        eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="includes" ordered="false"
        upperBound="-1" eType="ecore:EDataType types.ecore#//String"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NoCodeGen">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="No code generation should be done for this element. This also means that no include directive is generated, if the class is referenced."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_element" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//Element"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CppRoot">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Indicates that this package shoudl be a root package, i.e. its contents should appear on top level folder during generation. Currently not used"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_package" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//Package"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="VisibilityKind">
    <eLiterals name="private"/>
    <eLiterals name="protected" value="1"/>
    <eLiterals name="public" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Array">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_parameter" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Parameter"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="definition" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_property" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Property"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_association" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Association"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Const">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_parameter" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Parameter"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_property" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Property"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_operation" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Operation"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Ref">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_parameter" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Parameter"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_property" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Property"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="External">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false" unique="false"
        eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Classifier" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Classifier"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstInit">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="initialisation" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_operation" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//Operation"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Friend">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_dependency" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Dependency"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_operation" ordered="false"
        unique="false" eType="ecore:EClass uml.ecore#//Operation"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Inline">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_operation" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//Operation"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Virtual">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_operation" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//Operation"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Typedef">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="definition" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_primitivetype" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//PrimitiveType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Visibility">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_generalization" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//Generalization"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CppInit">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Integer"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_enumerationliteral"
        ordered="false" unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//EnumerationLiteral"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Template">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="declaration" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_class" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TemplateBinding">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="binding" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_templatebinding" ordered="false"
        unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//TemplateBinding"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TemplateParameter">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false" unique="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_templateparameter"
        ordered="false" unique="false" lowerBound="1" eType="ecore:EClass uml.ecore#//TemplateParameter"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Union">
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_DataType" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//DataType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="EAccessKind">
    <eLiterals name="read"/>
    <eLiterals name="write" value="1"/>
    <eLiterals name="readWrite" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="EStorageClass">
    <eLiterals name="volatile"/>
    <eLiterals name="register" value="1"/>
    <eLiterals name="extern" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StorageClass">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="storageClass" ordered="false"
        unique="false" lowerBound="1" eType="#//EStorageClass"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Parameter" ordered="false"
        eType="ecore:EClass uml.ecore#//Parameter"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Property" ordered="false"
        eType="ecore:EClass uml.ecore#//Property"/>
  </eClassifiers>
</ecore:EPackage>
