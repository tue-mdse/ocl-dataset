<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="rolemapping" nsURI="http://www.emftext.org/language/rolemapping"
    nsPrefix="rolemapping">
  <eClassifiers xsi:type="ecore:EClass" name="RoleMappingModel">
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetMetamodel" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EPackage"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mappings" lowerBound="1"
        upperBound="-1" eType="#//RoleMapping" containment="true" eOpposite="#//RoleMapping/owningMappingModel"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="imports" upperBound="-1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EPackage"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RoleMapping">
    <eOperations name="getAllMappedRoles" upperBound="-1" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.roles.Role > roles = new org.eclipse.emf.common.util.BasicEList &lt; org.emftext.language.refactoring.roles.Role > ( ) ; &#xA;&#x9;org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.ConcreteMapping > mappings = getRoleToMetaelement ( ) ; &#xA;&#x9;for ( org.emftext.language.refactoring.rolemapping.ConcreteMapping concreteMapping : mappings ) { &#xA;&#x9;&#x9;roles .add ( concreteMapping .getRole ( ) ) ; &#xA;&#x9;} &#xA;&#x9;return roles ;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getMappedRolesForEObject" upperBound="-1" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="java.util.Set &lt; org.emftext.language.refactoring.roles.Role > roleSet = new java.util.LinkedHashSet &lt; org.emftext.language.refactoring.roles.Role > ( ) ; &#xA;&#x9;org.eclipse.emf.ecore.EClass metaclass = object .eClass ( ) ; &#xA;&#x9;org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.ConcreteMapping > mappings = getRoleToMetaelement ( ) ; &#xA;&#x9;for ( org.emftext.language.refactoring.rolemapping.ConcreteMapping concreteMapping : mappings ) { &#xA;&#x9;&#x9;org.emftext.language.refactoring.roles.Role mappedRole = concreteMapping .getRole ( ) ; &#xA;&#x9;&#x9;org.eclipse.emf.ecore.EClass mappedClass = concreteMapping .getMetaclass ( ) ; &#xA;&#x9;&#x9;if ( mappedClass .equals ( metaclass ) ) { &#xA;&#x9;&#x9;&#x9;roleSet .add ( mappedRole ) ; &#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;if ( mappedRole .getModifier ( ) .contains ( org.emftext.language.refactoring.roles.RoleModifier .SUPER ) ) { &#xA;&#x9;&#x9;&#x9;if ( mappedClass .isSuperTypeOf ( metaclass ) ) { &#xA;&#x9;&#x9;&#x9;&#x9;roleSet .add ( mappedRole ) ; &#xA;&#x9;&#x9;&#x9;} &#xA;&#x9;&#x9;} &#xA;&#x9;} &#xA;&#x9;org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.roles.Role > mappedRoles = new org.eclipse.emf.common.util.BasicEList &lt; org.emftext.language.refactoring.roles.Role > ( ) ; &#xA;&#x9;for ( org.emftext.language.refactoring.roles.Role role : roleSet ) { &#xA;&#x9;&#x9;mappedRoles .add ( role ) ; &#xA;&#x9;} &#xA;&#x9;return mappedRoles ;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="object" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EObject"/>
    </eOperations>
    <eOperations name="getEClassForRole" lowerBound="1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.ConcreteMapping > mappings = getRoleToMetaelement ( ) ; &#xA;&#x9;for ( org.emftext.language.refactoring.rolemapping.ConcreteMapping mapping : mappings ) { &#xA;&#x9;&#x9;if ( mapping .getRole ( ) .equals ( role ) ) { &#xA;&#x9;&#x9;&#x9;return mapping .getMetaclass ( ) ; &#xA;&#x9;&#x9;} &#xA;&#x9;} &#xA;&#x9;return null ;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="role" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role"/>
    </eOperations>
    <eOperations name="getConcreteMappingForRole" lowerBound="1" eType="#//ConcreteMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.ConcreteMapping > mappings = getRoleToMetaelement ( ) ; &#xA;&#x9;for ( org.emftext.language.refactoring.rolemapping.ConcreteMapping mapping : mappings ) { &#xA;&#x9;&#x9;if ( mapping .getRole ( ) .equals ( role ) ) { &#xA;&#x9;&#x9;&#x9;return mapping ; &#xA;&#x9;&#x9;} &#xA;&#x9;} &#xA;&#x9;return null ;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="role" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mappedRoleModel" lowerBound="1"
        eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//RoleModel"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="roleToMetaelement" lowerBound="1"
        upperBound="-1" eType="#//ConcreteMapping" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningMappingModel" lowerBound="1"
        eType="#//RoleMappingModel" eOpposite="#//RoleMappingModel/mappings"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="comment" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConcreteMapping">
    <eOperations name="getCollaborationMappingForTargetRole" lowerBound="1" eType="#//CollaborationMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.CollaborationMapping > mappings = getCollaborationMappings ( ) ; &#xA;&#x9;for ( org.emftext.language.refactoring.rolemapping.CollaborationMapping relationMapping : mappings ) { &#xA;&#x9;&#x9;org.eclipse.emf.ecore.util.EcoreUtil .resolveAll ( relationMapping ) ; &#xA;&#x9;&#x9;org.emftext.language.refactoring.roles.MultiplicityCollaboration collaboration = relationMapping .getCollaboration ( ) ; &#xA;&#x9;&#x9;if ( collaboration .getTarget ( ) .equals ( role ) ) { &#xA;&#x9;&#x9;&#x9;return relationMapping ; &#xA;&#x9;&#x9;} &#xA;&#x9;} &#xA;&#x9;return null ;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="role" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role"/>
    </eOperations>
    <eOperations name="getAttributeMappingForAttribute" lowerBound="1" eType="#//AttributeMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if ( attribute == null ) { &#xA;&#x9;&#x9;return null ; &#xA;&#x9;} &#xA;&#x9;java.util.List &lt; org.emftext.language.refactoring.rolemapping.AttributeMapping > attributeMappings = getAttributeMappings ( ) ; &#xA;&#x9;for ( org.emftext.language.refactoring.rolemapping.AttributeMapping attributeMapping : attributeMappings ) { &#xA;&#x9;&#x9;if ( attributeMapping .getRoleAttribute ( ) .equals ( attribute ) ) { &#xA;&#x9;&#x9;&#x9;return attributeMapping ; &#xA;&#x9;&#x9;} &#xA;&#x9;} &#xA;&#x9;return null ;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="attribute" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//RoleAttribute"/>
    </eOperations>
    <eOperations name="getCollaborationMappingForCollaboration" lowerBound="1" eType="#//CollaborationMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="java.util.List &lt; org.emftext.language.refactoring.rolemapping.CollaborationMapping > relationMappings = getCollaborationMappings ( ) ; &#xA;&#x9;for ( org.emftext.language.refactoring.rolemapping.CollaborationMapping collaborationMapping : relationMappings ) { &#xA;&#x9;&#x9;org.emftext.language.refactoring.roles.MultiplicityCollaboration mappedCollaboration = collaborationMapping .getCollaboration ( ) ; &#xA;&#x9;&#x9;if ( mappedCollaboration .equals ( collaboration ) ) { &#xA;&#x9;&#x9;&#x9;return collaborationMapping ; &#xA;&#x9;&#x9;} &#xA;&#x9;} &#xA;&#x9;return null ;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="collaboration" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//MultiplicityCollaboration"/>
    </eOperations>
    <eOperations name="getCollaborationMappingsForTargetRole" upperBound="-1" eType="#//CollaborationMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="org.eclipse.emf.common.util.EList &lt; org.emftext.language.refactoring.rolemapping.CollaborationMapping > mappings = getCollaborationMappings ( ) ;&#xA;&#x9;org.eclipse.emf.common.util.EList&lt; org.emftext.language.refactoring.rolemapping.CollaborationMapping> targetMappings = new org.eclipse.emf.common.util.BasicEList&lt; org.emftext.language.refactoring.rolemapping.CollaborationMapping>(); &#xA;&#x9;for ( org.emftext.language.refactoring.rolemapping.CollaborationMapping relationMapping : mappings ) { &#xA;&#x9;&#x9;org.eclipse.emf.ecore.util.EcoreUtil .resolveAll ( relationMapping ) ; &#xA;&#x9;&#x9;org.emftext.language.refactoring.roles.MultiplicityCollaboration collaboration = relationMapping .getCollaboration ( ) ; &#xA;&#x9;&#x9;if ( collaboration .getTarget ( ) .equals ( role ) ) { &#xA;&#x9;&#x9;&#x9;targetMappings.add(relationMapping); &#xA;&#x9;&#x9;} &#xA;&#x9;} &#xA;&#x9;return targetMappings ;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="role" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="role" lowerBound="1" eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//Role"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metaclass" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="collaborationMappings"
        upperBound="-1" eType="#//CollaborationMapping" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributeMappings" upperBound="-1"
        eType="#//AttributeMapping" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="packagesOfMetaclass" upperBound="-1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EPackage"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CollaborationMapping">
    <eStructuralFeatures xsi:type="ecore:EReference" name="collaboration" lowerBound="1"
        eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//MultiplicityCollaboration"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referenceMetaClassPair"
        lowerBound="1" upperBound="-1" eType="#//ReferenceMetaClassPair" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AttributeMapping">
    <eStructuralFeatures xsi:type="ecore:EReference" name="roleAttribute" lowerBound="1"
        eType="ecore:EClass ../../org.emftext.language.refactoring.roles/metamodel/roles.ecore#//RoleAttribute"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="classAttribute" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EAttribute"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceMetaClassPair">
    <eStructuralFeatures xsi:type="ecore:EReference" name="reference" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EReference"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metaClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
  </eClassifiers>
</ecore:EPackage>
