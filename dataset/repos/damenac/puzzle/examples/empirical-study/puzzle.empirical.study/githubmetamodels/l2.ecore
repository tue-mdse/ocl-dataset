<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="l2" nsURI="http://www.eclipse.org/uml2/4.0.0/UML/Profile/L2"
    nsPrefix="l2">
  <eClassifiers xsi:type="ecore:EClass" name="Auxiliary">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A class that supports another more central or fundamental class, typically by implementing secondary logic or control flow. The class that the auxiliary supports may be defined explicitly using a Focus class or implicitly as the supplier of dependency relationship whose client is an auxiliary class. Auxiliary classes are typically used together with Focus classes, and are particularly useful for specifying the secondary business logic or control flow of components during design. See also: «Focus»."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Call">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A usage dependency whose source is an operation and whose target is an operation. The relationship may also be subsumed to the class containing an operation, with the meaning that there exists an operation in the class to which the dependency applies. A call dependency specifies that the source operation or an operation in the source class invokes the target operation or an operation in the target class. A call dependency may connect a source operation to any target operation that is within scope including, but not limited to, operations of the enclosing classifier and operations of other visible classifiers."/>
    </eAnnotations>
    <eOperations name="client_and_supplier_are_operations" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Usage.client->forAll(oclIsKindOf(Operation)) and self.base_Usage.supplier->forAll(oclIsKindOf(Operation))"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Usage" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Usage"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Create">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="When applied to a usage dependency, it specifies that the client classifier creates instances of the supplier classifier. When applied to a BehavioralFeature, it specifies that the designated feature creates an instance of the classifier to which the feature is attached."/>
    </eAnnotations>
    <eOperations name="client_and_supplier_are_classifiers" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Usage->notEmpty() implies (self.base_Usage.client->forAll(oclIsKindOf(Classifier)) and self.base_Usage.supplier->forAll(oclIsKindOf(Classifier)))"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_BehavioralFeature"
        ordered="false" lowerBound="1" eType="ecore:EClass uml.ecore#//BehavioralFeature"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Usage" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Usage"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Derive">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specifies a derivation relationship among model elements that are usually, but not necessarily, of the same type. A derived dependency specifies that the client may be computed from the supplier. The mapping specifies the computation. The client may be implemented for design reasons, such as efficiency, even though it is logically redundant."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Abstraction" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Abstraction"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="computation" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//ValueSpecification" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The specification for computing the derived client element from the derivation supplier element."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Destroy">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specifies that the designated feature destroys an instance of the classifier to which the feature is attached."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_BehavioralFeature"
        ordered="false" lowerBound="1" eType="ecore:EClass uml.ecore#//BehavioralFeature"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Document" eSuperTypes="#//File">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A specific kind of file that is not an «Executable», «Library», «Script» or «Source». Subclass of «File»."/>
    </eAnnotations>
    <eAnnotations source="duplicates">
      <contents xsi:type="ecore:EReference" name="base_Artifact" ordered="false" lowerBound="1"
          eType="ecore:EClass uml.ecore#//Artifact">
        <eAnnotations source="redefines" references="#//File/base_Artifact"/>
      </contents>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="File" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A physical file in the context of the system developed."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Artifact" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Artifact"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Entity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A persistent information component representing a business concept."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Component" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Component"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Executable" eSuperTypes="#//File">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A program file that can be executed on a computer system. Subclass of «File»."/>
    </eAnnotations>
    <eAnnotations source="duplicates">
      <contents xsi:type="ecore:EReference" name="base_Artifact" ordered="false" lowerBound="1"
          eType="ecore:EClass uml.ecore#//Artifact">
        <eAnnotations source="redefines" references="#//File/base_Artifact"/>
      </contents>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Focus">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A class that defines the core logic or control flow for one or more auxiliary classes that support it. Support classes may be defined explicitly using Auxiliary classes or implicitly as clients of dependency relationships whose supplier is a focus class. Focus classes are typically used together with one or more Auxiliary classes, and are particularly useful for specifying the core business logic or control flow of components during design. See also: «Auxiliary»."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Framework">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A package that contains model elements that specify a reusable architecture for all or part of a system. Frameworks typically include classes, patterns, or templates. When frameworks are specialized for an application domain they are sometimes referred to as application frameworks."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Package" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Package"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Implement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A component definition that is not intended to have a specification itself. Rather, it is an implementation for a separate «Specification» to which it has a Dependency."/>
    </eAnnotations>
    <eOperations name="implements_specification" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Component.clientDependency.supplier->select(oclIsKindOf(Classifier)).oclAsType(Classifier).extension_Specificaiton->notEmpty()"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Component" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Component"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ImplementationClass">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The implementation of a class in some programming language (e.g., C++, Smalltalk, Java) in which an instance may not have more than one class. This is in contrast to Class, for which an instance may have multiple classes at one time and may gain or lose classes over time, and an object (a child of instance) may dynamically have multiple classes. An Implementation class is said to realize a Classifier if it provides all of the operations defined for the Classifier with the same behavior as specified for the Classifier's operations. An Implementation Class may realize a number of different Types. Note that the physical attributes and associations of the Implementation class do not have to be the same as those of any Classifier it realizes and that the Implementation Class may provide methods for its operations in terms of its physical attributes and associations. See also: «Type»."/>
    </eAnnotations>
    <eOperations name="cannot_be_realization" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Class.extension_Realization->isEmpty()"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Instantiate">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A usage dependency among classifiers indicating that operations on the client create instances of the supplier."/>
    </eAnnotations>
    <eOperations name="client_and_supplier_are_classifiers" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Usage.client->forAll(oclIsKindOf(Classifier)) and self.base_Usage.supplier->forAll(oclIsKindOf(Classifier))"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Usage" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Usage"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Library" eSuperTypes="#//File">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A static or dynamic library file. Subclass of «File»."/>
    </eAnnotations>
    <eAnnotations source="duplicates">
      <contents xsi:type="ecore:EReference" name="base_Artifact" ordered="false" lowerBound="1"
          eType="ecore:EClass uml.ecore#//Artifact">
        <eAnnotations source="redefines" references="#//File/base_Artifact"/>
      </contents>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Metaclass">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A class whose instances are also classes."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ModelLibrary">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A package that contains model elements that are intended to be reused by other packages. Model libraries are frequently used in conjunction with applied profiles. This is expressed by defining a dependency between a profile and a model library package, or by defining a model library as contained in a profile package. The classes in a model library are not stereotypes and tagged definitions extending the metamodel. A model library is analogous to a class library in some programming languages. When a model library is defined as a part of a profile, it is imported or deleted with the application or removal of the profile. The profile is implicitly applied to its model library. In the other case, when the model library is defined as an external package imported by a profile, the profile requires that the model library be there in the model at the stage of the profile application. The application or the removal of the profile does not affect the presence of the model library elements."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Package" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Package"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Process">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A transaction based component."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Component" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Component"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Realization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A classifier that specifies a domain of objects and that also defines the physical implementation of those objects. For example, a Component stereotyped by «realization» will only have realizing Classifiers that implement behavior specified by a separate «Specification» Component. See «specification». This differs from «ImplementationClass» because an «ImplementationClass» is a realization of a Class that can have features such as attributes and methods that are useful to system designers."/>
    </eAnnotations>
    <eOperations name="cannot_be_implementationClass" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Classifier.extension_ImplementationClass->isEmpty()"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Classifier" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Classifier"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Refine">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specifies a refinement relationship between model elements at different semantic levels, such as analysis and design. The mapping specifies the relationship between the two elements or sets of elements. The mapping may or may not be computable, and it may be unidirectional or bidirectional. Refinement can be used to model transformations from analysis to design and other such changes."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Abstraction" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Abstraction"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Responsibility">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A contract or an obligation of an element in its relationship to other elements."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Usage" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Usage"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Script" eSuperTypes="#//File">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A script file that can be interpreted by a computer system. Subclass of «File»."/>
    </eAnnotations>
    <eAnnotations source="duplicates">
      <contents xsi:type="ecore:EReference" name="base_Artifact" ordered="false" lowerBound="1"
          eType="ecore:EClass uml.ecore#//Artifact">
        <eAnnotations source="redefines" references="#//File/base_Artifact"/>
      </contents>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Send">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A usage dependency whose client is an operation and whose supplier is a signal, specifying that the client sends the supplier signal."/>
    </eAnnotations>
    <eOperations name="client_operation_sends_supplier_signal" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Usage.client->forAll(oclIsKindOf(Operation)) and self.base_Usage.supplier->forAll(oclIsKindOf(Signal))"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Usage" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Usage"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Service">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A stateless, functional component (computes a value)."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Component" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Component"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Source" eSuperTypes="#//File">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A source file that can be compiled into an executable file. Subclass of «File»."/>
    </eAnnotations>
    <eAnnotations source="duplicates">
      <contents xsi:type="ecore:EReference" name="base_Artifact" ordered="false" lowerBound="1"
          eType="ecore:EClass uml.ecore#//Artifact">
        <eAnnotations source="redefines" references="#//File/base_Artifact"/>
      </contents>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Specification">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A class that specifies a domain of objects together with the operations applicable to the objects, without defining the physical implementation of those objects. However, it may have attributes and associations. Behavioral specifications for type operations may be expressed using, for example, activity diagrams. An object may have at most one implementation class, however it may conform to multiple different types. See also: «ImplementationClass»."/>
    </eAnnotations>
    <eOperations name="cannot_be_type" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Classifier.extension_Type->isEmpty()"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Classifier" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Classifier"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Subsystem">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A unit of hierarchical decomposition for large systems. A subsystem is commonly instantiated indirectly. Definitions of subsystems vary widely among domains and methods, and it is expected that domain and method profiles will specialize this construct. A subsystem may be defined to have specification and realization elements. See also: «Specification» and «Realization»."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Component" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Component"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A class that specifies a domain of objects together with the operations applicable to the objects, without defining the physical implementation of those objects. However, it may have attributes and associations. Behavioral specifications for type operations may be expressed using, for example, activity diagrams. An object may have at most one implementation class, however it may conform to multiple different types. See also: «ImplementationClass»."/>
    </eAnnotations>
    <eOperations name="cannot_be_specification" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Class.extension_Specification->isEmpty()"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Utility">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A class that has no instances, but rather denotes a named collection of static attributes and static operations, all of which are class-scoped."/>
    </eAnnotations>
    <eOperations name="is_utility" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.base_Class.feature->forAll(isStatic)"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The cache of context-specific information."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Class" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Trace">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Specifies a trace relationship between model elements or sets of model elements that represent the same concept in different models. Traces are mainly used for tracking requirements and changes across models. Since model changes can occur in both directions, the directionality of the dependency can often be ignored. The mapping specifies the relationship between the two, but it is rarely computable and is usually informal."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base_Abstraction" ordered="false"
        lowerBound="1" eType="ecore:EClass uml.ecore#//Abstraction"/>
  </eClassifiers>
</ecore:EPackage>
