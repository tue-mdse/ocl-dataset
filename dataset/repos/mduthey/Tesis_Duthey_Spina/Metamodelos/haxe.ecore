<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="haxe" nsURI="http://haxe.unicen.edu.ar" nsPrefix="org.eclipse.emf.ecore.haxe">
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EEnum" name="HaxeTarget">
    <eLiterals name="neko"/>
    <eLiterals name="cpp"/>
    <eLiterals name="java"/>
    <eLiterals name="flash"/>
    <eLiterals name="cs"/>
    <eLiterals name="js"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeModel">
    <eAnnotations/>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="sourceFolderNotEmpty targetFolderNotEmpty mainClassHasMainMethod nameNotEmpty nameNotNull"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="sourceFolderNotEmpty" value="sourceFolder.size() > 0"/>
      <details key="targetFolderNotEmpty" value="targetFolder.size() > 0"/>
      <details key="mainClassHasMainMethod" value="not (mainClass.haxeOperations&#xA;&#x9;&#x9;&#x9;->select(x : HaxeOperation | (x.name.matches('main') and x.isStatic and x.formalParameters&#xA;&#x9;&#x9;&#x9;&#x9;->isEmpty()))&#xA;&#x9;&#x9;&#x9;->isEmpty())"/>
      <details key="nameNotEmpty" value="name.size() > 0"/>
      <details key="nameNotNull" value="name &lt;> null"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourceFolder" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" defaultValueLiteral="src">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetFolder" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" defaultValueLiteral="out">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="target" lowerBound="1"
        eType="#//HaxeTarget">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="mainClass" lowerBound="1"
        eType="#//HaxeClass">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" ordered="false"
        upperBound="-1" eType="#//HaxePathReferentiable" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referenced" ordered="false"
        upperBound="-1" eType="#//HaxePathReferentiable" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="haxeModules" ordered="false"
        upperBound="-1" eType="#//HaxeModule" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeModelElement" abstract="true">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeASTNode" abstract="true" eSuperTypes="#//HaxeModelElement">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="comments" upperBound="-1"
        eType="#//HaxeComment" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeNamedElement" abstract="true" eSuperTypes="#//HaxeASTNode">
    <eAnnotations/>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="nameNotEmpty"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="nameNotEmpty" value="name.size() > 0"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeComment" eSuperTypes="#//HaxeASTNode">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="enclosedByParent" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="prefixOfParent" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lineComment" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeHaxedocComment" eSuperTypes="#//HaxeComment">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="tags" upperBound="-1" eType="#//HaxeTagElement"
        containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeTagElement" eSuperTypes="#//HaxeASTNode">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="tagName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="fragments" upperBound="-1"
        eType="#//HaxeASTNode" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeTextElement" eSuperTypes="#//HaxeASTNode">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxePathReferentiable" abstract="true"
      eSuperTypes="#//HaxeNamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="parentReference" eType="#//HaxePackage"
        eOpposite="#//HaxePackage/childrenReferences">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedIn" ordered="false"
        upperBound="-1" eType="#//HaxePathReference" changeable="false" volatile="true"
        eOpposite="#//HaxePathReference/referencedTerminal">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxePathReference" abstract="true" eSuperTypes="#//HaxeModelElement">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedTerminal" eType="#//HaxePathReferentiable"
        eOpposite="#//HaxePathReferentiable/referencedIn">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeFieldContainer" abstract="true"
      eSuperTypes="#//HaxeModelElement">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="haxeFields" upperBound="-1"
        eType="#//HaxeField" containment="true" resolveProxies="false" eOpposite="#//HaxeField/fieldContainer">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeExpression" abstract="true" eSuperTypes="#//HaxeASTNode">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeLoopStatement" abstract="true" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="theBody" lowerBound="1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeUnaryExpression" abstract="true"
      eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operand" lowerBound="1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeBinaryExpression" abstract="true"
      eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="leftSide" lowerBound="1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rightSide" lowerBound="1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeBlock" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eOperations name="isEmpty" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations/>
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="statements->isEmpty()"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="statements" upperBound="-1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeConditionalExpression" abstract="true"
      eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="thenStatement" lowerBound="1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeIfStatement" eSuperTypes="#//HaxeConditionalExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elseStatement" eType="#//HaxeExpression"
        containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeTernaryExpression" eSuperTypes="#//HaxeConditionalExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elseExpression" lowerBound="1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeForStatement" eSuperTypes="#//HaxeLoopStatement">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" lowerBound="1"
        eType="#//HaxeSingleVariableDeclaration" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeWhileStatement" eSuperTypes="#//HaxeLoopStatement">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeInExpression" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
        eType="#//HaxeSingleVariableDeclaration" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeDoWhileStatement" eSuperTypes="#//HaxeLoopStatement">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxePrefixExpression" eSuperTypes="#//HaxeUnaryExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" lowerBound="1"
        eType="#//HaxePrefixOperators">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeInfixExpression" eSuperTypes="#//HaxeBinaryExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="extendedSide" ordered="false"
        upperBound="-1" eType="#//HaxeExpression" containment="true">
      <eAnnotations/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" lowerBound="1"
        eType="#//HaxeInfixOperators">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxePostfixExpression" eSuperTypes="#//HaxeUnaryExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isIncrement" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeReturn" eSuperTypes="#//HaxeExpressionStatement">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeBreak" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeContinue" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeThisExpression" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeEmptyStatement" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeConstant" abstract="true" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeStringLiteral" eSuperTypes="#//HaxeConstant">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="escapedValue" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeNullLiteral" eSuperTypes="#//HaxeConstant">
    <eAnnotations/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeBooleanLiteral" eSuperTypes="#//HaxeConstant">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeNumberLiteral" eSuperTypes="#//HaxeConstant">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeIdentifierLiteral" eSuperTypes="#//HaxeConstant">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeRegexLiteral" eSuperTypes="#//HaxeConstant">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="pattern" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="options" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeFieldAccess" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="field" lowerBound="1" eType="#//HaxeSingleVariableAccess"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeParenthizedExpression" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeArrayInitializer" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expressions" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeArrayCreation" eSuperTypes="#//HaxeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimensions" upperBound="-1"
        eType="#//HaxeExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="initializer" eType="#//HaxeArrayInitializer"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="#//HaxeTypeAccess"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeArrayAccess" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="array" lowerBound="1" eType="#//HaxeExpression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="index" lowerBound="1" eType="#//HaxeExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeSwitch" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cases" ordered="false"
        upperBound="-1" eType="#//HaxeCase" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="default" ordered="false"
        upperBound="-1" eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeCase" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="values" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//HaxeExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeFunctionExpression" eSuperTypes="#//HaxeExpression #//HaxeAbstractFunction"/>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeCallExpression" eSuperTypes="#//HaxeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
        eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeObjectDeclaration" eSuperTypes="#//HaxeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="extendsType" eType="#//HaxeTypeAccess"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="fields" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//HaxeFieldDeclaration" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeFieldDeclaration" eSuperTypes="#//HaxeNamedElement #//HaxeTypedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="#//HaxeExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeTryExpression" eSuperTypes="#//HaxeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="theBody" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="catchClauses" upperBound="-1"
        eType="#//HaxeCatchClause" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeCatchClause" eSuperTypes="#//HaxeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="exception" lowerBound="1"
        eType="#//HaxeSingleVariableDeclaration" containment="true" eOpposite="#//HaxeSingleVariableDeclaration/catchClause"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="theBody" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeThrowExpression" eSuperTypes="#//HaxeExpressionStatement"/>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeExpressionStatement" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeCastingExpression" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="#//HaxeTypeAccess"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeUnsafeCastExpression" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeTypeCheckExpression" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" eType="#//HaxeTypeAccess"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeSuperMethodInvocation" eSuperTypes="#//HaxeExpression #//HaxeAbstractMethodInvocation"/>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeMethodInvocation" eSuperTypes="#//HaxeExpression #//HaxeAbstractMethodInvocation">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//HaxeExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeSuperConstructorInvocation" eSuperTypes="#//HaxeMethodInvocation"/>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeSingleVariableAccess" eSuperTypes="#//HaxeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="qualifier" eType="#//HaxeExpression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variable" lowerBound="1"
        eType="#//HaxeVariableDeclaration" resolveProxies="false" eOpposite="#//HaxeVariableDeclaration/usageInVariableAccess"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxePackageAccess" eSuperTypes="#//HaxeExpression #//HaxePathReference">
    <eStructuralFeatures xsi:type="ecore:EReference" name="qualifier" eType="#//HaxePackageAccess"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeAssignment" eSuperTypes="#//HaxeBinaryExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" lowerBound="1"
        eType="#//HaxeAssignmentOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeAbstractMethodInvocation" abstract="true"
      eSuperTypes="#//HaxeASTNode">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="method" lowerBound="1"
        eType="#//HaxeAbstractOperation"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
        eType="#//HaxeExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeArguments" upperBound="-1"
        eType="#//HaxeTypeAccess" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeVariableDeclaration" abstract="true"
      eSuperTypes="#//HaxeNamedElement">
    <eAnnotations/>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="variableNameRegex"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="variableNameRegex" value="name.matches('[a-zA-Z_][a-zA-Z0-9_]*')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="usageInVariableAccess"
        ordered="false" upperBound="-1" eType="#//HaxeSingleVariableAccess" changeable="false"
        volatile="true" transient="true" resolveProxies="false" eOpposite="#//HaxeSingleVariableAccess/variable"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="initializer" eType="#//HaxeExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeVariableDeclarationGroup" eSuperTypes="#//HaxeTypedElement">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="container" lowerBound="1"
        eType="#//HaxeVariableDeclarationExpression" volatile="true" transient="true"
        eOpposite="#//HaxeVariableDeclarationExpression/groups"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="initializer" eType="#//HaxeExpression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="fragments" ordered="false"
        upperBound="-1" eType="#//HaxeVariableDeclarationFragment" containment="true"
        eOpposite="#//HaxeVariableDeclarationFragment/variablesContainer"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeVariableDeclarationFragment" eSuperTypes="#//HaxeVariableDeclaration">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="variablesContainer" eType="#//HaxeVariableDeclarationGroup"
        volatile="true" transient="true" eOpposite="#//HaxeVariableDeclarationGroup/fragments"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeVariableDeclarationExpression" eSuperTypes="#//HaxeExpression">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="groups" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//HaxeVariableDeclarationGroup" containment="true"
        eOpposite="#//HaxeVariableDeclarationGroup/container"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeSingleVariableDeclaration" eSuperTypes="#//HaxeVariableDeclaration #//HaxeTypedElement">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOptional" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="catchClause" eType="#//HaxeCatchClause"
        eOpposite="#//HaxeCatchClause/exception"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxePackage" eSuperTypes="#//HaxePathReferentiable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="packageNameRegex"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="packageNameRegex" value="name.matches('[a-z][A-Z0-9a-z_-]*')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="childrenReferences" ordered="false"
        upperBound="-1" eType="#//HaxePathReferentiable" containment="true" eOpposite="#//HaxePathReferentiable/parentReference"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="childrenPackages" ordered="false"
        upperBound="-1" eType="#//HaxePackage" changeable="false" volatile="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="childrenReferences&#xA;&#x9;&#x9;&#x9;&#x9;->select(x | x.oclIsKindOf(HaxePackage))&#xA;&#x9;&#x9;&#x9;&#x9;->collect(x | x.oclAsType(HaxePackage))"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="containedTypes" ordered="false"
        upperBound="-1" eType="#//HaxeType" changeable="false" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="childrenReferences&#xA;&#x9;&#x9;&#x9;&#x9;->select(x | x.oclIsKindOf(HaxeType))&#xA;&#x9;&#x9;&#x9;&#x9;->collect(x | x.oclAsType(HaxeType))"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeModule" eSuperTypes="#//HaxeNamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="moduleNameRegex"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="moduleNameRegex" value="name.matches('[A-Z][A-Z0-9a-z_-]*')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="commentList" upperBound="-1"
        eType="#//HaxeComment"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dependencies" ordered="false"
        upperBound="-1" eType="#//HaxeDependencyDeclaration" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="thePackage" eType="#//HaxePackage"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="theElements" ordered="false"
        upperBound="-1" eType="#//HaxeType" eOpposite="#//HaxeType/containerModule"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeType" abstract="true" eSuperTypes="#//HaxePathReferentiable #//HaxeASTNode">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="private" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="extern" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="containerModule" eType="#//HaxeModule"
        eOpposite="#//HaxeModule/theElements"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="commentsAfterDeclaration"
        upperBound="-1" eType="#//HaxeComment" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="commentsBeforeDeclaration"
        upperBound="-1" eType="#//HaxeComment" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameters" ordered="false"
        upperBound="-1" eType="#//HaxeTypeParameter" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeClassifier" abstract="true" eSuperTypes="#//HaxeType #//HaxeFieldContainer #//HaxeMetadataContainer">
    <eStructuralFeatures xsi:type="ecore:EReference" name="containerPackage" eType="#//HaxePackage"
        changeable="false" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="if (containerModule.oclIsUndefined())&#xA;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;else containerModule.thePackage&#xA;&#x9;&#x9;&#x9;&#x9;endif"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="haxeOperations" ordered="false"
        upperBound="-1" eType="#//HaxeOperation" changeable="false" volatile="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="self.haxeFields&#xA;&#x9;&#x9;&#x9;&#x9;->select(e : HaxeField | e.oclIsTypeOf(HaxeOperation)).oclAsType(HaxeOperation)"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="haxeAttribute" ordered="false"
        upperBound="-1" eType="#//HaxeAttribute" changeable="false" volatile="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="self.haxeFields&#xA;&#x9;&#x9;&#x9;&#x9;->select(e : HaxeField | e.oclIsKindOf(HaxeAttribute)).oclAsType(HaxeAttribute)"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="haxeConstructors" ordered="false"
        upperBound="-1" eType="#//HaxeConstructor" changeable="false" volatile="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="haxeFields&#xA;&#x9;&#x9;&#x9;&#x9;->select(m : HaxeField | m.oclIsTypeOf(HaxeConstructor)).oclAsType(HaxeConstructor)"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeTypeParameter" eSuperTypes="#//HaxeType">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="bounds" upperBound="-1"
        eType="#//HaxeTypeAccess" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeTypeAccess" abstract="true" eSuperTypes="#//HaxeExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeFunctionTypeAccess" eSuperTypes="#//HaxeTypeAccess">
    <eStructuralFeatures xsi:type="ecore:EReference" name="returnType" lowerBound="1"
        eType="#//HaxeTypeAccess"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="argumentTypes" upperBound="-1"
        eType="#//HaxeTypeAccess"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeClassifierAccess" eSuperTypes="#//HaxePathReference #//HaxeTypeAccess">
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameterMapping" upperBound="-1"
        eType="#//HaxeTypeAccess" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeTypedElement" abstract="true" eSuperTypes="#//HaxeModelElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//HaxeTypeAccess"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeClass" eSuperTypes="#//HaxeClassifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="classNameRegex interfaceMethods oneOrZeroConstructors externDeclaration"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="classNameRegex" value="name.matches('[A-Z][A-Za-z_-]*')"/>
      <details key="interfaceMethods" value="(isInterface) implies (haxeConstructors&#xA;&#x9;&#x9;&#x9;->isEmpty() and haxeOperations&#xA;&#x9;&#x9;&#x9;->forAll(x : HaxeOperation | x.theBody.oclIsUndefined()))"/>
      <details key="oneOrZeroConstructors" value="(not extern) implies haxeConstructors&#xA;&#x9;&#x9;&#x9;->size() &lt; 2"/>
      <details key="externDeclaration" value="extern implies (haxeOperations&#xA;&#x9;&#x9;&#x9;->forAll(x : HaxeOperation | not x.type&#xA;&#x9;&#x9;&#x9;&#x9;->oclIsUndefined() and x.theBody&#xA;&#x9;&#x9;&#x9;&#x9;->oclIsUndefined()))"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isInterface" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="HaxeTypedElement"/>
      </eAnnotations>
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="HaxeAbstract"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generalization" eType="#//HaxeClassifierAccess"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="implementation" ordered="false"
        upperBound="-1" eType="#//HaxeClassifierAccess" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeAbstract" eSuperTypes="#//HaxeClassifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="abstractNameRegex"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="abstractNameRegex" value="name.matches('[A-Z][A-Za-z_-]*')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="underlyingType" eType="#//HaxeTypeAccess"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="directCastingFromType"
        eType="#//HaxeTypeAccess" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="directCastingToType" eType="#//HaxeTypeAccess"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeEnum" eSuperTypes="#//HaxeClassifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="onlyLiterals"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="onlyLiterals" value="self.haxeFields->forAll(x|x.oclIsTypeOf(HaxeEnumConstructor))"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="literals" upperBound="-1"
        eType="#//HaxeEnumConstructor" changeable="false" volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="self.haxeFields->select(e : HaxeField | e.oclIsTypeOf(HaxeEnumConstructor)).oclAsType(HaxeEnumConstructor)"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeTypedef" eSuperTypes="#//HaxeType">
    <eStructuralFeatures xsi:type="ecore:EReference" name="refType" lowerBound="1"
        eType="#//HaxeTypeAccess" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeField" abstract="true" eSuperTypes="#//HaxeNamedElement #//HaxeMetadataContainer">
    <eStructuralFeatures xsi:type="ecore:EReference" name="fieldContainer" lowerBound="1"
        eType="#//HaxeFieldContainer" volatile="true" transient="true" resolveProxies="false"
        eOpposite="#//HaxeFieldContainer/haxeFields"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isStatic" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="HaxeAttribute"/>
        <details key="unique" value="false"/>
        <details key="upper" value="*"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPrivate" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeAttribute" eSuperTypes="#//HaxeField #//HaxeSingleVariableDeclaration">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="coherentGetter coherentSetter"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="coherentGetter" value="(getterProperty = HaxeAttributeProperty::method) implies if (not&#xA;&#x9;&#x9;&#x9;&#x9;self.getter.oclIsUndefined())&#xA;&#x9;&#x9;&#x9;then (getter.name).matches('get_'.concat(name))&#xA;&#x9;&#x9;&#x9;else true&#xA;&#x9;&#x9;&#x9;endif"/>
      <details key="coherentSetter" value="(setterProperty = HaxeAttributeProperty::method) implies if (not&#xA;&#x9;&#x9;&#x9;&#x9;self.setter.oclIsUndefined())&#xA;&#x9;&#x9;&#x9;then (setter.name).matches('set_'.concat(name))&#xA;&#x9;&#x9;&#x9;else true&#xA;&#x9;&#x9;&#x9;endif"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="getter" eType="#//HaxeOperation"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="setter" eType="#//HaxeOperation"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="getterProperty" eType="#//HaxeAttributeProperty"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="setterProperty" eType="#//HaxeAttributeProperty"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="HaxeAttributeProperty">
    <eLiterals name="default"/>
    <eLiterals name="method"/>
    <eLiterals name="null"/>
    <eLiterals name="dynamic"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeAbstractFunction" abstract="true"
      eSuperTypes="#//HaxeASTNode">
    <eAnnotations/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="formalParameters" upperBound="-1"
        eType="#//HaxeSingleVariableDeclaration" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeParameters" upperBound="-1"
        eType="#//HaxeTypeParameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="theBody" lowerBound="1"
        eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeAbstractOperation" abstract="true"
      eSuperTypes="#//HaxeAbstractFunction">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isInline" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="HaxeAbstractFunction"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="overrides" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="HaxeAbstractFunction"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeOperation" eSuperTypes="#//HaxeAbstractOperation #//HaxeField #//HaxeTypedElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="macro" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="HaxeConstructor"/>
        <details key="unique" value="false"/>
        <details key="upper" value="*"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeConstructor" eSuperTypes="#//HaxeAbstractOperation #//HaxeField">
    <eStructuralFeatures xsi:type="ecore:EReference" name="constructedClass" lowerBound="1"
        eType="#//HaxeClass" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="fieldContainer.oclAsType(HaxeClass)"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeEnumConstructor" eSuperTypes="#//HaxeVariableDeclaration #//HaxeField">
    <eAnnotations/>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="noInitializer"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="noInitializer" value="initializer->isEmpty()"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//HaxeSingleVariableDeclaration" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeDependencyDeclaration" abstract="true"
      eSuperTypes="#//HaxePathReference #//HaxeASTNode"/>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeImportDeclaration" eSuperTypes="#//HaxeDependencyDeclaration">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="isAStaticElement"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="isAStaticElement" value="if (self.staticElement&#xA;&#x9;&#x9;&#x9;&#x9;->notEmpty())&#xA;&#x9;&#x9;&#x9;then self.staticElement.isStatic&#xA;&#x9;&#x9;&#x9;else true&#xA;&#x9;&#x9;&#x9;endif"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="staticElement" eType="#//HaxeField"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeUsingDeclaration" eSuperTypes="#//HaxeDependencyDeclaration">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="isAStaticElement"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="isAStaticElement" value="self.staticField.isStatic"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="staticField" lowerBound="1"
        eType="#//HaxeField"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeMetadata" eSuperTypes="#//HaxeNamedElement #//HaxeExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="usedIn" lowerBound="1"
        eType="#//HaxeMetadataContainer" transient="true" eOpposite="#//HaxeMetadataContainer/metadata"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="compilerMetadata" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//HaxeExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HaxeMetadataContainer" abstract="true"
      eSuperTypes="#//HaxeModelElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="metadata" ordered="false"
        upperBound="-1" eType="#//HaxeMetadata" containment="true" eOpposite="#//HaxeMetadata/usedIn"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="HaxePrefixOperators">
    <eLiterals name="NOT" value="1" literal="!"/>
    <eLiterals name="MINUS" value="2" literal="-"/>
    <eLiterals name="PLUS" value="3" literal="+"/>
    <eLiterals name="INCREMENT" value="4" literal="++"/>
    <eLiterals name="DECREMENT" value="5" literal="--"/>
    <eLiterals name="ONECOMPLEMENT" value="6" literal="~"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="HaxeAssignmentOperator">
    <eLiterals name="ASSIGN" value="1" literal="="/>
    <eLiterals name="PLUS_ASSIGN" value="2" literal="+="/>
    <eLiterals name="MINUS_ASSIGN" value="3" literal="-="/>
    <eLiterals name="DIVISION_ASSIGN" value="4" literal="/="/>
    <eLiterals name="TIMES_ASSIGN" value="5" literal="*="/>
    <eLiterals name="SHIFT_LEFT_ASSIGN" value="6" literal="&lt;&lt;="/>
    <eLiterals name="SHIFT_RIGTH_ASSIGN" value="7" literal=">>="/>
    <eLiterals name="SHIFT_ARITH_ASSIGN" value="8" literal=">>>="/>
    <eLiterals name="BITWISE_OR_ASSIGN" value="9" literal="|="/>
    <eLiterals name="BITWISE_AND_ASSIGN" value="10" literal="&amp;="/>
    <eLiterals name="XOR_ASSIGN" value="11" literal="^="/>
    <eLiterals name="REMAINDER_ASSIGN" value="12" literal="%="/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="HaxeInfixOperators">
    <eLiterals name="PLUS" value="1" literal="+"/>
    <eLiterals name="TIMES" value="2" literal="*"/>
    <eLiterals name="MINUS" value="3" literal="-"/>
    <eLiterals name="DIVISION" value="4" literal="/"/>
    <eLiterals name="REMAINDER" value="5" literal="%"/>
    <eLiterals name="SHIFT_RIGTH" value="6" literal=">>"/>
    <eLiterals name="SHIFT_LEFT" value="7" literal="&lt;&lt;"/>
    <eLiterals name="SHIFT_ARITH" value="8" literal=">>>"/>
    <eLiterals name="LESS_THAN" value="9" literal="&lt;"/>
    <eLiterals name="GREATER_THAN" value="10" literal=">"/>
    <eLiterals name="LESS_EQUALS" value="11" literal="&lt;="/>
    <eLiterals name="GREATER_EQUALS" value="12" literal=">="/>
    <eLiterals name="BITWISE_OR" value="13" literal="|"/>
    <eLiterals name="BITWISE_AND" value="14" literal="&amp;"/>
    <eLiterals name="XOR" value="15" literal="^"/>
    <eLiterals name="EQ" value="16" literal="=="/>
    <eLiterals name="NEQ" value="17" literal="!="/>
    <eLiterals name="OR" value="18" literal="||"/>
    <eLiterals name="AND" value="19" literal="&amp;&amp;"/>
    <eLiterals name="RANGE" value="20" literal="..."/>
  </eClassifiers>
</ecore:EPackage>
