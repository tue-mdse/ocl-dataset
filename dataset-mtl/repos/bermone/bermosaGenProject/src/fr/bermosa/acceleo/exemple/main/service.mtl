[comment encoding = UTF-8 /]
[module service('http://www.eclipse.org/uml2/5.0.0/UML')/]

[import fr::bermosa::acceleo::exemple::files::commonFile /]
[import fr::bermosa::acceleo::exemple::services::commonServices /]
[import fr::bermosa::acceleo::exemple::files::extend::exceptionFile /]
[import fr::bermosa::acceleo::exemple::files::controllerFile /]
[import fr::bermosa::acceleo::exemple::files::crudsControllerFile /]
[import fr::bermosa::acceleo::exemple::files::crudsServiceFile /]
[import fr::bermosa::acceleo::exemple::files::extend::interfaceFile /]
[import fr::bermosa::acceleo::exemple::files::wsConfigFile /]


[template public generateService(aModel : Model)]
[comment @main /]
[for (aPackage : Package | aModel.eAllContents(Package))]
	[if (aPackage.name.contains('.service'))]
		[aPackage.eContents(Interface).generateServiceClasses()/]
		[aPackage.eContents(Class).generateControllerClasses()/]
		[aPackage.eContents(Class).generateExceptionClasses()/]
		[generateWSConfig()/]
	[/if]
[/for]
[/template]

[**
 * The entry point of the generation of a Service artifacts from service model.
 * @param anInterface an UML Interface.
 */]
[template public generateServiceClasses(anInterface : Interface)]
[if (anInterface.hasStereotype('CRUDS'))]
[file ('main/java/' + anInterface.genFullPathFile(), false, 'UTF-8')]
[anInterface.genFileHeader()/]
[anInterface.genCRUDSFileBody()/]
[/file]
[file ('main/java/' + anInterface.genFullPathServiceImplFile(), false, 'UTF-8')]
[anInterface.genFileHeader()/]
[anInterface.genCRUDSServiceImplFileBody()/]
[/file]
[file ('main/java/' + anInterface.genFullPathServiceEndpointFile(), false, 'UTF-8')]
[anInterface.genFileHeader()/]
[anInterface.genCRUDSServiceEndpointFileBody()/]
[/file]
[file ('main/java/' + anInterface.genFullPathServiceWSAspectFile(), false, 'UTF-8')]
[anInterface.genFileHeader()/]
[anInterface.genCRUDSServiceWSAspectFileBody()/]
[/file]
[else]
[file ('main/java/' + anInterface.genFullPathFile(), false, 'UTF-8')]
[anInterface.genFileHeader()/]
[anInterface.genFileBody()/]
[/file]
[file ('main/java/' + anInterface.genFullPathServiceImplFile(), false, 'UTF-8')]
[anInterface.genFileHeader()/]
[anInterface.genServiceImplFileBody()/]
[/file]
[file ('main/java/' + anInterface.genFullPathServiceEndpointFile(), false, 'UTF-8')]
[anInterface.genFileHeader()/]
[anInterface.genServiceEndpointFileBody()/]
[/file]
[file ('main/java/' + anInterface.genFullPathServiceWSAspectFile(), false, 'UTF-8')]
[anInterface.genFileHeader()/]
[anInterface.genServiceWSAspectFileBody()/]
[/file]
[/if]
[/template]

[**
 * The entry point of the generation of a Controller artifact from service model.
 * @param aClass an UML Class.
 */]
[template public generateControllerClasses(aClass : Class)]
[if (aClass.name.endsWith('Controller'))]
[if (aClass.hasStereotype('CRUDS'))]
[file ('main/java/' + aClass.genControllerFullPathFile(), false, 'UTF-8')]
[aClass.genFileHeader()/]
[aClass.genCRUDSControllerFileBody()/]
[/file]
[else]
[file ('main/java/' + aClass.genControllerFullPathFile(), false, 'UTF-8')]
[aClass.genFileHeader()/]
[aClass.genControllerFileBody()/]
[/file]
[/if]
[/if]
[/template]

[**
 * The entry point of the generation of an Exception artifact from service model.
 * @param aClass an UML Class.
 */]
[template public generateExceptionClasses(aClass : Class)]
[if (aClass.name.endsWith('Exception'))]
[file ('main/java/' + aClass.genFullPathFile(), false, 'UTF-8')]
[aClass.genFileHeader()/]
[aClass.genFileBody()/]
[/file]
[/if]
[/template]

[**
 * The entry point of the generation of a Spring Roo WS configuration from service model.
 * @param aPackage an UML Package.
 */]
[template public generateWSConfig(aPackage : Package)]
[file ('main/resources/META-INF/spring/applicationContext-webservices.xml', false, 'UTF-8')]
[aPackage.genWSFileBody()/]
[/file]
[/template]
