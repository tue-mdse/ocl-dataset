[comment encoding = UTF-8 /]
[module javaIntegerAttributeFile('platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/AnnotationLayerStack.ecore', 'platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/AuthorizationPSMMetamodel.ecore', 'platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore')]


[template public javaIntegerAttributeFile(anAnnotationStack : AnnotationStack)]

[file (anAnnotationStack.hasCorePSM.name  + '/src/main/java/eu/fp7/scase/' + anAnnotationStack.hasCorePSM.name.toLowerCase() + '/utilities/authorization/attr/IntegerAttribute.java', false, 'UTF-8')]
package eu.fp7.scase.[anAnnotationStack.hasCorePSM.name.toLowerCase()/].utilities.authorization.attr;

import java.util.Objects;

public class IntegerAttribute extends AttributeValue{

	private int value;
	
	@Override
	public String getType() {
		return "Integer";
	}

	/**
	 * @return the value
	 */
	public Integer getValue() {
		return value;
	}

	public IntegerAttribute(int value){
		this.value = value;
	}

	@Override
    public boolean equals(Object o) {
        if (!(o instanceof IntegerAttribute))
            return false;

        IntegerAttribute other = (IntegerAttribute) o;

        return (value == other.value);
    }
    
	@Override
	public int hashCode(){
		return Objects.hash(value);
	}

    public String toString(){
		return String.valueOf(value);  	
    }
	
}

[/file]
[/template]
