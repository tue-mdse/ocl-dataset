[comment encoding = UTF-8 /]
[module javaCombineAlgorithm('platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/AnnotationLayerStack.ecore', 'platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/AuthorizationPSMMetamodel.ecore', 'platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore')]


[template public javaCombineAlgorithm(anAnnotationStack : AnnotationStack)]

[file (anAnnotationStack.hasCorePSM.name  + '/src/main/java/eu/fp7/scase/' + anAnnotationStack.hasCorePSM.name.toLowerCase() + '/utilities/authorization/combine/CombiningAlgorithm.java', false, 'UTF-8')]
package eu.fp7.scase.[anAnnotationStack.hasCorePSM.name.toLowerCase()/].utilities.authorization.combine;

import java.util.List;

import eu.fp7.scase.[anAnnotationStack.hasCorePSM.name.toLowerCase()/].utilities.authorization.core.AbstractEvaluationContext;
import eu.fp7.scase.[anAnnotationStack.hasCorePSM.name.toLowerCase()/].utilities.authorization.core.AuthorizationResult;
import eu.fp7.scase.[anAnnotationStack.hasCorePSM.name.toLowerCase()/].utilities.authorization.enums.CombiningAlgorithmEnum;

public abstract class CombiningAlgorithm {

	protected CombiningAlgorithm(CombiningAlgorithmEnum id){
		this.combiningAlgorithmId = id;
	}
	
	private CombiningAlgorithmEnum combiningAlgorithmId;
	
	public abstract AuthorizationResult combine(AbstractEvaluationContext evaluationContext, List<?> elements);
	
	public CombiningAlgorithmEnum getCombiningAlgorithmId(){
		return this.combiningAlgorithmId;
	}
	
	public boolean isPolicyCombiningAlgorithm(){
		return false;
	}
	public boolean isRuleCombiningAlgorithm(){
		return false;
	}
	
}
[/file]
[/template]
