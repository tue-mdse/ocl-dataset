[comment encoding = UTF-8 /]
[module generateBasicStaticStructure('http://www.eclipse.org/uml2/4.0.0/UML')]
[import beuth::se::ue4::profile::common::util /]


[template public generateBasicStaticStructure(modelName : String)]
[configXML(modelName)/]
[activityView(modelName)/]
[abstractActivityDefaultImpl(modelName)/]
[placeControllerProvider(modelName)/]

[indexHTML(modelName.substring(modelName.lastIndex('.')+1))/]
[stylesCSS(modelName.substring(modelName.lastIndex('.')+1))/]
[/template]

[template public configXML(modelName : String)]
[file (quallyName(modelName) + '.gwt.xml', false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<!-- When updating your version of GWT, you should also update this DTD reference, 
	so that your app can take advantage of the latest GWT module capabilities. -->
<!DOCTYPE module PUBLIC "-//Google Inc.//DTD Google Web Toolkit 2.5.0//EN"
  "http://google-web-toolkit.googlecode.com/svn/tags/2.5.0/distro-source/core/src/gwt-module.dtd">
<module rename-to='[modelName.substring(modelName.lastIndexOf('.') + 1, modelName.size())/]'>
	<!-- Inherit the core Web Toolkit stuff. -->
	<inherits name='com.google.gwt.user.User' />

	<!-- Inherit the default GWT style sheet. You can change -->
	<!-- the theme of your GWT application by uncommenting -->
	<!-- any one of the following lines. -->
	<!-- <inherits name='com.google.gwt.user.theme.clean.Clean' /> -->
	<inherits name='com.google.gwt.user.theme.standard.Standard'/>
	<!-- <inherits name='com.google.gwt.user.theme.chrome.Chrome'/> -->
	<!-- <inherits name='com.google.gwt.user.theme.dark.Dark'/> -->

	<inherits name='com.google.gwt.activity.Activity' />
	<inherits name='com.google.gwt.place.Place' />
	<inherits name="com.google.gwt.i18n.I18N" />
	<inherits name="com.google.gwt.inject.Inject" />
	
	[generateProtectetRegionXML(modelName)/]

	<!-- Specify the app entry point class. -->
	<entry-point class='[packageName(modelName)/]client.AppEntryPoint' />

	<!-- Specify the paths for translatable code -->
	<source path='client' />
</module>
[comment][quallyName(packageName(modelName)) + 'client/AppEntryPoint.java'/][/comment]
[/file]
[/template]

[template public activityView(modelName : String) ]
[file (quallyName(packageName(modelName)) + 'client/common/AbstractView.java', false, 'UTF-8')]
package [packageName(modelName)/]client.common;

import com.google.gwt.dom.client.Style.Unit;
import com.google.gwt.user.client.ui.IsWidget;
import com.google.gwt.user.client.ui.LayoutPanel;
import com.google.gwt.user.client.ui.Widget;

public class AbstractView implements IsWidget {
	protected LayoutPanel content;

	public AbstractView() {
		content = new LayoutPanel();
		//[protected (modelName)]
		// TODO Auto generated Method
		content.getElement().getStyle().setWidth(/*width here*/, Unit.PC);
		content.getElement().getStyle().setHeight(/*height here*/, Unit.PC);
		//[/protected]
	}

	@Override
	public Widget asWidget() {
		return content;
	}

}
[/file]
[/template]

[template public abstractActivityDefaultImpl(modelName : String) ]
[file (quallyName(packageName(modelName)) + 'client/common/AbstractActivityDefaultImpl.java', false, 'UTF-8')]
package [packageName(modelName)/]client.common;

import com.google.gwt.activity.shared.AbstractActivity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.user.client.ui.AcceptsOneWidget;

public class AbstractActivityDefaultImpl<T extends Place> extends
		AbstractActivity {

	protected Place place;

	public Place getPlace() {
		return place;
	}

	public void setPlace(Place place) {
		this.place = place;
	}

	@Override
	public void start(AcceptsOneWidget panel, EventBus eventBus) {
		// TODO Auto-generated method stub
		[generateProtectetRegion('start')/]
	}
}
[/file]
[/template]
[template public placeControllerProvider(modelName : String) ]
[file (quallyName(packageName(modelName)) + 'client/common/gin/PlaceControllerProvider.java', false, 'UTF-8')]
package [packageName(modelName)/]client.common.gin;

import com.google.gwt.place.shared.PlaceController;
import com.google.inject.Inject;
import com.google.inject.Provider;
import com.google.web.bindery.event.shared.EventBus;

public class PlaceControllerProvider implements Provider<PlaceController> {

	private final EventBus eventBus;

	@Inject
	public PlaceControllerProvider(EventBus eventBus) {
		this.eventBus = eventBus;
		[generateProtectetRegion('PlaceControllerProvider')/]
	}

	@Override
	public PlaceController get() {
		return new PlaceController(eventBus);
	}

}
[/file]

[/template]
[template public indexHTML(modelName : String)]
[file ('index.html', false, 'UTF-8')]
<!doctype html>
<!-- The DOCTYPE declaration above will set the     -->
<!-- browser's rendering engine into                -->
<!-- "Standards Mode". Replacing this declaration   -->
<!-- with a "Quirks Mode" doctype is not supported. -->

<html>
	<!-- [protected ('index.html')] 
	     Start protectetRegion -->
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">

    <!--                                                               -->
    <!-- Consider inlining CSS to reduce the number of requested files -->
    <!--                                                               -->
    <link type="text/css" rel="stylesheet" href="styles.css">

    <!--                                           -->
    <!-- Any title is fine                         -->
    <!--                                           -->
    <title>[modelName/]</title>
    
    <!--                                           -->
    <!-- This script loads your compiled module.   -->
    <!-- If you add any GWT meta tags, they must   -->
    <!-- be added before this line.                -->
    <!--                                           -->
    <script type="text/javascript" language="javascript" src="[modelName/]/[modelName/].nocache.js"></script>
  </head>

  <!--                                           -->
  <!-- The body can have arbitrary html, or      -->
  <!-- you can leave the body empty if you want  -->
  <!-- to create a completely dynamic UI.        -->
  <!--                                           -->
  <body>

    <!-- OPTIONAL: include this if you want history support -->
    <iframe src="javascript:''" id="__gwt_historyFrame" tabIndex='-1' style="position:absolute;width:0;height:0;border:0"></iframe>
    
    <!-- RECOMMENDED if your web app will not function without JavaScript enabled -->
    <noscript>
      <div style="width: 22em; position: absolute; left: 50%; margin-left: -11em; color: red; background-color: white; border: 1px solid red; padding: 4px; font-family: sans-serif">
        Your web browser must have JavaScript enabled
        in order for this application to display correctly.
      </div>
    </noscript>
		
  </body>
	<!-- [/protected] -->
</html>

[comment][quallyName(packageName(modelName)) + 'client/AppEntryPoint.java'/][/comment]
[/file]
[/template]
[template public stylesCSS(modelName : String)]
[file ('styles.css', false, 'UTF-8')]
/** Add css rules here for your application. */


/** Example rules used by the template application (remove for your app) */
	/** [protected ('styles.css')] 
	     Start protectetRegion */
h1 {
  font-size: 2em;
  font-weight: bold;
  color: #777777;
  margin: 40px 0px 70px;
  text-align: center;
}

.sendButton {
  display: block;
  font-size: 16pt;
}

/** Most GWT widgets already have a style name defined */
.gwt-DialogBox {
  width: 400px;
}
	/** [/protected] */
[comment][quallyName(packageName(modelName)) + 'client/AppEntryPoint.java'/][/comment]
[/file]
[/template]