[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2012, 2014 CNES and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Cedric Notot (Obeo) - initial API and implementation
[/comment]

[module enumerationFile('http://www.eclipse.org/uml2/4.0.0/UML')]

[import org::eclipse::umlgen::gen::autojava::specific::lib::common /]
[import org::eclipse::umlgen::gen::autojava::services::utilServices /]
[import org::eclipse::umlgen::gen::autojava::common::common /]

[template public genFileBody(anEnumeration : Enumeration)]
[genPackageDeclaration()/]

[comment Generate enumeration comment /]
[genCommentBis()/]

[comment Enumeration declaration /]
public class [genName()/] {
	[for (get('ownedLiteral')->filter(EnumerationLiteral))]
	public static final int [genName()/] [genDefaultValue()/];
	[/for]
}
[/template]

[template protected genDefaultValue(aLiteral : EnumerationLiteral) post (trim())]
[comment Enumeration literal declaration /]
= [specification->filter(LiteralSpecification).genDefaultValue()/]
[/template]

[template protected genDefaultValue(aLiteralSpec : LiteralSpecification)]
[/template]

[template protected genDefaultValue(aLiteralInteger : LiteralInteger)]
[value/]
[/template]

[template protected genDefaultValue(aLiteralString : LiteralString)]
[value/]
[/template]

[template protected genPackageDeclaration(anEnumeration : Enumeration) post(trim())]
[if (anEnumeration.ancestors(Package)->notEmpty())]
package [anEnumeration.ancestors(Package)->select(not oclIsKindOf(Model)).normalizeName()->reverse()->sep('.')/];
[/if]
[/template]