[comment encoding = UTF-8 /]

[module sql('http://genericsql/1.0')]

[template public generate(d : DataBase) ? (d.name.isValid())]
[comment @main/]
[file (d.name.concat('.sql'), false, 'UTF-8')]
[d.createDataBase()/]
[d.tables.createTable()/]
[d.tables->select(not foreignKeys->isEmpty()).genForeignKey()/]
[/file]
[/template]

[template public createDataBase(d : DataBase) ? (d.name.isValid())]
-- [d.comment/]
-- Uncomment me if you want :)
-- CREATE DATABASE [d.name/];
[/template]

[template public createTable(t : Table) ? (t.name.isValid())]

-- [t.comment/]
CREATE TABLE [t.name/]
(
[for (f : Field | t.fields->select(type <> Type::undefined))]
	[f.genField()/]
[/for]
	[t.primaryKey.genPrimaryKey()/]
);

[/template]

[template public genField(f : Field) ? (f.name.isValid())]
[f.name/] [f.specificType/][if (f.notNull)] NOT NULL[/if][if (f.unique)] UNIQUE[/if],
[/template]

[template public genPrimaryKey(k : PrimaryKey)  ? (k <> null)]
PRIMARY KEY([for (f : Field | k.primaryFields) separator(', ')][f.name/][/for])
[/template]

[template public genForeignKey(t : Table)]
[for (k : ForeignKey | t.foreignKeys) separator('; \n')]
ALTER TABLE [t.name/]
	ADD CONSTRAINT [if (k.name.isValid())][k.name/][else]fk_[t.name/]_[for (f : Field | k.foreignFields) separator('_')][f.name/][/for]_[k.refersTo.table.name/][/if]
		FOREIGN KEY([for (f : Field | k.foreignFields) separator(',')][f.name/][/for])
			REFERENCES [k.refersTo.table.name/]([for (f : Field | k.refersTo.primaryFields) separator(',')][f.name/][/for])[/for];

[/template]

[query public isValid(n : String) : Boolean =
	 n <> null and n <> ''
/]