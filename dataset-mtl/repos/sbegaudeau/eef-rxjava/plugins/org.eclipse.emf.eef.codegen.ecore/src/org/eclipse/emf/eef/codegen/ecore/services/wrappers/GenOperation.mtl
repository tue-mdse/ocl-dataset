[comment encoding = UTF-8 /]
[module GenOperation('http://www.eclipse.org/emf/2002/GenModel', 'http://www.eclipse.org/emf/2002/Ecore')/]

[query public getBody(genOperation : GenOperation, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getBody(java.lang.String)', Sequence{genOperation, indentation}) /]

[query public getCapName(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getCapName()', Sequence{genOperation}) /]

[query public getFormattedName(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getFormattedName()', Sequence{genOperation}) /]

[query public getGenExceptions(genOperation : GenOperation) : Sequence(GenClassifier)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getGenExceptions()', Sequence{genOperation}) /]

[query public getGenPackage(genOperation : GenOperation) : GenPackage
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getGenPackage()', Sequence{genOperation}) /]

[query public getImportedMetaType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedMetaType()', Sequence{genOperation}) /]

[query public getImportedReturnType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedReturnType()', Sequence{genOperation}) /]

[query public getInvariantExpression(genOperation : GenOperation, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getInvariantExpression(java.lang.String)', Sequence{genOperation, indentation}) /]

[query public getModelInfo(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getModelInfo()', Sequence{genOperation}) /]

[query public getName(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getName()', Sequence{genOperation}) /]

[query public getObjectReturnType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getObjectReturnType()', Sequence{genOperation}) /]

[query public getOperationAccessorName(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getOperationAccessorName()', Sequence{genOperation}) /]

[query public getParameterNames(genOperation : GenOperation, separator : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getParameterNames(java.lang.String)', Sequence{genOperation, separator}) /]

[query public getParameterTypes(genOperation : GenOperation, separator : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getParameterTypes(java.lang.String)', Sequence{genOperation, separator}) /]

[query public getParameterTypes(genOperation : GenOperation, separator : String, qualified : Boolean) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getParameterTypes(java.lang.String, boolean)', Sequence{genOperation, separator, qualified}) /]

[query public getParameters(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getParameters(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getParameters(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getParameters()', Sequence{genOperation}) /]

[query public getParametersArray(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getParametersArray(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getQualifiedOperationAccessor(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getQualifiedOperationAccessor()', Sequence{genOperation}) /]

[query public getQualifiedOperationAccessorName(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getQualifiedOperationAccessorName()', Sequence{genOperation}) /]

[query public getReturnType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getReturnType()', Sequence{genOperation}) /]

[query public getReturnTypeClassifier(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getReturnTypeClassifier()', Sequence{genOperation}) /]

[query public getReturnTypeGenPackage(genOperation : GenOperation) : GenPackage
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getReturnTypeGenPackage()', Sequence{genOperation}) /]

[query public getThrows(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getThrows(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getThrows(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getThrows()', Sequence{genOperation}) /]

[query public getTypeParameters(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getTypeParameters(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getValidationDelegate(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getValidationDelegate()', Sequence{genOperation}) /]

[query public hasBody(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'hasBody()', Sequence{genOperation}) /]

[query public hasGenericExceptions(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'hasGenericExceptions()', Sequence{genOperation}) /]

[query public hasInvariantExpression(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'hasInvariantExpression()', Sequence{genOperation}) /]

[query public hasInvocationDelegate(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'hasInvocationDelegate()', Sequence{genOperation}) /]

[query public hasParameterDocumentation(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'hasParameterDocumentation()', Sequence{genOperation}) /]

[query public isInvariant(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isInvariant()', Sequence{genOperation}) /]

[query public isOverrideOf(genOperation : GenOperation, ctx : GenClass, genOperation2 : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isOverrideOf(org.eclipse.emf.codegen.ecore.genmodel.GenClass, org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genOperation, ctx, genOperation2}) /]

[query public isOverrideOf(genOperation : GenOperation, genOperation2 : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isOverrideOf(org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genOperation, genOperation2}) /]

[query public isPrimitiveReturnType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isPrimitiveReturnType()', Sequence{genOperation}) /]

[query public isSuppressedVisibility(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isSuppressedVisibility()', Sequence{genOperation}) /]

[query public isVoid(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isVoid()', Sequence{genOperation}) /]

[query public reconcile(genOperation : GenOperation, oldGenOperationVersion : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'reconcile(org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genOperation, oldGenOperationVersion}) /]

[comment
    Override of services for super interface GenTypedElement 
/]
[query public getEObjectCast(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getEObjectCast()', Sequence{genOperation}) /]

[query public getEcoreModelElement(genOperation : GenOperation) : EModelElement
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getEcoreModelElement()', Sequence{genOperation}) /]

[query public getEffectiveComplianceLevel(genOperation : GenOperation) : GenJDKLevel
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getEffectiveComplianceLevel()', Sequence{genOperation}) /]

[query public getGenClassType(genOperation : GenOperation) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getGenClassType()', Sequence{genOperation}) /]

[query public getGenDataTypeType(genOperation : GenOperation) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getGenDataTypeType()', Sequence{genOperation}) /]

[query public getGenEnumType(genOperation : GenOperation) : GenEnum
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getGenEnumType()', Sequence{genOperation}) /]

[query public getImportedEffectiveFeatureMapWrapperClass(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedEffectiveFeatureMapWrapperClass()', Sequence{genOperation}) /]

[query public getImportedEffectiveFeatureMapWrapperInternalInterface(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedEffectiveFeatureMapWrapperInternalInterface()', Sequence{genOperation}) /]

[query public getImportedInternalType(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedInternalType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getImportedInternalType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedInternalType()', Sequence{genOperation}) /]

[query public getImportedMapEntryType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedMapEntryType()', Sequence{genOperation}) /]

[query public getImportedMapKeyType(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedMapKeyType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getImportedMapTemplateArguments(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedMapTemplateArguments(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getImportedMapValueType(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedMapValueType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getImportedType(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getImportedType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getImportedType()', Sequence{genOperation}) /]

[query public getInternalTypeCast(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getInternalTypeCast()', Sequence{genOperation}) /]

[query public getListItemType(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getListItemType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getListItemType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getListItemType()', Sequence{genOperation}) /]

[query public getListTemplateArguments(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getListTemplateArguments(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getLowerBound(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getLowerBound()', Sequence{genOperation}) /]

[query public getMapEntryTypeGenClass(genOperation : GenOperation) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getMapEntryTypeGenClass()', Sequence{genOperation}) /]

[query public getMapGenClass(genOperation : GenOperation) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getMapGenClass()', Sequence{genOperation}) /]

[query public getMapItemType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getMapItemType()', Sequence{genOperation}) /]

[query public getNonEObjectInternalTypeCast(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getNonEObjectInternalTypeCast(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getNonEObjectInternalTypeCast(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getNonEObjectInternalTypeCast()', Sequence{genOperation}) /]

[query public getObjectType(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getObjectType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getObjectType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getObjectType()', Sequence{genOperation}) /]

[query public getOrderedFlag(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getOrderedFlag()', Sequence{genOperation}) /]

[query public getPrimitiveValueFunction(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getPrimitiveValueFunction()', Sequence{genOperation}) /]

[query public getQualifiedListItemType(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getQualifiedListItemType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getQualifiedListItemType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getQualifiedListItemType()', Sequence{genOperation}) /]

[query public getRawBoundType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getRawBoundType()', Sequence{genOperation}) /]

[query public getRawImportedBoundType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getRawImportedBoundType()', Sequence{genOperation}) /]

[query public getRawImportedType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getRawImportedType()', Sequence{genOperation}) /]

[query public getRawListItemType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getRawListItemType()', Sequence{genOperation}) /]

[query public getRawType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getRawType()', Sequence{genOperation}) /]

[query public getRawTypeCast(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getRawTypeCast()', Sequence{genOperation}) /]

[query public getType(genOperation : GenOperation, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public getType(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getType()', Sequence{genOperation}) /]

[query public getTypeClassifier(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getTypeClassifier()', Sequence{genOperation}) /]

[query public getTypeClassifierAccessorName(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getTypeClassifierAccessorName()', Sequence{genOperation}) /]

[query public getTypeGenClass(genOperation : GenOperation) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getTypeGenClass()', Sequence{genOperation}) /]

[query public getTypeGenClassifier(genOperation : GenOperation) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getTypeGenClassifier()', Sequence{genOperation}) /]

[query public getTypeGenDataType(genOperation : GenOperation) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getTypeGenDataType()', Sequence{genOperation}) /]

[query public getTypeGenEnum(genOperation : GenOperation) : GenEnum
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getTypeGenEnum()', Sequence{genOperation}) /]

[query public getTypeGenPackage(genOperation : GenOperation) : GenPackage
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getTypeGenPackage()', Sequence{genOperation}) /]

[query public getUniqueFlag(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getUniqueFlag()', Sequence{genOperation}) /]

[query public getUpperBound(genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getUpperBound()', Sequence{genOperation}) /]

[query public hasGenericType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'hasGenericType()', Sequence{genOperation}) /]

[query public isBooleanType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isBooleanType()', Sequence{genOperation}) /]

[query public isEffectiveSuppressEMFTypes(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isEffectiveSuppressEMFTypes()', Sequence{genOperation}) /]

[query public isEnumBasedType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isEnumBasedType()', Sequence{genOperation}) /]

[query public isEnumType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isEnumType()', Sequence{genOperation}) /]

[query public isFeatureMapType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isFeatureMapType()', Sequence{genOperation}) /]

[query public isFeatureMapWrapped(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isFeatureMapWrapped()', Sequence{genOperation}) /]

[query public isListDataType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isListDataType()', Sequence{genOperation}) /]

[query public isListType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isListType()', Sequence{genOperation}) /]

[query public isMapType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isMapType()', Sequence{genOperation}) /]

[query public isPrimitiveType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isPrimitiveType()', Sequence{genOperation}) /]

[query public isStringBasedType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isStringBasedType()', Sequence{genOperation}) /]

[query public isStringType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isStringType()', Sequence{genOperation}) /]

[query public isUncheckedCast(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isUncheckedCast()', Sequence{genOperation}) /]

[query public isUncheckedCast(genOperation : GenOperation, ctx : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isUncheckedCast(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genOperation, ctx}) /]

[query public isUnique(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isUnique()', Sequence{genOperation}) /]

[query public isWrappedFeatureMapType(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'isWrappedFeatureMapType()', Sequence{genOperation}) /]

[comment
    Override of services for super interface GenBase 
/]
[query public canGenerate(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'canGenerate()', Sequence{genOperation}) /]

[query public canGenerateEdit(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'canGenerateEdit()', Sequence{genOperation}) /]

[query public canGenerateEditor(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'canGenerateEditor()', Sequence{genOperation}) /]

[query public canGenerateSchema(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'canGenerateSchema()', Sequence{genOperation}) /]

[query public canGenerateTests(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'canGenerateTests()', Sequence{genOperation}) /]

[query public capName(genOperation : GenOperation, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'capName(java.lang.String)', Sequence{genOperation, name}) /]

[query public getCopyright(genOperation : GenOperation, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getCopyright(java.lang.String)', Sequence{genOperation, indentation}) /]

[query public getDocumentation(genOperation : GenOperation, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getDocumentation(java.lang.String)', Sequence{genOperation, indentation}) /]

[query public getGenAnnotation(genOperation : GenOperation, source : String) : GenAnnotation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'getGenAnnotation(java.lang.String)', Sequence{genOperation, source}) /]

[query public hasCopyright(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'hasCopyright()', Sequence{genOperation}) /]

[query public hasDocumentation(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'hasDocumentation()', Sequence{genOperation}) /]

[query public reconcile(genOperation : GenOperation) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'reconcile()', Sequence{genOperation}) /]

[query public safeName(genOperation : GenOperation, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'safeName(java.lang.String)', Sequence{genOperation, name}) /]

[query public uncapName(genOperation : GenOperation, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'uncapName(java.lang.String)', Sequence{genOperation, name}) /]

[query public uncapPrefixedName(genOperation : GenOperation, input : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenOperation', 'uncapPrefixedName(java.lang.String)', Sequence{genOperation, input}) /]

[comment We use a template in order to prevent acceleo cache from calling the java method each time /]
[template public prefix(genOperation : GenOperation)]
[if (genOperation.hasGenericType() or genOperation.genParameters->notEmpty() or genOperation.getGenExceptions()->notEmpty() or genOperation.genTypeParameters->notEmpty())]
[invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenPackageWrapper', 'prefix(org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genOperation})/][/if][/template]
