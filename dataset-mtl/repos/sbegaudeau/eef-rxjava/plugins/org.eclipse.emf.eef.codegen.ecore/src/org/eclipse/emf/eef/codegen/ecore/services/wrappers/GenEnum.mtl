[comment encoding = UTF-8 /]
[module GenEnum('http://www.eclipse.org/emf/2002/GenModel', 'http://www.eclipse.org/emf/2002/Ecore')/]

[query public getEnumLiteralID(genEnum : GenEnum, genEnumLiteral : GenEnumLiteral) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getEnumLiteralID(org.eclipse.emf.codegen.ecore.genmodel.GenEnumLiteral)', Sequence{genEnum, genEnumLiteral}) /]

[query public getEnumLiteralValue(genEnum : GenEnum, genEnumLiteral : GenEnumLiteral) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getEnumLiteralValue(org.eclipse.emf.codegen.ecore.genmodel.GenEnumLiteral)', Sequence{genEnum, genEnumLiteral}) /]

[query public getGenEnumLiteral(genEnum : GenEnum, literal : String) : GenEnumLiteral
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getGenEnumLiteral(java.lang.String)', Sequence{genEnum, literal}) /]

[query public getImportedName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getImportedName()', Sequence{genEnum}) /]

[query public getQualifiedName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getQualifiedName()', Sequence{genEnum}) /]

[query public getUniqueValuedGenEnumLiterals(genEnum : GenEnum) : Sequence(GenEnumLiteral)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getUniqueValuedGenEnumLiterals()', Sequence{genEnum}) /]

[query public reconcile(genEnum : GenEnum, oldGenEnumVersion : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'reconcile(org.eclipse.emf.codegen.ecore.genmodel.GenEnum)', Sequence{genEnum, oldGenEnumVersion}) /]

[comment
    Override of services for super interface GenDataType 
/]
[query public getBaseType(genEnum : GenEnum) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getBaseType()', Sequence{genEnum}) /]

[query public getEnumerationLiterals(genEnum : GenEnum) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getEnumerationLiterals()', Sequence{genEnum}) /]

[query public getFractionDigits(genEnum : GenEnum) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getFractionDigits()', Sequence{genEnum}) /]

[query public getImportedInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getImportedInstanceClassName()', Sequence{genEnum}) /]

[query public getImportedParameterizedObjectInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getImportedParameterizedObjectInstanceClassName()', Sequence{genEnum}) /]

[query public getImportedWildcardObjectInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getImportedWildcardObjectInstanceClassName()', Sequence{genEnum}) /]

[query public getItemType(genEnum : GenEnum) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getItemType()', Sequence{genEnum}) /]

[query public getLengthAccessorFunction(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getLengthAccessorFunction()', Sequence{genEnum}) /]

[query public getMaxLength(genEnum : GenEnum) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getMaxLength()', Sequence{genEnum}) /]

[query public getMaxLiteral(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getMaxLiteral()', Sequence{genEnum}) /]

[query public getMemberTypes(genEnum : GenEnum) : Sequence(GenDataType)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getMemberTypes()', Sequence{genEnum}) /]

[query public getMinLength(genEnum : GenEnum) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getMinLength()', Sequence{genEnum}) /]

[query public getMinLiteral(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getMinLiteral()', Sequence{genEnum}) /]

[query public getModelInfo(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getModelInfo()', Sequence{genEnum}) /]

[query public getObjectInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getObjectInstanceClassName()', Sequence{genEnum}) /]

[query public getObjectType(genEnum : GenEnum) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getObjectType()', Sequence{genEnum}) /]

[query public getPrimitiveValueFunction(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getPrimitiveValueFunction()', Sequence{genEnum}) /]

[query public getQualifiedInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getQualifiedInstanceClassName()', Sequence{genEnum}) /]

[query public getSerializableFlag(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getSerializableFlag()', Sequence{genEnum}) /]

[query public getStaticValue(genEnum : GenEnum, literal : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getStaticValue(java.lang.String)', Sequence{genEnum, literal}) /]

[query public getStaticValue(genEnum : GenEnum, literal : String, includeCast : Boolean) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getStaticValue(java.lang.String, boolean)', Sequence{genEnum, literal, includeCast}) /]

[query public getTotalDigits(genEnum : GenEnum) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getTotalDigits()', Sequence{genEnum}) /]

[query public getWhiteSpace(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getWhiteSpace()', Sequence{genEnum}) /]

[query public isArrayType(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'isArrayType()', Sequence{genEnum}) /]

[query public isMaxInclusive(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'isMaxInclusive()', Sequence{genEnum}) /]

[query public isMinInclusive(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'isMinInclusive()', Sequence{genEnum}) /]

[query public isObjectType(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'isObjectType()', Sequence{genEnum}) /]

[query public isPrimitiveType(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'isPrimitiveType()', Sequence{genEnum}) /]

[query public isSerializable(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'isSerializable()', Sequence{genEnum}) /]

[query public isXMLCalendar(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'isXMLCalendar()', Sequence{genEnum}) /]

[query public isXMLDuration(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'isXMLDuration()', Sequence{genEnum}) /]

[query public reconcile(genEnum : GenEnum, oldGenDataVersion : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'reconcile(org.eclipse.emf.codegen.ecore.genmodel.GenDataType)', Sequence{genEnum, oldGenDataVersion}) /]

[comment
    Override of services for super interface GenClassifier 
/]
[query public getAllGenConstraints(genEnum : GenEnum) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getAllGenConstraints()', Sequence{genEnum}) /]

[query public getClassifierAccessorName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getClassifierAccessorName()', Sequence{genEnum}) /]

[query public getClassifierID(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getClassifierID()', Sequence{genEnum}) /]

[query public getClassifierInstanceName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getClassifierInstanceName()', Sequence{genEnum}) /]

[query public getConstraintDelegate(genEnum : GenEnum, constraint : String) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getConstraintDelegate(java.lang.String)', Sequence{genEnum, constraint}) /]

[query public getConstraintExpression(genEnum : GenEnum, constraint : String, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getConstraintExpression(java.lang.String, java.lang.String)', Sequence{genEnum, constraint, indentation}) /]

[query public getConstraintImplementor(genEnum : GenEnum, constraint : String) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getConstraintImplementor(java.lang.String)', Sequence{genEnum, constraint}) /]

[query public getEcoreClassifier(genEnum : GenEnum) : EClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getEcoreClassifier()', Sequence{genEnum}) /]

[query public getFormattedName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getFormattedName()', Sequence{genEnum}) /]

[query public getGenConstraints(genEnum : GenEnum) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getGenConstraints()', Sequence{genEnum}) /]

[query public getGeneratedInstanceClassFlag(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getGeneratedInstanceClassFlag()', Sequence{genEnum}) /]

[query public getImportedBoundedWildcardInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getImportedBoundedWildcardInstanceClassName()', Sequence{genEnum}) /]

[query public getImportedMetaType(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getImportedMetaType()', Sequence{genEnum}) /]

[query public getImportedParameterizedInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getImportedParameterizedInstanceClassName()', Sequence{genEnum}) /]

[query public getImportedWildcardInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getImportedWildcardInstanceClassName()', Sequence{genEnum}) /]

[query public getMetaType(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getMetaType()', Sequence{genEnum}) /]

[query public getName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getName()', Sequence{genEnum}) /]

[query public getQualifiedClassifierAccessor(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getQualifiedClassifierAccessor()', Sequence{genEnum}) /]

[query public getRawImportedInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getRawImportedInstanceClassName()', Sequence{genEnum}) /]

[query public getRawInstanceClassName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getRawInstanceClassName()', Sequence{genEnum}) /]

[query public getSafeUncapName(genEnum : GenEnum) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getSafeUncapName()', Sequence{genEnum}) /]

[query public getValidationDelegate(genEnum : GenEnum, constraint : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getValidationDelegate(java.lang.String)', Sequence{genEnum, constraint}) /]

[query public hasConstraintExpression(genEnum : GenEnum, constraint : String) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'hasConstraintExpression(java.lang.String)', Sequence{genEnum, constraint}) /]

[query public hasOnlyDefaultConstraints(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'hasOnlyDefaultConstraints()', Sequence{genEnum}) /]

[query public isUncheckedCast(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'isUncheckedCast()', Sequence{genEnum}) /]

[comment
    Override of services for super interface GenBase 
/]
[query public canGenerate(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'canGenerate()', Sequence{genEnum}) /]

[query public canGenerateEdit(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'canGenerateEdit()', Sequence{genEnum}) /]

[query public canGenerateEditor(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'canGenerateEditor()', Sequence{genEnum}) /]

[query public canGenerateSchema(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'canGenerateSchema()', Sequence{genEnum}) /]

[query public canGenerateTests(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'canGenerateTests()', Sequence{genEnum}) /]

[query public capName(genEnum : GenEnum, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'capName(java.lang.String)', Sequence{genEnum, name}) /]

[query public getCopyright(genEnum : GenEnum, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getCopyright(java.lang.String)', Sequence{genEnum, indentation}) /]

[query public getDocumentation(genEnum : GenEnum, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getDocumentation(java.lang.String)', Sequence{genEnum, indentation}) /]

[query public getEcoreModelElement(genEnum : GenEnum) : EModelElement
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getEcoreModelElement()', Sequence{genEnum}) /]

[query public getGenAnnotation(genEnum : GenEnum, source : String) : GenAnnotation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getGenAnnotation(java.lang.String)', Sequence{genEnum, source}) /]

[query public getGenModel(genEnum : GenEnum) : GenModel
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'getGenModel()', Sequence{genEnum}) /]

[query public hasCopyright(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'hasCopyright()', Sequence{genEnum}) /]

[query public hasDocumentation(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'hasDocumentation()', Sequence{genEnum}) /]

[query public reconcile(genEnum : GenEnum) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'reconcile()', Sequence{genEnum}) /]

[query public safeName(genEnum : GenEnum, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'safeName(java.lang.String)', Sequence{genEnum, name}) /]

[query public uncapName(genEnum : GenEnum, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'uncapName(java.lang.String)', Sequence{genEnum, name}) /]

[query public uncapPrefixedName(genEnum : GenEnum, input : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenEnum', 'uncapPrefixedName(java.lang.String)', Sequence{genEnum, input}) /]
