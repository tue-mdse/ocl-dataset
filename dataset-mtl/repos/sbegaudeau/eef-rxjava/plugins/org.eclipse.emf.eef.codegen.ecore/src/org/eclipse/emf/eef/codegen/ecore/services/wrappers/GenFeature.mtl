[comment encoding = UTF-8 /]
[module GenFeature('http://www.eclipse.org/emf/2002/GenModel', 'http://www.eclipse.org/emf/2002/Ecore')/]

[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenClass /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenPackage /]

[query public getAccessorName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getAccessorName()', Sequence{genFeature}) /]

[query public getCapName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getCapName()', Sequence{genFeature}) /]

[query public getChangeableFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getChangeableFlag()', Sequence{genFeature}) /]

[query public getContainerClass(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getContainerClass()', Sequence{genFeature}) /]

[query public getContainmentFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getContainmentFlag()', Sequence{genFeature}) /]

[query public getCreateChildValueLiteral(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getCreateChildValueLiteral()', Sequence{genFeature}) /]

[query public getDefaultValue(genFeature : GenFeature) : String
	= let result : String = invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getDefaultValue()', Sequence{genFeature}).oclAsType(String) in
		if (result.oclIsInvalid() or result.oclIsUndefined()) then
			'null'
		else
			result
		endif/]

[query public getDelegateFeature(genFeature : GenFeature) : GenFeature
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getDelegateFeature()', Sequence{genFeature}) /]

[query public getDelegatedFeatures(genFeature : GenFeature) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getDelegatedFeatures()', Sequence{genFeature}) /]

[query public getDelegatedFeatures(genFeature : GenFeature, genModel : GenModel) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getDelegatedFeatures(org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{genFeature, genModel}) /]

[query public getDerivedFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getDerivedFlag()', Sequence{genFeature}) /]

[query public getEDefault(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getEDefault()', Sequence{genFeature}) /]

[query public getFeatureAccessorName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getFeatureAccessorName()', Sequence{genFeature}) /]

[query public getFeatureKind(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getFeatureKind()', Sequence{genFeature}) /]

[query public getFormattedName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getFormattedName()', Sequence{genFeature}) /]

[query public getGenPackage(genFeature : GenFeature) : GenPackage
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getGenPackage()', Sequence{genFeature}) /]

[query public getGetAccessor(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getGetAccessor()', Sequence{genFeature}) /]

[query public getGetArrayAccessor(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getGetArrayAccessor()', Sequence{genFeature}) /]

[query public getIDFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getIDFlag()', Sequence{genFeature}) /]

[query public getImportedMetaType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedMetaType()', Sequence{genFeature}) /]

[query public getIsName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getIsName()', Sequence{genFeature}) /]

[query public getKeys(genFeature : GenFeature) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getKeys()', Sequence{genFeature}) /]

[query public getMetaType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getMetaType()', Sequence{genFeature}) /]

[query public getModelInfo(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getModelInfo()', Sequence{genFeature}) /]

[query public getName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getName()', Sequence{genFeature}) /]

[query public getPropertyImageName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getPropertyImageName()', Sequence{genFeature}) /]

[comment][query public getQualifiedFeatureAccessor(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getQualifiedFeatureAccessor()', Sequence{genFeature}) /][/comment]

[query public getQualifiedFeatureAccessorName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getQualifiedFeatureAccessorName()', Sequence{genFeature}) /]

[query public getQualifiedModelInfo(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getQualifiedModelInfo()', Sequence{genFeature}) /]

[query public getResolveProxiesFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getResolveProxiesFlag()', Sequence{genFeature}) /]

[query public getReverse(genFeature : GenFeature) : GenFeature
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getReverse()', Sequence{genFeature}) /]

[query public getSafeName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getSafeName()', Sequence{genFeature}) /]

[query public getSafeNameAsEObject(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getSafeNameAsEObject()', Sequence{genFeature}) /]

[query public getStaticDefaultValue(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getStaticDefaultValue()', Sequence{genFeature}) /]

[query public getTransientFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getTransientFlag()', Sequence{genFeature}) /]

[query public getUncapName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getUncapName()', Sequence{genFeature}) /]

[query public getUnsettableFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getUnsettableFlag()', Sequence{genFeature}) /]

[query public getUpperName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getUpperName()', Sequence{genFeature}) /]

[query public getVolatileFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getVolatileFlag()', Sequence{genFeature}) /]

[query public hasDelegateFeature(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'hasDelegateFeature()', Sequence{genFeature}) /]

[query public hasEDefault(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'hasEDefault()', Sequence{genFeature}) /]

[query public hasSettingDelegate(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'hasSettingDelegate()', Sequence{genFeature}) /]

[query public isBasicGet(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isBasicGet()', Sequence{genFeature}) /]

[query public isBasicSet(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isBasicSet()', Sequence{genFeature}) /]

[query public isBasicUnset(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isBasicUnset()', Sequence{genFeature}) /]

[query public isBidirectional(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isBidirectional()', Sequence{genFeature}) /]

[query public isChangeable(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isChangeable()', Sequence{genFeature}) /]

[query public isContainer(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isContainer()', Sequence{genFeature}) /]

[query public isContains(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isContains()', Sequence{genFeature}) /]

[query public isDerived(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isDerived()', Sequence{genFeature}) /]

[query public isESetField(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isESetField()', Sequence{genFeature}) /]

[query public isESetFlag(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isESetFlag()', Sequence{genFeature}) /]

[query public isEffectiveContains(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isEffectiveContains()', Sequence{genFeature}) /]

[query public isField(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isField()', Sequence{genFeature}) /]

[query public isFlag(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isFlag()', Sequence{genFeature}) /]

[query public isGet(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isGet()', Sequence{genFeature}) /]

[query public isID(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isID()', Sequence{genFeature}) /]

[query public isIsSet(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isIsSet()', Sequence{genFeature}) /]

[query public isProperty(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isProperty()', Sequence{genFeature}) /]

[query public isReferenceType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isReferenceType()', Sequence{genFeature}) /]

[query public isResolveProxies(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isResolveProxies()', Sequence{genFeature}) /]

[query public isSet(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isSet()', Sequence{genFeature}) /]

[query public isSetCreateChild(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isSetCreateChild()', Sequence{genFeature}) /]

[query public isSetDefaultValue(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isSetDefaultValue()', Sequence{genFeature}) /]

[query public isSuppressedGetVisibility(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isSuppressedGetVisibility()', Sequence{genFeature}) /]

[query public isSuppressedIsSetVisibility(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isSuppressedIsSetVisibility()', Sequence{genFeature}) /]

[query public isSuppressedSetVisibility(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isSuppressedSetVisibility()', Sequence{genFeature}) /]

[query public isSuppressedUnsetVisibility(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isSuppressedUnsetVisibility()', Sequence{genFeature}) /]

[query public isTested(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isTested()', Sequence{genFeature}) /]

[query public isUnset(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isUnset()', Sequence{genFeature}) /]

[query public isUnsettable(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isUnsettable()', Sequence{genFeature}) /]

[query public isVolatile(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isVolatile()', Sequence{genFeature}) /]

[query public reconcile(genFeature : GenFeature, oldGenFeatureVersion : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'reconcile(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genFeature, oldGenFeatureVersion}) /]

[comment
    Override of services for super interface GenTypedElement 
/]
[query public getEObjectCast(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getEObjectCast()', Sequence{genFeature}) /]

[query public getEcoreModelElement(genFeature : GenFeature) : EModelElement
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getEcoreModelElement()', Sequence{genFeature}) /]

[query public getEffectiveComplianceLevel(genFeature : GenFeature) : GenJDKLevel
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getEffectiveComplianceLevel()', Sequence{genFeature}) /]

[query public getGenClassType(genFeature : GenFeature) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getGenClassType()', Sequence{genFeature}) /]

[query public getGenDataTypeType(genFeature : GenFeature) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getGenDataTypeType()', Sequence{genFeature}) /]

[query public getGenEnumType(genFeature : GenFeature) : GenEnum
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getGenEnumType()', Sequence{genFeature}) /]

[query public getImportedEffectiveFeatureMapWrapperClass(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedEffectiveFeatureMapWrapperClass()', Sequence{genFeature}) /]

[query public getImportedEffectiveFeatureMapWrapperInternalInterface(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedEffectiveFeatureMapWrapperInternalInterface()', Sequence{genFeature}) /]

[query public getImportedInternalType(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedInternalType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getImportedInternalType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedInternalType()', Sequence{genFeature}) /]

[query public getImportedMapEntryType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedMapEntryType()', Sequence{genFeature}) /]

[query public getImportedMapKeyType(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedMapKeyType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getImportedMapTemplateArguments(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedMapTemplateArguments(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getImportedMapValueType(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedMapValueType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getImportedType(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getImportedType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getImportedType()', Sequence{genFeature}) /]

[query public getInternalTypeCast(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getInternalTypeCast()', Sequence{genFeature}) /]

[query public getListItemType(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getListItemType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getListItemType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getListItemType()', Sequence{genFeature}) /]

[query public getListTemplateArguments(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getListTemplateArguments(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getLowerBound(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getLowerBound()', Sequence{genFeature}) /]

[query public getMapEntryTypeGenClass(genFeature : GenFeature) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getMapEntryTypeGenClass()', Sequence{genFeature}) /]

[query public getMapGenClass(genFeature : GenFeature) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getMapGenClass()', Sequence{genFeature}) /]

[query public getMapItemType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getMapItemType()', Sequence{genFeature}) /]

[query public getNonEObjectInternalTypeCast(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getNonEObjectInternalTypeCast(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getNonEObjectInternalTypeCast(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getNonEObjectInternalTypeCast()', Sequence{genFeature}) /]

[query public getObjectType(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getObjectType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getObjectType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getObjectType()', Sequence{genFeature}) /]

[query public getOrderedFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getOrderedFlag()', Sequence{genFeature}) /]

[query public getPrimitiveValueFunction(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getPrimitiveValueFunction()', Sequence{genFeature}) /]

[query public getQualifiedListItemType(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getQualifiedListItemType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getQualifiedListItemType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getQualifiedListItemType()', Sequence{genFeature}) /]

[query public getRawBoundType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getRawBoundType()', Sequence{genFeature}) /]

[query public getRawImportedBoundType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getRawImportedBoundType()', Sequence{genFeature}) /]

[query public getRawImportedType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getRawImportedType()', Sequence{genFeature}) /]

[query public getRawListItemType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getRawListItemType()', Sequence{genFeature}) /]

[query public getRawType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getRawType()', Sequence{genFeature}) /]

[query public getRawTypeCast(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getRawTypeCast()', Sequence{genFeature}) /]

[query public getType(genFeature : GenFeature, ctx : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getType(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public getType(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getType()', Sequence{genFeature}) /]

[query public getTypeClassifier(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getTypeClassifier()', Sequence{genFeature}) /]

[query public getTypeClassifierAccessorName(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getTypeClassifierAccessorName()', Sequence{genFeature}) /]

[query public getTypeGenClass(genFeature : GenFeature) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getTypeGenClass()', Sequence{genFeature}) /]

[query public getTypeGenClassifier(genFeature : GenFeature) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getTypeGenClassifier()', Sequence{genFeature}) /]

[query public getTypeGenDataType(genFeature : GenFeature) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getTypeGenDataType()', Sequence{genFeature}) /]

[query public getTypeGenEnum(genFeature : GenFeature) : GenEnum
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getTypeGenEnum()', Sequence{genFeature}) /]

[query public getTypeGenPackage(genFeature : GenFeature) : GenPackage
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getTypeGenPackage()', Sequence{genFeature}) /]

[query public getUniqueFlag(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getUniqueFlag()', Sequence{genFeature}) /]

[query public getUpperBound(genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getUpperBound()', Sequence{genFeature}) /]

[query public hasGenericType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'hasGenericType()', Sequence{genFeature}) /]

[query public isBooleanType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isBooleanType()', Sequence{genFeature}) /]

[query public isEffectiveSuppressEMFTypes(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isEffectiveSuppressEMFTypes()', Sequence{genFeature}) /]

[query public isEnumBasedType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isEnumBasedType()', Sequence{genFeature}) /]

[query public isEnumType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isEnumType()', Sequence{genFeature}) /]

[query public isFeatureMapType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isFeatureMapType()', Sequence{genFeature}) /]

[query public isFeatureMapWrapped(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isFeatureMapWrapped()', Sequence{genFeature}) /]

[query public isListDataType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isListDataType()', Sequence{genFeature}) /]

[query public isListType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isListType()', Sequence{genFeature}) /]

[query public isMapType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isMapType()', Sequence{genFeature}) /]

[query public isPrimitiveType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isPrimitiveType()', Sequence{genFeature}) /]

[query public isStringBasedType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isStringBasedType()', Sequence{genFeature}) /]

[query public isStringType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isStringType()', Sequence{genFeature}) /]

[query public isUncheckedCast(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isUncheckedCast()', Sequence{genFeature}) /]

[query public isUncheckedCast(genFeature : GenFeature, ctx : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isUncheckedCast(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genFeature, ctx}) /]

[query public isUnique(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isUnique()', Sequence{genFeature}) /]

[query public isWrappedFeatureMapType(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'isWrappedFeatureMapType()', Sequence{genFeature}) /]

[comment
    Override of services for super interface GenBase 
/]
[query public canGenerate(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'canGenerate()', Sequence{genFeature}) /]

[query public canGenerateEdit(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'canGenerateEdit()', Sequence{genFeature}) /]

[query public canGenerateEditor(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'canGenerateEditor()', Sequence{genFeature}) /]

[query public canGenerateSchema(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'canGenerateSchema()', Sequence{genFeature}) /]

[query public canGenerateTests(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'canGenerateTests()', Sequence{genFeature}) /]

[query public capName(genFeature : GenFeature, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'capName(java.lang.String)', Sequence{genFeature, name}) /]

[query public getCopyright(genFeature : GenFeature, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getCopyright(java.lang.String)', Sequence{genFeature, indentation}) /]

[query public getDocumentation(genFeature : GenFeature, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getDocumentation(java.lang.String)', Sequence{genFeature, indentation}) /]

[query public getGenAnnotation(genFeature : GenFeature, source : String) : GenAnnotation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getGenAnnotation(java.lang.String)', Sequence{genFeature, source}) /]

[query public getGenModel(genFeature : GenFeature) : GenModel
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getGenModel()', Sequence{genFeature}) /]

[query public hasDocumentation(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'hasDocumentation()', Sequence{genFeature}) /]

[query public reconcile(genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'reconcile()', Sequence{genFeature}) /]

[query public safeName(genFeature : GenFeature, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'safeName(java.lang.String)', Sequence{genFeature, name}) /]

[query public uncapName(genFeature : GenFeature, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'uncapName(java.lang.String)', Sequence{genFeature, name}) /]

[query public uncapPrefixedName(genFeature : GenFeature, input : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'uncapPrefixedName(java.lang.String)', Sequence{genFeature, input}) /]






[comment special handling for avoiding NPE due to importManager /]
[query public getQualifiedFeatureAccessor(genFeature : GenFeature) : String =
	invoke('org.eclipse.emf.codegen.ecore.genmodel.GenFeature', 'getQualifiedFeatureAccessor()', Sequence{genFeature})/]
