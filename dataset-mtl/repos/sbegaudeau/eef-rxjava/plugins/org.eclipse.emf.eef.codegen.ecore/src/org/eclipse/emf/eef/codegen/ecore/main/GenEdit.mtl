[comment encoding = UTF-8 
/*******************************************************************************
 * Copyright (c) 2011 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - Initial API and implementation
 *******************************************************************************/
/]
[module GenEdit('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel')/]

[import org::eclipse::emf::eef::codegen::ecore::edit::ItemProvider/]
[import org::eclipse::emf::eef::codegen::ecore::edit::ItemProviderAdapterFactory/]
[import org::eclipse::emf::eef::codegen::ecore::edit::buildproperties/]
[import org::eclipse::emf::eef::codegen::ecore::edit::manifestmf /]
[import org::eclipse::emf::eef::codegen::ecore::edit::Plugin /]
[import org::eclipse::emf::eef::codegen::ecore::edit::pluginproperties /]
[import org::eclipse::emf::eef::codegen::ecore::edit::pluginxml /]
[import org::eclipse::emf::eef::codegen::ecore::edit::editIcons /]
[import org::eclipse::emf::eef::codegen::ecore::services::fileUtil /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenModel /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenPackage /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenClass /]

[template public GenAllGenClass(model : GenModel) ? (model.canGenerateEdit())]
[comment @main /]
[comment edit generation/]
[for (p : GenPackage | model.eAllContents(GenPackage))]
	[if (p.canGenerateEdit() and p.genClasses->notEmpty())]
		[p.ItemProviderAdapterFactory()/]
		[p.CreateChildIcons()/][comment @TODO Check this line is necessary/]
		[for (c : GenClass | p.genClasses)]
			[if (c.canGenerateEdit())]
				[c.ItemProvider()/]
				[if (c.image)]
					[c.ItemIcon()/]
				[/if]
				[if (model.creationCommands and model.creationIcons)]
					[c.CreateChildIcons()/]
				[/if]
			[/if]
		[/for]
	[/if]
[/for]

[if (not model.sameEditEditorProject())]
	[model.Plugin()/]

	[if (model.bundleManifest and not model.fileExistsEdit(model.manifestmfPath()))]
		[model.manifestmf()/]
	[/if]

	[if (not model.fileExistsEdit(model.pluginxmlPath()))]
		[model.pluginxml()/]
	[/if]
[/if]

[if (not model.fileExistsEdit(model.pluginpropertiesPath()))]
	[model.pluginproperties()/]
[/if]

[if (not model.fileExistsEdit(model.buildpropertiesPath()))]
	[model.buildproperties()/]
[/if]
[/template]
