[comment encoding = UTF-8
 *******************************************************************************
 * Copyright (c) 2008-2012 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module singlecompositioneditorGettersSetters('http://www.eclipse.org/emf/eef/views/1.0.0') extends org::eclipse::emf::eef::codegen::widgets::api::widgetGettersSetters/]

[import org::eclipse::emf::eef::codegen::services::common /]
[import org::eclipse::emf::eef::codegen::services::naming /]
[import org::eclipse::emf::eef::codegen::widgets::api::widgetGettersSetters /]
[import org::eclipse::emf::eef::codegen::services::imports /]

[template public setterDeclaration(elementEditor : ElementEditor) overrides setterDeclaration ? (elementEditor.representationName('SingleCompositionEditor'))]
[elementEditor.initSignatureDocumentation()/]
[elementEditor.initSignature()/];

[elementEditor.setterSignatureDocumentation()/]
[elementEditor.setterSignature()/];
[/template]

[template public initSignatureDocumentation(elementEditor : ElementEditor) overrides initSignatureDocumentation ? (elementEditor.representationName('SingleCompositionEditor'))]
	/**
	 * Init the [elementEditor.name/]
	 * @param settings the combo setting
	 */
[/template]

[template public initSignature(elementEditor : ElementEditor) overrides initSignature ? (elementEditor.representationName('SingleCompositionEditor'))]
	public void init[elementEditor.viewPackageSignature()/]([include('org.eclipse.emf.eef.runtime.ui.widgets.eobjflatcombo.EObjectFlatComboSettings')/] settings)
[/template]

[template public getterSignatureImplementation(elementEditor : ElementEditor) overrides getterSignatureImplementation ? (elementEditor.representationName('SingleCompositionEditor'))]
[elementEditor.getterSignature()/] {
		return (EObject) [elementEditor.elementEditorName()/].getInput();
	}
[/template]

[template public setterImplementation(elementEditor : ElementEditor, fullInterfacePath : String) overrides setterImplementation ? (elementEditor.representationName('SingleCompositionEditor'))]
[initSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.initSignatureImplementation()/]

[setterSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.setterSignatureImplementation()/]
[/template]

[template public setterImplementationDelegate(elementEditor : ElementEditor, fullInterfacePath : String, referencedView : View) overrides setterImplementationDelegate ? (elementEditor.representationName('SingleCompositionEditor'))]
[initSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.initSignature()/] {
		[referencedView.name.toJavaIdentifier()/]PropertiesEditionPart.init[elementEditor.viewPackageSignature()/](settings);
	}

[setterSignatureDocumentationImplementation(elementEditor, fullInterfacePath)/]
[elementEditor.setterSignature()/] {
		[referencedView.name.toJavaIdentifier()/]PropertiesEditionPart.[elementEditor.viewPackageSetter()/](newValue);
	}

[/template]

[template public setterSignatureImplementation(elementEditor : ElementEditor) overrides setterSignatureImplementation ? (elementEditor.representationName('SingleCompositionEditor'))]
[elementEditor.setterSignature()/] {
		[elementEditor.elementEditorName()/].refresh();
		[elementEditor.readOnly()/]
	}
[/template]

[template public setterButtonModeSignatureDocumentationImplementation(elementEditor : ElementEditor, fullInterfacePath : String) ? (elementEditor.representationName('SingleCompositionEditor'))]
[/template]

[template public initSignatureDocumentationImplementation(elementEditor : ElementEditor, fullInterfacePath : String) ? (elementEditor.representationName('SingleCompositionEditor'))]
	/**
	 * {@inheritDoc}
	 * 
	 * @see [fullInterfacePath/]#init[elementEditor.viewPackageSignature()/](EObjectFlatComboSettings)
	 */
[/template]

[template public initSignatureImplementation(elementEditor : ElementEditor) overrides initSignatureImplementation ? (elementEditor.representationName('SingleCompositionEditor'))]
[elementEditor.initSignature()/] {
		[elementEditor.elementEditorName()/].setAdapterFactory(adapterFactory);
		[elementEditor.elementEditorName()/].setInput(settings);
		[elementEditor.readOnly()/]
	}
[/template]

[template public addBusinessFilterSignatureImplementation(elementEditor : ElementEditor) ? (elementEditor.representationName('SingleCompositionEditor'))]
[/template]