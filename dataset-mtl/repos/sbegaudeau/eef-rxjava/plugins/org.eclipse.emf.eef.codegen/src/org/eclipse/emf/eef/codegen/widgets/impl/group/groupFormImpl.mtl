[comment encoding = UTF-8
 *******************************************************************************
 * Copyright (c) 2008-2009 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module groupFormImpl('http://www.eclipse.org/emf/eef/views/1.0.0', 'http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/2002/Ecore') extends org::eclipse::emf::eef::codegen::widgets::api::widgetFormImpl/]

[import org::eclipse::emf::eef::codegen::services::common /]
[import org::eclipse::emf::eef::codegen::services::naming /]
[import org::eclipse::emf::eef::codegen::services::viewCommon /]
[import org::eclipse::emf::eef::codegen::services::imports /]

[template public manageImports(widget : Widget, pec : PropertiesEditionComponent, view : View, basePackage : String) overrides manageImports ? (widget.name = 'Group')]
[pec.addImports(Sequence{
	'org.eclipse.ui.forms.widgets.FormToolkit',
	'org.eclipse.swt.widgets.Composite',
	'org.eclipse.ui.forms.widgets.Section',
	'org.eclipse.swt.layout.GridLayout',
	'org.eclipse.swt.layout.GridData'})/]
[/template]

[template public implementation(container : Container) overrides implementation ? (container.representation.name = 'Group')]
return create[container.name.toJavaClassifier()/]Group(widgetFactory, parent);
[/template]

[template public additionalImplementation(container : Container, pec : PropertiesEditionComponent, inputPEC: PropertiesEditionComponent) overrides additionalImplementation ? (container.representation.name = 'Group')]
	/**
	 * [container.owningViewsRepository().associatedGenModel().generationMark()/]
	 */
	protected Composite create[container.name.toJavaClassifier()/]Group(FormToolkit widgetFactory, final Composite parent) {
		Section [container.name.toJavaIdentifier()/]Section = widgetFactory.createSection(parent, Section.TITLE_BAR | Section.TWISTIE | Section.EXPANDED);
		[container.name.toJavaIdentifier()/]Section.setText([include(container.owningViewsRepository().qualifiedMessagesProvider())/].[container.groupKey(container.owningView())/]);
		GridData [container.name.toJavaIdentifier()/]SectionData = new GridData(GridData.FILL_HORIZONTAL);
		[container.name.toJavaIdentifier()/]SectionData.horizontalSpan = 3;
		[container.name.toJavaIdentifier()/]Section.setLayoutData([container.name.toJavaIdentifier()/]SectionData);
		Composite [container.name.toJavaIdentifier()/]Group = widgetFactory.createComposite([container.name.toJavaIdentifier()/]Section);
		GridLayout [container.name.toJavaIdentifier()/]GroupLayout = new GridLayout();
		[container.name.toJavaIdentifier()/]GroupLayout.numColumns = 3;
		[container.name.toJavaIdentifier()/]Group.setLayout([container.name.toJavaIdentifier()/]GroupLayout);
		[container.name.toJavaIdentifier()/]Section.setClient([container.name.toJavaIdentifier()/]Group);
		return [container.name.toJavaIdentifier()/]Group;
	}
[/template]
