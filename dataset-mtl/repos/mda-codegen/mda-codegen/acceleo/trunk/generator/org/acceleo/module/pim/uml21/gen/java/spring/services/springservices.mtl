[comment encoding = UTF-8 /]
[module springservices('http://www.eclipse.org/uml2/3.0.0/UML')/]

[query public getSpecifiedBeanId(arg0 : Element) : String
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'getSpecifiedBeanId(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public computeBeanId(arg0 : Element) : String
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'computeBeanId(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public computeBeanId(arg0 : String) : String
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'computeBeanId(java.lang.String)', Sequence{arg0}) /]

[query public hasServicesRemoteOperations(arg0 : Element) : Boolean
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'hasServicesRemoteOperations(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public hasRemoteOperations(arg0 : Model) : Boolean
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'hasRemoteOperations(org.eclipse.uml2.uml.Model)', Sequence{arg0}) /]

[query public hasRemoteOperations(arg0 : Classifier) : Boolean
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'hasRemoteOperations(org.eclipse.uml2.uml.Classifier)', Sequence{arg0}) /]

[query public hasServicesTransactionOperations(arg0 : Element) : Boolean
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'hasServicesTransactionOperations(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public hasTransactionalOperations(arg0 : Class) : Boolean
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'hasTransactionalOperations(org.eclipse.uml2.uml.Class)', Sequence{arg0}) /]

[query public getTransactionalOperations(arg0 : Class) : Sequence(OclAny)
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'getTransactionalOperations(org.eclipse.uml2.uml.Class)', Sequence{arg0}) /]

[query public getRemoteOperations(arg0 : Class) : Sequence(OclAny)
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'getRemoteOperations(org.eclipse.uml2.uml.Class)', Sequence{arg0}) /]

[query public getRemoteClasses(arg0 : Model) : Sequence(OclAny)
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'getRemoteClasses(org.eclipse.uml2.uml.Model)', Sequence{arg0}) /]

[query public isTransactionalPropagationValueSpecified(arg0 : Element) : Boolean
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'isTransactionalPropagationValueSpecified(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public getTransactionalPropagationValue(arg0 : Operation) : String
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'getTransactionalPropagationValue(org.eclipse.uml2.uml.Operation)', Sequence{arg0}) /]

[query public isTransactionalIsolationValueSpecified(arg0 : Element) : Boolean
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'isTransactionalIsolationValueSpecified(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public getTransactionalIsolationValue(arg0 : Element) : String
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'getTransactionalIsolationValue(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

[query public getAssociatedBusinessObject(arg0 : Class) : Class
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'getAssociatedBusinessObject(org.eclipse.uml2.uml.Class)', Sequence{arg0}) /]

[query public isJavaClassifier(arg0 : Classifier) : Boolean
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'isJavaClassifier(org.eclipse.uml2.uml.Classifier)', Sequence{arg0}) /]

[query public getDefaultValue(arg0 : Element) : String
	= invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'getDefaultValue(org.eclipse.uml2.uml.Element)', Sequence{arg0}) /]

