[comment encoding = UTF-8 /]
[module generateManageableServiceContextXml('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::service::common::servicePathUtil /]
[import org::acceleo::module::pim::uml21::gen::java::common::common /]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::common::pathUtil /]
[import org::acceleo::module::pim::uml21::gen::java::spring::profile /]
[import org::acceleo::module::pim::uml21::gen::java::common::requests /]
[template public generateManageableServiceContextXml(aModel : Model, resourceFoler : String)]
	[file (aModel.generateProjectFolder().concat(resourceFoler).concat('/').concat(aModel.generateProjectFolder()).concat('-manageable.xml'), false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:service="http://www.impalaframework.org/schema/service"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.impalaframework.org/schema/service http://impala.googlecode.com/svn/schema/service-registry.xsd">

    <service:export-array beanNames="[aModel.eAllContents(Class)->select(aClass:Class|aClass.isManageableEntity()).name.toLower().concat('manageableservice')->sep(',')/]"/>
	[for (aEntityClass : Class | aModel.eAllContents(Class)->select(aClass:Class|aClass.isManageableEntity())->asSet())]
    <service:import id = "[aEntityClass.name.toLower()/]manageabledao" proxyTypes = "[if (aEntityClass.generateJavaPackage().size()>0)][aEntityClass.generateJavaPackage()/].[/if]crud.[aEntityClass.name/]ManageableDao"/>
	[/for]

    <!-- CRUD Service Transactional Interceptor. Generated by Spring crud/applicationContext-manageable.xml.vsl -->
    <bean id="manageableServiceTransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager"><ref bean="transactionManager"/></property>
        <property name="transactionAttributeSource">
            <value>
	[for (aEntityClass : Class | aModel.eAllContents(Class)->select(aClass:Class|aClass.isManageableEntity())->asSet())]
		[for (funcName : String | Sequence{'create','read','readAll','readBackingLists','update','delete'})]
                [if (aEntityClass.generateJavaPackage().size()>0)][aEntityClass.generateJavaPackage()/].[/if]crud.[aEntityClass.name.toUpperFirst()/]ManageableService.[funcName/]=PROPAGATION_REQUIRED
		[/for]
	[/for]
            </value>
        </property>
    </bean>

	[for (aEntityClass : Class | aModel.eAllContents(Class)->select(aClass:Class|aClass.isManageableEntity())->asSet())]
    <!-- [aEntityClass.name.toUpperFirst().toUpperFirst()/]ManageableService Service Implementation  -->
    <bean id="[if (aEntityClass.generateJavaPackage().size()>0)][aEntityClass.generateJavaPackage()/].[/if]crud.[aEntityClass.name.toUpperFirst().toUpperFirst()/]ManageableServiceImpl" class="[if (aEntityClass.generateJavaPackage().size()>0)][aEntityClass.generateJavaPackage()/].[/if]crud.[aEntityClass.name.toUpperFirst().toUpperFirst()/]ManageableServiceImpl">
        <property name="dao"><ref local="[aEntityClass.name.toLower()/]manageabledao"/></property>
    </bean>

    <!-- [aEntityClass.name.toUpperFirst().toUpperFirst()/]ManageableService Service Proxy  -->
    <bean id="[aEntityClass.name.toLowerFirst()/]manageableservice" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="[if (aEntityClass.generateJavaPackage().size()>0)][aEntityClass.generateJavaPackage()/].[/if]crud.[aEntityClass.name.toUpperFirst().toUpperFirst()/]ManageableServiceImpl"/></property>
         <property name="proxyInterfaces">
             <value>[if (aEntityClass.generateJavaPackage().size()>0)][aEntityClass.generateJavaPackage()/].[/if]crud.[aEntityClass.name.toUpperFirst().toUpperFirst()/]ManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>manageableServiceTransactionInterceptor</value>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>
	[/for]    
</beans>
	[/file]
[/template]
