[comment encoding = UTF-8 /]
[module generateClasses('http://www.eclipse.org/uml2/4.0.0/UML')]

[import xismobile::pim::uml2::gen::ios::common::xisMobileUtils/]

[template public generateClasses(c : Class)]
[comment generate class.h file/]
[file (c.name + '.h', false, 'UTF-8')]
[if (c.name = 'Task')]
#import "Note.h"
#import "Category1.h"
[/if]
#import <Foundation/Foundation.h>

@interface [c.name.toUpperFirst()/] : NSObject

[if (c.hasXisEntityAttributes())]
	[for (p : Property | c.getXisEntityAttributes())]
		[if (c.isPersistent())]
@property (nonatomic, retain)[if p.getXisEntityAttributeType() = 'String'] NSString *[p.name/];[else] UIImage *[p.name/]; [/if]		
		[/if]
	[/for]			
[/if]
[comment for task/]
[if (c.name = 'Task')]
@property (nonatomic, retain) NSMutableArray *notes;
@property (nonatomic, retain) Category1 *category;
@property (nonatomic, retain) Note *note;
[/if]

@end
[/file]

[comment generate class.m file/]
[file (c.name + '.m', false, 'UTF-8')]

#import "[c.name/].h"

@implementation [c.name.toUpperFirst()/]

[if (c.name = 'Task')]
- (Category1* ) category{
    if (_category == nil) {
        _category = ['['/]['['/]Category1 alloc[']'/] init[']'/];
    }
    return _category;
}

- (Note* ) note{
    if (_note == nil) {
        _note = ['['/]['['/]Note alloc[']'/] init[']'/];
    }
    return _note;
}
[/if]

@end

[/file]
[/template]






