[comment encoding = UTF-8 /]
[module config(
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::doctrine::names/]
[import uk::ac::man::cs::mdsd::orm::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::names/]
[import uk::ac::man::cs::mdsd::waf::m2t::symfony::uriRoutes/]


[template public configSecurity(model : WafModel)]
[file (model.configDirectory().concat('/').concat('security').concat(model.ymlExtension()), false)]
# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

[if (model.isAuthenticated())]
    encoders:
	[if (model.isLocallyAuthenticated())]
        FOS\UserBundle\Model\UserInterface: bcrypt
        legacy_encoder:
            id: app.encoder.legacy
	[else]
        Symfony\Component\Security\Core\User\User: plaintext
	[/if]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
	[if (model.isLocallyAuthenticated())]
        fos_userbundle:
            id: fos_user.user_provider.username_email
	[elseif (model.isCasAuthenticated())]
        cas:
            entity:
                class: AppBundle:[authentication.user.modelName()/]
                property: [authentication.userKey.columnName()/]
	[else]
        in_memory:
            memory:
                users:
                    webgen:
                        password: genweb
                        roles: 'ROLE_ADMIN'
                    mbassafc:
                        password: not
                        roles: 'ROLE_ADMIN'
	[/if]

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            switch_user: true
            # activate different ways to authenticate
	[if (model.isLocallyAuthenticated())]
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
            logout: true
		[if (model.localAuthentication().allowRememberMe)]
            remember_me:
                secret:   '%secret%'
                lifetime: 1209600 # 14 days
		[/if]
	[elseif (model.isCasAuthenticated())]
            guard:
                authenticators:
                    - app.cas_authenticator
	[else]
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate
            http_basic:
                 provider: in_memory
	[/if]

	[if (model.isAuthenticated())]
    # [protected ('role.hierarchy')]
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ['['/]ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH[']'/]

    # [/protected]
	[/if]
    access_control:
	[if (model.isLocallyAuthenticated())]
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
	[/if]
	[if (model.isAuthenticated())]
        # [protected ('authorisation')]
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/, role: ROLE_USER }
        # [/protected]
	[/if]
[/if]
[/file]
[/template]
