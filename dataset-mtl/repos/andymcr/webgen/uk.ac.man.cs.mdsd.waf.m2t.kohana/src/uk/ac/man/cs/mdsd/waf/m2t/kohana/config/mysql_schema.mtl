[comment encoding = UTF-8 /]
[module mysql_schema(
	'http://cs.manchester.ac.uk/mdsd/ObjectRelationalMapping',
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::criteria/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]


[template public mySqlSchema(model : WafModel)]
[file (model.configDirectory().concat('/').concat('mySqlSchema.ddl'), false)]
CREATE TABLE IF NOT EXISTS  `ci_sessions` (
	`session_id` varchar(40) NOT NULL DEFAULT '0',
	`ip_address` varchar(45) NOT NULL DEFAULT '0',
	`user_agent` varchar(120) NOT NULL,
	`last_activity` int(10) unsigned NOT NULL DEFAULT 0,
	`user_data` text NOT NULL,
	PRIMARY KEY (session_id),
	KEY `last_activity_idx` (`last_activity`)
);

[for (entity : Entity | model.persistence.entitiesAndViews->select(e | e.oclIsTypeOf(Entity)).oclAsType(Entity))]
CREATE TABLE IF NOT EXISTS `[entity.tableName/]` (
	`[entity.autoKeyName/]` INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY[if (entity.features->notEmpty())],[/if]
	[for (feature : Feature | entity.tableColumns())]
	[feature.generateColumn()/],
	[/for]
	`created` datetime not null,
	`updated` datetime
);

[/for]

[for (association : EntityAssociation | model.persistence.manyToManyAssociations()->select(a | a.owningEnd))]
CREATE TABLE IF NOT EXISTS `[association.pivotTableName/]` (
	`[association.columnName/]` INT(11) NOT NULL,
	`[association.opposite.oclAsType(CollectionAssociation).columnName/]` INT(11) NOT NULL
);

[/for]
[for (view : View | model.persistence.entitiesAndViews->select(e | e.oclIsTypeOf(View)).oclAsType(View))]
CREATE OR REPLACE VIEW [view.name/] AS
SELECT
	[for (feature : Feature | view.features) separator(',\n\t')][feature.viewColumn()/][/for]
FROM [for (entityOrView : EntityOrView | view.encapsulates) separator(', ')][entityOrView.selectName()/][/for];

[/for]
[/file]
[/template]


[template protected generateColumn(feature : Feature)
	? (feature.isDataType()) post(trim())]
[let element : SingletonElement = feature.oclAsType(SingletonElement)]
`[element.columnName/]` [if (element.persistentType = 'String')]
varchar(255)[elseif (element.persistentType = 'TextBlock')]
TEXT[elseif (element.persistentType = 'Binary')]
blob[elseif (element.persistentType = 'Integer')]
integer[elseif (element.persistentType = 'Boolean')]
tinyint(1)[else]
[element.persistentType/][/if][if
	(element.required)] NOT NULL[/if][if
	(not element.defaultValue.oclIsUndefined())] DEFAULT [element.defaultValue.generateCriteria()/][/if]
[/let]
[/template]

[template protected generateColumn(feature : Feature)
	? (feature.isEnumerationType()) post(trim())]
[let element : SingletonElement = feature.oclAsType(SingletonElement)]
`[element.columnName/]` int(8) [if 
	(element.required)] NOT NULL[/if][if
	(not element.defaultValue.oclIsUndefined())] DEFAULT [element.defaultValue.generateCriteria()/][/if]
[/let]
[/template]

[template protected generateColumn(feature : Feature)
	? (feature.oclIsTypeOf(SingletonDate)) post(trim())]
[let element : SingletonDate = feature.oclAsType(SingletonDate)]
`[element.columnName/]` [if (element.details = DateDetails::DateOnly)]
DATE[elseif (element.details = DateDetails::TimeOnly)]
TIME[else]
DATETIME[/if][if (element.required)] NOT NULL[/if][if
	(not element.defaultValue.oclIsUndefined())] DEFAULT [element.defaultValue.generateCriteria()/][/if]
[/let]
[/template]

[template protected generateColumn(feature : Feature)
	? (feature.oclIsTypeOf(SingletonURL)) post(trim())]
[let element : SingletonURL = feature.oclAsType(SingletonURL)]
`[element.columnName/]` VARCHAR(255)[if (element.required)] NOT NULL[/if][if
	(not element.defaultValue.oclIsUndefined())] DEFAULT [element.defaultValue.generateCriteria()/][/if]
[/let]
[/template]

[template protected generateColumn(feature : Feature)
	? (feature.oclIsKindOf(SingletonResource)) post(trim())]
[let element : SingletonResource = feature.oclAsType(SingletonResource)]
`[element.columnName/]` varchar(255)[if (element.required)] NOT NULL[/if][if
	(not element.defaultValue.oclIsUndefined())] DEFAULT [element.defaultValue.generateCriteria()/][/if]
[/let]
[/template]

[template protected generateColumn(feature : Feature)
	? (feature.oclIsTypeOf(SingletonAssociation)) post(trim())]
[let association : SingletonAssociation = feature.oclAsType(SingletonAssociation)]
`[association.columnName/]` INT(11)
[/let]
[/template]


[template protected viewColumn(feature : Feature)
	? (feature.oclIsTypeOf(EncapsulatedAttribute)) post(trim())]
[let attribute : EncapsulatedAttribute = feature.oclAsType(EncapsulatedAttribute)]
`[attribute.attribute.partOf.selectName()/]`.`[attribute.attribute.columnName()/]` AS `[attribute.columnName()/]`
[/let]
[/template]

[template protected viewColumn(feature : Feature)
	? (feature.oclIsTypeOf(EncapsulatedAssociation)) post(trim())]
[let association : EncapsulatedAssociation = feature.oclAsType(EncapsulatedAssociation)]
`[association.association.partOf.selectName()/]`.`[association.association.columnName()/]` AS `[association.columnName()/]`
[/let]
[/template]
