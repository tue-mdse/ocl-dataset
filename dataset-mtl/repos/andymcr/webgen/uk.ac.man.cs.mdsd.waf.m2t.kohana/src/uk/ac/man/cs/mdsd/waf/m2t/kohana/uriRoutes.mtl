[comment encoding = UTF-8 /]
[module uriRoutes(
	'http://cs.manchester.ac.uk/mdsd/ObjectRelationalMapping',
	'http://cs.manchester.ac.uk/mdsd/Service',
	'http://cs.manchester.ac.uk/mdsd/WebApplicationFramework')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::uriRoutes/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]

[template public routeParameters(entityOrView : EntityOrView) post(trim())]
[for (key : Attribute | entityOrView.uriPathKeys()) separator (', ')]
$[key.routeParameterName(entityOrView)/][/for]
[/template]

[query public routeParameterName(attribute : Attribute, entityOrView : EntityOrView) : String
	= if entityOrView.uriPathKeys()->select(k | k.name.toLowerCase() = attribute.name.toLowerCase())->size() < 2 then
			attribute.name
		else
			attribute.partOf.modelName().toLowerFirst()
				.concat(attribute.name.toUpperFirst())
		endif
/]


[query private parentUriPath(yyy : EntityOrView) : String
	= let keyEntity : EntityOrView
		= yyy.keyEntity()
		in if keyEntity.oclIsUndefined() then
				''
			else if not keyEntity.isContained() then
				''
			else
				keyEntity.container().uriPath(yyy)
					.concat('/')
					.concat(keyEntity.containingAssociation().opposite.name)
			endif endif
/]

[query public uriPath(entityOrView : EntityOrView) : String
	= entityOrView.uriPath(entityOrView)
/]

[query private uriPath(entityOrView : EntityOrView, base : EntityOrView) : String
	= let keyEntity : EntityOrView = entityOrView.keyEntity()
		in if keyEntity.oclIsUndefined() then
				''
			else
				let keyPath : String
					= keyEntity.attributeKeys()
						-- should pass base to routeParameterName, but causes problems with shared paths on a page
						->collect(k | k.routeParameterName(entityOrView))->sep('<', '>/<', '>')->toString()
					in if not keyEntity.isContained() then
							keyPath
						else
							let parentPath : String
								= keyEntity.container().uriPath(base)
								in if parentPath = '' then
										keyEntity.containingAssociation().opposite.name
											.concat('/')
											.concat(keyPath)
									else
										parentPath
											.concat('/')
											.concat(keyEntity.containingAssociation().opposite.name)
											.concat('/')
											.concat(keyPath)
									endif
						endif
			endif
/]

[query public uriPath(page : Page) : String
	= if page.parentPage.oclIsUndefined() then
			page.uriElement
		else
			let parentUri : String = page.parentPage.uriPath()
			in if parentUri = '' then
					page.uriElement
				else if page.uriElement = '' then
					parentUri
				else
					parentUri.concat('/').concat(page.uriElement)
				endif endif
		endif
/]

[query private entityUriPath(unit : ContentUnit, create : Boolean) : String
	= if not unit.oclIsKindOf(DynamicUnit) then
			''
		else
			let dynamicUnit : DynamicUnit
				= unit.oclAsType(DynamicUnit)
				in if dynamicUnit.entities->isEmpty() then
						''
					else
						let entityOrView : EntityOrView
							= dynamicUnit.entities->first()
							in if unit.oclIsKindOf(Selectable) and not create then
									entityOrView.uriPath()
								else
									entityOrView.parentUriPath()
								endif
					endif
		endif
/]

[query public uriPath(unit : ContentUnit) : String
	= unit.uriPath(false)
/]

[query public uriPath(unit : ContentUnit, create : Boolean) : String
	= let localPath : String
		= let entityPath : String
			= if not unit.oclIsKindOf(DynamicUnit) then
					unit.entityUriPath(create)
				else if unit.oclAsType(DynamicUnit).noRouteParameters then
					''
				else
					unit.entityUriPath(create)
				endif endif
			in let uriElement : String
				= if unit.oclIsTypeOf(CreateUpdateUnit) and create then
						'create'
					else
						unit.uriElement
					endif
				in if uriElement = '' then
						entityPath
					else if entityPath = '' then
						uriElement
					else
						entityPath.concat('/').concat(uriElement)
					endif endif
		in let pagePath : String
			= unit.pageDisplayedOn().uriPath()
			in if localPath = '' then
					pagePath
				else if pagePath = '' then
					localPath
				else
					pagePath.concat('/').concat(localPath)
				endif endif
/]

[query public logoutUriPath(unit : LoginUnit) : String
	= let pagePath : String
		= unit.pageDisplayedOn().uriPath()
		in if pagePath = '' then
				unit.logoutUriElement
			else
				pagePath.concat('/').concat(unit.logoutUriElement)
			endif
/]

[query public supportUriPath(unit : ContentUnit) : String
	= unit.uriPath().concat('/support')
/]

[query public uriPath(action : DeleteAction) : String
	= let localPath : String
		= action.immediateUnit().entities->first().uriPath()
			.concat('/').concat(action.uriElement)
		in let pagePath : String
			= action.immediateUnit().pageDisplayedOn().uriPath()
			in if localPath = '' then
					pagePath
				else if pagePath = '' then
					localPath
				else
					pagePath.concat('/').concat(localPath)
				endif endif
/]

[query public uriPath(action : FeatureSupportAction) : String
	= let localPath : String
		= action.immediateUnit().entities->first().uriPath()
			.concat('/').concat(action.uriElement)
		in let pagePath : String
			= action.immediateUnit().pageDisplayedOn().uriPath()
			in if localPath = '' then
					pagePath
				else if pagePath = '' then
					localPath
				else
					pagePath.concat('/').concat(localPath)
				endif endif
/]
