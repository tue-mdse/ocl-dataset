[comment encoding = UTF-8 /]
[module enumerationModel(
	'http://cs.manchester.ac.uk/mdsd/ObjectRelationalMapping')]
[import uk::ac::man::cs::mdsd::orm::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::core::featureProperties/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::files/]
[import uk::ac::man::cs::mdsd::waf::m2t::kohana::names/]


[template public model(dataType : DataType) ? (dataType.oclIsTypeOf(EnumerationType))]
[let enumerationType : EnumerationType = dataType.oclAsType(EnumerationType)]
[file(enumerationType.modelFilename(), false)]
<?php
class [enumerationType.modelClassName()/] {
[for (literal : EnumerationLiteral | enumerationType.enumerations)]
    const [literal.name()/] = [i/];
[/for]

    public static function options($required = FALSE)
    {
        $options = array();
        if (!$required)
            $options['['/][']'/] = '';
[for (literal : EnumerationLiteral | enumerationType.enumerations)]
        $options['['/]self::[literal.name()/][']'/] = '[literal.displayLabel/]';
[/for]

        return $options;
    }

    public static function option($value = null, $default = '')
    {
        $options = [enumerationType.modelClassName()/]::options();

        if (array_key_exists($value, $options))
            return $options['['/]$value[']'/];

        return $default;
    }

}
[/file]
[/let]
[/template]
