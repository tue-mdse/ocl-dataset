[comment encoding = UTF-8 /]
[module generateInitPrivileges('http://www.businessdecision.fr/Generator')]
[import org::bd::pfe::generator::persistance::packagePath /]

[template public generateInitPrivileges(process : Process)  {packageName : String = process.eContainer(Application)._package;    projectName : String = process.eContainer(Application).name;}]

[file('/pfe-service/src/main/java/'.concat(process.eContainer(Application)._package.convertPackageToPath() .concat('/initDb/')).concat('InitPrivileges.java'), false, 'UTF-8')]
package com.bd.initDb;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import [packageName/].exception.BDException;
import [packageName/].configuration.JavaConfig;
import [packageName/].service.PrivilegeService;
import [packageName/].persistance.Privilege;
 

public class InitPrivileges {
 
	public static void main(String['[]'/] args) {
		    ApplicationContext ctx1 =new AnnotationConfigApplicationContext(JavaConfig.class) ;
		    PrivilegeService privilegeService = (PrivilegeService) ctx1.getBean("privilegeServiceImplement") ;

[for   (p : SubProcess | process.subProcess)]
  Privilege p[p.name.replaceAll(' ',  '')/]     = new Privilege("[p.name/] " ,"");
  
[for   (c : Create | p.creates)]   
     Privilege p[c.name/]   = new Privilege("[c.name/] " ,"[c.name/]");
	 p[c.name/]   .setPrivilegeSup(p[p.name.replaceAll(' ',  '')/]    ); 
 [/for]

[for   (m : MasterDetail | p.masterDeatails)]   
     Privilege p[m.name/]     = new Privilege("[m.name/]" ,"[m.name/]");
     p[m.name/]    .setPrivilegeSup(p[p.name.replaceAll(' ',  '')/]   );
[/for]

[for   (s : SimpleUseCase | p.simpleUseCases)]  
     Privilege p[s.name/]= new Privilege(" [s.name/] " ," [s.name/]");
     p[s.name/]  .setPrivilegeSup(p[p.name.replaceAll(' ',  '')/]   );
 [/for]

 [for   (man : Manage | p.manages)]  
      Privilege p[p.manages.name/] = new Privilege("  [man.name/]" ," [man.name/]");
      p[man.name/]   .setPrivilegeSup(p[p.name.replaceAll(' ',  '')/]   );
 [/for]



[/for]
    
try {
[for   (p : SubProcess | process.subProcess)]
privilegeService.createPrivilege( p[p.name.replaceAll(' ',  '')/]  ) ;
[for   (c : Create | p.creates)]
privilegeService.createPrivilege( p[c.name/]) ; [/for]
[for   (m : MasterDetail | p.masterDeatails)]    
privilegeService.createPrivilege( p[m.name/]) ; [/for]

[for   (s : SimpleUseCase | p.simpleUseCases)]  
privilegeService.createPrivilege( p[s.name/]) ;[/for]

 [for   (man : Manage | p.manages)]  
privilegeService.createPrivilege( p[man.name/]) ; [/for]

[/for]      
} catch (BDException e) {
	 	e.printStackTrace();
}
 
	    Privilege p     = new Privilege("gestion de role " ,"");
	    Privilege p1   = new Privilege("gestion des utilisateurs" ,"gestionUsers");
        Privilege p2  = new Privilege("gestion des roles "           ,"gestionRoles");
		Privilege p3  = new Privilege("gestion des permissions" ,"gestionPermissions");
		
		p1.setPrivilegeSup(p);
		p2.setPrivilegeSup(p);
		p3.setPrivilegeSup(p);
		 try {
	   privilegeService.createPrivilege(p) ;
		privilegeService.createPrivilege(p1) ;
		privilegeService.createPrivilege(p2) ;
		privilegeService.createPrivilege(p3) ;
       } catch (BDException e) {
	 	e.printStackTrace();
}
	}

}

[/file]
[/template]
