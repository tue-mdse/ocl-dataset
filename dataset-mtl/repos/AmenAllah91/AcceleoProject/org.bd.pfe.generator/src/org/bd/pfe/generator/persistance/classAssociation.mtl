[comment encoding = UTF-8 /]
[module classAssociation('http://www.businessdecision.fr/Generator')]
[import org::bd::pfe::generator::persistance::typeAttributes /]
[import org::bd::pfe::generator::persistance::packagePath /]

[template public generateAssoctiationClass(persistance : AssociationClass){packageName : String = persistance.eContainer(Application)._package;}]
[file(persistance.eContainer(Application).name.concat('-domaine/src/main/java/').concat(packageName.convertPackageToPath().concat('/persistance/')).concat(persistance.name.toUpperFirst()).concat('.java'),false,'UTF-8')]
package [packageName .concat('.persistance')/];


import java.io.Serializable;
import javax.persistence.Entity;
import javax.persistence.EmbeddedId;
import javax.persistence.Id;
import java.util.List;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

[for (att : Attributes | persistance.attributes)]
	[if (type.toString().equalsIgnoreCase('Date')) ]
import java.util.Date;

[/if]
[/for]
/**
 * The Class [persistance.name.toUpperFirst()/].
 * 
 * @author Business & Decision
 *
 */
@Entity
public class [persistance.name.toUpperFirst()/] implements Serializable {
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/**
	 * Instantiates a new [persistance.name.toLowerFirst()/].
	 */
	public [persistance.name.toUpperFirst()/] (){
	}

[for (attr : Attributes | persistance.attributes)]
[if (id=false)]
	
	/** The [name.toLowerFirst()/]. */
	 private [type.toString().convertToAttributes()/]  [name.toLowerFirst()/];
[/if]
	
[/for]
	/** The [persistance.name.toUpperFirst()/]PK. */
	private [persistance.name.toUpperFirst()/]PK [persistance.name.toLowerFirst()/]PK;
	private [persistance.assoctiation.source.name.toUpperFirst()/] [persistance.assoctiation.source.name.toLowerFirst()/];
	private [persistance.assoctiation.target.name.toUpperFirst()/] [persistance.assoctiation.target.name.toLowerFirst()/];


[for (attr : Attributes | persistance.attributes)]
[if (id=false)]
	/**
	 * Gets the  [name.toLowerFirst()/].
	 *
	 * @return the  [name.toLowerFirst()/]
	 */

	 public [type.toString().convertToAttributes()/]  get[name.toUpperFirst()/](){
	return [name.toLowerFirst()/];
	}
	/**
	 * Sets the [name.toLowerFirst()/].
	 *
	 * @param [name.toLowerFirst()/]
	 *            the new [name.toLowerFirst()/]
	 */
 	public void set[name.toUpperFirst()/]([type.toString().convertToAttributes()/] [name.toLowerFirst()/]  ){
	this. [name.toLowerFirst()/]=[name.toLowerFirst()/];
	}	
[/if]
[/for]
/**
	 * Gets the  [persistance.name.toLowerFirst()/]PK.
	 *
	 * @return the  [persistance.name.toLowerFirst()/]PK.
 */
@EmbeddedId
	 public [persistance.name.toUpperFirst()/]PK  get[persistance.name.toUpperFirst()/]PK(){
	return [persistance.name.toLowerFirst()/]PK;
	}
	/**
	 * Sets the [persistance.name.toLowerFirst()/]PK
	 *
	 * @param [persistance.name.toLowerFirst()/]PK.
	 *            the new [persistance.name.toLowerFirst()/]PK.
	 */
 	public void set[persistance.name.toUpperFirst()/]PK([persistance.name.toUpperFirst()/]PK [persistance.name.toLowerFirst()/]PK ){
	this.[persistance.name.toLowerFirst()/]PK=[persistance.name.toLowerFirst()/]PK;
	}

/**
	 * Gets the  [persistance.assoctiation.source.name.toLowerFirst()/].
	 *
	 * @return the  [persistance.assoctiation.source.name.toLowerFirst()/]
	 */
	@ManyToOne
[for (attr : Attributes | assoctiation.source.attributes)]
	[if (id=true)]
		@JoinColumn(name="[attr.name.toLowerFirst()/]_[persistance.assoctiation.source.name.toLowerFirst()/]", updatable=false,insertable=false)
	[/if]
[/for]
	
	 public [persistance.assoctiation.source.name.toUpperFirst()/]  get[persistance.assoctiation.source.name.toUpperFirst()/](){
	 return [persistance.assoctiation.source.name.toLowerFirst()/];
	}
	/**
	 * Sets the  [persistance.assoctiation.source.name.toLowerFirst()/].
	 *
	 * @param [name.toLowerFirst()/]
	 *            the new [name.toLowerFirst()/]
	 */
 	public void set[persistance.assoctiation.source.name.toUpperFirst()/]([persistance.assoctiation.source.name.toUpperFirst()/]  [persistance.assoctiation.source.name.toLowerFirst()/] ){
	this.  [persistance.assoctiation.source.name.toLowerFirst()/]= [persistance.assoctiation.source.name.toLowerFirst()/];
	}	

/**
	 * Gets the  [persistance.assoctiation.target.name.toLowerFirst()/].
	 *
	 * @return the  [persistance.assoctiation.target.name.toLowerFirst()/]
	 */
	@ManyToOne
[for (attr : Attributes | assoctiation.target.attributes)]
	[if (id=true)]
		@JoinColumn(name="[attr.name.toLowerFirst()/]_[persistance.assoctiation.target.name.toLowerFirst()/]", updatable=false,insertable=false)
	[/if]
[/for]
	 public [persistance.assoctiation.target.name.toUpperFirst()/]  get[persistance.assoctiation.target.name.toUpperFirst()/](){
	 return [persistance.assoctiation.target.name.toLowerFirst()/];
	}
	/**
	 * Sets the  [persistance.assoctiation.target.name.toLowerFirst()/].
	 *
	 * @param [name.toLowerFirst()/]
	 *            the new [name.toLowerFirst()/]
	 */
 	public void set[persistance.assoctiation.target.name.toUpperFirst()/]([persistance.assoctiation.target.name.toUpperFirst()/]  [persistance.assoctiation.target.name.toLowerFirst()/] ){
	this.  [persistance.assoctiation.target.name.toLowerFirst()/]= [persistance.assoctiation.target.name.toLowerFirst()/];
	}	

         //[protected (' : you can write your own code')]
			
		//[/protected]
}
[/file]

[/template]
