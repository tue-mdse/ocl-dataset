[comment encoding = UTF-8 /]
[module generateDynamicMenuBean('http://www.businessdecision.fr/Generator')]
[import org::bd::pfe::generator::persistance::packagePath /]

[template public generateDynamicMenuBean(persistance :PersistanceObject)  {packageName : String = persistance.eContainer(Application)._package;}]

[file ('/pfe-web/src/main/java/'.concat(persistance.eContainer(PersistanceModel).eContainer(Application)._package.convertPackageToPath() .concat('/managedBeans/')).concat('DynamicMenuBean.java'),false,'UTF-8')]
package [persistance.eContainer(PersistanceModel).eContainer(Application)._package .concat('.managedBeans')/];
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import org.primefaces.model.menu.DefaultMenuItem;
import org.primefaces.model.menu.DefaultSubMenu;
import org.primefaces.model.menu.DynamicMenuModel;
import org.primefaces.model.menu.MenuModel;
import org.springframework.security.core.context.SecurityContextHolder;
 

import [packageName/].persistance.[persistance.name.toUpperFirst()/];
import [packageName/].persistance.Privilege;
import [packageName/].service.PrivilegeService;
import [packageName/].service.RoleService;


@SessionScoped
@ManagedBean
public class DynamicMenuBean {
	private MenuModel model;

	@ManagedProperty("#{roleServiceImplement}")
	private RoleService roleService;

	@ManagedProperty("#{privilegeServiceImplement}")
	private PrivilegeService privilegeService;

	private List <String> nomPrivileges = new ArrayList<String>() ;
	
	private Set<Privilege> privileges = new HashSet<Privilege>();
	
	private List<Privilege> privilegesFils = new ArrayList<Privilege>();
	
	private Privilege privilegeChoisi ;
	
    private [persistance.name.toUpperFirst()/]  loggedUser ;
	
	@PostConstruct
	public void init()
	{
		
		model = new DynamicMenuModel();
		DefaultSubMenu secondSubmenu;
		DefaultMenuItem item ;
		loggedUser = ([persistance.name.toUpperFirst()/] ) SecurityContextHolder.getContext() .getAuthentication().getPrincipal();
        privileges = loggedUser.getRole().getPrivileges() ;
		
        for(Privilege p : privileges )
		{	
			
			if (p.getPrivilegeSup()==null)
			{
				secondSubmenu = new DefaultSubMenu(p.getName());
				
				for(Privilege p1 : privileges)
				{
					if(p1.getPrivilegeSup()!=null &&  p1.getPrivilegeSup()==p) 
					{    
						item=new DefaultMenuItem(p1.getName()) ;
					    item.setUrl("http://localhost:8080/pfe-Web/securePages/"+p1.getUrl()+"/"+"index.jsf");
						secondSubmenu.addElement(item); 
						
					}
					 
				}
				model.addElement(secondSubmenu);
			 
			}
		}
		
	}
 
 
 

	public MenuModel getModel() {
		return model;
	}

	public List<String> getNomPrivileges() {
		return nomPrivileges;
	}

	public void setNomPrivileges(List<String> nomPrivileges) {
		this.nomPrivileges = nomPrivileges;
	}
	public [persistance.name.toUpperFirst()/]  getLoggedUser() {
		return loggedUser;
	}

	public void setLoggedUser([persistance.name.toUpperFirst()/]  loggedUser) {
		this.loggedUser = loggedUser;
	}

	public RoleService getRoleService() {
		return roleService;
	}

	public void setRoleService(RoleService roleService) {
		this.roleService = roleService;
	}

	public PrivilegeService getPrivilegeService() {
		return privilegeService;
	}

	public void setPrivilegeService(PrivilegeService privilegeService) {
		this.privilegeService = privilegeService;
	}

	public Set<Privilege> getPrivileges() {
		return privileges;
	}

	public void setPrivileges(Set<Privilege> privileges) {
		this.privileges = privileges;
	}

	public List<Privilege> getPrivilegesFils() {
		return privilegesFils;
	}

	public void setPrivilegesFils(List<Privilege> privilegesFils) {
		this.privilegesFils = privilegesFils;
	}

	public Privilege getPrivilegeChoisi() {
		return privilegeChoisi;
	}

	public void setPrivilegeChoisi(Privilege privilegeChoisi) {
		this.privilegeChoisi = privilegeChoisi;
	}


	public void setModel(MenuModel model) {
		this.model = model;
	}

}

[/file]
[/template]
