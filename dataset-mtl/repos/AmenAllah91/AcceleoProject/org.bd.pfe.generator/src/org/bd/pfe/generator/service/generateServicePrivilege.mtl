[comment encoding = UTF-8 /]
[module generateServicePrivilege('http://www.businessdecision.fr/Generator')]
[import org::bd::pfe::generator::persistance::packagePath /]

[template public generateServicePrivilege(persistance :PersistanceObject){packageName : String = persistance.eContainer(Application)._package;}]

[file(persistance.eContainer(Application).name.concat('-service/src/main/java/').concat(packageName.convertPackageToPath().concat('/service/')).concat('PrivilegeService').concat('.java'),false,'UTF-8')]
package [packageName.concat('.service')/];
import java.util.List;
import java.util.Set;
import [packageName.concat('.persistance').concat('.Permission')/];
import [packageName.concat('.persistance').concat('.Privilege')/];
import [packageName.concat('.persistance')/].[persistance.name.toUpperFirst()/];
import [packageName.concat('.exception')/].BDException;

/**
 * The Interface  PrivilegeService .
 *
 * @author Business & Decision
 *
 */

public interface PrivilegeService {
        
        /**
         *
         * This method populates our database with a new record of privilege.
         * @param privilege the instance of Privilege to be recorded.
         * @return indicates whether the create method succeds or fails.
         */ 

         Boolean createPrivilege(Privilege privilege)throws  BDException;
	     
         /**
         *
         * This method updates existing data privilege.
         * @param privilege the record of Privilege to be updated.
         * @return indicates whether the update method succeds or fails.
         */

         Boolean updatePrivilege(Privilege privilege)throws  BDException;
	     
         /**
         *
         * This method removes data privilege from the database.
         * @param privilege the record of Privilege to be removed.
         * @return indicates whether the delete method succeds or fails
         */
         
         Boolean deletePrivilege(Privilege privilege)throws  BDException;
	     
         /**
         *
         * This method returns all the exsisting records of privilege from the database.
         * @return the list of the existing records of privilege. 
         */

         List<Privilege> findAll(); 
	     
        /**
         *
         * This method returns the one record of permission by ID.
         * @param id 
		 * @return the record of Permission having the id value retrieved from the database.
         */


         Privilege findPrivilegeById (Long id)throws  BDException;

         /**
         *
         * This method affects [persistance.name.toUpperFirst()/] to privilege .
         * @param [persistance.name.toLowerFirst()/].
         * @param privilege
         * @param create permission
         * @param update permission
         * @param delete permission
		 * @return indicates whether the assign method succeds or fails
         */

	     Boolean assign[persistance.name.toUpperFirst()/]ToPrivilege([persistance.name.toUpperFirst()/]  [persistance.name.toLowerFirst()/] ,Privilege privilege ,Boolean create , Boolean delete  ,  Boolean update)  ;
         
         /**
         *
         * This method returns the one record of privilege by name.
         * @param name 
		 * @return the record of Privilege having the id value retrieved from the database.
         */
         Privilege findPrivilegeByName(String name) ;
         
         /**
         *
         * This method returns the one record of privilege by url.
         * @param url 
		 * @return the record of Privilege having the id value retrieved from the database.
         */
         Privilege findPrivilegeByUrl(String url) ;

         /**
         *
         * This method returns all the privilegeParent.
		 * @return the list of Privilege retrieved from the database.
         */
          
	     List<Privilege> findPrivilegeParent();

         /**
         *
         * This method returns all the privilegeFils.
		 * @return the list of Privilege retrieved from the database.
         */
	     Set<Privilege> findPrivilegeFils() ;


         
        //[protected (' : you can write your own code')]
			
		//[/protected]
}

[/file]



[/template]
