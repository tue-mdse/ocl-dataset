[comment encoding = UTF-8 /]
[module generate('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public generate(aClass : Class)]

[comment @main /] 
[comment code to generate class/]
[file (aClass.name.toUpperFirst().concat('.java'), false)]

[if (not aClass.visibility.toString().equalsIgnoreCase('package'))][aClass.visibility/][/if] [if (aClass.isAbstract)]abstract[/if] [if (aClass.isLeaf)]final[/if] class [aClass.name.replaceAll('[ .]', '').toUpperFirst()/] 
[for (superC : Class | aClass.superClass)
		before('extends ')
		separator(',')]
[superC.name/]
[/for] 
[for(interf: Interface | aClass.getImplementedInterfaces()) 
		before ('implements ')
		separator(',')] 
	[interf.name/]
[/for] {

[comment code to generate attributes/]
[for (p: Property | aClass.attribute) separator('\n')]
[if (p.visibility.toString().equalsIgnoreCase('package'))][else][p.visibility/][/if] [if (p.isStatic)]static[/if] [if (p.isReadOnly)]final[/if] [p.type.name.replaceAll(' ', '')/] [p.name.replaceAll(' ', '')/];
[/for]

[comment code to generate methods/]
[for (o: Operation | aClass.ownedOperation) separator('\n')] 
[if (o.visibility.toString().equalsIgnoreCase('package'))][else][o.visibility/][/if] [if (o.isAbstract)]abstract[/if] [if (o.isStatic)]static[/if] [if (o.isLeaf)]final[/if] [o.type.name.replaceAll(' ', '')/] [o.name.replaceAll(' ', '')/]([for(p: Parameter | o.ownedParameter->select(param : Parameter | param.direction = ParameterDirectionKind::_in)) separator(', ')][p.type.name/] [p.name/][/for]) {} 
[/for]

}
[/file]

[/template]