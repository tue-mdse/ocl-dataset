[comment encoding = UTF-8 /]
[module templateTest('http://www.eclipse.org/uml2/4.0.0/UML') extends idv::hsiehpinghan::acceleo::java::template::templateClassifier]

[import idv::hsiehpinghan::acceleo::utility::propertyUtility /]
[import idv::hsiehpinghan::acceleo::java::template::query::queryClassJava /]
[import idv::hsiehpinghan::acceleo::testng::template::templateTestng /]

[comment]---------------------------public---------------------------[/comment]
[**
 * 取得測test的資料夾+檔名+附檔名字串。
 * @param aClass
 */]
[template public templateTestFileNameWithFolderAndExtension(aClass : Class) post (self.trim())]
	[queryProperty('testng', 'testSourceFolderPath') /]/[aClass.templateClassifierFolderPath() /]/[aClass.templateTestClassName() /].java
[/template]

[**
 * 產生testng的test檔。
 * @param aClass
 */]
[template public templateTest(aClass : Class)]
[aClass.templatePackageSection() /]

[aClass.templateClassImportSection() /]

[aClass.templateTestClassSection() /]
[/template]

[comment]--------------------------protected-------------------------[/comment]


[comment]---------------------------private--------------------------[/comment]
[**
 * 產生operation的javadocSection。
 * @param anOperation
 */]
[template private templateOperationJavadocSection(anOperation : Operation)]
/**
[if (anOperation.queryOwnedComments()->isEmpty() = false)]
 [anOperation.templateJavadocCommentsSection() /]
[/if]
 *
 * @generated NOT
 */
[/template]

[**
 * 取得operations section。
 * @param anOperation
 */]
[template private templateOperationSection(anOperation : Operation) post(self.trim())]
	public void [anOperation.queryName() /][anOperation.templateOperationParametersSeparatedString() /]()
[/template]

[**
 * 產生operation的annotationSection。
 * @param anOperation
 */]
[template private templateOperationAnnotationSection(anOperation : Operation)]
@Test
@Override
[/template]

[**
 * 取得test的class名稱。
 * @param aClass
 */]
[template private templateTestClassName(aClass : Class)]
[aClass.queryName() /]_Test
[/template]

[**
 * 產生import部份。
 * @param aClass
 */]
[template private templateClassImportSection(aClass : Class) post(self.trim())]
// [protected ('for import section')]
import org.testng.annotations.Test;
// [/protected]
[/template]

[**
 * 取得test的class section。
 * @param aClass
 */]
[template private templateTestClassSection(aClass : Class)]
public class [aClass.templateTestClassName() /] implements [aClass.templateTestInterfaceInterfaceName() /] {
[aClass.templateTestPropertiesSection() /]

//	/**
//	 * @generated NOT
//	 */
//	@DataProvider
//	public Object['[' /][']' /]['[' /][']' /] dataProvider() {
//		return null;
//	}

//	/**
//	 * @generated NOT
//	 */
//	@BeforeSuite
//	public void beforeSuite() {
//	}

//	/**
//	 * @generated NOT
//	 */
//	@BeforeTest
//	public void beforeTest() {
//	}

//	/**
//	 * @generated NOT
//	 */
//	@BeforeClass
//	public void beforeClass() {
//	}

//	/**
//	 * @generated NOT
//	 */
//	@BeforeMethod
//	public void beforeMethod() {
//	}

[aClass.templateTestOperationsSection() /]

//	/**
//	 * @generated NOT
//	 */
//	@AfterMethod
//	public void afterMethod() {
//	}

//	/**
//	 * @generated NOT
//	 */
//	@AfterClass
//	public void afterClass() {
//	}

//	/**
//	 * @generated NOT
//	 */
//	@AfterTest
//	public void afterTest() {
//	}

//	/**
//	 * @generated NOT
//	 */
//	@AfterSuite
//	public void afterSuite() {
//	}

}
[/template]

[**
 * 取得test的propertiesSession。
 * @param aClass
 */]
[template private templateTestPropertiesSection(aClass : Class)]
	/**
	 * @generated NOT
	 */
	private [aClass.queryName() /] [aClass.queryName().toLowerFirst() /] = new [aClass.queryName() /]();
[/template]

[**
 * 取得test的operations section。
 * @param aClass
 */]
[template private templateTestOperationsSection(aClass : Class)]
[for (anOperation : Operation | aClass.queryOperations())]
	[anOperation.templateOperationJavadocSection() /]
	[anOperation.templateOperationAnnotationSection() /]
	[anOperation.templateOperationSection() /] {
		// TODO : need be to implemented
	}
[/for]

	/***********************
	 * Implemented methods *
	 **********************/
[for (anOperation : Operation | aClass.queryClassImplementsOperations())]
	[anOperation.templateOperationJavadocSection() /]
	[anOperation.templateOperationAnnotationSection() /]
	[anOperation.templateOperationSection() /] {
		// TODO : need be to implemented
	}
[/for]
[/template]