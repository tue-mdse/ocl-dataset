[comment encoding = UTF-8 /]
[module classifierJavaFile('http://www.eclipse.org/uml2/4.0.0/UML')]

[import eu::artist::migration::modernization::uml2java::repackaged::gen::java::common::documentation /]
[import eu::artist::migration::modernization::uml2java::repackaged::gen::java::common::path /]

[import eu::artist::migration::modernization::uml2java::repackaged::gen::java::services::importService /]


[template private classifierJavaFilePath(aClassifier : Classifier)]
[if (not aClassifier.getNearestPackage().oclIsUndefined())]
[aClassifier.genPackagePath()/][aClassifier.name/].java
[else]
[aClassifier.name.concat('.java')/]
[/if]
[/template]

[template public genClassifierJavaFile(aClassifier : Classifier)]
[file (aClassifier.classifierJavaFilePath(), false, 'UTF-8')]
[aClassifier.genHeader()/]
[if (aClassifier.genPackageDeclaration().size() > 0)]package [aClassifier.genPackageDeclaration()/];[/if]

[comment][aClassifier.genImport()/][/comment]
[aClassifier.genImportStatements()/]

[aClassifier.genJavadoc()/]
[aClassifier.genClassifierBody()/]
[if (aClassifier.oclIsKindOf(Class))]
[aClassifier.oclAsType(Class).nestedClassifier->genNestedClassifiers()/]
[elseif (aClassifier.oclIsKindOf(Interface))]
[aClassifier.oclAsType(Interface).nestedClassifier->genNestedClassifiers()/]
[/if]
}
[/file]
[/template]

[template public genImportStatements(aClassifier : Classifier)]
[aClassifier.genImport()/]
[/template]

[template public genClassifierBody(aClassifier : Classifier)]
// invalid content
[/template]

[template private genNestedClassifiers(nestedClassifiers : OrderedSet(Classifier))]
[for (aClassifier : Classifier | nestedClassifiers)]
	[aClassifier.genJavadoc()/]
	[aClassifier.genClassifierBody()/]
	[if (aClassifier.oclIsKindOf(Class))]
	[aClassifier.oclAsType(Class).nestedClassifier->genNestedClassifiers()/]
	[elseif (aClassifier.oclIsKindOf(Interface))]
	[aClassifier.oclAsType(Interface).nestedClassifier->genNestedClassifiers()/]
	[/if]
	}
[/for]
[/template]
