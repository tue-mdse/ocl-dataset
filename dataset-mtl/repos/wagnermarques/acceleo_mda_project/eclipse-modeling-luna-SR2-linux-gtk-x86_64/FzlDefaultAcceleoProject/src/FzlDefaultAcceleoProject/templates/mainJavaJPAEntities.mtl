[comment encoding = UTF-8 /]
[module mainJavaJPAEntities('http://www.eclipse.org/uml2/5.0.0/UML') extends FzlDefaultAcceleoProject::templates::main]

[import FzlDefaultAcceleoProject::common::fzlUtil /]

[template public mainTemplate(c : Class)]
[comment @main /]
[file (c.name.toUpperFirst().concat('.java'), false, 'UTF-8')]

package [c.getNamespace().name/];

import javax.persistence.*;
import java.util.*;
import org.springframework.data.jpa.domain.AbstractPersistable;

@Entity
public class [c.name.toUpperFirst()/] {
	
	private Integer id;
	
	[for (p : Property | c.ownedElement->selectByType(Property))]
	[p.visibility/] [getJavaTypeFromProperty(p)/] [p.name/]	
	[/for]


	//constructors
	public void [c.name.toUpperFirst()/](){
		//not be implemented
	}
	[for (p : Property | c.ownedElement->selectByType(Property))]
	public void [c.name.toUpperFirst()/]([getJavaTypeFromProperty(p)/] [p.name/]){
		//not be implemented
	}
	[/for]


	//getters and setters
	public Integer getId(){
		return this.id;
	}
	public void setId(Integer id){
		this.id = id;
	}

	[for (p : Property | c.ownedElement->selectByType(Property))]
	public [getJavaTypeFromProperty(p)/] get[p.name.toUpperFirst()/](){
		return this.[p.name/];
	}
	public void set[p.name.toUpperFirst()/]([getJavaTypeFromProperty(p)/] [p.name/]){
		this.[p.name/] = [p.name/];
	}		
	[/for]
}
[/file]
[/template]



