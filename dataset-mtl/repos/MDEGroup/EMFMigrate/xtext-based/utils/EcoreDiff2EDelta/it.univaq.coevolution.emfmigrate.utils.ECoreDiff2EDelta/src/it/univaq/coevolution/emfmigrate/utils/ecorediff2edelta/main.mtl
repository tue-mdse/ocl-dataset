[comment encoding = UTF-8 /]
[module main('/it.univaq.coevolution.emfmigrate.utils.ECoreDiff2EDelta/metamodel/ECoreDiff.ecore')/]

[template public main(model : DifferenceModel)]
[comment @main /]
[file ('deltaMM1_MM2.edelta', true, 'UTF-8')]
[defineModel(model.differenceElements)/]
[/file]
[/template]


[template public defineModel(element : OrderedSet(DifferenceElement))]
[let pkg : OrderedSet(EPackage) = element]
[packageOperation(pkg)/]
[/let]
[let cls : OrderedSet(EClass) = element]
	[classOperation(cls)/]
[/let]
[/template]


[template public packageOperation(element : OrderedSet(EPackage))]
[for (elem : EPackage | element)]
[if (elem.eClass().name='AddedEPackage')]
[addPackage(elem)/]
[setter(elem)/]
[/if]
[if (elem.eClass().name='DeletedEPackage')]
[deletePackage(elem)/]
[/if]
[if (elem.eClass().name='ChangedEPackage')]
[changePackage(elem)/]
[setter(elem.eGet('updatedElement')->first())/]
[package1(elem)/]
[/if]
[if (elem.eClass().name <> 'EPackage' and elem.eClass().name <> 'DeletedEPackage')]
[let class : OrderedSet(EClass) = elem.eClassifiers]
	[classOperation(class)/]
[/let]}
[/if]
[/for]
[/template]


[template public classOperation(element : OrderedSet(EClass))]
[for (elem : EClass | element)]
[if (elem.eClass().name='AddedEClass')]
[addClass(elem)/]
[setter(elem)/]
[/if]
[if (elem.eClass().name='DeletedEClass')]
[deleteClass(elem)/]
[/if]
[if (elem.eClass().name='ChangedEClass')]
[changeClass(elem)/]
[setter(elem.eGet('updatedElement')->first())/]
[class(elem)/]
[/if]
[if (elem.eClass().name <> 'EClass' and elem.eClass().name <> 'DeletedEClass')]
	[featureOperations(elem.eStructuralFeatures)/]
}
[/if]
[/for]
[/template]


[template public featureOperations(element : OrderedSet(EStructuralFeature))]
[for (elem : EStructuralFeature | element)]
[if (elem.eClass().name='AddedEReference')]
[addReference(elem)/]
[setter(elem)/]
[/if]
[if (elem.eClass().name='DeletedEReference')]
[deleteReference(elem)/]
[/if]
[if (elem.eClass().name='ChangedEReference')]
[changeReference(elem)/]
[setter(elem.eGet('updatedElement')->first())/]
[/if]
[if (elem.eClass().name='AddedEAttribute')]
[addAttribute(elem)/]
[setter(elem)/]
[/if]
[if (elem.eClass().name='DeletedEAttribute')]
[deleteAttribute(elem)/]
[/if]
[if (elem.eClass().name='ChangedEAttribute')]
[changeAttribute(elem)/]
[setter(elem.eGet('updatedElement')->first())/]
[/if]
[if (elem.eClass().name <> 'EAttribute' and elem.eClass().name <> 'EReference')]}
[/if]
[/for]
[/template]


[template public addPackage(element : EPackage)]
Package [element.name/] = addPackage([element.name/]) {
[/template]


[template public deletePackage(element : EPackage)]
deletePackage([element.eGet('applicationElement').eGet('name')/]){
}
[/template]


[template public changePackage(element : EPackage)]
Package [element.eGet('updatedElement').name/] = changePackage([element.eGet('applicationElement').eGet('name')/]) {
[/template]


[template public package1(element : EPackage)]
[let class : OrderedSet(EClass) = element.eGet('updatedElement')->first().eClassifiers]
	[classOperation(class)/]
[/let]
[/template]


[template public addClass(element : EClass)]
Class [element.name/] = addClass([element.name/]) {
[/template]


[template public deleteClass(element : EClass)]
deleteClass([element.eGet('applicationElement').eGet('name')/]) {
}
[/template]


[template public changeClass(element : EClass)]
Class [element.eGet('updatedElement').name/] = changeClass([element.eGet('applicationElement').eGet('name')/]) {
[/template]


[template public class(element : EClass)]
	[featureOperations((element.eGet('updatedElement')->first()).eStructuralFeatures)/]
[/template]


[template public addReference(element : EStructuralFeature)]
Reference [element.name/] = addReference([element.name/]) {
[/template]


[template public deleteReference(element : EStructuralFeature)]
deleteReference([element.eGet('applicationElement').eGet('name')/]) {
[/template]


[template public changeReference(element : EStructuralFeature)]
Reference [element.eGet('updatedElement').name/] = changeReference([element.eGet('applicationElement').eGet('name')/]) {
[/template]


[template public addAttribute(element : EStructuralFeature)]
Attribute [element.name/] = addAttribute([element.name/]) {
[/template]


[template public deleteAttribute(element : EStructuralFeature)]
deleteAttribute([element.eGet('applicationElement').eGet('name')/]) {
[/template]


[template public changeAttribute(element : EStructuralFeature)]
Attribute [element.eGet('updatedElement').name/] = changeAttribute([element.eGet('applicationElement').eGet('name')/]) {
[/template]


[template public setter(element : EPackage)]
[if (element.eClass().name='AddedEPackage' or element.eClass().name='EPackage')]
	set name<-"[element.name/]";
[else]
	set name<-"[element.eGet('updatedElement').name/]";
[/if]
[if (element.eGet('applicationElement').eGet('eSubpackages') <> element.eSubpackages)]
	set eSuperPackage<-{[for (elem : EPackage | element.eSubpackages)][if (element.eSubpackages->first().name = elem.name)][elem.name/][else], [elem.name/][/if][/for]};
[/if]
[/template]


[template public setter(element : EClass)]
[if (element.eClass().name='AddedEClass' or element.eClass().name='EClass')]
	set name<-"[element.name/]";
[else]
	set name<-"[element.eGet('updatedElement').name/]";
[/if]
[if (element.eGet('applicationElement').eGet('abstract') <> element.eGet('abstract'))]
	set abstract<-[element.eGet('abstract')/];
[/if]
[if (element.eSuperTypes->notEmpty())]
	set eSuperTypes<-{[for (elem : EClass | element.eSuperTypes)][if (element.eSuperTypes->first().name = elem.name)][elem.name/][else], [elem.name/][/if][/for]};
[/if]
[/template]


[template public setter(element : EStructuralFeature)]
[if (element.eClass().name='AddedEReference' or element.eClass().name='AddedEAttribute' 
	or element.eClass().name='EAttribute' or element.eClass().name='EReference')]
	set name<-"[element.name/]";
[else]
	set name<-"[element.eGet('updatedElement').name/]";
[/if]
[if (element.eGet('applicationElement').eGet('lowerBound') <> element.eGet('lowerBound'))]
	set lowerBound<-"[element.eGet('lowerBound')/]";
[/if]
[if (element.eGet('applicationElement').eGet('upperBound') <> element.eGet('upperBound'))]
	set upperBound<-"[element.eGet('upperBound')/]";
[/if]
	set eType<-[if (element.eType.oclIsKindOf(EClass))][element.eType.eGet('name')/][else][element.eType.eGet('eRawType').eGet('name')/][/if];
[if (element.oclIsKindOf(EReference))]
	set eOpposite<-"[element.eGet('eOpposite').name/]";
[/if]
[/template]