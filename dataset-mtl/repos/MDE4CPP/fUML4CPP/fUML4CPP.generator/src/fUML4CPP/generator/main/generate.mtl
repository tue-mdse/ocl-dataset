[comment encoding = UTF-8 /]
[**
 * Copyright (c) 2017 TU Ilmenau, Systems and Software Engineering Group
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), 
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */]
[module generate('http://www.eclipse.org/uml2/5.0.0/UML')]
    
[import UML4CPP::generator::main::generate /]
[import fUML4CPP::generator::main::generateActivityExecutionHeader /]
[import fUML4CPP::generator::main::generateActivityExecutionSource /]
[import fUML4CPP::generator::main::generateBehaviorExecutionHeader /]
[import fUML4CPP::generator::main::generateBehaviorExecutionSource /]
[import fUML4CPP::generator::main::generateCallOperationActionExecutionHeader /]
[import fUML4CPP::generator::main::generateCallOperationActionExecutionSource /]
[import fUML4CPP::generator::main::generateClassifierExecutionHeader /]
[import fUML4CPP::generator::main::generateClassifierExecutionSource /]
[import fUML4CPP::generator::main::generateExecutionBuildFile /]
[import fUML4CPP::generator::main::generateMainExecution /]
[import fUML4CPP::generator::main::generateOpaqueBehaviorExecution /]
 
[template public generateFUML(aPackage : uml::Package)]
[comment @main/]

[generateUML(aPackage)/]

//generate executionactivation for OpaqueBehaviorsCallOperationAction
[aPackage.getOpaqueBehaviors().generateBehaviorExecutionHeader(aPackage)/]
[aPackage.getOpaqueBehaviors().generateBehaviorExecutionSource(aPackage)/]

//generate executionactivation for 
[aPackage.getCallOperationActions().generateCallOperationActionExecutionHeader(aPackage)/]
[aPackage.getCallOperationActions().generateCallOperationActionExecutionSource(aPackage)/]
//generate classes executions
[aPackage.ownedElement->filter(Class).generateClassifierExecutionHeader(aPackage)/]
[aPackage.ownedElement->filter(Class).generateClassifierExecutionSource(aPackage)/]

//generate interface executions
[aPackage.allOwnedElements()->filter(Parameter)->select(type.oclIsKindOf(Interface)).type->asOrderedSet()->sortedBy(name).oclAsType(Interface).generateClassifierExecutionHeader(aPackage)/]
[aPackage.allOwnedElements()->filter(Parameter)->select(type.oclIsKindOf(Interface)).type->asOrderedSet()->sortedBy(name).oclAsType(Interface).generateClassifierExecutionSource(aPackage)/]

//generate activityExecution 
[comment Generate activities than implement an operation/]
[for (act : Activity | aPackage.allOwnedElements()->filter(Class).allOwnedElements()->filter(Operation).method->filter(Activity))]
[act.generateActivityExecutionHeader()/]
[act.generateActivityExecutionSource()/]
[/for]

//generate main
[aPackage.generateMain()/]

//generate build file
[aPackage.generateBuildFile()/]
[/template]