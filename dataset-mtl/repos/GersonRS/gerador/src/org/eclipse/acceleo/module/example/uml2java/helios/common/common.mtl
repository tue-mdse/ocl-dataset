[comment]
  Copyright 2015
[/comment]
[module common('http://www.eclipse.org/uml2/3.0.0/UML')/]

[template public operationBody(o : Operation)]
    /**
     *[for (cmt : Comment | o.ownedComment)] [cmt._body/][/for]
[for (p : Parameter | o.ownedParameter) ? (p.direction <> ParameterDirectionKind::return)]
[paramOperationComment(p)/]
[/for]
[if (not o.type.oclIsUndefined())]
[returnOperationComment()/]
[/if]
     */
[if (o.isAbstract)]
	[if (o.isUnique)]
	[o.visibility/] [o.returnTypeOperation()/]([o.getInParameter()/]) {
		[if (not o.type.oclIsUndefined())]
        // TODO should be implemented
        return null;
		[else]
        // TODO should be implemented
		[/if]
    }
	[else]
    	[o.visibility/] abstract [o.returnTypeOperation()/]([o.getInParameter()/]);
	[/if]
[else]
    [o.visibility/] [o.returnTypeOperation()/]([o.getInParameter()/]) {
        // [protected ('for operation '.concat(o.name))]
		[if (not o.type.oclIsUndefined())]
        // TODO should be implemented
        return null;
		[else]
        // TODO should be implemented
		[/if]
        // [/protected]
    }
[/if]
[/template]

[template public packagePath(cl : Classifier)]
[cl.getNearestPackage().normalizeName()/]
[/template]

[template public getFullPathFile(cl : Classifier)]
[if (not cl.getNearestPackage().oclIsUndefined())]
[cl.getNearestPackage().normalizeName().substituteAll('.', '/').concat('/').concat(cl.name).concat('.java')/]
[else]
[cl.name.concat('.java')/]
[/if]
[/template]

[template public getInParameter(o : Operation)]
[for (p : Parameter | o.ownedParameter) separator(',') ? (p.direction <> ParameterDirectionKind::return)][p.type.name/] [p.name/][/for]
[/template]

[template public returnTypeOperation(o : Operation)]
[if (o.type.oclIsUndefined())]void [o.name/][else][o.type.name/] [o.name/][/if]
[/template]

[template public importBlock(cl : Classifier)]
// [protected ('for imports')]
[for (cmt : Comment | cl.ownedComment)]
import  [cmt._body/];
[/for]
// [/protected]
[/template]

[template public packageBlock(cl : Classifier)]
[if (not cl.getNearestPackage().oclIsUndefined())]package [cl.packagePath()/];[/if]
[/template]

[template private normalizeName(element : NamedElement)]
[if ((element.name = 'package') or (element.name = 'interface') or (element.name = 'class'))][element.name.concat('_')/][else][element.name/][/if]
[/template]

[template public _commentFileBlock(traceabilityContext : OclAny)]
/**
 * Generated with MTL UML 2 Java example
 */
[/template]

[template public _commentBodyBlock(traceabilityContext : OclAny)]
/**
 * @author Gerson R. Santos
 */
[/template]

[template public returnOperationComment(traceabilityContext : OclAny)]
     * @return
[/template]

[template public paramOperationComment(p : Parameter)]
     * @param [p.name/]
[/template]
