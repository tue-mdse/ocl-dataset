[comment]
  Copyright 2015
[/comment]
[module interfaceInteracao_padrao('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import common/]

[template public generateInterfaceInteracao(i : Interface)]
[_commentFileBlock()/]
[i.packageBlock()/]

[for (superC : Classifier | i.getGenerals())] 
[if (superC.name = 'KeyListener')]
import java.awt.event.KeyListener;
[/if]
[if (superC.name = 'MouseInputListener')]
import java.awt.Point;
import javax.swing.event.MouseInputListener;
[/if]
[/for]
/**
 * 
 * Interface que posibilita interação com o usuario.
 * 
 */
public interface [i.name.toUpperFirst()/] [for (superC : Classifier | i.getGenerals()) before(' extends ') separator(',')] [superC.name/][/for]{

[for (superC : Classifier | i.getGenerals())] 
[if (superC.name = 'KeyListener')]
	/**
	 * 
	 * Constantes usadas para verificar o estado da interação. 
	 * 
	 */
	final int KEY_RELEASED = 0;
	final int KEY_JUST_PRESSED = 1;
	final int KEY_PRESSED = 2;
	
	/**
	 * 
	 * verifica se uma tecla especifica keyId esta precionada. 
	 * 
	 * @param keyId
	 * 		numero keycode da tecla presionada
	 * 
	 * @return boolean
	 */
	boolean isPressed(int keyId);

	/**
	 * 
	 * verifica se uma tecla especifica keyId foi precionada. 
	 * 
	 * @param keyId
	 * 		numero keycode da tecla que foi precionada
	 * 
	 * @return boolean
	 */
	boolean isJustPressed(int keyId);

	/**
	 * 
	 * verifica se uma tecla especifica keyId foi solta. 
	 * 
	 * @param keyId
	 * 		numero keycode da tecla que foi precionada
	 * 
	 * @return boolean
	 */
	boolean isReleased(int keyId);
[/if]
[if (superC.name = 'MouseInputListener')]
	/**
	 * 
	 * verifica se um botão do mouse especifico buttonId foi precionado. 
	 * 
	 * @param buttonId
	 * 		numero do button do mouse que foi precionado
	 * 
	 * @return boolean
	 */
	boolean isMousePressed(int buttonId);
	
	/**
	 * 
	 * retora a posição em que o mouse esta. 
	 * 
	 * @return Point
	 */
	Point getMousePos();

[/if]
[/for]
}
[/template]