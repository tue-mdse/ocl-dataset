[comment encoding = UTF-8 /]
[module generate('http://com/headstartdevelopment/easymessages/messages')]


[template public generateElement(aMessageManagement : MessageManagement)]
[comment @main/]
[file (aMessageManagement.id + '.java', false, 'UTF-8')]
import java.util.Locale;
import java.util.ResourceBundle;

class [aMessageManagement.id/] {

	[for (msg : Message | aMessageManagement.messages)]
	[generateMsgString(msg)/]
	[/for]
	
	[comment TODO: Check how to handle the package in which the file and properties should be created. We need some input parameters for that.
					Also add a note for the users that the properties folder needs to be on the class path.
					How can we use this tool in combination with maven.
					For editing the model it would be nice to have a table view. Check sirius on that!
 /]
	

	public static String createMessage(String msgId, String... params) {
		ResourceBundle messages = ResourceBundle.getBundle("[aMessageManagement.id/]", Locale.getDefault());
		return messages.getString(msgId);
	}

	public static String createMessage(Locale locale, String msgId, String... params) {
		ResourceBundle messages = ResourceBundle.getBundle("[aMessageManagement.id/]", locale);
		return messages.getString(msgId);
	}
}	

[/file]

[comment Generate properties files /]
[for (locale : Locale | aMessageManagement.locales)]
[file (aMessageManagement.id + '_' + locale.code + '.properties', false, 'UTF-8')]
[for (localeText : LocalizedText | locale.localizedTexts)]
[localeText.message.id/]=[localeText.text/]
[/for]
[/file]
[/for]
[/template]


[template public generateMsgString(msg : Message)]
public static String [msg.id/] = "[msg.id/]";
[/template]
