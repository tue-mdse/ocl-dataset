[comment encoding = UTF-8 /]
[module generateFeature('http://www.eclipse.org/uml2/4.0.0/UML')]
[import com::thales::momoko2::pim::uml2::gen::request::classQueries/]
[import com::thales::momoko2::pim::uml2::gen::request::inheritanceQueries /]
[import com::thales::momoko2::pim::uml2::gen::request::name::fileNameQueries/]
[import com::thales::momoko2::pim::uml2::gen::common::comments::headerComments/]
[import com::thales::momoko2::pim::uml2::gen::files::model::features::generateImports/]
[import com::thales::momoko2::pim::uml2::gen::files::model::features::generateJPAAnnotations/]
[import com::thales::momoko2::pim::uml2::gen::files::model::features::generateJAXBAnnotations/]
[import com::thales::momoko2::pim::uml2::gen::files::model::features::generateAttributes/]
[import com::thales::momoko2::pim::uml2::gen::files::model::features::generateGettersSetters/]
[import com::thales::momoko2::pim::uml2::gen::files::model::features::generateConstructors/]

[**
 * This template generate the class with  the <<object>> or <<feature>> stereotype.
 * @param aClass
*/]
[template public generateFeature(aClass : Class) ? (isFeatureClass() or isObjectClass())]
[file (getModelFileName(aClass), false)]	
package [getModelPackageName(aClass)/];

[generateHeaderComment()/]
[generateImports()/]
import java.io.Serializable;

[generateClassAnnotations(aClass)/]
[if (aClass.isAbstract._not())][generateXmlRootElementAnnotations(aClass)/][/if]
public [if (aClass.isAbstract)]abstract [/if]class [aClass.name/] extends [if hasSuperClass(aClass)][getSuperclass(aClass).name/][elseif  isObjectClass(aClass)]AbstractObject[elseif isFeatureClass(aClass)]AbstractFeature[else]AbstractFeature_part[/if] implements Serializable {	
    [generateAttributes()/]
    [generateConstructors()/]
    [generateGettersSetters()/]
}	
[/file]
[/template]


[**
 * This template creates the part class from <<object>> Class containing the associations of composition and aggregation
 * @param aClass
*/]
[template public generatePartClassFeature(aClass : Class) ? (isObjectClass())]
[file (getModelFileNameForPartClass(aClass), false)]	
package [getModelPackageName(aClass)/];

[generateHeaderCommentForPartClass()/]
[generateImports()/]
import java.io.Serializable;

[generateClassAnnotationsForPartClass(aClass)/]
[if (aClass.isAbstract._not())][generateXmlRootElementAnnotations(aClass)/][/if]
public [if (aClass.isAbstract)]abstract [/if]class [aClass.name.concat('Part')/] extends [if hasSuperClass(aClass)][getSuperclass(aClass).name/][elseif  isObjectClass(aClass)]AbstractObject[elseif isFeatureClass(aClass)]AbstractFeature[else]AbstractFeature_part[/if] implements Serializable {	
    [generateAttributes()/]
    [generateConstructorsForPartClass()/]
    [generateGettersSetters()/]
}	
[/file]
[/template]
