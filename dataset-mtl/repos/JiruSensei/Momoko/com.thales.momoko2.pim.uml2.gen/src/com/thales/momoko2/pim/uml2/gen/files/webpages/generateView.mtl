[comment encoding = UTF-8 /]
[module generateView('http://www.eclipse.org/uml2/4.0.0/UML')]
[import com::thales::momoko2::pim::uml2::gen::request::classQueries /]
[import com::thales::momoko2::pim::uml2::gen::common::components::compositeComponent /]
[import com::thales::momoko2::pim::uml2::gen::request::propertyQueries /]
[import com::thales::momoko2::pim::uml2::gen::request::name::fileNameQueries /]
[import com::thales::momoko2::pim::uml2::gen::request::associationQueries /]

[**
 * This template generates the view web pages.
 * @param aClass
 */]
[template public generateView(aClass : Class) ? (isFeatureClass(aClass))]
[file (getWebPagesFileName(aClass, 'View'), false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:comp="http://java.sun.com/jsf/composite/ezcomp"
	  xmlns:p="http://primefaces.org/ui">

    <ui:composition template="/template.xhtml">
        <ui:define name="body">
        	[generateViewPanel(aClass)/]
		</ui:define>
        <ui:define name="buttons">
			<h:panelGrid columns="5">
                <p:commandButton 	ajax="false" icon="ui-icon-trash"
									update="mainPanel" 
									actionListener="#{[aClass.name.toLowerFirst()/]Controller.destroyAndView}" 
									value="#{bundle.DestroyLink}" />
				<p:commandButton 	ajax="false" icon="ui-icon-pencil"
									action="Edit" 
									value="#{bundle.EditLink}"/>
                <p:commandButton 	ajax="false" icon="ui-icon-document"
									action="#{[aClass.name.toLowerFirst()/]Controller.prepareCreate}" 
									value="#{bundle.[aClass.name/]CreateLink}"
									immediate="true"/>
                <p:commandButton 	ajax="false" icon="ui-icon-search"
									action="#{[aClass.name.toLowerFirst()/]Controller.prepareList}" 
									value="#{bundle.[aClass.name/]ShowAllLink}" 
									immediate="true"/>
 				<h:commandLink>
                          			 <p:commandButton value="#{bundle.PrinterLink}" icon="ui-icon-print"/>  
									<!--<p:printer type="printer" target="mainPanel"
									fileName="[aClass.name.toLowerFirst()/]" />-->
				</h:commandLink>
			</h:panelGrid>
        </ui:define>
    </ui:composition>
</html>
[/file]
[/template]

[**
 * This template generates the panel view for a class
 * @param aClass
 * @param anInputValue
 * @param aFielsetId
 * @param aLegendKey
*/]
[template private generateViewPanel (aClass : Class) ]
<p:panel id="mainPanel" styleClass="mainPanel" header="#{bundle.View[aClass.name/]Title}"> 
	[generateFieldsetView(aClass, aClass.name.toLowerFirst().concat('Controller.selected'), 'mainFieldset', 'MainFieldsetTitle')/]
 </p:panel>
[/template]


[**
 * This template generates the fielset for a class
 * @param aClass
 * @param anInputValue
 * @param aFielsetId
 * @param aLegendKey
*/]
[template public generateFieldsetView (aClass : Class, anInputValue : String, aFieldsetId : String, aLegendKey :String) ]
[generateFields(aClass, anInputValue, aFieldsetId, aLegendKey)/]
[for (aProperty : Property | getOneAssociationObjectProperties(aClass))]
[generateFieldsetView(
	getDestinationClass(aProperty, aProperty.getAssociation()),  
	anInputValue.concat('.').concat(aProperty.name), 
	aProperty.name.concat('FieldsetView'), 
	aClass.name.concat('_').concat(aProperty.name))/]
[/for]
[for (aProperty : Property | getManyAssociationObjectProperties(aClass)) ]
[generateDataTable(aProperty.class, anInputValue.concat('.').concat(aProperty.name),getDestinationClass(aProperty, aProperty.getAssociation()), aProperty)/]
[/for]
[/template]

[template private generateFields (aClass : Class, anInputValue : String, aFieldsetId : String, aLegendKey :String) ]
<p:fieldset id="[aFieldsetId/]" legend="#{bundle.[aLegendKey/]}"> 
	<h:panelGrid columns="2" styleClass="viewPanelGrid">
		[for (aProperty : Property | (aClass.getAllProperties())) 
		? (isAssociationAttribute(aProperty)._not())]
		<h:outputText value="#{bundle.[aProperty.class.name/]_[aProperty.name/]}"/>
		<h:outputText value="#{[anInputValue/].[aProperty.name/]}" title="#{bundle.View[aProperty.class.name/]Title_[aProperty.name/]}"/>
	   	[/for]
	</h:panelGrid>
</p:fieldset>
[/template]

[**
 * This template generates the editing table for the Many Object association
 * @param aSourceClass
 * @param aDestinationClass
 * @param aProperty
 * @param aFormType
*/]
[template private generateDataTable(aSourceClass : Class, anInputValue : String, aDestinationClass : Class, aProperty : Property)]
<p:fieldset id="[aProperty.name/]FieldsetView" legend="#{bundle.[aSourceClass.name/]_[aProperty.name/]}">  
    <h:outputText escape="false" value="#{bundle.List[aDestinationClass.name/]Empty}" rendered="#{empty [anInputValue/]}"/>
    <p:dataTable rendered="#{not empty [anInputValue/]}" var="item" value="#{[anInputValue/]}" >  
[for (p: Property | aDestinationClass.getAllProperties()) ? (isAssociationAttribute(p)._not())]
        <p:column headerText="#{bundle.[aDestinationClass.name/]_[p.name/]}">  
            <h:outputText value="#{item.[p.name/]}" />
        </p:column>
[/for] 		
    </p:dataTable> 
</p:fieldset>
[/template]