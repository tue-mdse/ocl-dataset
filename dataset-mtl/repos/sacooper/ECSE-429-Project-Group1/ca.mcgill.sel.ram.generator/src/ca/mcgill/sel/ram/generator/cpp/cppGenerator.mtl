[comment encoding = UTF-8 /]
[module cppGenerator('http://cs.mcgill.ca/sel/ram/3.0')]


[comment Sample template /]
[template public generate(c : Class)] [comment @main /]

[file (c.name.concat('.cpp'), false)]
#include "[c.name.concat('.h')/]"

[for (op : Operation | c.operations) separator('\n')]
[if (not op.abstract)]
[op.returnType.getTypeName()/][c.name/]::[op.name/]() {
    // TODO: Generated
}
[/if]
[/for]
[/file]


[file (c.name.concat('.h'), false)]
[let guard : String = '_' + c.name.toUpper() + '_H_']
#ifndef [guard/]
#define [guard/]

class [c.name/] {

  public:
    [for (op : Operation | c.operations)]
    [op.returnType.getTypeName()/][op.name/]()[if (op.abstract)] = 0[/if];
    [/for]
};

#endif // [guard/]
[/let]
[/file]

[/template]

[template public getTypeName(t : Type)]
[if (t.name.size() = 0)]void [else][t.name/] [/if]
[/template]
