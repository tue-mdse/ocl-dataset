[comment encoding = UTF-8 /]
[comment]
/*****************************************************************************
 * Copyright (c) 2013 PROTEUS Project consortium.
 *
 *    
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *  Nicolas DU LAC (INTEMPORA) - Initial API and implementation
 *
 *****************************************************************************/
[/comment]
[module ArchitectureQueries('http://www.eclipse.org/uml2/3.0.0/UML', 'http://Papyrus/RobotML/1')]
 

[query public getSourcePortName(conn : Connector) : String =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getSourcePortName(org.eclipse.uml2.uml.Connector)', Sequence{conn})
/]
[query public getSourceComponentForConnector(conn : Connector) : Property =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getSourceComponentForConnector(org.eclipse.uml2.uml.Connector)', Sequence{conn})
/]
[query public getSourceComponentTypeNameForConnector(conn : Connector) : String =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getSourceComponentTypeNameForConnector(org.eclipse.uml2.uml.Connector)', Sequence{conn})
/]
[query public getSourceComponentInstanceNameForConnector(conn : Connector) : String =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getSourceComponentInstanceNameForConnector(org.eclipse.uml2.uml.Connector)', Sequence{conn})
/]
[query public getDestPortName(conn : Connector) : String =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getDestPortName(org.eclipse.uml2.uml.Connector)', Sequence{conn})
/]
[query public getDestComponentForConnector(conn : Connector) : Property =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getDestComponentForConnector(org.eclipse.uml2.uml.Connector)', Sequence{conn})
/]
[query public getDestComponentTypeNameForConnector(conn : Connector) : String =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getDestComponentTypeNameForConnector(org.eclipse.uml2.uml.Connector)', Sequence{conn})
/]
[query public getDestComponentInstanceNameForConnector(conn : Connector) : String =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getDestComponentInstanceNameForConnector(org.eclipse.uml2.uml.Connector)', Sequence{conn})
/]
[query public getInternalConnectors(c : Class) : Sequence(Connector) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getInternalConnectors(org.eclipse.uml2.uml.Class)', Sequence{c})
/]
[query public getExternalInputConnectors(c : Class) : Sequence(Connector) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getExternalInputConnectors(org.eclipse.uml2.uml.Class)', Sequence{c})
/]
[query public getExternalOutputConnectors(c : Class) : Sequence(Connector) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getExternalOutputConnectors(org.eclipse.uml2.uml.Class)', Sequence{c})
/]
[query public getAllSubComponentsInClass(class : Class) : Sequence(Property) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getAllSubComponentsInClass(org.eclipse.uml2.uml.Class)', Sequence{class})
/]
[query public getLevel1SubComponentsForComponent(class : Class) : Sequence(Property) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getLevel1SubComponentsForComponent(org.eclipse.uml2.uml.Class)', Sequence{class})
/]
[query public getLevel1SubComponentsForComponentWithStereotype(class : Class, stereotype : String) : Sequence(Property) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getLevel1SubComponentsForComponentWithStereotype(org.eclipse.uml2.uml.Class, java.lang.String)', Sequence{class, stereotype})
/]
[query public getOutputPortsForElement(elt : Element) : Sequence(Port) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getOutputPortsForElement(org.eclipse.uml2.uml.Element)', Sequence{elt})
/]
[query public getInputPortsForElement(elt : Element) : Sequence(Port) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getInputPortsForElement(org.eclipse.uml2.uml.Element)', Sequence{elt})
/]
[query public getOnPort(param : Parameter) : Sequence(Property) =
	invoke('org.eclipse.proteus.generators.acceleo.mmqueries.ArchitectureQueries', 'getOnPort(org.eclipse.uml2.uml.Parameter)', Sequence{param})
/]
[query public getComponentModels(model : Model) : Sequence(NamedElement) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getComponentModels(org.eclipse.uml2.uml.Model)', Sequence{model})
/]
[query public isMacroComponent(class : Class) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isMacroComponent(org.eclipse.uml2.uml.Class)', Sequence{class}) 
/]
[query public hasNativeImplementation(class : Class) : Boolean =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'hasNativeImplementation(org.eclipse.uml2.uml.Class)', Sequence{class}) 
/]
[query public getNativeLibraryPathForComponent(class : Class) : String =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getNativeLibraryPathForComponent(org.eclipse.uml2.uml.Class)', Sequence{class}) 
/]
[query public getNativeComponentNameForComponent(class : Class) : String =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getNativeComponentNameForComponent(org.eclipse.uml2.uml.Class)', Sequence{class}) 
/]
[query public getComponentFileName(classifier : Classifier, end : String) : String = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getComponentFileName(org.eclipse.uml2.uml.Classifier,java.lang.String)', Sequence{classifier,end}) 
/]
[query public getOutputPortBufferSize(p : Port) : Integer =
 invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getOutputPortBufferSize(org.eclipse.uml2.uml.Port)', Sequence{p}) 
/]
[query public isDataFlowPort(elt : Port) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isDataFlowPort(org.eclipse.uml2.uml.Port)', Sequence{elt}) 
/]
[query public isServicePort(elt : Port) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isServicePort(org.eclipse.uml2.uml.Port)', Sequence{elt}) 
/]
[query public definesConnections(cl : Class) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'definesConnections(org.eclipse.uml2.uml.Class)', Sequence{cl}) 
/]
[query public isConnectionValid(conn : Connector) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isConnectionValid(org.eclipse.uml2.uml.Connector)', Sequence{conn}) 
/]
[query public getConnectionDefinition(conn : Connector) : String = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getConnectionDefinition(org.eclipse.uml2.uml.Connector)', Sequence{conn}) 
/]
[query public getConnectedPort(port : Port) : Port = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getConnectedPort(org.eclipse.uml2.uml.Port)', Sequence{port})
/]
[query public getConnectionsFromPort(port : Port) : Sequence(Connector) =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getConnectionsFromPort(org.eclipse.uml2.uml.Port)', Sequence{port})
/]
[query public isAnInputPort(port : Port) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isAnInputPort(org.eclipse.uml2.uml.Port)', Sequence{port}) 
/]
[query public isAnOutputPort(port : Port) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isAnOutputPort(org.eclipse.uml2.uml.Port)', Sequence{port}) 
/]
[query public isAProvidedPort(port : Port) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isAProvidedPort(org.eclipse.uml2.uml.Port)', Sequence{port}) 
/]
[query public isARequiredPort(port : Port) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isARequiredPort(org.eclipse.uml2.uml.Port)', Sequence{port}) 
/]
[query public getConnectionOtherSide(port : Port) : String = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'getConnectionOtherSide(org.eclipse.uml2.uml.Port)', Sequence{port}) 
/]
[query public isPortConnected(port : Port) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isPortConnected(org.eclipse.uml2.uml.Port)', Sequence{port}) 
/]
[query public isRootModel(elt : Model) : Boolean = 
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isRootModel(org.eclipse.uml2.uml.Model)', Sequence{elt}) 
/]
[query public getRootClassForModel(model : Model) : Class =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries','getRootClassForModel(org.eclipse.uml2.uml.Model)', Sequence{model})
/]

[query public isAnAncestorOf(current_class : Class, other_class : Class) : Boolean =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isAnAncestorOf(org.eclipse.uml2.uml.Class, org.eclipse.uml2.uml.Class)', Sequence{current_class, other_class})
/]

[query public isAnInputOutputPort(port : Port) : Boolean =
	invoke('org.eclipse.papyrus.robotml.generators.common.mmqueries.ArchitectureQueries', 'isAnInputOutputPort(org.eclipse.uml2.uml.Port)', Sequence{port})
/]
