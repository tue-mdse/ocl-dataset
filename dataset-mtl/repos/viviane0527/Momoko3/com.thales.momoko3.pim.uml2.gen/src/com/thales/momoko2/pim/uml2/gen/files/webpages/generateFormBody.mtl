[comment encoding = UTF-8 /]
[module generateFormBody('http://www.eclipse.org/uml2/4.0.0/UML')]
[import com::thales::momoko2::pim::uml2::gen::common::components::compositeComponent/]
[import com::thales::momoko2::pim::uml2::gen::request::associationQueries /]
[import com::thales::momoko2::pim::uml2::gen::request::propertyQueries /]
[import com::thales::momoko2::pim::uml2::gen::request::classQueries/]
[import com::thales::momoko2::pim::uml2::gen::request::datatypeQueries /]

[**
 * This templates generates the form for a class without the buttons
 * @param aClass
 * @param aFormType (ex:Edit, Create...)
*/]
[template public generateFormBody (aClass : Class, aFormType : String) ]
[generateFieldset(aClass, aClass.name.toLowerFirst().concat('Controller.selected'), 'mainTab', 'MainFieldsetTitle')/]
[/template]


[**
 * This template generates the fielset for a class
 * @param aClass
 * @param anInputValue
 * @param aFielsetId
 * @param aTabId
 * @param aLegendKey
*/]
[template private generateFieldset (aClass : Class, anInputValue : String, aTabId : String, aLegendKey :String) ]
[generateTabs(aClass, anInputValue, aTabId, aLegendKey)/]
[for (aProperty : Property | getOneAssociationObjectProperties(aClass))]
[generateFieldset(
	getDestinationClass(aProperty, aProperty.getAssociation()),  
	anInputValue.concat('.').concat(aProperty.name), aProperty.name.concat('Tab'),
	aClass.name.concat('_').concat(aProperty.name))/]
[/for]
[for (aProperty : Property | getManyAssociationObjectProperties(aClass)) ]
[generateDataTable(aClass, getDestinationClass(aProperty, aProperty.getAssociation()), aProperty, anInputValue.concat('.').concat(aProperty.name))/]
[/for]
[for (aProperty : Property | aClass.getAllProperties()) 
? (isAssociationAttribute(aProperty) and getDestinationClass(aProperty, aProperty.association).isFeatureClass())]
[generateSelectDataTable(aClass, getDestinationClass(aProperty, aProperty.getAssociation()), aProperty, anInputValue.concat('.').concat(aProperty.name))/]
[/for]
[for (aProperty: Property | aClass.getAllProperties()) 
? (isFeature_partClass(aProperty.getDatatypeByProperty()))]
[generatePartTabs(aClass, aProperty, anInputValue, aProperty.name.concat('Tab'), aClass.name.concat('_').concat(aProperty.name))/]
[/for]
[/template]


[**
 * This template generates the fields for a featurepart class
 * @param aClass
 * @param anInputValue
 * @param aTabId
 * @param aLegendKey
*/]
[template private generatePartTabs (aClass : Class, aProperty : Property, anInputValue : String, aTabId : String, aTitleKey :String) ]
<p:tab id="[aTabId/]" title="#{bundle.[aTitleKey/]}"> 
	<p:panel header="#{bundle.[aTitleKey/]} Details">  
		<h:messages errorClass="error"/>  
		<h:panelGrid columns="2" columnClasses="label, value" styleClass="grid"> 
[for (p : Property | getDatatypeByProperty(aProperty).getAllDatatypeAttributes())]
<p:outputLabel value="#{bundle.[aProperty.class.name/]_[p.name/]}" for="[aProperty.name.toLowerFirst()/][p.name/]" />
[generateCompositeComponent(p, anInputValue.concat('.').concat(p.name), 'formPanelGrid')/]
<p:message for="[aProperty.name.toLowerFirst()/][p.name/]"/>
[/for]
			<h:outputText value="Skip to last: " />  
			<h:selectBooleanCheckbox value="#{[aClass.name.toLowerFirst()/]Controller.skip}" />  
		</h:panelGrid>  
	</p:panel>  
</p:tab>
[/template]


[**
 * This template generates the fields for a class
 * @param aClass
 * @param anInputValue
 * @param aTabId
 * @param aLegendKey
*/]
[template private generateTabs (aClass : Class, anInputValue : String, aTabId : String, aTitleKey :String) ]
<p:tab id="[aTabId/]" title="#{bundle.[aTitleKey/]}"> 
	<p:panel header="#{bundle.[aTitleKey/]} Details">  
		<h:messages errorClass="error"/>  
		<h:panelGrid columns="2" columnClasses="label, value" styleClass="grid"> 
[for (aProperty : Property | aClass.getAllProperties()) 
? (isAssociationAttribute(aProperty)._not())]
<p:outputLabel value="#{bundle.[aProperty.class.name/]_[aProperty.name/]}" for="[aClass.name.toLowerFirst()/][aProperty.name/]" />
[generateCompositeComponent(aProperty, anInputValue.concat('.').concat(aProperty.name), 'formPanelGrid')/]
<p:message for="[aClass.name.toLowerFirst()/][aProperty.name/]"/>
[/for]
			<h:outputText value="Skip to last: " />  
			<h:selectBooleanCheckbox value="#{[aClass.name.toLowerFirst()/]Controller.skip}" />  
		</h:panelGrid>  
	</p:panel>  
</p:tab>
[/template]


[**
 * This template generates the editing table for the Many Object association
 * @param aSourceClass
 * @param aDestinationClass
 * @param aProperty
*/]
[template private generateDataTable(aSourceClass : Class, aDestinationClass : Class, aProperty : Property, anInputValue : String)]
<p:fieldset id="[aProperty.name/]Fieldset" legend="#{bundle.[aSourceClass.name/]_[aProperty.name/]}"> 
    <h:panelGrid columns="2">
        <p:commandButton oncomplete="[aProperty.name/]CreateDlg.show()" 
                         process="@this" 
                         actionListener="#{[aDestinationClass.name.toLowerFirst()/]Controller.prepareCreate()}" 
                         update=":[aProperty.name/]CreateDialog" 
                         icon="ui-icon-circle-plus" />
        <h:outputText escape="false" value="#{bundle.List[aDestinationClass.name/]Empty}" rendered="#{empty [anInputValue/]}"/>
        <p:dataTable rendered="#{not empty [anInputValue/]}" var="item" value="#{[anInputValue/]}" >  
[for (p: Property | aDestinationClass.getAllProperties()) ? (isAssociationAttribute(p)._not())]
            <p:column headerText="#{bundle.[aDestinationClass.name/]_[p.name/]}">  
                <h:outputText value="#{item.[p.name/]}" />
            </p:column>
[/for] 		
            <p:column headerText="&nbsp;">
                <p:commandButton 
	
                    update=":[aProperty.name/]EditDialog" 
                    oncomplete="[aProperty.name/]EditDlg.show()"
                    icon="ui-icon-pencil" process="@this"
                    title="#{bundle.EditLink}" 
                    actionListener="#{[aDestinationClass.name.toLowerFirst()/]Controller.prepareEdit(item)}"/>  
                <p:commandButton
                    update=":contentForm:[aProperty.name/]Fieldset"
                    icon="ui-icon-trash" process="@this"
                    title="#{bundle.DestroyLink}" 
                    actionListener="#{[anInputValue.first(anInputValue.index('.'))/]remove[aProperty.name.toUpperFirst()/](item)}"/>
            </p:column>
        </p:dataTable> 
    </h:panelGrid>
</p:fieldset>
[/template]

[**
 * This template generates the table for the Many or One Feature association
 * @param aSourceClass
 * @param aDestinationClass
 * @param aProperty
*/]
[template private generateSelectDataTable(aSourceClass : Class, aDestinationClass : Class, aProperty : Property, anInputValue :String)]
                    <p:tab id="[aProperty.name/]Tab" title="#{bundle.[aSourceClass.name/]_[aProperty.name/]}">  

                        <p:panel header="[aSourceClass.name/] Details">  

                            <h:messages errorClass="error"/>  

                            <h:panelGrid columns="2" columnClasses="label, value" styleClass="grid">  
								[for (p: Property | aDestinationClass.getAllProperties()) ? (isAssociationAttribute(p)._not())]
                                <p:outputLabel value="#{bundle.[aDestinationClass.name/]_[p.name/]}" for="[aProperty.name.toLowerFirst()/][p.name/]" />
                                <h:selectOneMenu id="[aProperty.name.toLowerFirst()/][p.name/]" value="#{[aSourceClass.name.toLowerFirst()/]Controller.selected.[aProperty.name.toLowerFirst()/]}" title="#{bundle.Create[aProperty.name.toUpperFirst()/]_[p.name.toLowerFirst()/]}" >
                                    <f:selectItem itemLabel="Select One" itemValue="" />
                                    <f:selectItems value="#{[aDestinationClass.name.toLowerFirst()/]Controller.itemsAvailableSelectOne}" var="[aProperty.name.toLowerFirst()/]" itemLabel="#{[aProperty.name.toLowerFirst()/].[p.name/]}" itemValue="#{[aProperty.name.toLowerFirst()/]}"/> 
                                </h:selectOneMenu>
								[/for] 


                                <h:outputText value="Skip to last: " />  
                                <h:selectBooleanCheckbox value="#{[aSourceClass.name.toLowerFirst()/]Controller.skip}" />  
                            </h:panelGrid>  
                        </p:panel>  
                    </p:tab> 
[/template]
