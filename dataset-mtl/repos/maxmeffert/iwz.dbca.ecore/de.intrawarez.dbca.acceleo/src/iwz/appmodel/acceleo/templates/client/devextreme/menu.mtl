[comment encoding = UTF-8 /]
[module menu('http://iwz/appmodel')]

[import iwz::appmodel::acceleo::queries::common::client/]

[template public generateMenu(c : Client)]
[file ('/client/devextreme/'+c.name.toLower()+'/js/menu.js', false, 'UTF-8')]
(function thornms_menu ($, DX, ko, [c.name/], undefined){

	"use strict";

	var MenuItem = function (opts) {

		opts = opts || {};

		this.text = opts.text;
		this.view = opts.view;
		this.items = ['[]'/];

	};
	MenuItem.prototype.add = function (opts, fn) {

		var item = new MenuItem(opts);

		this.items.push(item);

		if (typeof fn === "function") fn(item);

		return this;

	};
	MenuItem.prototype.getItems = function () {

		var items = ['[]'/];
		var item;
		var key;

		for (key in this.items) {

			item = {};
			item.text = this.items['['/]key[']'/].text;
			item.view = this.items['['/]key[']'/].view;
			item.items = this.items['['/]key[']'/].getItems();

			if (item.items.length === 0) {

				delete item.items;

			}

			items.push(item);

		}

		return items;

	};

	var dxMenu = new MenuItem();
	
	// [protected('menu:'+c.name)]

	[for (ev : EntityForm | c.elements->selectByKind(EntityForm)->select(isSelectView()))]
	dxMenu.add({ text: [c.name/].labels.menu.[ev.name/], view: "[ev.name/]" });
	[/for]
	
	
	// Add menu items here

	// [/protected]

	dxMenu.navigate = function (e) {

		var itemData = e.itemData;

		if (itemData.view !== undefined) {

			[c.name/].app.navigate({ view: itemData.view });

		}

	};

	[c.name/].dxMenu = dxMenu;


}(jQuery, DevExpress, ko, (window.[c.name/] = window.[c.name/] || {}) )) ;
[/file]
[/template]

[template public generateMenu(app : Application)]
[app.clients.generateMenu()/]
[/template]
