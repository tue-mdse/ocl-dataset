[comment encoding = UTF-8 /]
[module generateSensorObserver('http://www.eclipse.org/uml2/3.0.0/UML', 'http:///rcaseentities.ecore')]


[template public generateSensorObserver(a : Class, s:Stereotype)]

[file ( a.name.concat('Context.java').replaceAll('\\s',''), false, 'UTF-8') ]
/*
 * Copyright 2016 Middlesex University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package [a.namespace.name.concat('.').concat(a.name).replaceAll('\\s','').toLower()/];

import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorManager;

import uk.ac.mdx.cs.ie.acontextlib.SensorContext;

/**
 * This class has been automatically generated by icase (Implementation for 
 * Context-Aware Systems Engineering). Please fill in the corresponding code.
 */
public class [a.name.replaceAll('\\s','').concat('Context')/] extends SensorContext {
	/*
	//Include your variables here
	//This is an example for the light sensor in Android
     private long mCurrentValue;
     private long mContextDifferenceHigher = 0;
   	 private long mContextDifferenceLower = 0;
	*/
    public [a.name.replaceAll('\\s','').concat('Context')/](Context c) {
		/*
			The constructor should call the super method. More information on android.hardware.sensor
			can be found here: https://developer.android.com/reference/android/hardware/Sensor.html

			This is an example of a super call for the light sensor:
       	 super(c, Sensor.TYPE_LIGHT, SensorManager.SENSOR_DELAY_NORMAL, "[a.name.replaceAll('\\s','').concat('Context')/]");
		*/
    }


    @Override
    protected void checkContext(){//float['['/]] values) {
       /* 

			//Include your code here
			//This is an example for the light sensor in Android
		long value = Math.round(values['['/]0]);

        long difference = Math.abs(mCurrentValue - value);
        long threshold;
        if (value > mCurrentValue) {
            threshold = mContextDifferenceHigher;
        } else {
            threshold = mContextDifferenceLower;
        }


        if (difference >= threshold) {
            mCurrentValue = value;
            sendToContextReceivers("sensor.light_lumens", mCurrentValue);
            mContextDifferenceHigher = value * 2;
            mContextDifferenceLower = value / 2;
        } */

    }


}
[/file]
[/template]
