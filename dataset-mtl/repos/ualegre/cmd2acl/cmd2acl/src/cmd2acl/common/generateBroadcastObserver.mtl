[comment encoding = UTF-8 /]
[module generateBroadcastObserver('http://www.eclipse.org/uml2/3.0.0/UML', 'http:///rcaseentities.ecore')]


[template public generateBroadcastObserver(a : Class, s : Stereotype)]
[file ( a.name.concat('Context.java').replaceAll('\\s',''), false, 'UTF-8') ]
/*
 * Copyright 2016 Middlesex University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package [a.namespace.name.concat('.').concat(a.name).replaceAll('\\s','').toLower()/];

import android.content.Context;
//import android.os.BatteryManager;
//import android.os.Bundle;

import uk.ac.mdx.cs.ie.acontextlib.BroadcastContext;


/**
 * This class has been automatically generated by icase (Implementation for 
 * Context-Aware Systems Engineering). Please fill in the corresponding code.
 */

public class [a.name.replaceAll('\\s','').concat('Context')/] extends BroadcastContext {
	// Include your variables here
	//This is an example for checking the battery level
    //private int mBatteryLevel;


    public [a.name.replaceAll('\\s','').concat('Context')/](Context c) {
       // super(c, "Intent.Action_BATTERY_CHANGED", "[a.name.replaceAll('\\s','').concat('Context')/]");
    }


    protected void checkContext() { //Bundle bundle) {

        /*
 			// Include your variables here
			//This is an example for checking the battery level 
		int rawlevel = bundle.getInt(BatteryManager.EXTRA_LEVEL, -1);
        int scale = bundle.getInt(BatteryManager.EXTRA_SCALE, -1);

        if (rawlevel >= 0 && scale > 0) {
            mBatteryLevel = (rawlevel * 100) / scale;

            //Send the receiver the context update
            sendToContextReceivers("sensor.battery_level", mBatteryLevel);
        }
		*/
    }

}
[/file]
[/template]
