[comment encoding = UTF-8 /]
[module MocksGenerator('http://www.eclipse.org/MoDisco/Java/0.2.incubation/java')/]

[comment ------------------------------------------------------------------- /]
[comment Currently dummy (aka mocked) file class file generation /]
[comment ------------------------------------------------------------------- /]

[template public mockJavaClasses (aModel : Model) ]
[for (aString : String | Sequence{'Calendar', 'Locale', 'Appendable', 'StringBuffer', 'Writer', 'CharSequence', 'Date', 'TimeZone', 'DateFormatSymbols', 'Throwable', 'Number', 'ObjectInputStream', 'DataOutputStream', 'BufferedReader', 'DateTimeFormatter', 'File', 'ClassLoader', 'InputStream', 'DataInputStream', 'Exception', 'DataInput', 'DataOutput', 'OutputStream', 'GregorianCalendar', 'UnsupportedOperationException', 'ResourceBundle', 'Boolean', 'Pattern', 'ObjectOutputStream', 'StringTokenizer', 'Serializable', 'Cloneable'})]
[file (aString + '.hpp', false, 'UTF-8')]
#ifndef __MOCK_[aString.toUpperCase()/]__
#define __MOCK_[aString.toUpperCase()/]__
class [aString/] {
};
#endif
[/file]
[/for]
[for (aString : String | Sequence{'Class', 'Collection', 'AtomicReference', 'ThreadLocal', 'AtomicReferenceArray', 'Comparator', 'Comparable'})]
[file (aString + '.hpp', false, 'UTF-8')]
#ifndef __MOCK_[aString.toUpperCase()/]__
#define __MOCK_[aString.toUpperCase()/]__
template<class T>
class [aString/] {
};
#endif
[/file]
[/for]
[/template]
