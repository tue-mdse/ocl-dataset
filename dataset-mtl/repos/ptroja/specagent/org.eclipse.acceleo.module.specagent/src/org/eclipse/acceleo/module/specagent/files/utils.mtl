[comment encoding = UTF-8 /]
[module utils('http://multirobotsystem/1.0','http://www.eclipse.org/emf/2002/Ecore')/]

[query public hasInputBuffers(anAgent : Agent) : Boolean =
sensors.inputs->notEmpty() or effector.inputs->notEmpty() or transmitters.inputs->notEmpty()
/]

[query public hasOutputBuffers(anAgent : Agent) : Boolean =
sensors.outputs->notEmpty() or effector.outputs->notEmpty() or transmitters.outputs->notEmpty()
/]

[query public bufferId(buffer : InputBuffer) : String =
let m : EObject = buffer.eContainer() in
if m.oclIsTypeOf(Effector) then ('Effector_'+buffer.name) else
if m.oclIsTypeOf(Sensor) then ('Sensor_'+m.oclAsType(Sensor).name+'_'+buffer.name) else
if m.oclIsTypeOf(Transmitter) then ('Transmitter_'+m.oclAsType(Transmitter).name+'_'+buffer.name) else
'UNKNOWN_'+buffer.name
endif
endif
endif
/]

[query public inputBufferData(buffer : InputBuffer) : String =
let m : EObject = buffer.eContainer() in
if m.oclIsTypeOf(Effector) then ('effector.'+buffer.name) else
if m.oclIsTypeOf(Sensor) then ('sensors.'+m.oclAsType(Sensor).name+'.'+buffer.name) else
if m.oclIsTypeOf(Transmitter) then ('transmitters.'+m.oclAsType(Transmitter).name+'.'+buffer.name) else
'UNKNOWN_'+buffer.name
endif
endif
endif
/]

[query public inputBufferDataType(buffer : InputBuffer) : String =
let m : EObject = buffer.eContainer() in
if m.oclIsTypeOf(Effector) then ('effector.inputs.'+buffer.name+'.Data_Type') else
if m.oclIsTypeOf(Sensor) then ('sensors.'+m.oclAsType(Sensor).name+'.inputs.'+buffer.name+'.Data_Type') else
if m.oclIsTypeOf(Transmitter) then ('transmitters.'+m.oclAsType(Transmitter).name+'.inputs.'+buffer.name+'.Data_Type') else
'UNKNOWN_'+buffer.name
endif
endif
endif
/]

[query public allInputBuffers(anAgent : Agent) : Set(InputBuffer) =
if effector->notEmpty() then
(effector.oclAsType(IOElement)->union(sensors.oclAsType(IOElement))->union(transmitters.oclAsType(IOElement))).inputs
else
(sensors.oclAsType(IOElement)->union(transmitters.oclAsType(IOElement))).inputs
endif
/]

[query public allOutputBuffers(anAgent : Agent) : Set(OutputBuffer) =
if effector->notEmpty() then
(effector.oclAsType(IOElement)->union(sensors.oclAsType(IOElement))->union(transmitters.oclAsType(IOElement))).outputs
else
(sensors.oclAsType(IOElement)->union(transmitters.oclAsType(IOElement))).outputs
endif
/]

[query public ioElementTypeAsString(element : IOElement) : String =
if element.oclIsTypeOf(Sensor) then ('sensors') else
if element.oclIsTypeOf(Effector) then ('effector') else
if element.oclIsTypeOf(Transmitter) then ('transmitters') else
'UNKNOWN'
endif
endif
endif
/]