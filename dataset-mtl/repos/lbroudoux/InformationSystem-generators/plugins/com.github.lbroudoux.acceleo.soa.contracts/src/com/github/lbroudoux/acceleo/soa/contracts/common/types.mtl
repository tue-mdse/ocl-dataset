[comment encoding = UTF-8 /]
[module types('http://www.obeonetwork.org/dsl/environment/2.0.0', 'http://www.obeonetwork.org/dsl/soa/2.0.0')]

[import com::github::lbroudoux::acceleo::soa::contracts::services::namespaceServices/]


[template public genXsdTypeName(aType : Type, xsdPrefix : String) post (trim())]
[if (aType.isPrimitiveType())]
[xsdPrefix/]:[aType.convertPrimitiveToXsdType()/]
[elseif (not aType.eContainer(Category).oclIsUndefined())]
[let aCategory : Category = aType.eContainer(Category).oclAsType(Category)]
[aCategory.getNamespacePrefix()/]:[aType.name/]
[/let]
[/if]
[/template]

[template public genXsdTypeName(aType : Type, ctxCategory : Category, xsdPrefix : String, tnsPrefix : String) post (trim())]
[if (aType.isPrimitiveType())]
[xsdPrefix/]:[aType.convertPrimitiveToXsdType()/]
[elseif (not aType.eContainer(Category).oclIsUndefined())]
	[let aCategory : Category = aType.eContainer(Category).oclAsType(Category)]
	[if (aCategory <> ctxCategory)]
[aCategory.getNamespacePrefix()/]:[aType.name/]
	[else]
[tnsPrefix/]:[aType.name/]
	[/if]
	[/let]
[/if]
[/template]

[query public isPrimitiveType(aType : Type) : Boolean =
	aType.oclIsTypeOf(PrimitiveType) /]

[template public convertPrimitiveToXsdType(aType : Type) post (trim())]
[if (aType.name = 'String')]
string
[elseif (aType.name = 'Integer')]
int
[/if]
[/template]
