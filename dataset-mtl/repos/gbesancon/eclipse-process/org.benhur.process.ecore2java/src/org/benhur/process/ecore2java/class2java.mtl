[comment encoding = UTF-8 /]
[module org::benhur::process::ecore2java::class2java('http://www.eclipse.org/emf/2002/Ecore')]

[import org::benhur::process::ecore2java::utils /]

[template public class2java(aClass : EClass)]
[file (aClass.filepath(), false, 'UTF-8')]
package [aClass.ePackage.fullname()/];

public [if (aClass.interface)]interface [elseif(aClass.abstract)]abstract [/if]class [aClass.name()/]
[if (aClass.interface = false)]
[let aSuperClasses : Set(EClass) = aClass.eSuperTypes->select(not interface) ]
[if (aSuperClasses->size() <> 0)]
  extends [for (aSuperClass : EClass | aSuperClasses) separator (', ')][aSuperClass.name()/][/for]
[/if]
[/let]
[let aSuperInterfaces : Set(EClass) = aClass.eSuperTypes->select(interface) ]
[if (aSuperInterfaces->size() <> 0)]
  implements [for (aSuperInterface : EClass | aSuperInterfaces) separator (', ')][aSuperInterface.name()/][/for]
[/if]
[/let]
[else]
[let aSuperInterfaces : Set(EClass) = aClass.eSuperTypes->select(interface) ]
[if (aSuperInterfaces->size() <> 0)]
  extends [for (aSuperInterface : EClass | aSuperInterfaces) separator (', ')][aSuperInterface.name()/][/for]
[/if]
[/let]
[/if]
{
[if (not aClass.interface)]
  public [aClass.name()/]()
  {
[if (aClass.eSuperTypes->select(interface = false)->size() <> 0)]
    super();
[/if]
  }
[/if]
[for (aOperation : EOperation | aClass.eOperations)]

[if (not aClass.interface)]
  [aOperation.signature()/]
  {
  }
[else]
  [aOperation.signature()/];
[/if]
[/for]
}
[/file]
[/template]

[template public signature(aOperation : EOperation)]
public [if (aOperation.eType.oclIsUndefined())]void[else][if (aOperation.upperBound = -1)]List<[aOperation.eType.name()/]>[else][aOperation.eType.name()/][/if][/if] [aOperation.name/]()
[/template]