[comment encoding = UTF-8 /]
[**
 * /*******************************************************************************
 * Copyright (c) 2016 FBK
 * All rights reserved. Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contributors:
 *     Denisse MuÃ±ante (FBK) - main development
 *
 * Initially developed in the context of SUPERSEDE EU project www.supersede.eu
 *******************************************************************************/
 */]
[**
 * common: this is the common module to provide useful queriesused by others modules.
 */]
[module common('http://www.eclipse.org/uml2/5.0.0/UML')]

[**
 * Returns the list of classes contained in a model
 */]
[query public getClasses(aModel : Model) : Sequence(OclAny) = 
	aModel.eContents(Class)
 /] 

[**
 * Returns the list of attributes contained in a class
 */]
[query public getAttributes(aClass : Class) : OrderedSet(Property) = 
	aClass.allAttributes()
 /] 

[**
 * Returns the list of instance specification contained in a model
 * mModel.eContents(InstanceSpecification)->select(visibility = VisibilityKind::public)
 */]
[query public getInstanceSpecifications(aModel : Model) : Sequence(InstanceSpecification) = 
	aModel.eContents(InstanceSpecification)
 /] 

[**
 * Returns the list of slots contained in an Instance
 */]
[query public getSlots(anInstance : InstanceSpecification) : Set(Slot) = 
	anInstance.slot
 /] 

[**
 * Returns the Value Specification od an Slot
 */]
[query public getValueSlot(aSlot : Slot) : ValueSpecification = 
	aSlot.value->first()
 /] 

[**
 * Returns if it is monitoring
 */]
[query public getIfMonitor(aModel : Model) : Boolean = 
	aModel.name.toLower().contains('monitor')
 /]