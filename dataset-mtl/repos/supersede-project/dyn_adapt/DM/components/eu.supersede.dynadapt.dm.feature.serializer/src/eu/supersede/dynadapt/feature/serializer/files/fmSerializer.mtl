[comment encoding = UTF-8 /]
[module fmSerializer('http://zcu.cz/yafmt/model/fm')]


[template public serializeFeatureModel(aFeatureModel : FeatureModel)]

[file (aFeatureModel.name.concat('.txt'), false, 'UTF-8')]
Feature model: [aFeatureModel.name/]
[if (not aFeatureModel.root.oclIsUndefined())]
	[let rootFeature : Feature = aFeatureModel.root]
		[feature(rootFeature)/]
	[/let]
[/if]
[/file]
[/template]

[template public feature (aFeature : Feature)]
Feature: [aFeature.id/]
	Name: [aFeature.name/]
	Is root?: [aFeature.root/]
	Is mandatory?: [aFeature.mandatory/]
	Is optional?: [aFeature.optional/]
	Comment: [aFeature.comment/]
	Description: [aFeature.description/]
	

	[if (aFeature.attributes->isEmpty())]
	Attributes: None
	[else]
	Attributes:
		[for (anAttribute : Attribute | aFeature.attributes)]
			[attribute(anAttribute)/]
		[/for]
	[/if]

	[if (aFeature.groups->isEmpty())]
	No groups are defined
	[else]
		[let aGroup : Group = aFeature.groups->first()]
	OR Group: [aGroup._or/]
	XOR Group: [aGroup._xor/]
	Child Features in Group:
		[for (aChildFeature : Feature | aGroup.features)]
			[feature(aChildFeature)/]
		[/for]
		[/let]
	[/if]
		
	[if (aFeature.features->isEmpty())]
	Child Features: None
		[else]
	Child Features: 
		[for (aChildFeature : Feature | aFeature.features)]
			[feature(aChildFeature)/]
		[/for]
	[/if]
[/template]

[template public attribute(anAttribute : Attribute)]
Attribute: [anAttribute.id/] (name: [anAttribute.name/], type: [anAttribute.type/], description: [anAttribute.description/], comment: [anAttribute.comment/])
[/template]