[comment]
  Copyright 2008, 2010 Obeo
  All rights reserved.  This program and the accompanying materials
  are made available under the terms of the Eclipse Public License 1.0
  
  Any license can be applied to the files generated with this template.
  
  author <a href="mailto:stephane.bouchet@obeo.fr">Stephane Bouchet</a>
[/comment]
[module common('http://www.eclipse.org/uml2/2.1.0/UML')/]
[import org::unicase::papyrus::codegeneration::common::common/]

[template public getFullPathFile(cl : Classifier)]
[if (not cl.getNearestPackage().oclIsUndefined())]
[cl.packagePath().substituteAll('.', '/').concat('/').concat(cl.normalizeName())/]
[else]
[cl.normalizeName()/]
[/if]
[/template]

[template public getInParameter(o : Operation)]
[for (p : Parameter | o.ownedParameter) separator(',') ? (p.direction <> ParameterDirectionKind::return)][p.type.normalizeName()/] [p.normalizeName()/][/for]
[/template]

[template public returnTypeOperation(o : Operation)]
[if (o.type.oclIsUndefined())]void [o.normalizeName()/][else][o.type.normalizeName()/] [o.normalizeName()/][/if]
[/template]

[template public importBlock(traceabilityContext : OclAny)]
// [protected ('for imports')]
import java.util.*;
// [/protected]
[/template]

[template public packageBlock(cl : Classifier)]
[if (not cl.getNearestPackage().oclIsUndefined())]package [cl.packagePath()/];[/if]
[/template]

[template public normalizeName(element : NamedElement)]
[if ((element.name = 'package') or (element.name = 'interface') or (element.name = 'class'))][element.name.replaceAll(' ', '').concat('_')/][else][element.name.replaceAll(' ', '')/][/if]
[/template]

[template public _commentFileBlock(traceabilityContext : OclAny)]
/**
 * Generated with Unicase UML 2 Java export
 */
[/template]

[template public returnOperationComment(traceabilityContext : OclAny)]
     * @return
[/template]

[template public paramOperationComment(p : Parameter)]
     * @param [p.normalizeName()/]
[/template]
