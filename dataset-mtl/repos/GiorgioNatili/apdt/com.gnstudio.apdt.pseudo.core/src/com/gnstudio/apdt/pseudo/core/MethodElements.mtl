[comment encoding = UTF-8 /]
[module MethodElements('http:///org/gnstudio/apdt/model.ecore')/]
[import SequenceElements /]
[import TypeElements /]
[import KeywordsUtils /]

[template public genMethodElements(aMethod : Method,_body :Boolean)]
[getKeyword('procedure')/]  [genMethodName(aMethod)/] [genReturnType(aMethod.signature)/]
    [if ((not aMethod.signature.name.oclIsUndefined()) and aMethod.signature.name.trim().size()>0 and (not aMethod.note.oclIsUndefined()) and aMethod.note.trim().size()>0)]
    [aMethod.note/]
    [/if]
     [if (aMethod.arguments->notEmpty())]
     [getKeyword('arguments')/]  [genArgsElement(aMethod)/]
     [/if]
         [if(aMethod.sequences->notEmpty() and _body)]
         
         [for (aSequences : Sequence | aMethod.sequences)][genSequenceElements(aSequences)/][/for]
         [/if]
[if (_body)]
[getKeyword('endprocedure')/]
[/if]         
[/template]

[template private genMethodName(aMethod : Method)]
[if ((not aMethod.signature.name.oclIsUndefined()) and aMethod.signature.name.trim().size()>0)][aMethod.signature.name/][else][aMethod.note/][/if]
[/template]

[template private genReturnType(aSignature : MethodSignature)]
[if ((not aSignature.returnType.oclIsUndefined()) and (not aSignature.returnType.name.oclIsUndefined()) and aSignature.returnType.name.trim().size()>0)] [getKeyword('returning')/] [aSignature.returnType.name/][/if]
[/template]

[template private genArgsElement(aMethod : Method)]
[for (aArg : MethodArgument | aMethod.arguments) separator (', ')][aArg.name/] [genType(aArg.type)/][/for]
[/template]
