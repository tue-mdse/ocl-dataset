[comment encoding = UTF-8 /]

[module generate('http://fr.inria.aoste.timemodel.ccslmodel.clockexpressionandrelation', 
	'http://www.eclipse.org/emf/2002/Ecore', 
	'http://org.gemoc.moccml/1.0', 
	'http://fr.inria.aoste.timemodel',
	'http://org.gemoc.moccml.fsmmodel/1.0',
	'http://www.eclipse.org/xtend', 
	'http://www.eclipse.org/xtend/RichString', 
	'http://www.eclipse.org/xtext/xbase/Xbase',
	'http://www.polarsys.org/capella/core/modeller/0.8.0','http://www.polarsys.org/kitalpha/emde/1.0.0','http://www.polarsys.org/capella/core/ctx/0.8.0','http://www.polarsys.org/capella/core/interaction/0.8.0') ]
[template public generate(aProject : Project)]
[comment @main/]
[file (aProject.name+'_FiacreProcess.fcr', false, 'UTF-8')]
// *********************** Type Declaration ******************************/



process pUnConstrainedSemantics['['/][']'/] is
	states s0

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][']'/] is
	
	states s0
[/file]
/******************** Process Parallelization for Project******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port


par

pUnConstrainedSemantics['['/][']'/]
end par
sys 



process pUnConstrainedSemantics['['/][']'/] is
	states s0

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][']'/] is
	
	states s0
[/file]
/******************** Process Parallelization for Project******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port


par

pUnConstrainedSemantics['['/][']'/]
end par
sys 



/*********************************************************************
Defining the Functions for : Capability
**********************************************************************/
process pUnConstrainedSemantics['['/][for (element : Capability| aProject.eAllContents(Capability))]
[element.name/]_globalClock:out none,[/for][']'/] is
	states s0
[for (element : Capability| aProject.eAllContents(Capability))]
    from s0  [element.name/]_globalClock;  to s0

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : Capability| aProject.eAllContents(Capability))]
[element.name/]_globalClock:out none,[/for][']'/] is
	
	states s0
[for (element : Capability| aProject.eAllContents(Capability))]
    from s0  [element.name/]_globalClock;  to s0

[/for]
[/file]
/******************** Process Parallelization for Project******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : Capability| aProject.eAllContents(Capability))]
[element.name/]_globalClock: none,
[/for]

par

pUnConstrainedSemantics['['/][for (element : Capability| aProject.eAllContents(Capability))]
[element.name/]_globalClock,[/for][']'/]
[for (element : Capability| aProject.eAllContents(Capability))]
|| p[element.name/] ['['/][element.name/]_globalClock[']'/] (&global, ID)
[/for]
end par
sys 



/*********************************************************************
Defining the Functions for : Execution
**********************************************************************/
/*********************************************************************
Defining the Functions for : MessageEnd
**********************************************************************/
/*********************************************************************
Defining the Functions for : ExecutionEnd
**********************************************************************/
/*********************************************************************
Defining the Functions for : AbstractEnd
**********************************************************************/
/*********************************************************************
Defining the Functions for : SequenceMessage
**********************************************************************/
/*********************************************************************
Defining the Functions for : InstanceRole
**********************************************************************/
/*********************************************************************
Defining the Functions for : ConstraintDuration
**********************************************************************/
process pUnConstrainedSemantics['['/][for (element : Execution| aProject.eAllContents(Execution))]
[element.name/]_begin:out none,[element.name/]_stop:out none,[/for][for (element : MessageEnd| aProject.eAllContents(MessageEnd))]
[element.name/]_messEnd_occurs:out none,[/for][for (element : ExecutionEnd| aProject.eAllContents(ExecutionEnd))]
[element.name/]_execEnd_occurs:out none,[/for][for (element : AbstractEnd| aProject.eAllContents(AbstractEnd))]
[element.name/]_abstractEnd_occurs:out none,[/for][for (element : SequenceMessage| aProject.eAllContents(SequenceMessage))]
[element.name/]_AnyReceivingOccurs:out none,[/for][for (element : InstanceRole| aProject.eAllContents(InstanceRole))]
[/for][for (element : ConstraintDuration| aProject.eAllContents(ConstraintDuration))]
[/for][']'/] is
	states s0
[for (element : Execution| aProject.eAllContents(Execution))]
    from s0  [element.name/]_begin;  to s0
    from s0  [element.name/]_stop;  to s0

[/for]
[for (element : MessageEnd| aProject.eAllContents(MessageEnd))]
    from s0  [element.name/]_messEnd_occurs;  to s0

[/for]
[for (element : ExecutionEnd| aProject.eAllContents(ExecutionEnd))]
    from s0  [element.name/]_execEnd_occurs;  to s0

[/for]
[for (element : AbstractEnd| aProject.eAllContents(AbstractEnd))]
    from s0  [element.name/]_abstractEnd_occurs;  to s0

[/for]
[for (element : SequenceMessage| aProject.eAllContents(SequenceMessage))]
    from s0  [element.name/]_AnyReceivingOccurs;  to s0

[/for]
[for (element : InstanceRole| aProject.eAllContents(InstanceRole))]

[/for]
[for (element : ConstraintDuration| aProject.eAllContents(ConstraintDuration))]

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : Execution| aProject.eAllContents(Execution))]
[element.name/]_begin:out none,[element.name/]_stop:out none,[/for][for (element : MessageEnd| aProject.eAllContents(MessageEnd))]
[element.name/]_messEnd_occurs:out none,[/for][for (element : ExecutionEnd| aProject.eAllContents(ExecutionEnd))]
[element.name/]_execEnd_occurs:out none,[/for][for (element : AbstractEnd| aProject.eAllContents(AbstractEnd))]
[element.name/]_abstractEnd_occurs:out none,[/for][for (element : SequenceMessage| aProject.eAllContents(SequenceMessage))]
[element.name/]_AnyReceivingOccurs:out none,[/for][for (element : InstanceRole| aProject.eAllContents(InstanceRole))]
[/for][for (element : ConstraintDuration| aProject.eAllContents(ConstraintDuration))]
[/for][']'/] is
	
	states s0
[for (element : Execution| aProject.eAllContents(Execution))]
    from s0  [element.name/]_begin;  to s0
    from s0  [element.name/]_stop;  to s0

[/for]
[for (element : MessageEnd| aProject.eAllContents(MessageEnd))]
    from s0  [element.name/]_messEnd_occurs;  to s0

[/for]
[for (element : ExecutionEnd| aProject.eAllContents(ExecutionEnd))]
    from s0  [element.name/]_execEnd_occurs;  to s0

[/for]
[for (element : AbstractEnd| aProject.eAllContents(AbstractEnd))]
    from s0  [element.name/]_abstractEnd_occurs;  to s0

[/for]
[for (element : SequenceMessage| aProject.eAllContents(SequenceMessage))]
    from s0  [element.name/]_AnyReceivingOccurs;  to s0

[/for]
[for (element : InstanceRole| aProject.eAllContents(InstanceRole))]

[/for]
[for (element : ConstraintDuration| aProject.eAllContents(ConstraintDuration))]

[/for]
[/file]
/******************** Process Parallelization for Project******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : Execution| aProject.eAllContents(Execution))]
[element.name/]_begin: none,[element.name/]_stop: none,


[/for][for (element : MessageEnd| aProject.eAllContents(MessageEnd))]
[element.name/]_messEnd_occurs: none,

[/for][for (element : ExecutionEnd| aProject.eAllContents(ExecutionEnd))]
[element.name/]_execEnd_occurs: none,

[/for][for (element : AbstractEnd| aProject.eAllContents(AbstractEnd))]
[element.name/]_abstractEnd_occurs: none,
[/for][for (element : SequenceMessage| aProject.eAllContents(SequenceMessage))]
[element.name/]_AnyReceivingOccurs: none,

[/for][for (element : InstanceRole| aProject.eAllContents(InstanceRole))]

[/for][for (element : ConstraintDuration| aProject.eAllContents(ConstraintDuration))]

[/for]

par

pUnConstrainedSemantics['['/][for (element : Execution| aProject.eAllContents(Execution))]
[element.name/]_begin,[element.name/]_stop,[/for][for (element : MessageEnd| aProject.eAllContents(MessageEnd))]
[element.name/]_messEnd_occurs,[/for][for (element : ExecutionEnd| aProject.eAllContents(ExecutionEnd))]
[element.name/]_execEnd_occurs,[/for][for (element : AbstractEnd| aProject.eAllContents(AbstractEnd))]
[element.name/]_abstractEnd_occurs,[/for][for (element : SequenceMessage| aProject.eAllContents(SequenceMessage))]
[element.name/]_AnyReceivingOccurs,[/for][for (element : InstanceRole| aProject.eAllContents(InstanceRole))]
,[/for][for (element : ConstraintDuration| aProject.eAllContents(ConstraintDuration))]
,[/for][']'/]
[for (element : Execution| aProject.eAllContents(Execution))]
|| p[element.name/] ['['/][element.name/]_begin,[element.name/]_stop[']'/] (&global, ID)
[/for]
[for (element : MessageEnd| aProject.eAllContents(MessageEnd))]
|| p[element.name/] ['['/][element.name/]_messEnd_occurs[']'/] (&global, ID)
[/for]
[for (element : ExecutionEnd| aProject.eAllContents(ExecutionEnd))]
|| p[element.name/] ['['/][element.name/]_execEnd_occurs[']'/] (&global, ID)
[/for]
[for (element : AbstractEnd| aProject.eAllContents(AbstractEnd))]
|| p[element.name/] ['['/][element.name/]_abstractEnd_occurs[']'/] (&global, ID)
[/for]
[for (element : SequenceMessage| aProject.eAllContents(SequenceMessage))]
|| p[element.name/] ['['/][element.name/]_AnyReceivingOccurs[']'/] (&global, ID)
[/for]
[for (element : InstanceRole| aProject.eAllContents(InstanceRole))]
|| p[element.name/] ['['/][']'/] (&global, ID)
[/for]
[for (element : ConstraintDuration| aProject.eAllContents(ConstraintDuration))]
|| p[element.name/] ['['/][']'/] (&global, ID)
[/for]
end par
sys 
[/file]
[/template]
