<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="RESTfulServicePSM" nsURI="PSM/metamodel" nsPrefix="Eu.fp7.scase">
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="HibernateActivity">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="HibernateActivityHTTPVerb"
        lowerBound="1" eType="#//HTTPVerb"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HibernateAnnotation">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="HibernateAnnotationText"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HibernateController">
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasHibernateActivity" lowerBound="1"
        upperBound="-1" eType="#//HibernateActivity" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HTTPActivity">
    <eStructuralFeatures xsi:type="ecore:EReference" name="isMappedToHibernateActivity"
        lowerBound="1" eType="#//HibernateActivity"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasHTTPActivityParameter"
        upperBound="-1" eType="#//HTTPActivityFunctionParameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ActivityHTTPVerb" lowerBound="1"
        eType="#//HTTPVerb"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="HTTPActivityURI" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasHTTPActivityHandler"
        lowerBound="1" eType="#//HTTPActivityHandler" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="HTTPActivityHasJAXRSAnnotation"
        lowerBound="1" upperBound="-1" eType="#//JAXRSAnnotation" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HTTPActivityFunctionParameter" eSuperTypes="#//FunctionParameter">
    <eStructuralFeatures xsi:type="ecore:EReference" name="HTTPFunctionParameterHasJAXRSAnnotation"
        eType="#//JAXRSAnnotation" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HTTPActivityHandler">
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasHypermediaFunction"
        lowerBound="1" eType="#//JavaHypermediaFunction" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="HandlerHTTPVerb" lowerBound="1"
        eType="#//HTTPVerb"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaAlgoResourceController">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="controllerURIPathAnnotation AlgoControllerHasUniqueProperHTTPActivity AlgoControllerActivitiesHaveJAXRSAnnotations algoControllerActivityAddsHypermediaLinkToSelf"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="controllerURIPathAnnotation" value="self.AlgoControllerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(&quot;' + self.controllerURI + '&quot;)')"/>
      <details key="AlgoControllerHasUniqueProperHTTPActivity" value="&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 3 or HTTPVerb = 2)->isEmpty() &#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->size() = 1&#xA;&#x9;&#x9;)"/>
      <details key="AlgoControllerActivitiesHaveJAXRSAnnotations" value="self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->forAll(HTTPActivity | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.ActivityHTTPVerb = 0 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST')&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') implies HTTPActivity.ActivityHTTPVerb = 0 &#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET')&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 &#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(&quot;' + HTTPActivity.HTTPActivityURI + '&quot;)')&#xA;&#x9;&#x9;)"/>
      <details key="algoControllerActivityAddsHypermediaLinkToSelf" value="&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 0)&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;or&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaAlgoController = self)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaAlgoRControllerHasHTTPActivity->exists(HTTPVerb = 1)&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasAssociatedAlgoModel"
        lowerBound="1" eType="#//JavaAlgoResourceModel"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaAlgoRControllerHasHTTPActivity"
        lowerBound="1" eType="#//HTTPActivity" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="controllerURI" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentName" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="AlgoControllerHasJAXRSAnnotation"
        lowerBound="1" eType="#//JAXRSAnnotation" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaAlgoResourceModel">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="uniqueXMLRootElementAnnotation uniqueSetterForEveryProeprty uniqueGetterForEveryProeprty uniqueLinkListProperty"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="uniqueXMLRootElementAnnotation" value="self.JavaAlgoModelHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')"/>
      <details key="uniqueSetterForEveryProeprty" value="self.JavaAlgoModelHasProperty->forAll(Property | &#xA;&#x9;&#x9;&#x9;self.JavaAlgoModelHasSetterFunction->one(name = 'set' + Property.name)&#xA;&#x9;&#x9;)"/>
      <details key="uniqueGetterForEveryProeprty" value="self.JavaAlgoModelHasProperty->forAll(Property | &#xA;&#x9;&#x9;&#x9;self.JavaAlgoModelHasGetterFunction->one(name = 'get' + Property.name)&#xA;&#x9;&#x9;)"/>
      <details key="uniqueLinkListProperty" value="self.JavaAlgoModelHasProperty->one(name = 'linklist') &#xA;&#x9;&#x9;&#x9;and self.JavaAlgoModelHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaAlgoModelHasJAXBAnnotation"
        lowerBound="1" eType="#//JAXBAnnotation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaAlgoModelHasProperty"
        lowerBound="1" eType="#//PSMComponentProperty" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaAlgoModelHasSetterFunction"
        lowerBound="1" eType="#//JavaSetterFunction" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaAlgoModelHasGetterFunction"
        lowerBound="1" eType="#//JavaGetterFunction" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentName" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasRelatedAlgoModel" upperBound="-1"
        eType="#//JavaAlgoResourceModel"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="isRelatedAlgoModel" upperBound="-1"
        eType="#//JavaAlgoResourceModel"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaFunction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasFunctionParameter" upperBound="-1"
        eType="#//FunctionParameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaGetterFunction" eSuperTypes="#//JavaFunction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="getsProperty" lowerBound="1"
        eType="#//PSMComponentProperty"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaHypermediaFunction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasPSMHypermediaLink" lowerBound="1"
        upperBound="-1" eType="#//PSMHypermediaLink" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaResourceController">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="controllerURIPathAnnotation RControllerNotAllowedVerb RControllerHasMinimumActivity RControllerActivitiesHaveJAXRSAnnotations rControllerGetActivityAddsGetHypermediaLinkToSelf rControllerPutActivityAddsPutHypermediaLinkToSelf rControllerGetActivityAddsPutHypermediaLinkToSelf rControllerGetActivityAddsDeleteHypermediaLinkToSelf rControllerPutActivityAddsGetHypermediaLinkToSelf rControllerPutActivityAddsDeleteHypermediaLinkToSelf"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="controllerURIPathAnnotation" value="self.JavaRControllerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(&quot;' + self.controllerURI + '&quot;)')"/>
      <details key="RControllerNotAllowedVerb" value="self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 0)->isEmpty()"/>
      <details key="RControllerHasMinimumActivity" value="self.JavaRControllerHasHTTPActivity->exists(HTTPVerb &lt;> 0)"/>
      <details key="RControllerActivitiesHaveJAXRSAnnotations" value="self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1 or HTTPVerb = 2 or HTTPVerb = 3)->forAll(HTTPActivity | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.ActivityHTTPVerb = 2 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@PUT')&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@PUT') implies HTTPActivity.ActivityHTTPVerb = 2 &#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET')&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 &#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.ActivityHTTPVerb = 3 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@DELETE')&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@DELETE') implies HTTPActivity.ActivityHTTPVerb = 3&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(&quot;' + HTTPActivity.HTTPActivityURI + '&quot;)')&#xA;&#x9;&#x9;)"/>
      <details key="rControllerGetActivityAddsGetHypermediaLinkToSelf" value="&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
      <details key="rControllerPutActivityAddsPutHypermediaLinkToSelf" value="&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity.hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
      <details key="rControllerGetActivityAddsPutHypermediaLinkToSelf" value="&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
      <details key="rControllerGetActivityAddsDeleteHypermediaLinkToSelf" value="&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
      <details key="rControllerPutActivityAddsGetHypermediaLinkToSelf" value="&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 1) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
      <details key="rControllerPutActivityAddsDeleteHypermediaLinkToSelf" value="&#xA;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->select(HTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Sibling' and hasTargetJavaRController = self)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 3) and self.JavaRControllerHasHTTPActivity->exists(HTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRControllerHasJAXRSAnnotation"
        lowerBound="1" eType="#//JAXRSAnnotation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRControllerHasHTTPActivity"
        lowerBound="1" upperBound="-1" eType="#//HTTPActivity" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasAssociatedJavaRModel"
        lowerBound="1" eType="#//JavaResourceModel"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="controllerURI" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentName" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaResourceControllerManager">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="controllerURIPathAnnotation RCManagerNotAllowedHTTPActivityVerbs RCManagerActivitiesHaveJAXRSAnnotations JRCManagerPostActivityAddsPostHypermediaLinkToSelf JRCManagerGetActivityAddsPostHypermediaLinkToSelf JRCManagerPostActivityAddsGetHypermediaLinkToSelf JRCManagerGetActivityAddsPostHypermediaLinkToSelf"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="controllerURIPathAnnotation" value="self.JavaRCManagerHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(&quot;' + self.controllerURI + '&quot;)')"/>
      <details key="RCManagerNotAllowedHTTPActivityVerbs" value="self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 2 or HTTPVerb = 3)->isEmpty()"/>
      <details key="RCManagerActivitiesHaveJAXRSAnnotations" value="self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0 or HTTPVerb = 1)->forAll(HTTPActivity | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.ActivityHTTPVerb = 0 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST')&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@POST') implies HTTPActivity.ActivityHTTPVerb = 0 &#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.ActivityHTTPVerb = 1 implies HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET')&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@GET') implies HTTPActivity.ActivityHTTPVerb = 1 &#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and HTTPActivity.HTTPActivityHasJAXRSAnnotation->one(JAXRSAnnotationText = '@Path(&quot;' + HTTPActivity.HTTPActivityURI + '&quot;)')&#xA;&#x9;&#x9;)"/>
      <details key="JRCManagerPostActivityAddsPostHypermediaLinkToSelf" value="self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and hasTargetRCManager = self and LinkType = 'Sibling')"/>
      <details key="JRCManagerGetActivityAddsPostHypermediaLinkToSelf" value="self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and hasTargetRCManager = self and LinkType = 'Sibling')"/>
      <details key="JRCManagerPostActivityAddsGetHypermediaLinkToSelf" value="self.JavaRCManagerHasHTTPActivity->select(HTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and hasTargetRCManager = self and LinkType = 'Sibling')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRCManagerHasJAXRSAnnotation"
        lowerBound="1" eType="#//JAXRSAnnotation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRCManagerHasHTTPActivity"
        lowerBound="2" upperBound="2" eType="#//HTTPActivity" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasAssociatedRMManager"
        lowerBound="1" eType="#//JavaResourceModelManager"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="controllerURI" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentName" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaResourceModel">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="uniqueXMLRootElementAnnotation uniqueNamingProperty neededRModelHibernateAnnotationsExist uniquePrimaryIdentifier uniqueSetterForEveryProeprty uniqueGetterForEveryProeprty uniqueLinkListProperty properCollectionHibernateAnnotations"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="uniqueXMLRootElementAnnotation" value="self.JavaRModelHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')"/>
      <details key="uniqueNamingProperty" value="self.JavaRModelHasProperty->isUnique(bIsNamingProperty = true)"/>
      <details key="neededRModelHibernateAnnotationsExist" value="self.JavaRModelHasHibernateAnnotation->one('@Entity') and self.JavaRModelHasHibernateAnnotation->one('@Table(name=&quot;' + self.parentName + '&quot;)')"/>
      <details key="uniquePrimaryIdentifier" value="self.JavaRModelHasProperty->isUnique(bIsPrimaryIdentifier = true)"/>
      <details key="uniqueSetterForEveryProeprty" value="self.JavaRModelHasProperty->forAll(Property | &#xA;&#x9;&#x9;&#x9;self.JavaRModelHasSetter->one(name = 'set' + Property.name)&#xA;&#x9;&#x9;)"/>
      <details key="uniqueGetterForEveryProeprty" value="self.JavaRModelHasProperty->forAll(Property | &#xA;&#x9;&#x9;&#x9;self.JavaRModelHasGetter->one(name = 'get' + Property.name)&#xA;&#x9;&#x9;)"/>
      <details key="uniqueLinkListProperty" value="self.JavaRModelHasProperty->one(name = 'linklist') &#xA;&#x9;&#x9;&#x9;and self.JavaRModelHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')"/>
      <details key="properCollectionHibernateAnnotations" value="&#xA;&#x9;&#x9;let JRRModels : Sequence(JavaResourceModel) = self.hasRelatedJavaRMManager.hasRelatedJavaRModel in&#xA;&#x9;&#x9;&#x9;self.JavaRModelHasProperty->select((bIsUnique = false) and (name &lt;> 'linklist'))->reject( Property | JRRModels->exists(JRRModel | 'SetOf' + JRRModel.name = Property.name))&#xA;&#x9;&#x9;&#x9;&#x9;->forAll(CollectionProperty | CollectionProperty.PropertyHasHibernateAnnotation->one('@ElementCollection(fetch = FetchType.EAGER)')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CollectionProperty.PropertyHasHibernateAnnotation->one('@CollectionTable(name=&quot;' + self.parentName + CollectionProperty.name +'&quot;, joinColumns=@JoinColumn(name=&quot;' + self.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '&quot;))')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CollectionProperty.PropertyHasHibernateAnnotation->one('@ForeignKey(name = &quot;fk_' + self.parentName + '_' + CollectionProperty.name + '&quot;)')&#xA;&#x9;&#x9;&#x9;&#x9;)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRModelHasJAXBAnnotation"
        lowerBound="1" eType="#//JAXBAnnotation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRModelHasProperty"
        lowerBound="1" upperBound="-1" eType="#//PSMComponentProperty" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasRelatedJavaRMManager"
        upperBound="-1" eType="#//JavaResourceModelManager"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRModelHasHibernateAnnotation"
        lowerBound="2" upperBound="2" eType="#//HibernateAnnotation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRModelHasSetter" lowerBound="1"
        upperBound="-1" eType="#//JavaSetterFunction" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRModelHasGetter" lowerBound="1"
        upperBound="-1" eType="#//JavaGetterFunction" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasRelatedJavaAlgoModel"
        upperBound="-1" eType="#//JavaAlgoResourceModel"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentName" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaResourceModelManager">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="uniqueXMLRootElementAnnotation uniqueSetterForEveryProeprty uniqueGetterForEveryProeprty uniqueLinkListProperty"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="uniqueXMLRootElementAnnotation" value="self.JavaRMManagerHasJAXBAnnotation->one(JAXBAnnotationText = '@XmlRootElement')"/>
      <details key="uniqueSetterForEveryProeprty" value="self.JavaRMManagerHasProperty->forAll(Property | &#xA;&#x9;&#x9;&#x9;self.JavaRMManagerHasSetter->one(name = 'set' + Property.name)&#xA;&#x9;&#x9;)"/>
      <details key="uniqueGetterForEveryProeprty" value="self.JavaRMManagerHasProperty->forAll(Property | &#xA;&#x9;&#x9;&#x9;self.JavaRMManagerHasGetter->one(name = 'get' + Property.name)&#xA;&#x9;&#x9;)"/>
      <details key="uniqueLinkListProperty" value="self.JavaRMManagerHasProperty->one(name = 'linklist') &#xA;&#x9;&#x9;&#x9;and self.JavaRMManagerHasProperty->select(name = 'linklist').PropertyHasHibernateAnnotation->one('@Transient')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRMManagerHasJAXBAnnotation"
        lowerBound="1" eType="#//JAXBAnnotation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRMManagerHasProperty"
        lowerBound="1" eType="#//PSMComponentProperty" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasRelatedJavaRModel" lowerBound="1"
        eType="#//JavaResourceModel"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRMManagerHasSetter"
        lowerBound="1" eType="#//JavaSetterFunction" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="JavaRMManagerHasGetter"
        lowerBound="1" eType="#//JavaGetterFunction" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentName" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PSMComponentProperty">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="primaryIdentifierHasProperAnnotations"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="primaryIdentifierHasProperAnnotations" value="(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;self.bIsPrimaryIdentifier &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;implies &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;self.PropertyHasHibernateAnnotation->one('@Id')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;self.PropertyHasHibernateAnnotation->one('@GeneratedValue')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;self.PropertyHasHibernateAnnotation->one('@Id')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;self.PropertyHasHibernateAnnotation->one('@GeneratedValue')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;self.bIsPrimaryIdentifier&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="PropertyHasHibernateAnnotation"
        lowerBound="1" upperBound="-1" eType="#//HibernateAnnotation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="bIsUnique" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="bIsNamingProperty" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="bIsPrimaryIdentifier" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaSetterFunction" eSuperTypes="#//JavaFunction">
    <eStructuralFeatures xsi:type="ecore:EReference" name="setsProperty" lowerBound="1"
        eType="#//PSMComponentProperty"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="SetterFunctionHasJAXBAnnotation"
        eType="#//JAXBAnnotation" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JAXBAnnotation">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="JAXBAnnotationText" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JAXRSAnnotation">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="JAXRSAnnotationText" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PSMHypermediaLink">
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasTargetJavaAlgoController"
        eType="#//JavaAlgoResourceController"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasTargetJavaRController"
        eType="#//JavaResourceController"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasTargetRCManager" eType="#//JavaResourceControllerManager"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="LinkHTTPVerb" lowerBound="1"
        eType="#//HTTPVerb"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="LinkType" lowerBound="1"
        eType="#//LinkType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RESTfulServicePSM">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="allModelsHaveRResourcePropertiesWithProperHibernateAnnotations allModelsHavePResourcePropertiesWithProperHibernateAnnotations rMPropertiesSettersHaveProperXMLTransientAnnotation rMPropertiesHaveColumnAnnotation RControllerUniqueHTTPVerbsPerParent RCManagerHasUniqueHTTPActivityVerbsPerParent rCManagerPostActivityAddsGetHypermediaLinkToRRController rCManagerPostActivityAddsPutHypermediaLinkToRRController rCManagerPostActivityAddsDeleteHypermediaLinkToRRController rCManagerGetActivityAddsGetHypermediaLinkToRRController rCManagerGetActivityAddsPutHypermediaLinkToRRController rCManagerGetActivityAddsDeleteHypermediaLinkToRRController rCManagerPostActivityAddsGetHypermediaLinkToParentRController rCManagerPostActivityAddsPutHypermediaLinkToParentRController rCManagerPostActivityAddsDeleteHypermediaLinkToParentRController rCManagerGetActivityAddsGetHypermediaLinkToParentRController rCManagerGetActivityAddsPutHypermediaLinkToParentRController rCManagerGetActivityAddsDeleteHypermediaLinkToParentRController rControllerGetActivityAddsPostHypermediaLinkToRCManager rControllerGetActivityAddsGetHypermediaLinkToRCManager rControllerPutActivityAddsPostHypermediaLinkToRCManager rControllerPutActivityAddsGetHypermediaLinkToRCManager rControllerGetActivityAddsPostHypermediaLinkToParentRCManager rControllerGetActivityAddsGetHypermediaLinkToParentRCManager rControllerPutActivityAddsPostHypermediaLinkToParentRCManager rControllerPutActivityAddsGetHypermediaLinkToParentRCManager rControllerDeleteActivityAddsPostHypermediaLinkToParentRCManager rControllerDeleteActivityAddsGetHypermediaLinkToParentRCManager algoControllerActivityAddsHypermediaLinkToRAlgoController algoControllerAddsHypermediaLinkToParentAlgoController rControllerGetAddsHypermediaLinkToRAlgoController rControllerPutAddsHypermediaLinkToRAlgoController algoControllerAddsGetHypermediaLinkToParentRController algoControllerAddsPutHypermediaLinkToParentRController algoControllerAddsDeleteHypermediaLinkToParentRController"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="allModelsHaveRResourcePropertiesWithProperHibernateAnnotations"
          value="&#xA;&#x9;&#x9;self.hasJavaRModel->forAll(JavaRModel | JavaRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->forAll(RelatedJavaRModel | &#xA;&#x9;&#x9;&#x9;JavaRModel.JavaRModelHasProperty->one(name = 'SetOf' + RelatedJavaRModel.name)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;JavaRModel.JavaRModelHasProperty->select(name = 'SetOf' + RelatedJavaRModel.name)->forAll(JRModelProperty | &#xA;&#x9;&#x9;&#x9;&#x9;JRModelProperty.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@OneToMany(fetch = FetchType.EAGER, mappedBy=&quot;' + JavaRModel.parentName + '&quot;,orphanRemoval=true)')&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JRModelProperty.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@OnDelete(action=OnDeleteAction.CASCADE)')&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="allModelsHavePResourcePropertiesWithProperHibernateAnnotations"
          value="&#xA;&#x9;&#x9;self.hasJavaRModel->forAll(JavaRModel | &#xA;&#x9;&#x9;&#x9;self.hasJavaRModel->select(ParentJRModel | ParentJRModel.hasRelatedJavaRMManager->exists(JRMManager | JRMManager.hasRelatedJavaRModel = JavaRModel))&#xA;&#x9;&#x9;&#x9;->forAll(ParentJRModel | JavaRModel.JavaRModelHasProperty->one(name = ParentJRModel.parentName)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JavaRModel.JavaRModelHasProperty->forAll( Property |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(Property.name = ParentJRModel.parentName)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ManyToOne(fetch = FetchType.EAGER)')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@JoinColumn(name=&quot;' + if JavaRModel = ParentJRModel then 'sourse' else '' endif + ParentJRModel.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '&quot;)')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ForeignKey(name = &quot;fk_' + ParentJRModel.parentName + '_' + JavaRModel.parentName + '&quot;)')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ManyToOne(fetch = FetchType.EAGER)')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@JoinColumn(name=&quot;' + if JavaRModel = ParentJRModel then 'sourse' else '' endif + ParentJRModel.JavaRModelHasProperty->select(bIsPrimaryIdentifier = true)->at(1).name + '&quot;)')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@ForeignKey(name = &quot;fk_' + ParentJRModel.parentName + '_' + JavaRModel.parentName + '&quot;)')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(Property.name = ParentJRModel.parentName)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
      <details key="rMPropertiesSettersHaveProperXMLTransientAnnotation" value="&#xA;&#x9;&#x9;&#x9;let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in&#xA;&#x9;&#x9;&#x9;self.hasJavaRModel->forAll(JRModel | &#xA;&#x9;&#x9;&#x9;&#x9;JRModel.JavaRModelHasSetter->select(SetterFunction | &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;JRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->exists(JRRModel | SetterFunction.name = 'setSetOf' + JRRModel.name)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AllResourceModels->select(hasRelatedJavaRMManager->exists(hasRelatedJavaRModel = JRModel))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->exists(ParentJRModel | SetterFunction.name = 'set' + ParentJRModel.parentName)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;)->forAll(SetterFunction | SetterFunction.SetterFunctionHasJAXBAnnotation->one('@XmlTransient'))&#xA;&#x9;&#x9;&#x9;)"/>
      <details key="rMPropertiesHaveColumnAnnotation" value="&#xA;&#x9;&#x9;&#x9;self.hasJavaRModel->forAll(JRModel |&#xA;&#x9;&#x9;&#x9;&#x9;JRModel.JavaRModelHasProperty->reject(Property |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(Property.name = 'linklist')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(JRModel.hasRelatedJavaRMManager->exists(JRRModel | Property.name = 'SetOf' + JRRModel.name))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;(self.hasJavaRModel->select(JPRModel | JPRModel.hasRelatedJavaRMManager.hasRelatedJavaRModel->exists(JPRModel | JPRModel = JRModel))->exists(JPRModel | Property.name = JPRModel.parentName))&#xA;&#x9;&#x9;&#x9;&#x9;)->forAll(Property | Property.PropertyHasHibernateAnnotation->one(HibernateAnnotationText = '@Column(name = &quot;' + Property.name + '&quot;)'))&#xA;&#x9;&#x9;&#x9;)"/>
      <details key="RControllerUniqueHTTPVerbsPerParent" value="&#xA;&#x9;&#x9;&#x9;let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in&#xA;&#x9;&#x9;&#x9;self.hasJavaRController->forAll(JRController | let numberOfParents : Integer = AllResourceModels->select(ParentRModel | &#xA;&#x9;&#x9;&#x9;&#x9;ParentRModel.hasRelatedJavaRMManager->exists(JRMManager | JRController.hasAssociatedJavaRModel = JRMManager.hasRelatedJavaRModel))->size() in&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->size() &lt;= numberOfParents&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 2)->size() &lt;= numberOfParents&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 3)->size() &lt;= numberOfParents&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name)&#xA;&#x9;&#x9;&#x9;&#x9;)"/>
      <details key="RCManagerHasUniqueHTTPActivityVerbsPerParent" value="&#xA;&#x9;&#x9;&#x9;let AllResourceModels : Sequence(JavaResourceModel) = self.hasJavaRModel in&#xA;&#x9;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager | let numberOfParents : Integer = AllResourceModels->select(ParentRModel |&#xA;&#x9;&#x9;&#x9;&#x9;ParentRModel->exists(hasRelatedJavaRMManager = JRCManager))->size() in&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 0)->size() = numberOfParents&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->size() = numberOfParents&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 0)->isUnique(name)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(HTTPActivity | HTTPActivity.ActivityHTTPVerb = 1)->isUnique(name)&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;)"/>
      <details key="rCManagerPostActivityAddsGetHypermediaLinkToRRController" value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager | &#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies &#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;    and &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerPostActivityAddsPutHypermediaLinkToRRController" value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager | &#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies &#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;    and &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerPostActivityAddsDeleteHypermediaLinkToRRController" value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager | &#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;&#x9;implies &#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;    and &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerGetActivityAddsGetHypermediaLinkToRRController" value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager | &#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies &#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;    and &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerGetActivityAddsPutHypermediaLinkToRRController" value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager | &#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies &#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;    and &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerGetActivityAddsDeleteHypermediaLinkToRRController" value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager | &#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController | &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;&#x9;implies &#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;    and &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Child' and  hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerPostActivityAddsGetHypermediaLinkToParentRController"
          value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(JRController |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerPostActivityAddsPutHypermediaLinkToParentRController"
          value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(JRController |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerPostActivityAddsDeleteHypermediaLinkToParentRController"
          value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(JRController |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerGetActivityAddsGetHypermediaLinkToParentRController"
          value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(JRController |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerGetActivityAddsPutHypermediaLinkToParentRController"
          value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(JRController |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rCManagerGetActivityAddsDeleteHypermediaLinkToParentRController"
          value="&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll(JRCManager |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(JRController |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.JavaRCManagerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = JRController)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;(JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager) and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerGetActivityAddsPostHypermediaLinkToRCManager" value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerGetActivityAddsGetHypermediaLinkToRCManager" value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerPutActivityAddsPostHypermediaLinkToRCManager" value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerPutActivityAddsGetHypermediaLinkToRCManager" value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.hasAssociatedJavaRModel.hasRelatedJavaRMManager = JRCManager.hasAssociatedRMManager and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerGetActivityAddsPostHypermediaLinkToParentRCManager"
          value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerGetActivityAddsGetHypermediaLinkToParentRCManager"
          value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerPutActivityAddsPostHypermediaLinkToParentRCManager"
          value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerPutActivityAddsGetHypermediaLinkToParentRCManager"
          value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerDeleteActivityAddsPostHypermediaLinkToParentRCManager"
          value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="rControllerDeleteActivityAddsGetHypermediaLinkToParentRCManager"
          value="&#xA;&#x9;&#x9;self.hasJavaRController->forAll( JRController |&#xA;&#x9;&#x9;self.hasJavaRCManager->forAll( JRCManager |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;JRController.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 3).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetRCManager = JRCManager)&#xA;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;JRCManager.hasAssociatedRMManager.hasRelatedJavaRModel = JRController.hasAssociatedJavaRModel and JRController.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="algoControllerActivityAddsHypermediaLinkToRAlgoController" value="&#xA;&#x9;&#x9;self.hasJavaAlgoController->forAll(algoControllerA, algoControllerB |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.hasRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists( ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
      <details key="algoControllerAddsHypermediaLinkToParentAlgoController" value="&#xA;&#x9;&#x9;self.hasJavaAlgoController->forAll(algoControllerA, algoControllerB |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaAlgoController = algoControllerB)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.hasAssociatedAlgoModel.isRelatedAlgoModel = algoControllerB.hasAssociatedAlgoModel and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerB.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)"/>
      <details key="rControllerGetAddsHypermediaLinkToRAlgoController" value="&#xA;&#x9;&#x9;self.hasJavaAlgoController->forAll(algoControllerA |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(rControllerA |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;))"/>
      <details key="rControllerPutAddsHypermediaLinkToRAlgoController" value="&#xA;&#x9;&#x9;self.hasJavaAlgoController->forAll(algoControllerA |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(rControllerA |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 0 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.JavaRControllerHasHTTPActivity->select(ActivityHTTPVerb = 2).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Child' and hasTargetJavaAlgoController = algoControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="algoControllerAddsGetHypermediaLinkToParentRController" value="&#xA;&#x9;&#x9;self.hasJavaAlgoController->forAll(algoControllerA |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(rControllerA |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 1 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="algoControllerAddsPutHypermediaLinkToParentRController" value="&#xA;&#x9;&#x9;self.hasJavaAlgoController->forAll(algoControllerA |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(rControllerA |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 2 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 2) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
      <details key="algoControllerAddsDeleteHypermediaLinkToParentRController" value="&#xA;&#x9;&#x9;self.hasJavaAlgoController->forAll(algoControllerA |&#xA;&#x9;&#x9;self.hasJavaRController->forAll(rControllerA |&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 0).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 0)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;or&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;and&#xA;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;algoControllerA.JavaAlgoRControllerHasHTTPActivity->select(ActivityHTTPVerb = 1).hasHTTPActivityHandler.hasHypermediaFunction.hasPSMHypermediaLink->one(LinkHTTPVerb = 3 and LinkType = 'Parent' and hasTargetJavaRController = rControllerA)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;implies&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rControllerA.hasAssociatedJavaRModel.hasRelatedJavaAlgoModel = algoControllerA.hasAssociatedAlgoModel and rControllerA.JavaRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 3) and algoControllerA.JavaAlgoRControllerHasHTTPActivity->exists(ActivityHTTPVerb = 1)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;))"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasJavaRModel" upperBound="-1"
        eType="#//JavaResourceModel" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasJavaRController" upperBound="-1"
        eType="#//JavaResourceController" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasJavaRCManager" upperBound="-1"
        eType="#//JavaResourceControllerManager" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasJavaRMManager" upperBound="-1"
        eType="#//JavaResourceModelManager" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasJavaAlgoModel" upperBound="-1"
        eType="#//JavaAlgoResourceModel" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasJavaAlgoController"
        upperBound="-1" eType="#//JavaAlgoResourceController" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="hasHibernateController"
        lowerBound="1" eType="#//HibernateController" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="HTTPVerb">
    <eLiterals name="POST"/>
    <eLiterals name="GET" value="1"/>
    <eLiterals name="PUT" value="2"/>
    <eLiterals name="DELETE" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="MediaType">
    <eLiterals name="JSON"/>
    <eLiterals name="XML" value="1"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="LinkType">
    <eLiterals name="Parent"/>
    <eLiterals name="Sibling" value="1"/>
    <eLiterals name="Child" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FunctionParameter">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="bIsUnique" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="bIsReturnParameter" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
</ecore:EPackage>
