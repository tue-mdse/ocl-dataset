[comment encoding = UTF-8 /]
[module javaPersistenceUtil('file:/Users/IMG/Desktop/Dropbox/S-CASE-Int/Work/WP2/Task_2.2-2.3/AnnotationLayerStack/AnnotationLayerStack.ecore', 'file:/Users/IMG/Desktop/Dropbox/S-CASE-Int/Work/WP2/Task_2.2-2.3/AuthenticationLayer/AuthenticationPSMMetamodel.ecore', 'file:/Users/IMG/Desktop/Dropbox/S-CASE-Int/Work/WP2/Task_2.2-2.3/EMF_ATL_MDE_Engine/CIM_Ecore_metamodel/PSMMetamodel.ecore', 'file:/Users/IMG/Desktop/Dropbox/S-CASE-Int/Work/WP2/Task_2.2-2.3/SearchLayer/SearchLayerPSMMetamodel.ecore')]


[template public javaPersistenceUtil(anAnnotationStack : AnnotationStack)]

[file (anAnnotationStack.hasCorePSM.name  + '/src/main/java/eu/fp7/scase/' + anAnnotationStack.hasCorePSM.name.toLowerCase() + '/utilities/PersistenceUtil.java', false, 'UTF-8')]
/*
 * ARISTOSTLE UNIVERSITY OF THESSALONIKI
 * Copyright (C) 2015
 * Aristotle University of Thessaloniki
 * Department of Electrical & Computer Engineering
 * Division of Electronics & Computer Engineering
 * Intelligent Systems & Software Engineering Lab
 *
 * Project             : [anAnnotationStack.hasCorePSM.name/]
 * WorkFile            : 
 * Compiler            : 
 * File Description    : 
 * Document Description: 
* Related Documents	   : 
* Note				   : 
* Programmer		   : RESTful MDE Engine created by Christoforos Zolotas
* Contact			   : christopherzolotas@issel.ee.auth.gr
*/
package eu.fp7.scase.[anAnnotationStack.hasCorePSM.name.toLowerCase()/].utilities;

import javax.persistence.EntityManager;
import javax.persistence.Persistence;

import org.hibernate.search.jpa.FullTextEntityManager;
import org.hibernate.search.jpa.Search;



public class PersistenceUtil 
{

	private static final EntityManager oEntityManager = buildEntityManager();
    private static final FullTextEntityManager oFullTextEntityManager = buildFullTextEntityManager();
    
    private static EntityManager buildEntityManager() 
    {
        try 
        {
           return (Persistence.createEntityManagerFactory("search")).createEntityManager();
        }
        catch (Throwable ex) 
        {
            // Make sure you log the exception, as it might be swallowed
            System.err.println("Initial entity manager factory creation failed." + ex);
            throw new ExceptionInInitializerError(ex);
        }
    }
    
    private static FullTextEntityManager buildFullTextEntityManager() 
    {
        try 
        {  
        	return Search.getFullTextEntityManager(oEntityManager);
        }
        catch (Throwable ex) 
        {
            // Make sure you log the exception, as it might be swallowed
            System.err.println("Initial entity manager factory creation failed." + ex);
            throw new ExceptionInInitializerError(ex);
        }
    }

    public static FullTextEntityManager getFullTextEntityManager()
    {
    	return oFullTextEntityManager;
    }
    
    public static void beginEntityManagerTransaction() 
    {
        oEntityManager.getTransaction().begin();
    }
    
    public static void endEntityManagerTransaction()
    {
    	oEntityManager.getTransaction().commit();
    }

}
[/file]
[/template]
