[comment encoding = UTF-8 /]
[module javaRESTClientOutputModel('platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/AnnotationLayerStack.ecore', 'platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/AuthenticationPSMMetamodel.ecore', 'platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/ExternalServiceLayerPSMMetamodel.ecore', 'platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/PSMMetamodel.ecore', 'platform:/plugin/eu.scasefp7.eclipse.mde.m2m/Metamodels/SearchLayerPSMMetamodel.ecore')]


[template public javaRESTClientOutputModel(anAnnotationStack : AnnotationStack, jAlgoRM : JavaAlgoResourceModel)]

[file (anAnnotationStack.hasCorePSM.name + '/src/main/java/eu/fp7/scase/' + anAnnotationStack.hasCorePSM.name.toLowerCase() + '/' + jAlgoRM.parentName.toLowerCase() + '/Java' + jAlgoRM.parentName.toUpperFirst() + 'OutputModel.java', false, 'UTF-8')]
/*
 * ARISTOTLE UNIVERSITY OF THESSALONIKI
 * Copyright (C) 2015
 * Aristotle University of Thessaloniki
 * Department of Electrical & Computer Engineering
 * Division of Electronics & Computer Engineering
 * Intelligent Systems & Software Engineering Lab
 *
 * Project             : [anAnnotationStack.hasCorePSM.name/]
 * WorkFile            : 
 * Compiler            : 
 * File Description    : 
 * Document Description: 
* Related Documents	   : 
* Note				   : 
* Programmer		   : RESTful MDE Engine created by Christoforos Zolotas
* Contact			   : christopherzolotas@issel.ee.auth.gr
*/


package eu.fp7.scase.[anAnnotationStack.hasCorePSM.name.toLowerCase()/].[jAlgoRM.parentName.toLowerCase()/];

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlRootElement;
import java.util.HashSet;
import java.util.Set;
import org.codehaus.jackson.annotate.JsonIgnoreProperties;

import eu.fp7.scase.[anAnnotationStack.hasCorePSM.name.toLowerCase()/].utilities.HypermediaLink;

/* 
 * Java[jAlgoRM.parentName.toUpperFirst()/]OutputModel class is responsible to model the output data model of the [jAlgoRM.parentName/] resource. This models the data
 * that will be received as output from the third party service.
*/

@XmlRootElement
@JsonIgnoreProperties(ignoreUnknown = true)
public class Java[jAlgoRM.parentName.toUpperFirst()/]OutputModel{

    /* There follows a list with the properties that model the [jAlgoRM.parentName/] resource, as prescribed in the External service layer CIM*/
[if (jAlgoRM.getJavaRESTClientModelAnnotation(anAnnotationStack).hasJavaOutputModel.oclIsUndefined() = false)]
[for (property : Property | jAlgoRM.getJavaRESTClientModelAnnotation(anAnnotationStack).hasJavaOutputModel.hasOutputProperty)]
	[if (property.isUnique = true)]
	private [if (property.hasPrimitiveType = true)][property.type/][else][property.hasComplexType.complexTypeName.toUpperFirst()/][/if] [property.name/];
	[else]
	private List<[if (property.hasPrimitiveType = true)][property.type/][else][property.hasComplexType.complexTypeName.toUpperFirst()/][/if]> [property.name/] = new ArrayList<[if (property.hasPrimitiveType = true)][property.type/][else][property.hasComplexType.complexTypeName.toUpperFirst()/][/if]>();
	[/if]
[/for]
[/if]

	// The Linklist property holds all the hypermedia links to be sent back to the client
	@Transient
	private List<HypermediaLink> linklist = new ArrayList<HypermediaLink>();

	/* There follows a list of setter and getter functions.*/
[if (jAlgoRM.getJavaRESTClientModelAnnotation(anAnnotationStack).hasJavaOutputModel.oclIsUndefined() = false)]
[for (property : Property | jAlgoRM.getJavaRESTClientModelAnnotation(anAnnotationStack).hasJavaOutputModel.hasOutputProperty) separator('\n')]
	[if (property.isUnique = false)]
	public void set[property.name.toUpperFirst()/](List<[if (property.hasPrimitiveType = true)][property.type/][else][property.hasComplexType.complexTypeName.toUpperFirst()/][/if]> [property.name/]){
    	this.[property.name/] = [property.name/];
    }
	[else]
	public void set[property.name.toUpperFirst()/]([if (property.hasPrimitiveType = true)][property.type/][else][property.hasComplexType.complexTypeName.toUpperFirst()/][/if] [property.name/]){
    	this.[property.name/] = [property.name/];
    }
	[/if]
[/for]
[/if]

    public void setlinklist(List<HypermediaLink> linklist){
       	this.linklist = linklist;
   	}

[if (jAlgoRM.getJavaRESTClientModelAnnotation(anAnnotationStack).hasJavaOutputModel.oclIsUndefined() = false)]
[for (property : Property | jAlgoRM.getJavaRESTClientModelAnnotation(anAnnotationStack).hasJavaOutputModel.hasOutputProperty) separator('\n')]
	[if (property.isUnique = false)]
	public List<[if (property.hasPrimitiveType = true)][property.type/][else][property.hasComplexType.complexTypeName.toUpperFirst()/][/if]> get[property.name.toUpperFirst()/](){
        return this.[property.name/];
    }
	[else]
	public [if (property.hasPrimitiveType = true)][property.type/][else][property.hasComplexType.complexTypeName.toUpperFirst()/][/if] get[property.name.toUpperFirst()/](){
        return this.[property.name/];
    }
	[/if]
[/for]
[/if]
	public List<HypermediaLink> getlinklist(){
        return this.linklist;
    }
}
[/file]
[/template]


[query private getJavaRESTClientModelAnnotations(anAnnotationStack : AnnotationStack) : Sequence(JavaRESTClientModel) =
	anAnnotationStack.hasExternalServiceLayer.hasAnnotation->select(annotation | annotation.oclIsTypeOf(JavaRESTClientModel))->asSequence()
/]

[query private getJavaRESTClientModelAnnotation(jAlgoResourceModel : JavaAlgoResourceModel, anAnnotationStack : AnnotationStack) : JavaRESTClientModel =
	jAlgoResourceModel.getJavaRESTClientModelAnnotations(anAnnotationStack)->select(javaRESTClientModel | javaRESTClientModel.isJavaRESTClientModel.annotatesJavaAlgoModel->includes(jAlgoResourceModel))->at(1)
/]