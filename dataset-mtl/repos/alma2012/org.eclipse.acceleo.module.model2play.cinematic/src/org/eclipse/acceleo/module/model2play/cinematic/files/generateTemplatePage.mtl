[comment encoding = UTF-8 /]
[**
 * The documentation of the module htmlActionStateFile.
 */]
[module generateTemplatePage('http://www.obeonetwork.org/dsl/cinematic/3.0.0')]

[import org::eclipse::acceleo::module::model2play::cinematic::common::utils]
[import org::eclipse::acceleo::module::model2play::cinematic::requests::requests]
[import org::eclipse::acceleo::module::model2play::cinematic::common::widgets /]

[**
 * The documentation of the template genHtmlActionStateFile.
 * @param aActionState
 */]
[template public generateTemplatePage( aCinematicRoot : CinematicRoot )]

[comment] Le fichier main, d'ou sont appelees les autres pages [/comment]
[aCinematicRoot.genIndexPage()/]
[comment] Les autres pages, generees a partir des viewstates. [/comment]
[aCinematicRoot.flows.states->filter(ViewState).genPage()/]
[/template]

[template private genIndexPage(aCinematicRoot : CinematicRoot)]
[file ('app/views/main.scala.html',false,'UTF-8')]
['@'/](title: String)(content: Html)

<!DOCTYPE html>

<html>
  <head>
	<!--[protected ('completing the html header-->')] 
    <meta name="author" content="">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>['@'/]title</title>
    <link rel="stylesheet" media="screen" href="./asset/js/lib/bootstrap/css/bootstrap.css">
    <link rel="stylesheet" media="screen" href="./asset/js/lib/bootstrap/css/bootstrap-responsive.css">  	
	<!--[/protected]-->  
  </head>
  <body>

	<!--[protected ('completing the main page : header -->')] 
    	
	<!--[/protected]-->
	[comment] Ici template header generant a partir des viewstates du cinematicroot les liens vers pages "speciales" (a definir) [/comment]
    <div class="page container">
      <div class="mycontent">
		<h1>['@'/]title</h1>
		['@'/]content
      </div>
    </div>
	<!--[protected ('completing the main page : footer -->')] 
    	
	<!--[/protected]-->
	[comment] Ici template footer generant a partir des viewstates du cinematicroot les liens vers pages "speciales" (a definir) [/comment]
  </body>
</html>
[/file]
[/template]

[template private genPage(aViewState : ViewState)]
[file ( 'app/views/' + aViewState.gen_viewstate_name() + '.scala.html', false, 'UTF-8')]

[comment] Gestion des messages d'erreur. [/comment]
[aViewState.gen_error() /]
['@'/]main("[aViewState.gen_viewstate_name().toUpperFirst()/]") {
<br>

	[comment] Pour chaque contenu de page. [/comment]
	[aViewState.viewContainers->select(widget.name = 'Page')->first().genPage()/]

	<!--[protected ('completing the page-->')] 
	
	<!--[/protected]-->  
	
}
[/file]
[/template]

[template public genPage(container : ViewContainer) ? (container.widget.name = 'Page')]
[container.viewContainers.generateContainer()/]
[container.generateWidgetsForContainer()/]
[/template]

[template public genPage(container : ViewContainer) ? ((container.widget.name = 'Panel')or(container.widget.name = 'Table'))]
[container.generateContainer()/]
[/template]


