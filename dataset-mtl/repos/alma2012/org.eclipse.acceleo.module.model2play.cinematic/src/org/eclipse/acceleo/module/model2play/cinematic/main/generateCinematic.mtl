[comment encoding = UTF-8 /]
[**
 * The documentation of the module generateCinematic.
 */]
[module generateCinematic('http://www.obeonetwork.org/dsl/cinematic/3.0.0')]
[import org::eclipse::acceleo::module::model2play::cinematic::files::generateTemplatePage]
[import org::eclipse::acceleo::module::model2play::cinematic::files::generateRoutes]
[import org::eclipse::acceleo::module::model2play::cinematic::files::generateController]

[import org::eclipse::acceleo::module::model2play::cinematic::common::routeViewState]
[import org::eclipse::acceleo::module::model2play::cinematic::common::controllerMethodViewState]

[import org::eclipse::acceleo::module::model2play::cinematic::requests::requests]
[import org::eclipse::acceleo::module::model2play::cinematic::services::CinematiquesServices]

[**
 * The documentation of the template generateElement.
 * @param aCinematicRoot
 */]
[template public generateElement(aCinematicRoot : CinematicRoot, targetFolder :String)]
[comment @main/]


[file ('debug.txt', false, 'UTF-8')]
[comment unzip bootstrap files /]
[unzip(targetFolder)/]

[aCinematicRoot.generateRoutes()/]
[aCinematicRoot.generateController()/]

[for (aViewContainer : ViewContainer | aCinematicRoot.eAllContents(ViewContainer))]
[if (aViewContainer.widget.name = 'Page')]
[aViewContainer.generateTemplatePage( aCinematicRoot)/]
[/if]

[/for]

[/file]


[/template]
