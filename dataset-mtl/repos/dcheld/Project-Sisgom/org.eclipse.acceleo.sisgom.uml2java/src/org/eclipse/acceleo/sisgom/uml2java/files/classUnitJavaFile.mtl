[comment encoding = UTF-8 /]
[**
 * The documentation of the module classJavaFile.
 */]
[module classUnitJavaFile('http://www.eclipse.org/uml2/4.0.0/UML')]

[import org::eclipse::acceleo::sisgom::uml2java::common::fileUtils /]
[import org::eclipse::acceleo::sisgom::uml2java::common::stereotypeUtils /]
[import org::eclipse::acceleo::sisgom::properties::properties /]
[import org::eclipse::acceleo::sisgom::uml2java::files::hibernateFile /]
[import org::eclipse::acceleo::sisgom::uml2java::files::classEntityJavaFile /]
[import org::eclipse::acceleo::sisgom::uml2java::files::classDaoJavaFile /]

[**
 * The documentation of the template classUnitJavaFile.
 * @param aClass
 */]
[template public genClassJavaUnitTest(aClass : Class)]
[file (aClass.genFilePathTest(), false, 'UTF-8')]
package [aClass.genPackageValue() + '.' + aClass.getTestNamespace() + '.' + aClass.name.getDaoNamespace()/];

import java.util.List;
import org.apache.log4j.Logger;
import org.junit.Test;
import [aClass.genPackageEntity() + '.' + aClass.getClassNameEntity()/];
import [aClass.genPackageDao() + '.' + aClass.getDaoClass()/];
import [aClass.genPackageValue() + '.' + aClass.getUtilsNamespace() + '.' + aClass.getDaoFactory()/];
// [protected ('imports do test')]
// [/protected]

public class [aClass.name.toUpperFirst() + aClass.getTestSuffix()/] {

	private static final Logger LOGGER = Logger.getLogger([aClass.name.toUpperFirst() + aClass.getTestSuffix()/].class);
	private [aClass.name + aClass.getDaoSuffix()/] [aClass.name.toLowerFirst() + aClass.getDaoSuffix()/] = [aClass.getDaoFactory()/].[aClass.name.toLowerFirst()/]Instance();

	@Test
	public void testFindAll() {
		// [protected ('Encontrar todos')]
		List<[aClass.name + aClass.getEntitySuffix()/]> [aClass.name.toLowerFirst()/] = this.[aClass.name.toLowerFirst() + aClass.getDaoSuffix()/].findAll();

		LOGGER.info([aClass.name.toLowerFirst()/]);
		// [/protected]
	}

	@Test
	public void testFindById() {		
		// [protected ('Encontrar por Id')]
		[aClass.name.toUpperFirst() + aClass.getEntitySuffix()/] [aClass.name.toLowerFirst()/] = this.save();
		
 		[if (aClass.getPropertyId().oclIsUndefined())]
		Integer id = 0;
		[else]
		Integer id = [aClass.name.toLowerFirst()/].get[aClass.getPropertyId().name.toUpperFirst()/]();
 		[/if]

		[aClass.name.toUpperFirst()+ aClass.getEntitySuffix()/] [aClass.name.toLowerFirst()/]Pesquisa = this.[aClass.name.toLowerFirst() + aClass.getDaoSuffix() /].findById(id);

		LOGGER.info([aClass.name.toLowerFirst()/]Pesquisa);
		// [/protected]
	}

	@Test
	public void testInsert() {
		this.save();
	}

	@Test
	public void testDelete() {
		// [protected ('Deletar')]
		[aClass.name.toUpperFirst() + aClass.getEntitySuffix()/] [aClass.name.toLowerFirst()/] = this.save();

		this.[aClass.name.toLowerFirst() + aClass.getDaoSuffix()/].delete([aClass.name.toLowerFirst() /]); 

		LOGGER.info("[aClass.name.toUpperFirst()/] deletado(a):" + [aClass.name.toLowerFirst()/]);
		// [/protected]
	}

	private [aClass.name.toUpperFirst() + aClass.getEntitySuffix()/] save() {
		// [protected ('Salvar')]
		[aClass.name.toUpperFirst() + aClass.getEntitySuffix()/] [aClass.name.toLowerFirst()/] = new [aClass.name.toUpperFirst() + aClass.getEntitySuffix()/]();

		this.[aClass.name.toLowerFirst() + aClass.getDaoSuffix()/].save([aClass.name.toLowerFirst()/]);

		LOGGER.info("[aClass.name /] saved " + [aClass.name.toLowerFirst()/]);

		return [aClass.name.toLowerFirst()/];
		// [/protected]
	}
}
[/file]
[/template]

