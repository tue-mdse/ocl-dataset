[comment encoding = UTF-8 /]
[module datatype('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public convertJavaDataType(parameter:Parameter) post (trim())]
[if (parameter <> null)]
	[if (parameter.upper = -1)]
		[if (isOrdered)]
java.util.List<[parameter.type.convertJavaDataType()/]>
		[elseif (isUnique)]
java.util.Set<[parameter.type.convertJavaDataType()/]>
		[else]
java.util.Collection<[parameter.type.convertJavaDataType()/]>
		[/if]
	[else]
[type.convertJavaDataType()/]
	[/if]
[/if]
[/template]

[template public convertJavaDataType(type:Type) post (trim())]
[if (type.namespace.name='datatype' and getProperty('java.typeconversion.'+type.name)<>'')]
	[getProperty('java.typeconversion.'+type.name)/]
[else]
	[type.name/]
[/if]
[/template]

[query public operationsParametersTypes(class : Class):Sequence(Classifier) = 
class.operationsParameters().type->filter(Classifier)->select(not (name.endsWith('String')) and not (name.endsWith('Integer')) and not (name.endsWith('Float')) and not (name.endsWith('Long')) and not (name.endsWith('Double')) and not (name.endsWith('Boolean')) and not (name.startsWith('byte')) and not (name.endsWith('Object')) and not (name.endsWith('integer')) and not (name.endsWith('int')) and not (name.endsWith('float')) and not (name.endsWith('long')) and not (name.endsWith('double')) and not (name.endsWith('boolean')))->asOrderedSet()->asSequence()
/]

[query public operationsParameters(class : Class):Sequence(Parameter) = 
class.ownedOperation.ownedParameter->union(if(class.ownedOperation.returnResult()->notEmpty())then class.ownedOperation.returnResult()->asSequence() else Sequence{} endif )
/]