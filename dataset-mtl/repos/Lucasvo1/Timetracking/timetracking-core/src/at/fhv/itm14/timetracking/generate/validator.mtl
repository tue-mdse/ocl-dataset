[comment encoding = UTF-8 /]
[module validator('http://www.eclipse.org/uml2/5.0.0/UML')]
[import at::fhv::itm14::timetracking::service::uml2service/]
[import at::fhv::itm14::timetracking::generate::modules/]
[import at::fhv::itm14::timetracking::generate::datatype/]
[import at::fhv::itm14::timetracking::generate::webservice/]


[template public generateValidator(aClass : Class)]
[file (aClass.namespace.toPath().concat(aClass.name.toUpperFirst()).concat('.java'), false, 'UTF-8')]
package [aClass.namespace.name/];

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.springframework.stereotype.Component;
import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;

import at.fhv.itm14.timetracking.domain.Activity;

@Component
public class [aClass.name.toUpperFirst()/] implements Validator{

	@Override
	public boolean supports(Class<?> clazz) {
		return Activity.class.isAssignableFrom(clazz);
	}

	@Override
	public void validate(Object target, Errors errors) {
		Activity activity = (Activity) target;
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "description", "description.required");
		
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "from", "from.required");
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "to", "to.required");

		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		Date from = null;
		Date to = null;
		try {
			from = sdf.parse(activity.getFrom());
			to = sdf.parse(activity.getTo());
		} catch (ParseException e) {
			e.printStackTrace();
		}
		
		if(to.before(from)){
			errors.rejectValue("to", "to.greater");
		}
		if(from.after(to)){
			errors.rejectValue("from", "from.smaller");
		}
		
	}
}
[/file]
[/template]
