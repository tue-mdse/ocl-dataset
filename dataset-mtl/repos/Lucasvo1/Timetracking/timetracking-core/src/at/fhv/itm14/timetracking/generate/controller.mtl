[comment encoding = UTF-8 /]
[module controller('http://www.eclipse.org/uml2/5.0.0/UML')]

[import at::fhv::itm14::timetracking::service::uml2service/]
[import at::fhv::itm14::timetracking::generate::modules /]
[import at::fhv::itm14::timetracking::generate::datatype /]
[import at::fhv::itm14::timetracking::generate::database /]




[template public generateController(aClass : Class)]

[file (aClass.namespace.toPath().concat(aClass.name.toUpperFirst()).concat('.java'), false, 'UTF-8')]

package [aClass.namespace.name/];

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;

[for (classifier:Classifier | aClass.operationsParametersTypes())]
import [classifier.getCompleteName()/];	
[/for]
public class [aClass.name.toUpperFirst()/]{

	[aClass.generateProperties()/]

	[aClass.generateSingleton()/]
	[aClass.generateConstructor()/]


	[for (o : Operation | aClass.ownedOperation) separator('\n')]
	[o.generateDatabaseOperations()/]
	[/for]

	public void openConnection() throws Exception {
		Connection c = null;
		Statement stmt = null;
		try {
	    	Class.forName(DB_DRIVER);
	  		c = DriverManager.getConnection(DB_CONNECTION);
	    	stmt = c.createStatement();
	    	String sql = "";
	    	stmt.executeUpdate(sql);
	    	stmt.close();
	    	c.close();
	      	      
		} catch ( Exception e ) {
	    	System.err.println( e.getClass().getName() + ": " + e.getMessage() );
	    	System.exit(0);
		}
		System.out.println("Created the tables succesfully");
	}

	[for (p : Property | aClass.attribute) separator('\n')]
	public void set[p.name.toUpperFirst()/]([p.type.name/] [p.name/]) {
		this.[p.name/] = [p.name/];
	}
	[/for]

	private static String getTimestamp(Date date)	{
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String rv = sdf.format(date);
		return rv;
	}
}

[/file]
[/template]
