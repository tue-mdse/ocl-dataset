[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2015 Spacebel SA.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Johan Hardy (Spacebel) - initial API and implementation
[/comment]
[module datatype('http://www.eclipse.org/uml2/5.0.0/UML')/]
[import org::eclipse::umlgen::gen::embedded::c::commons::namedelement/]

[query public getAllTypedef(seq : Sequence(uml::DataType)) : Sequence(uml::DataType) =  
seq->select(d : uml::DataType | (hasStereotype(d, 'embedded_C::Typedef')))->asSequence()/]

[query public isTypedef(d : uml::DataType) : Boolean = d.hasStereotype('embedded_C::Typedef')/]

[query public isNotTypedef(d : uml::DataType) : Boolean = not(d.hasStereotype('embedded_C::Typedef'))/]

[query public hasAttribute(d : uml::DataType) : Boolean = d.hasStereotype('embedded_C::Attribute')/]

[query public isUnion(d : uml::DataType) : Boolean = d.hasStereotype('embedded_C::Union')/]

[query public getMappedType(d : uml::DataType) : String = 
d.getValue(d.getAppliedStereotype('embedded_C::Typedef'), 'MappedType').toString()/]

[query public getAttribute(d : uml::DataType) : String = 
d.getValue(d.getAppliedStereotype('embedded_C::Attribute'), 'Attribute').toString()/]
