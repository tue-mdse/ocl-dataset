[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2015 Spacebel SA.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Johan Hardy (Spacebel) - initial API and implementation
[/comment]
[module constraint('http://www.eclipse.org/uml2/5.0.0/UML')/]
[import org::eclipse::umlgen::gen::embedded::c::commons::namedelement /]

[query public getAllRequirements(seq : Sequence(uml::Constraint)) : Sequence(uml::Constraint) =  
seq->select(c : uml::Constraint | (hasStereotype(c, 'embedded_C::Requirement')))->asSequence()/]

[query public getAllUserRequirements(c : uml::Constraint) : Sequence(String) = 
c.getValue(c.getAppliedStereotype('embedded_C::Requirement'), 'Parent')/]

[query private matchesInSequence(el : uml::NamedElement, seq : Sequence(uml::Element)) : Boolean =
not(seq->select(e : uml::Element | (e.oclAsType(uml::NamedElement).name.matches(el.name)))->asSequence()->isEmpty())/]

[query public isConstrained(el : uml::NamedElement, seq : Sequence(uml::Constraint)) : Boolean = 
not(seq->select(c : uml::Constraint | (el.matchesInSequence(c.constrainedElement->asSequence()->reject(oclAsType(uml::NamedElement).name->size() = 0))))->asSequence()->isEmpty())/]

[query public getAllConstraints(m : uml::Model) : Sequence(uml::Constraint) = 
m.eAllContents(uml::Constraint)->select(c : uml::Constraint | not(c.name->isEmpty()))/]

[template public getRequirementList(e : uml::NamedElement, s : String) post(trim())]
[let seqC : Sequence(uml::Constraint) = getAllRequirements(getModel().getAllConstraints())]
[for (c : uml::Constraint | seqC->sortedBy(name))][if (e.matchesInSequence(c.constrainedElement->asSequence()->reject(oclAsType(uml::NamedElement).name->size() = 0)))]
[s/] - [c.name/]
[/if]
[/for]
[/let]
[/template]
