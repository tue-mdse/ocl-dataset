[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2015 Spacebel SA.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Johan Hardy (Spacebel) - initial API and implementation
[/comment]
[module cPackage('http://www.eclipse.org/uml2/5.0.0/UML')/]
[import org::eclipse::umlgen::gen::embedded::c::commons::namedelement/]
[import org::eclipse::umlgen::gen::embedded::c::templates::include/]
[import org::eclipse::umlgen::gen::embedded::c::services::queries/]
[import org::eclipse::umlgen::gen::embedded::c::services::configuration/]

[template public generate_cPackage(aPackage : uml::Package)]
/**********************************************************************************
 * Copyright: [getCopyright()/]
 * Project: [aPackage.getModel().name/]
 * File: [getFilePath()/][getName()/].c
 * Code Management Tool File Version: [getVersion()/]
[if (isSvnDateEnabled())]
 * Date: $Date$
[/if]
 * SDD Component: [name/]
 * Language: C
 * Author: [getAuthor()/]
[if (isSvnIdEnabled())]
 * Last Change: $Id$
[/if]
 **********************************************************************************/

/*!
 * \file [getFilePath()/][getName()/].c
 * \brief [name/]
 */

[comment ---------- generate includes ----------------------------------/]
[genCIncludes()/]

/**********************************************************************************
 * [getFilePath()/][getName()/].c
 **********************************************************************************/

/*## package [getFullFilePath().substituteAll('/', '::')/][getName().substituteAll('/', '::')/] */

/**********************************************************************************
 * File Path: [getFullFilePath()/][getName()/]/[getName()/].c
 **********************************************************************************/
[/template]

[template public genPackageImplementationFileName(aPackage : uml::Package)]
[if (not name.oclIsUndefined())]
[getFullFilePath()/][getName()/]/[getName()/].c
[/if]
[/template]
