[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2015 Spacebel SA.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Johan Hardy (Spacebel) - initial API and implementation
[/comment]
[module uml2ec('http://www.eclipse.org/uml2/5.0.0/UML')/]
[import org::eclipse::umlgen::gen::embedded::c::files::cPackage/]
[import org::eclipse::umlgen::gen::embedded::c::files::hPackage/]
[import org::eclipse::umlgen::gen::embedded::c::files::cFile/]
[import org::eclipse::umlgen::gen::embedded::c::files::hFile/]
[import org::eclipse::umlgen::gen::embedded::c::commons::namedelement/]
[import org::eclipse::umlgen::gen::embedded::c::commons::class/]

[import org::eclipse::umlgen::gen::embedded::c::files::SOOPC::ImplementationFile/]
[import org::eclipse::umlgen::gen::embedded::c::files::SOOPC::DeclarationFile/]
[import org::eclipse::umlgen::gen::embedded::c::files::SOOPC::DescriptionFile/]

[template private genFileName(classifier : uml::Classifier, extension : String) post(trim())]
[if (not(eContainer().oclIsUndefined()))]
[if (eContainer().oclIsTypeOf(Package))]
[getFullFilePath()/][getFileName()/][extension/]  
[/if]
[/if]
[/template]

[template public main(aNamedElement : uml::NamedElement)]
[comment @main/]
[comment -------------------------------------------------------------------------------------- /]
[comment Generate package files                                                                 /]
[comment -------------------------------------------------------------------------------------- /]
[comment Header file /]
[if oclIsTypeOf(uml::Package)]
[file (aNamedElement.oclAsType(uml::Package).genPackageHeaderFileName(), false, 'UTF-8')]
[oclAsType(uml::Package).generate_hPackage()/]
[/file]
[comment Implementation file /]
[file (aNamedElement.oclAsType(uml::Package).genPackageImplementationFileName(), false, 'UTF-8')]
[oclAsType(uml::Package).generate_cPackage()/]
[/file]
[/if]
[comment ------------------------------------------- /]
[comment Generate c Files                            /]
[comment ------------------------------------------- /]
[if (aNamedElement.oclIsTypeOf(uml::Class)) and aNamedElement.owner.oclIsTypeOf(uml::Package) ]
[file (aNamedElement.oclAsType(uml::Class).genFileName('.c'), false, 'UTF-8')]
[if  (aNamedElement.oclAsType(uml::Class).isSingleton() or aNamedElement.oclAsType(uml::Class).isObject())]
[aNamedElement.oclAsType(uml::Class).generate_cFile()/]
[else]
[aNamedElement.oclAsType(uml::Class).generate_implementationFile()/]
[/if]
[/file]
[/if]
[comment ------------------------------------------- /]
[comment Generate h Files                            /]
[comment ------------------------------------------- /]
[if (aNamedElement.oclIsTypeOf(uml::Class)) and aNamedElement.owner.oclIsTypeOf(uml::Package)]
[file (aNamedElement.oclAsType(uml::Class).genFileName('.h'), false, 'UTF-8')]
[if  (aNamedElement.oclAsType(uml::Class).isSingleton() or aNamedElement.oclAsType(uml::Class).isObject())]
[aNamedElement.oclAsType(uml::Class).generate_hFile()/]
[else]
[aNamedElement.oclAsType(uml::Class).generate_declarationFile()/]
[/if]
[/file]
[/if]

[comment ------------------------------------------- /]
[comment Generate d Files                            /]
[comment ------------------------------------------- /]
[if (aNamedElement.oclIsTypeOf(uml::Class)) and aNamedElement.owner.oclIsTypeOf(uml::Package)]
[if  ( ( not aNamedElement.oclAsType(uml::Class).isSingleton() ) and ( not  aNamedElement.oclAsType(uml::Class).isObject() ) )]
[file (aNamedElement.oclAsType(uml::Class).genFileName('.d'), false, 'UTF-8')]
[aNamedElement.oclAsType(uml::Class).generate_descriptionFile()/]
[/file]
[/if]
[/if]

[/template]
