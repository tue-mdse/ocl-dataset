[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2015 Spacebel SA.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Johan Hardy (Spacebel) - initial API and implementation
[/comment]
[module hFile('http://www.eclipse.org/uml2/5.0.0/UML')/]
[import org::eclipse::umlgen::gen::embedded::c::commons::namedelement/]
[import org::eclipse::umlgen::gen::embedded::c::commons::class/]
[import org::eclipse::umlgen::gen::embedded::c::commons::constraint/]
[import org::eclipse::umlgen::gen::embedded::c::templates::function/]
[import org::eclipse::umlgen::gen::embedded::c::templates::define/]
[import org::eclipse::umlgen::gen::embedded::c::templates::type/]
[import org::eclipse::umlgen::gen::embedded::c::templates::include/]
[import org::eclipse::umlgen::gen::embedded::c::templates::constant/]
[import org::eclipse::umlgen::gen::embedded::c::templates::variable/]
[import org::eclipse::umlgen::gen::embedded::c::services::queries/]
[import org::eclipse::umlgen::gen::embedded::c::services::configuration/]

[template public generate_hFile(aClass : uml::Class)]
/**********************************************************************************
 * Copyright: [getCopyright()/]
 * Project: [aClass.getModel().name/]
 * File: [getFilePath()/][getName()/].h
 * Code Management Tool File Version: [getVersion()/]
[if (isSvnDateEnabled())]
 * Date: $Date$
[/if]
 * SDD Component: [name/]
 * Language: C
 * Author: [getAuthor()/]
[if (isSvnIdEnabled())]
 * Last Change: $Id$
[/if]
 **********************************************************************************/

/*!
 * \file [getFilePath()/][getName()/].h
 * \brief [name/]
 */

#ifndef [getFullFilePath().substituteAll('/', '_')/][getName().substituteAll('/', '_')/]_H
#define [getFullFilePath().substituteAll('/', '_')/][getName().substituteAll('/', '_')/]_H

[comment ---------- generate includes ----------------------------------/]
[genHIncludes()/]

/**********************************************************************************
 * [getFilePath()/][getName()/].h
 **********************************************************************************/

/*## package [getFullFilePath().concat('/').substituteAll('//', '').substituteAll('/', '::')/] */

/*! 
 * \package [name/]
[if ownedComment->notEmpty()]
 * [ownedComment.format('\x5cbrief ', false, ' * ', 120)/]
[/if]
[if (isTraceabilityEnabled())]
[if (aClass.isConstrained(getModel().getAllConstraints()))]
 *
 * <b>Requirements traceability</b>
 [aClass.getRequirementList('*   ')/]
[/if]
[/if]
 */

/*## class TopLevel::[name/] */

[comment ---------- generate macros & constants ------------------------/]
[genHDefines()/]

[comment ---------- generate type definitions --------------------------/]
[genHTypes()/]

[comment ---------- generate constants ---------------------------------/]
[if (aClass.hasHConstants())]
[genHConstants()/]

[/if]
[comment ---------- generate variable definitions ----------------------/]
[if (aClass.hasHVariables())]
[genHVariables()/]

[/if]
[comment ---------- generate public inline functions -------------------/]
[if (aClass.hasHInlineOperations())]
[genHInlineOperations()/]

[/if]
[comment ---------- generate prototypes of prublic operations ----------/]
[if (aClass.hasHPublicOperationsPrototypes())]
[genHPublicOperationsPrototypes()/]

[/if]
#endif

/**********************************************************************************
 * File Path: [getFullFilePath()/][getName()/].h
 **********************************************************************************/
[/template]
