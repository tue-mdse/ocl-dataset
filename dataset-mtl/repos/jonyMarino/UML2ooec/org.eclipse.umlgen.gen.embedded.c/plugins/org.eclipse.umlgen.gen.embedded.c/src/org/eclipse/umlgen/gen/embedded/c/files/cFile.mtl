[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2015 Spacebel SA.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Johan Hardy (Spacebel) - initial API and implementation
[/comment]
[module cFile('http://www.eclipse.org/uml2/5.0.0/UML')/]
[import org::eclipse::umlgen::gen::embedded::c::commons::namedelement/]
[import org::eclipse::umlgen::gen::embedded::c::commons::class/]
[import org::eclipse::umlgen::gen::embedded::c::templates::function/]
[import org::eclipse::umlgen::gen::embedded::c::templates::define/]
[import org::eclipse::umlgen::gen::embedded::c::templates::include/]
[import org::eclipse::umlgen::gen::embedded::c::templates::variable/]
[import org::eclipse::umlgen::gen::embedded::c::templates::constant/]
[import org::eclipse::umlgen::gen::embedded::c::templates::type/]
[import org::eclipse::umlgen::gen::embedded::c::services::queries/]
[import org::eclipse::umlgen::gen::embedded::c::services::configuration/]

[template public generate_cFile(aClass : uml::Class)]
/**********************************************************************************
 * Copyright: [getCopyright()/]
 * Project: [aClass.getModel().name/]
 * File: [getFilePath()/][getName()/].c
 * Code Management Tool File Version: [getVersion()/]
[if (isSvnDateEnabled())]
 * Date: $Date$
[/if]
 * SDD Component: [name/]
 * Language: C
 * Author: [getAuthor()/]
[if (isSvnIdEnabled())]
 * Last Change: $Id$
[/if]
 **********************************************************************************/

/*!
 * \file [getFilePath()/][getName()/].c
 * \brief [name/]
 */

[comment ---------- generate includes ----------------------------------/]
[genCIncludes()/]

/**********************************************************************************
 * [getFilePath()/][getName()/].c
 **********************************************************************************/

/*## package [getFullFilePath().concat('/').substituteAll('//', '').substituteAll('/', '::')/] */

/*## class TopLevel::[name/] */

[comment ---------- generate macros & constants ------------------------/]
[genCDefines()/]

[comment ---------- generate type definitions --------------------------/]
[genCTypes()/]

[comment ---------- generate constants ---------------------------------/]
[if (aClass.hasCConstants())]
[genCConstants()/]

[/if]
[comment ---------- generate variables ---------------------------------/]
[if (aClass.hasCVariables() and (isSingleton() or isObject()))]
[genCVariables()/]

[/if]
[comment ---------- generate private inline functions ------------------/]
[if (aClass.hasCInlineOperations())]
[genCInlineOperations()/]

[/if]
[comment ---------- generate prototypes of private operations ----------/]
[if (aClass.hasCPrivateOperationsPrototypes())]
[genCPrivateOperationsPrototypes()/]

[/if]
[comment ---------- generate variables that uses static methods --------/]
[if (aClass.hasCVariablesUsesStaticMethods() and aClass.isObject())]
[genCVariablesUsesStaticMethods()/]

[/if]
[comment ---------- generate declarations of operations ----------------/]
[if (aClass.hasCOperationsDeclarations())]
[genCOperationsDeclarations()/]

[/if]
/**********************************************************************************
 * File Path: [getFullFilePath()/][getName()/].c
 **********************************************************************************/
[/template]
