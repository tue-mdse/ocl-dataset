[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2015 Spacebel SA.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Johan Hardy (Spacebel) - initial API and implementation
[/comment]
[module class('http://www.eclipse.org/uml2/5.0.0/UML')/]
[import org::eclipse::umlgen::gen::embedded::c::commons::namedelement/]
[import org::eclipse::umlgen::gen::embedded::c::commons::method /]

[query public isSingleton(c : uml::Class) : Boolean = c.hasStereotype('embedded_C::Singleton')/]

[query public isObject(c : uml::Class) : Boolean = c.hasStereotype('embedded_C::Object')/]

[query public getOwnedOperations(c : uml::Class) : Sequence(uml::Operation) = c.ownedOperation->asSequence()/]

[query public isPrivate(c : uml::Class) : Boolean = (c.visibility = VisibilityKind::private)/]

[query public isPublic(c : uml::Class) : Boolean = (c.visibility = VisibilityKind::public)/]

[query public entireClassesHierarchechy(c: Class) : OrderedSet ( Class ) =
c->asOrderedSet()->addAll( c.superClass->iterate(ac : Class;os:OrderedSet(Class) = OrderedSet{}| os->addAll(entireClassesHierarchechy(ac))->asOrderedSet())) /]

[query public firstAncestorName(c: Class) :   String  =
entireClassesHierarchechy(c)->last().name /]

[query public lastAncestorName(c: Class) :   String  =
if ( not hasSuperclass() ) then
	c.name
else
	c.superClass.name
endif
 /]

[query public hasSuperclass(c: Class) :   Boolean  =
 c.superClass->size() > 1 /]

[query public hasVirtualMethods(aClass: Class) :   Boolean  =
 aClass.entireClassesHierarchechy()->one( c : Class | c.ownedOperation->one( o : Operation | o.isVirtual() ) ) /]



