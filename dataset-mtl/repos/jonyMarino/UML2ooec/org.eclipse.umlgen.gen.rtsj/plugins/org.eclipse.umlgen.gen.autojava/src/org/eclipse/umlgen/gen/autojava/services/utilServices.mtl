[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2012, 2014 CNES and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Cedric Notot (Obeo) - initial API and implementation
[/comment]

[module utilServices('http://www.eclipse.org/uml2/5.0.0/UML')/]

[query public minimizeByString(arg0 : Sequence(NamedElement), arg1 : Sequence(String)) : Sequence(NamedElement)
	= invoke('org.eclipse.umlgen.gen.autojava.services.UtilServices', 'minimizeByString(java.util.List, java.util.List)', Sequence{arg0, arg1}) /]

[query public getSimilarBehaviorFeatures(arg0 : Interface) : Set(String)
	= invoke('org.eclipse.umlgen.gen.autojava.services.UtilServices', 'getSimilarBehaviorFeatures(org.eclipse.uml2.uml.Interface)', Sequence{arg0}) /]

[query public contains(arg0 : Set(OclAny), arg1 : OclAny) : Boolean
	= invoke('org.eclipse.umlgen.gen.autojava.services.UtilServices', 'contains(java.util.Set, java.lang.Object)', Sequence{arg0, arg1}) /]

[**
 * Get the value of the feature where the name is specified by arg1 on the current OclAny object.
 * @param arg0 OclAny receiver
 * @param arg1 String : The name of the feature
*/]
[query public get(arg0 : OclAny, arg1 : String) : Sequence(OclAny)
	= invoke('org.eclipse.umlgen.gen.autojava.services.UtilServices', 'get(org.eclipse.emf.ecore.EObject, java.lang.String)', Sequence{arg0, arg1}) /]

[**
 * Returns a distinct list of OclAny objects from the current input list arg1.
 * @param arg0 Element receiver
 * @param arg1 The input list of OclAny objects
*/]
[query public minimize(arg0 : OclAny, arg1 : Sequence(OclAny)) : Sequence(OclAny)
	= invoke('org.eclipse.umlgen.gen.autojava.services.UtilServices', 'minimize(java.util.List)', Sequence{arg1}) /]

[**
 * Get the result of the EOperation where the name is specified by arg1 on the current OclAny object.
 * Note that this query looks for the operations without parameters.
 * @param arg0 OclAny receiver
 * @param arg1 String: The name of the EOperation
*/]
[query public call(arg0 : OclAny, arg1 : String) : Sequence(OclAny)
	= invoke('org.eclipse.umlgen.gen.autojava.services.UtilServices', 'call(org.eclipse.emf.ecore.EObject, java.lang.String)', Sequence{arg0, arg1})->reject(oclIsInvalid())->asSequence() /]

[**
 * The documentation of the query
 * @param arg0 Sequence(OclAny) receiver
 */]
[query public sortByCondition(arg0 : Sequence(OclAny)) : Sequence(OclAny)
	= invoke('org.eclipse.umlgen.gen.autojava.services.UtilServices', 'sortByCondition(java.util.List)', Sequence{arg0}) /]

[**
 * The documentation of the query
 * @param arg0 Element receiver
 * @param arg1
 */]
[query public exclusiveChoice(arg0 : Element, arg1 : Sequence(OclAny)) : Boolean
	= invoke('org.eclipse.umlgen.gen.autojava.services.UtilServices', 'exclusiveChoice(org.eclipse.uml2.uml.Element, java.util.List)', Sequence{arg0, arg1}) /]
