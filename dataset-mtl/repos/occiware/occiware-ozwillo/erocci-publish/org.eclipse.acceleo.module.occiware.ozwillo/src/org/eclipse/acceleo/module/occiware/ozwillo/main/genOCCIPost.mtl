[comment encoding = UTF-8 /]
[module genOCCIPost('http://schemas.ogf.org/occi')]

[comment http://www.lifl.fr/~dumoulin/enseign/2010-2011/pje/cours/2.generationCode/2.acceleo-mtl.pdf /]

[template public main(configuration : Configuration)]
[comment @main/]

[file ('genOCCI_DCProjConf.sh', false, 'UTF-8')]
#!/bin/sh

SERVER=$1
today=$(date +%Y%m%d.%H)
LOG_RESP="genOCCI_DCProjConf.$today.log"

echo "Starting POSTting the configuration in erOCCI server : " $SERVER
#http://localhost:XXXXX/collections/resourceName/
echo "*************************************************************************:::" $(date)
echo "\n:::::::::::::::::::::::::::::::" $(date) "::::::::::::::::::::::::\n\n" >> $LOG_RESP
echo "..............POST resources (Project / Model)................."

[comment: Project/Model cUrl generation /]
[for (resource : Resource | configuration.resources)]
#Project/Model curl
[resource.genCurlPost_ProjectAndModel()/]
#Links curl
[resource.genCurlLink()/]

echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
[/for]

[comment: Fetch all resources (model/project) from erocci /]
[showResources()/]
echo "*************************************************************************:::"
[/file]

[/template]

[template public genCurlPost_ProjectAndModel(resource : Resource) post (trim())]
URL=$SERVER/collections/[resource.getResourceType()/]/
KIND='http://occiware.org/ozwillo/dcproject#[resource.getResourceType()/]'
ATTRIBUTES='{[resource.attributes.generateAttribute(resource.kind)/]}'
echo "URL: " $URL
echo "ATTRIBUTES: " $ATTRIBUTES
echo "KIND: " $KIND
echo "Resource: '"[resource.generateBody()/] "'"
echo [resource.generateBody()/] | curl -v -H 'content-type: application/json' -X POST --data-binary @- $URL 2>> $LOG_RESP
[/template]

[template public showResources(configuration : Configuration) ]
baseURL_project=$SERVER/collections/project/
baseURL_model=$SERVER/collections/model/
baseURL_link=$SERVER/collections/geoAreaModelToProjectLink/
echo "..............Fetch ALL existing resources................."
echo "PROJECTS:" ; curl -sb -v -H 'accept: text/uri-list' $baseURL_project
echo "MODELS:" ; curl -sb -v -H 'accept: text/uri-list' $baseURL_model
echo "TO REMOVE THEM : curl -X DELETE " $baseURL_project "; curl -X DELETE " $baseURL_model
echo "TO LIST THEM : curl -v -H 'accept: text/uri-list' $baseURL_project"
echo "     OR : curl -X GET $baseURL_project"
  
echo "Finish POSTting the confirguation in erOCCI server. Check responses in log : " $LOG_RESP
[/template]

[template public generateBody(entity: Entity) post (trim())]
'{ "resources":['['/] { "kind":' '"'$KIND'", "attributes":' $ATTRIBUTES' } ] }'
[/template]

[template public getResourceType(entity : Entity) post (trim())]
[comment: TODO : trying to fetch directly the term in the Kind (kind.term) get an empty value, which is weird !!! /]
[if (entity.kind.toString().strstr('term='+getProperty('res_match_project') ) )]
project
[elseif (entity.kind.toString().strstr('term='+getProperty('res_match_model') ) )] [comment: if is a model/]
model
[/if]
[/template]

[template public generateAttribute(attribute : AttributeState, kind : Kind) post (trim())]
[comment]Acceleo Bug:  kind->closure(parent) must include kind, i.e. ->including(kind) must not be required?[/comment]
[let type : Bag(String) = kind->closure(parent)->including(kind).attributes->select(name = attribute.name).type.instanceClassName]
"[attribute.name/]":"[attribute.value/]",
[/let]
[/template]

[template public genCurlLink(entity: Entity) post (trim())]
[comment TODO /]
[/template]

[template public generateLinksBody(entity: Entity) post (trim())]
[comment TODO /]
'{ "resources":['['/] { "kind":' '"'$KIND'", "attributes":' $ATTRIBUTES' } ] }'
[/template]
