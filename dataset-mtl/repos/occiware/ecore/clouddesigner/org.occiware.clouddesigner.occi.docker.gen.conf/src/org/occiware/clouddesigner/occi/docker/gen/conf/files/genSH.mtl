[comment encoding = UTF-8 /]
[module genSH('http://occiware.org/occi/docker/ecore', 'http://schemas.ogf.org/occi/infrastructure/ecore', 'http://schemas.ogf.org/occi/core/ecore')]

[template public generateSH(configuration : Configuration)]
[file ('docker/' + configurationFileName(configuration) + '.sh', false, 'UTF-8')]
#! /bin/sh
#
# Generated at [getNow()/] from [getFilePath(configuration)/] by org.occiware.clouddesigner.occi.docker.gen.conf
#

[for (machine : Machine | configuration.resources->filter(Machine))]
[machine.genMachine()/]
[/for]
[/file]
[/template]

[template public genMachine (machine : Machine) ]
# Create the Docker [eClass().name/] named [name/]
docker-machine create [genDriverConfig()/] [name/]

eval "$(docker-machine env [name/])"

[getOrderedContainers().genContainer()/]
[/template]

[template public genDriverConfig (machine : Machine) post (trim())]
[/template]

[template public genDriverConfig (machine : Machine_VirtualBox) post (trim())]
 --driver=virtualbox[if (not memory.oclIsUndefined() and memory <> 0)] --virtualbox-memory [toInteger(memory)/][/if][if (not disk_size.oclIsUndefined() and disk_size <> null)] --virtualbox-disk-size [disk_size/][/if]
[/template]

[comment TODO: Add genDriverConfig for each Machine_* /]

[template public genContainer (container : Container) ]
# Create the Docker Container named [name/]
[comment TODO: Add other parameters of the docker create command. /]
docker create --name [name/][if publish_all] -P[/if][if (not volumes.oclIsUndefined())] -v [volumes.trim()/][/if][if (not ports.oclIsUndefined())] -p [ports.trim()/][/if][genLinkConfig()/][if (not image.oclIsUndefined())] [image.trim()/][/if][if (not command.oclIsUndefined())] [command.trim()/][/if]

# Start the Docker Container named [name/]
docker start [name/]


[/template]

[template public genLinkConfig (container : Container) post (trim())]
[for (link : Link | links->filter(docker::Link))]
[let name : String = link.target.oclAsType(Container).name]
  --link [name/]:[if link.alias <> null][link.alias/][else][name/][/if]
[/let]
[/for]
[/template]

[query public getNow() : String
	= invoke(
	'org.occiware.clouddesigner.occi.docker.gen.conf.services.GenUtils', 
	'getNow()', 
	Sequence{})/]

[query public getFilePath(configuration : Configuration) : String
	= invoke(
	'org.occiware.clouddesigner.occi.docker.gen.conf.services.GenUtils', 
	'getFilePath(org.occiware.clouddesigner.occi.Configuration)', 
	Sequence{configuration})/]

[query public configurationFileName(configuration : Configuration) : String
	= invoke(
	'org.occiware.clouddesigner.occi.docker.gen.conf.services.GenUtils', 
	'configurationFileName(org.occiware.clouddesigner.occi.Configuration)', 
	Sequence{configuration})/]

[query public getOrderedContainers(machine : Machine) : Sequence(Container)
	= invoke(
	'org.occiware.clouddesigner.occi.docker.gen.conf.services.GenUtils', 
	'getOrderedContainers(org.occiware.clouddesigner.occi.docker.Machine)', 
	Sequence{machine})/]

[query public toInteger(real: Real) : Integer
	= invoke(
	'org.occiware.clouddesigner.occi.docker.gen.conf.services.GenUtils', 
	'toInteger(java.lang.Float)', 
	Sequence{real})/]
