[comment encoding = UTF-8 /]
[module WebServiceConfig('http://www.eyal.fr/android/datalib')]
[import fr::eyal::datalib::generator::acceleo::common::Tools /]

[template public webServiceConfig(aWebService : WebService){
_package:String = aWebService._package+'.config';
_directory:String = getDirectoryFromPackage(_package);
}]

[file (_directory + aWebService.name.toUpperFirst() + 'WebConfig.java', false, 'UTF-8')]
package [_package/];

import fr.eyal.lib.data.service.DataLibWebConfig;
import fr.eyal.lib.data.service.model.DataLibRequest;
// [protected (aWebService.name.toUpperFirst()+'Config imports')]
// You can add here your personal imports
// DO NOT MODIFY THE GENERATED COMMENTS "Start of user code" and "End of user code"
// [/protected]

public class [aWebService.name.toUpperFirst()/]WebConfig extends DataLibWebConfig {

    protected static [aWebService.name.toUpperFirst()/]WebConfig sInstance; //Singleton of the WebConfig

    public static [aWebService.name.toUpperFirst()/]WebConfig getInstance() {
        synchronized ([aWebService.name.toUpperFirst()/]WebConfig.class) {
	        if (sInstance == null) {
	            sInstance = new [aWebService.name.toUpperFirst()/]WebConfig();
	        }
		}
        return ([aWebService.name.toUpperFirst()/]WebConfig) sInstance;
    }

    private [aWebService.name.toUpperFirst()/]WebConfig() {}

    private int httpType = [getMethod(aWebService)/];
	[if (aWebService.options->size() = 0)]
	private int requestOptions = [getOption(DataLibOption::noOption)/];
	[else]
	private int requestOptions = 
	[for (option : DataLibOption | aWebService.options)]
			[getOption(option)/][if (i <> aWebService.options->size())] |[else];[/if]
	[/for]
	[/if]
    private int parseType = [getParseType(aWebService)/];

    /**
     * Get the HTTP type o the request
     * @return the corresponding
     */
    @Override
    public int getHttpType() {
        return httpType;
    }

    @Override
    public int getParseType() {
        return parseType;
    }

    @Override
    public int getRequestOptions() {
        return requestOptions;
    }

// [protected (aWebService.name.toUpperFirst()+'Config')]
// You can add here your personal content
// DO NOT MODIFY THE GENERATED COMMENTS "Start of user code" and "End of user code"
// [/protected]

}

[/file]
[/template]

[template public getOption (option : DataLibOption) post (trim()) ]
[if (option = DataLibOption::conserveCookie)]
	DataLibRequest.OPTION_CONSERVE_COOKIE_ENABLED
[elseif (option = DataLibOption::dataBaseCacheDisabled)]
	DataLibRequest.OPTION_DATABASE_CACHE_DISABLED
[elseif (option = DataLibOption::helperCacheDisabled)]
	DataLibRequest.OPTION_HELPER_CACHE_DISABLED
[elseif (option = DataLibOption::hostVerifierDisabled)]
	DataLibRequest.OPTION_HOST_VERIFIER_DISABLED
[elseif (option = DataLibOption::noOption)]
	DataLibRequest.OPTION_NO_OPTION
[elseif (option = DataLibOption::sendWithParcelable)]
	DataLibRequest.OPTION_SEND_WITH_PARCELABLE_ENABLED
[/if]
[/template]

[template public getMethod(aWebService : WebService) post (trim())]
[if (aWebService.method = HttpMethod::DELETE)]
DataLibRequest.HTTP_REST_DELETE
[elseif (aWebService.method = HttpMethod::GET)]
DataLibRequest.HTTP_REST_GET
[elseif (aWebService.method = HttpMethod::HEAD)]
DataLibRequest.HTTP_REST_HEAD
[elseif (aWebService.method = HttpMethod::POST)]
DataLibRequest.HTTP_REST_POST
[elseif (aWebService.method = HttpMethod::PUT)]
DataLibRequest.HTTP_REST_PUT
[/if]
[/template]

[template public getParseType(aWebService : WebService) post (trim())]
[if (aWebService.parseType = ParseType::SAX)]
DataLibRequest.PARSE_TYPE_SAX_XML
[elseif (aWebService.parseType = ParseType::JSON)]
DataLibRequest.PARSE_TYPE_JSON_OBJECT
[elseif (aWebService.parseType = ParseType::IMAGE)]
DataLibRequest.PARSE_TYPE_IMAGE
[comment]
[elseif (aWebService.parseType = ParseType::CUSTOM)]
DataLibRequest.HTTP_REST_POST
[/comment]
[/if]
[/template]
