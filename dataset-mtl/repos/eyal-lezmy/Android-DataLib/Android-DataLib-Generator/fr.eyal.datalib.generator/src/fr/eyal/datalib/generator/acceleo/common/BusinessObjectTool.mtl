[comment encoding = UTF-8 /]
[module BusinessObjectTool('http://www.eyal.fr/android/datalib')]

[template public declareFingerprintKeys (aWebService : WebService) post (trim()) ]
public static final String['['/]] FINGERPRINT_KEYS = {
[for (parameter : Parameter | aWebService.parameters)][if (parameter.fingerprintKey)]"[parameter.name/]",
[/if][/for]
};
[/template]

[template public declareFields (aBusinessObject : BusinessObject) post (trim()) ]
[if (aBusinessObject.attributes->size() > 0)]
//list of attributes
[declareAttributes(aBusinessObject)/]

[/if]
[if (aBusinessObject.contentFields->size() > 0)]
//list of content
[declareContentFields(aBusinessObject)/]

[/if]
[if (aBusinessObject.childs->size() > 0)]
//list of childs
[declareChilds(aBusinessObject)/]

[/if]

[/template]


[template public declareChilds (aBusinessObject : BusinessObject) post (trim())]
[for (child : BusinessObject | aBusinessObject.childs)]
public ArrayList<[child.javaName.toUpperFirst()/]> [child.javaName.toLowerFirst()/];
[/for]
[/template]

[template public declareContentFields (aBusinessObject : BusinessObject) ]
[for (field : Field | aBusinessObject.contentFields)]
[comment]we check if a default value has been set[/comment]
[if (field.defaultValue <> null)]
[if (field.type = ParameterType::String)]
public String [field.javaName.toLowerFirst()/] = "[field.defaultValue/]";
[else]
public [field.type/] [field.javaName.toLowerFirst()/] = [field.defaultValue/];
[/if]
[else]
[if (field.type = ParameterType::String)]
public String [field.javaName.toLowerFirst()/];
[else]
public [field.type/] [field.javaName.toLowerFirst()/];
[/if]
[/if]
[/for]
[/template]

[template public declareAttributes (aBusinessObject : BusinessObject) post (trim())]
[for (field : Field | aBusinessObject.attributes)]
[comment]we check if a default value has been set[/comment]
[if (field.defaultValue <> null)]
	[if (field.type = ParameterType::String)]
public String attr[field.name.toUpperFirst()/];
	[else]
public [field.type/] attr[field.javaName.toUpperFirst()/];
	[/if]
[/if]
[/for]
[/template]

[template public initializeAttributes (aBusinessObject : BusinessObject) post (trim())]
[for (field : Field | aBusinessObject.attributes)]
[comment]we check if a default value has been set[/comment]
[if (field.defaultValue <> null)]
	[if (field.type = ParameterType::String)]
attr[field.name.toUpperFirst()/] = "[field.defaultValue/]";
	[elseif (field.defaultValue <> '')]
attr[field.javaName.toUpperFirst()/] = [field.defaultValue/];
	[else]
attr[field.javaName.toUpperFirst()/];
	[/if]
[/if]
[/for]
[/template]

[query public getPackage(businessObject : BusinessObject) : String = 
if businessObject.parent = null then businessObject.name.toLower()
else getPackage(businessObject.parent)
endif/]

[template public readParcel (aBusinessObject : BusinessObject) post (trim())]
[readParcel (aBusinessObject, false, false)/]
[/template]

[template public readParcel (aBusinessObject : BusinessObject, isDao : Boolean, isResponse : Boolean) post (trim())]
public [aBusinessObject.javaName.toUpperFirst()/]Base(final Parcel in) {
	[if (isDao)]
	[if (isResponse)]
	// ResponseBusinessObject DAO
	_ttl = in.readLong();
	_url = in.readString();
	
	[/if]
	// Business Object DAO
	_id = in.readLong();
	_updatedAt = Calendar.getInstance();
	_updatedAt.setTimeInMillis(in.readLong());
	
	[/if]
	[if (aBusinessObject.attributes->size() > 0)]
	//list of attributes
	[readParcelAttribute(aBusinessObject.attributes)/]	
	
	[/if]
	[if (aBusinessObject.contentFields->size() > 0)]		
	//list of content
	[readParcelData(aBusinessObject.contentFields)/]	
	
	[/if]
	[if (aBusinessObject.childs->size() > 0)]
	//list of children
	Parcelable['['/]] items;[comment]No final qualification here because if there is several childs the items variable is reasigned[/comment] 
	[for (child : BusinessObject | aBusinessObject.childs)]
	items = in.readParcelableArray([child.javaName.toUpperFirst()/].class.getClassLoader());
	[child.javaName.toLowerFirst()/] = new ArrayList<[child.javaName.toUpperFirst()/]>();
	for (final Parcelable parcelable : items) {
	    [child.javaName.toLowerFirst()/].add(([child.javaName.toUpperFirst()/]) parcelable);
	}
	[/for]
	[/if]
	
}
[/template]

[template public readParcelData (fields : OrderedSet(Field)) post (trim())]
[for (field : Field | fields)]
	[if (field.type = ParameterType::String)]
[field.javaName.toLowerFirst()/] = in.readString();
	[elseif (field.type = ParameterType::int)]
[field.javaName.toLowerFirst()/] = in.readInt();
	[elseif (field.type = ParameterType::float)]
[field.javaName.toLowerFirst()/] = in.readFloat();
	[elseif (field.type = ParameterType::boolean)]
[field.javaName.toLowerFirst()/] = in.readInt() == 1;
	[else]
//unknown type [field.type/] for attribute [field.javaName.toLowerFirst()/]
	[/if]
[/for]
[/template]

[template public readParcelAttribute (fields : OrderedSet(Field)) post (trim())]
[for (field : Field | fields)]
	[if (field.type = ParameterType::String)]
attr[field.javaName.toUpperFirst()/] = in.readString();
	[elseif (field.type = ParameterType::int)]
attr[field.javaName.toUpperFirst()/] = in.readInt();
	[elseif (field.type = ParameterType::float)]
attr[field.javaName.toUpperFirst()/] = in.readFloat();
	[elseif (field.type = ParameterType::boolean)]
attr[field.javaName.toUpperFirst()/] = in.readInt() == 1;
	[else]
//unknown type [field.type/] for attribute attr[field.javaName.toUpperFirst()/]
	[/if]
[/for]
[/template]

[template public writeParcel (aBusinessObject : BusinessObject) post (trim())]
[writeParcel (aBusinessObject, false, false)/]
[/template]

[template public writeParcel (aBusinessObject : BusinessObject, isDao : Boolean, isResponse : Boolean) post (trim())]
@Override
public void writeToParcel(final Parcel dest, final int flags) {
	[if (isResponse)]
	// ResponseBusinessObject DAO
	dest.writeLong(_ttl);
	dest.writeString(_url);
	
	[/if]
	[if (isDao)]
	// Business Object DAO
	dest.writeLong(_id);
	dest.writeLong(_updatedAt.getTimeInMillis());
	
	[/if]
	[if (aBusinessObject.attributes->size() > 0)]
	//list of attributes
	[for (field : Field | aBusinessObject.attributes)]
		[if (field.type = ParameterType::String)]
	dest.writeString(attr[field.name.toUpperFirst()/]);
		[elseif (field.type = ParameterType::int)]
	dest.writeInt(attr[field.name.toUpperFirst()/]);
		[elseif (field.type = ParameterType::float)]
	dest.writeFloat(attr[field.name.toUpperFirst()/]);
		[elseif (field.type = ParameterType::boolean)]
	dest.writeInt(attr[field.name.toUpperFirst()/]?1:0);
		[else]
	//unknown type [field.type/] for attribute attr[field.name.toUpperFirst()/]
		[/if]
	[/for]
	
	[/if]
	[if (aBusinessObject.contentFields->size() > 0)]	
	//list of content
	[for (field : Field | aBusinessObject.contentFields)]
		[if (field.type = ParameterType::String)]
	dest.writeString([field.name.toLowerFirst()/]);
		[elseif (field.type = ParameterType::int)]
	dest.writeInt([field.name.toLowerFirst()/]);
		[elseif (field.type = ParameterType::float)]
	dest.writeFloat([field.name.toLowerFirst()/]);
		[elseif (field.type = ParameterType::boolean)]
	dest.writeInt([field.name.toLowerFirst()/]?1:0);
		[else]
	//unknown type [field.type/] for field [field.name.toLowerFirst()/]
		[/if]
	[/for]
	
	[/if]
	[if (aBusinessObject.childs->size() > 0)]
	//list of childs
	[for (child : BusinessObject | aBusinessObject.childs)]
	dest.writeParcelableArray([child.javaName.toLowerFirst()/].toArray(new [child.javaName.toUpperFirst()/]['['/][child.javaName.toLowerFirst()/].size()]), 0);
	[/for]
	[/if]
}
[/template]

[template public declareParcelableCreator (aBusinessObject : BusinessObject) post (trim())]
public static final Parcelable.Creator<[aBusinessObject.javaName.toUpperFirst()/]Base> CREATOR = new Parcelable.Creator<[aBusinessObject.javaName.toUpperFirst()/]Base>() {
    @Override
    public [aBusinessObject.javaName.toUpperFirst()/]Base createFromParcel(final Parcel in) {
        return new [aBusinessObject.javaName.toUpperFirst()/]Base(in);
    }

    @Override
    public [aBusinessObject.javaName.toUpperFirst()/]Base['['/]] newArray(final int size) {
        return new [aBusinessObject.javaName.toUpperFirst()/]Base['['/]size];
    }
};

@Override
public int describeContents() {
    return 0;
}
[/template]


[template public declareParcelableCreatorNotBase (aBusinessObject : BusinessObject) post (trim())]
public static final Parcelable.Creator<[aBusinessObject.javaName.toUpperFirst()/]> CREATOR = new Parcelable.Creator<[aBusinessObject.javaName.toUpperFirst()/]>() {
    @Override
    public [aBusinessObject.javaName.toUpperFirst()/] createFromParcel(final Parcel in) {
        return new [aBusinessObject.javaName.toUpperFirst()/](in);
    }

    @Override
    public [aBusinessObject.javaName.toUpperFirst()/]['['/]] newArray(final int size) {
        return new [aBusinessObject.javaName.toUpperFirst()/]['['/]size];
    }
};
[/template]

[template public getCompleteNameToLower (aBusinessObject : BusinessObject, separator : String) post (trim())]
[if (aBusinessObject.parent <> null)][getCompleteNameToLower (aBusinessObject.parent, separator)/][/if][separator/][aBusinessObject.javaName.toLower()/]
[/template]

[template public getCompleteNameToUpper (aBusinessObject : BusinessObject, separator : String) post (trim())]
[if (aBusinessObject.parent <> null)][getCompleteNameToUpper (aBusinessObject.parent, separator)/][/if][separator/][aBusinessObject.javaName.toUpper()/]
[/template]

[template public getCompleteNameToUpperFirst (aBusinessObject : BusinessObject, separator : String) post (trim())]
[if (aBusinessObject.parent <> null)][getCompleteNameToUpperFirst (aBusinessObject.parent, separator)/][/if][separator/][aBusinessObject.javaName.toUpperFirst()/]
[/template]

[template public getCompleteNameToLowerFirst (aBusinessObject : BusinessObject, separator : String) post (trim())]
[if (aBusinessObject.parent <> null)][getCompleteNameToLowerFirst (aBusinessObject.parent, separator)/][/if][separator/][aBusinessObject.javaName.toLowerFirst()/]
[/template]
