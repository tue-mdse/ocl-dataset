[comment encoding = UTF-8 /]
[module genFEController('http://github.com/kanafghan/welipse/joomlagen/1.0', 'http://github.com/kanafghan/welipse/webdsl/1.0', 'http://www.eclipse.org/emf/2002/Ecore')]

[import com::github::kanafghan::welipse::joomlagen::generator::acceleo::common::common /]

[template public generateController (controller : GenClass, genModel : JoomlaGenModel)]
[comment @main/]
[file (controller.ecoreClass.oclAsType(EClass).name.toLower().concat('.php'), false, 'UTF-8')]
[let eClass : EClass = controller.ecoreClass.oclAsType(EClass)]
<?php
// No direct access to this file
defined('_JEXEC') or die('Restricted access');
 
// import Joomla controller library
jimport('joomla.application.component.controller');
 
/**
 * [eClass.name.toUpperFirst()/] controller	
 * 
 */
class [genModel.extensionName.toUpperFirst()/]Controller[eClass.name.toUpperFirst()/] extends JController
{
	/**
	 * (non-PHPdoc)
	 * @see JController::getModel()
	 */
	public function getModel($name = '[controller.databaseTableName/]', $prefix = '[genModel.extensionName.toUpperFirst()/]Model', $config = array('ignore_request' => true))
	{
		return parent::getModel($name, $prefix, $config);
	}

	public function save()
	{
		// Check for request forgeries.
		JSession::checkToken() or jexit(JText::_('JINVALID_TOKEN'));

		$app   	= JFactory::getApplication();
		$session = JFactory::getSession();
		$model 	= $this->getModel();
		$jinput	= $app->input;
		$message = "";
		$messageType = "message";

		// Get and interpret the request
		$sourcePage = base64_decode($jinput->get('__source-page__', '', 'STRING'));
		$targetPage = base64_decode($jinput->get('__target-page__', '', 'STRING'));
		$data = $jinput->get('__form', array(), 'ARRAY'); 
		$validator = $jinput->get('__validator__', null, 'STRING');

		$redirectURL = $targetPage;
		
		$valid = false;
		if ($validator !== null && !empty($validator)) {
			$validatorArgs = $jinput->get('__validator-arguments', array(), 'ARRAY');

			$args = array();
			foreach ($validatorArgs as $key => $value) 
			{
				if (isset($data[ '[' /]$value[ ']' /])) 
				{
					$args[ '[' /]$key[ ']' /] = $data[ '[' /]$value[ ']' /];
				}
			}

			$valid = call_user_func_array(array($model, $validator), $args);
		} else {
			// Default validator
			$valid = $model->validate($data);
		}

		if ($valid) {
			if ($model->save($data)) {
				$message = "Your data was saved successfully.";
				$session->set('form-state', null, '[genModel.extensionName/]');
			} else {
				$message = "Saving Error: ". $model->getError();
				$messageType = "error";
				$redirectURL = $sourcePage;
				$session->set('form-state', $data, '[genModel.extensionName/]');
			}			
		} 
		else 
		{
			$message = implode("</li><li>", $model->getErrors());
			$messageType = "error";
			$redirectURL = $sourcePage;
			$session->set('form-state', $data, '[genModel.extensionName/]');
		}

		$this->setRedirect($redirectURL, $message, $messageType);
	}
}
[/let]
[/file]
[/template]