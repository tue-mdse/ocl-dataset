[comment encoding = UTF-8 /]

[module generateFeatureMappingStrategy(
	'http://www.eclipse.org/emf/2002/Ecore',
	'http://www.eclipse.org/xtext/common/JavaVMTypes',
	'http://org.eclipse.gmt.emfacade/model/emfacade.ecore')
/]

[import org::eclipse::gmt::emfacade::tests::util /]

[import org::eclipse::gmt::emfacade::tests::GetSetStrategy1/]
[import org::eclipse::gmt::emfacade::tests::GetStrategy1/]
[import org::eclipse::gmt::emfacade::tests::FieldStrategy1/]
[import org::eclipse::gmt::emfacade::tests::AddRemoveStrategyN/]
[import org::eclipse::gmt::emfacade::tests::SizeGetSetAddRemoveStrategyN/]
[import org::eclipse::gmt::emfacade::tests::ListStrategyN/]

[template public generate(eClassMapping : EClassMapping, eFeatureMapping : EFeatureMapping)]
	
	[let eClass : EClass = eClassMapping.eClass]
	[let jClass : JvmGenericType = eClassMapping.jClass]
	[let associationClassName : String = jClass.simpleName + '_' + eFeatureMapping.name]
	[let modelPackageName : String = eClass.ePackage.name]
		[file (associationClassName + '.java', false, 'UTF-8')]
package org.eclipse.gmt.emfacade.tests.binders_gen;

import org.eclipse.gmt.emfacade.builder.strategies.*;

[generateJClassImports(eClassMapping.jClass)/]

class [associationClassName/] implements [strategyClassName(eFeatureMapping)/].Association<[jClass.simpleName/], [eTypeJClassName(eFeatureMapping.eFeature.eType)/]> {
	[generateAssociationMethods(eFeatureMapping, eFeatureMapping.strategy)/]
}
		[/file]
	[/let]
	[/let]
	[/let]
	[/let]

[/template]

[template protected generateAssociationMethods(eFeatureMapping : EFeatureMapping, eFeatureMappingStrategy : FeatureMappingStrategy)]
[/template]

[template public generateStrategyConstructorArguments(eFeatureMapping : EFeatureMapping, eFeatureMappingStrategy : FeatureMappingStrategy)]
	new [eFeatureMapping.eClassMapping.jClass.simpleName/]_[eFeatureMapping.name/]()
[/template]
