[comment encoding = UTF-8 /]
[module genContext('http://www.eclipse.org/intent/specification/1.0')]
[import fr::obeo::intent::spec2test::files::genAutomationUtils /]

[template public genContext(contxt : Context)]
[file (getContextsPath(contxt.eContainer(Specification))+'/'+contxt.getCamelCaseName()+'.java', false, 'UTF-8')]
[genLicence()/]
package [getContextsPackage(contxt.eContainer(Specification))/];

import static org.junit.Assert.*;
[if (contxt.eContainer(Context)->size()>0)]
	import [getContextsPackage(contxt.eContainer(Specification))/].[getContextInheritance()/];
[else]
	import [getAutomationPackage(contxt.eContainer(Specification))/].Context;
[/if]

// [protected (contxt.getCamelCaseName()+' imports')]
// TODO Define imports
// [/protected]

/**
 * Context : [contxt.name/]
 */
public class [contxt.getCamelCaseName()/] extends [getContextInheritance()/] {
// [protected (contxt.getCamelCaseName()+' variables')]
// TODO Define private variables
// [/protected]

	@Override
	public void setup() {
	[if (contxt.contexts->size()>0)]
		super.setup();
	[/if]
		// [protected (contxt.getCamelCaseName()+' setup')]
		// TODO Implement context setup
		// [/protected]
	}

	@Override
	public void tearDown() {
	[if (contxt.contexts->size()>0)]
		super.tearDown();
	[/if]
		// [protected (contxt.getCamelCaseName()+' tear down')]
		// TODO Implement context tear down
		// [/protected]
	}
[if (getScenarios()->size()>0)]
	[for (action : Action | getScenarios().when->asSet())]
	/**
	 * Action : [action.name/]
	 */
	public void action[action.getCamelCaseName()/]([action.getParameters()/]) {
		// [protected (action.getCamelCaseName())]
		// TODO Implement action [action.getCamelCaseName()/]
		fail("Action [action.getCamelCaseName()/] not implemented");
		// [/protected]
	}

[/for]
[for (behaviour : Behaviour | getScenarios()._then->asSet())]
	/**
	 * Behavior : [behaviour.name/]
	 */
	public void assert[behaviour.getCamelCaseName()/]([behaviour.getParameters()/]) {
		// [protected (behaviour.getCamelCaseName())]
		// TODO Implement behavior [behaviour.getCamelCaseName()/]
		fail("Behavior [behaviour.getCamelCaseName()/] not implemented");
		// [/protected]
	}
[/for]
[/if]

// [protected (contxt.getCamelCaseName()+' private methods')]
// TODO Define private methods
// [/protected]
}
[/file]
[for (subContext : Context | contxt.contexts)]
	[genContext(subContext)/]
[/for]
[/template]

[query public getParameters (scenarioElement : ScenarioElement) : String = 
if scenarioElement.parameters->size()>0 then
scenarioElement.parameters->collect(param|'String ' + param.getCamelCaseName().toString().toLowerFirst())->sep(',')
else
''
endif
/]

[query public getContextInheritance(contxt : Context) : String = if contxt.contexts->size()>0 then contxt.contexts->first().getCamelCaseName() else 'Context' endif /]

[query public getScenarios (contxt : Context) : OrderedSet(Scenario) = contxt.eInverse(Scenario)/]
