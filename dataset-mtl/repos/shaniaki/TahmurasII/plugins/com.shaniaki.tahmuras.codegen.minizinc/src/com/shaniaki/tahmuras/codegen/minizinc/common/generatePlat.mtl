[comment encoding = UTF-8 /]
[module generatePlat('http://www.shaniaki.com/tahmuras')]


[template public generatePlat(aPlatModel : PlatformModel)]
% The platform problem
int: num_max_plat_insts;
set of int: plat_inst_components_type=1..[aPlatModel.platformcomponent->size()/]*num_max_plat_insts;

% platform helpers
[genHelperEnumerations(aPlatModel)/]
% Define the array holding the number of instances of each component template
array ['['/]1..[aPlatModel.platformcomponent->size()/][']'/] of var 0..num_max_plat_insts: num_plat_comp_insts;

% component-wise definitions
[genComponentVariables(aPlatModel)/]
[genComponentClocks(aPlatModel)/]
[genComponentInstantiationConstraints(aPlatModel)/]
[genComponentClockConstraints(aPlatModel)/]
[genComponentMetrics(aPlatModel)/]

% platform-wise definitions
[comment][genplatformRelations(aPlatModel)/][/comment]
[genplatformInstantiationConstraints(aPlatModel)/]
[genplatformClockConstraints(aPlatModel)/]
[genplatformMetrics(aPlatModel)/]
[/template]

[template public genHelperEnumerations(aPlatModel : PlatformModel)]
% Component name enumerations
[for (comp : PlatformComponent | aPlatModel.platformcomponent)]
int: [comp.name/] = [aPlatModel.platformcomponent->indexOf(comp)/];
[/for]
[/template]

[template public genComponentVariables(aPlatModel : PlatformModel)]
% Define the platform component variables
[for (comp : PlatformComponent | aPlatModel.platformcomponent)]
	[for (comp_var : DecisionVariable | comp.decisionvariable)]
array ['['/]1..num_max_plat_insts,1..[comp_var.size/][']'/] of var [comp_var.domain/]: [comp.name/]_[comp_var.name/]_vars [if (comp_var.value->size()>0)]= [comp_var.value/][/if];
	[/for]
[/for]
[/template]

[template public genComponentClocks(aPlatModel : PlatformModel)]
% Define the platform component clocks
[for (comp : PlatformComponent | aPlatModel.platformcomponent)]
	[for (comp_clk : LogicalClock | comp.logicalclock)]
array ['['/]1..num_max_plat_insts,steps_range[']'/] of var bool: [comp.name/]_[comp_clk.name/]_clks;
	[/for]
[/for]
[/template]

[template public genComponentInstantiationConstraints(aPlatModel : PlatformModel)]
% Post the platform component instantiation constraints
[for (comp : PlatformComponent | aPlatModel.platformcomponent)]
	[for (cons : InstantiationConstraint | comp.constraint->filter(InstantiationConstraint))]
constraint forall (i in 1..num_max_plat_insts) (let {[genComponentVariableList(comp)/]} in [cons.minizincConstraint/]);
	[/for]
[/for]
[/template]

[template public genComponentClockConstraints(aPlatModel : PlatformModel)]
% Post the platform component clock constraints
[for (comp : PlatformComponent | aPlatModel.platformcomponent)]
	[for (cons : ClockConstraint | comp.constraint->filter(ClockConstraint))]
constraint forall (i in 1..num_max_plat_insts) (let {[genComponentVariableList(comp)/]} in [cons.minizincConstraint/]);
	[/for]
[/for]
[/template]

[template public genComponentVariableList(comp : PlatformComponent)]
[for (comp_variable : DecisionVariable | comp.decisionvariable) separator (',')]
array ['['/]1..[comp_variable.size/][']'/] of var [comp_variable.domain/]: [comp.name/]_[comp_variable.name/]_var = ['['/][comp.name/]_[comp_variable.name/]_vars['['/]i,el[']'/]|el in 1..[comp_variable.size/][']'/][/for]
[/template]

[template public genComponentMetrics(aPlatModel : PlatformModel)]
% Define and post the constraints for the platform component metrics
[for (comp : PlatformComponent | aPlatModel.platformcomponent)]
	[for (metric : CostMetric | comp.costmetric)]
array ['['/]1..num_max_plat_insts[']'/] of var [metric.domain/]: [comp.name/]_[metric.name/]_metrics;
constraint forall (i in 1..num_max_plat_insts) (let {[genComponentVariableList(comp)/][genMetricList(comp)/]} in [metric.minizincConstraint/]);
	[/for]
[/for]
[/template]

[template public genMetricList(comp : PlatformComponent)]
[for (comp_metric : CostMetric | comp.costmetric) before (',') separator (',')]
var [comp_metric.domain/]: [comp.name/]_[comp_metric.name/]_metric = [comp.name/]_[comp_metric.name/]_metrics['['/]i[']'/][/for]
[/template]

[comment][template public genplatformRelations(aPlatModel : PlatformModel)]
% Define the platform relations
[for (relation : BinaryRelation | aPlatModel.binaryrelation)]
array ['['/][relation.domain/],[relation.codomain/][']'/] of 0..1: [relation.name/]_rel;
[/for]
[/template][/comment]

[template public genplatformInstantiationConstraints(aPlatModel : PlatformModel)]
% Post the platform instantiation constraints
[for (cons : InstantiationConstraint | aPlatModel.constraint->filter(InstantiationConstraint))]
constraint [cons.minizincConstraint/];
[/for]
[/template]

[template public genplatformClockConstraints(aPlatModel : PlatformModel)]
% Post the platform clock constraints
[for (cons : ClockConstraint | aPlatModel.constraint->filter(ClockConstraint))]
constraint [cons.minizincConstraint/];
[/for]
[/template]

[template public genplatformMetrics(aPlatModel : PlatformModel)]
% Define and post the constraints for the platform metrics
[for (metric : CostMetric | aPlatModel.costmetric)]
var [metric.domain/]: [metric.name/]_metric;
constraint [metric.minizincConstraint/];
[/for]
[/template]
