[comment encoding = UTF-8 /]
[module generateApp('http://www.shaniaki.com/tahmuras')]


[template public generateApp(anAppModel : ApplicationModel)]
% The application problem
set of int: app_components_type=1..[anAppModel.applicationcomponent->size()/];

% component-wise definitions
[genComponentVariables(anAppModel)/]
[genComponentClocks(anAppModel)/]
[genComponentInstantiationConstraints(anAppModel)/]
[genComponentClockConstraints(anAppModel)/]
[genComponentMetrics(anAppModel)/]

% application-wise definitions
[genApplicationRelations(anAppModel)/]
[genApplicationInstantiationConstraints(anAppModel)/]
[genApplicationClockConstraints(anAppModel)/]
[genApplicationMetrics(anAppModel)/]
[/template]

[template public genComponentVariables(anAppModel : ApplicationModel)]
% Define the application component variables
[for (comp : ApplicationComponent | anAppModel.applicationcomponent)]
	[for (comp_var : DecisionVariable | comp.decisionvariable)]
array ['['/]1..[comp_var.size/][']'/] of var [comp_var.domain/]: [comp.name/]_[comp_var.name/]_var [if (comp_var.value->size()>0)]= [comp_var.value/][/if];
	[/for]
[/for]
[/template]

[template public genComponentClocks(anAppModel : ApplicationModel)]
% Define the application component clocks
[for (comp : ApplicationComponent | anAppModel.applicationcomponent)]
	[for (comp_clk : LogicalClock | comp.logicalclock)]
array ['['/]steps_range[']'/] of var bool: [comp.name/]_[comp_clk.name/]_clk;
	[/for]
[/for]
[/template]

[template public genComponentInstantiationConstraints(anAppModel : ApplicationModel)]
% Post the application component instantiation constraints
[for (comp : ApplicationComponent | anAppModel.applicationcomponent)]
	[for (cons : InstantiationConstraint | comp.constraint->filter(InstantiationConstraint))]
constraint [cons.minizincConstraint/];
	[/for]
[/for]
[/template]

[template public genComponentClockConstraints(anAppModel : ApplicationModel)]
% Post the application component clock constraints
[for (comp : ApplicationComponent | anAppModel.applicationcomponent)]
	[for (cons : ClockConstraint | comp.constraint->filter(ClockConstraint))]
constraint [cons.minizincConstraint/];
	[/for]
[/for]
[/template]

[template public genComponentMetrics(anAppModel : ApplicationModel)]
% Define and post the constraints for the application component metrics
[for (comp : ApplicationComponent | anAppModel.applicationcomponent)]
	[for (metric : PerformanceMetric | comp.performancemetric)]
var [metric.domain/]: [comp.name/]_[metric.name/]_metric;
constraint [metric.minizincConstraint/];
	[/for]
[/for]
[/template]

[template public genApplicationRelations(anAppModel : ApplicationModel)]
% Define the application relations
[for (relation : BinaryRelation | anAppModel.binaryrelation)]
array ['['/][relation.domain/],[relation.codomain/][']'/] of 0..1: [relation.name/]_rel;
[/for]
[/template]

[template public genApplicationInstantiationConstraints(anAppModel : ApplicationModel)]
% Post the application instantiation constraints
[for (cons : InstantiationConstraint | anAppModel.constraint->filter(InstantiationConstraint))]
constraint [cons.minizincConstraint/];
[/for]
[/template]

[template public genApplicationClockConstraints(anAppModel : ApplicationModel)]
% Post the application clock constraints
[for (cons : ClockConstraint | anAppModel.constraint->filter(ClockConstraint))]
constraint [cons.minizincConstraint/];
[/for]
[/template]

[template public genApplicationMetrics(anAppModel : ApplicationModel)]
% Define and post the constraints for the application metrics
[for (metric : PerformanceMetric | anAppModel.performancemetric)]
var [metric.domain/]: [metric.name/]_metric;
constraint [metric.minizincConstraint/];
[/for]
[/template]
