[comment encoding = UTF-8 /]
[module classConstructor('http://www.eclipse.org/uml2/4.0.0/UML')]
[import AUTCPP::header::files::coreServices /]

[import AUTCPP::stateMachine::body::files::stateMachineBodyElements /]

[template public generateNormalConstructor(aClass : Class)   { hasSM : Boolean = hasStateMachine(); } ]
[name.toUpperFirst()/]::[name.toUpperFirst()/]() {
[generateAssociationInitiate()/]
[comment SateMachine start /]
[generateSMConstructorsFiles()/]
[comment SateMachine stop /]

//[protected ('constructor'+ name.toUpperFirst())]
	
//[/protected]
}
[/template]

[template public generateAssociationInitiate(aClass : Class)]
[for (aProperty: Property | orderByContents( attribute->select(association->size()>0 and (not (lower=upper and lower=1)))->asSequence() ) )]
	[name/] = new vector<[generateTypeNames(type)/]*>();
[/for]
[/template]


[comment --not used so far -----------------------------------/]
[template public generatePrivateMethodInitiate(aClass : Class)]
[for (aProperty: Property | orderByContents( attribute->select(association->size()<=0 and (not (lower=upper and lower=1)))->asSequence() ) )]
	[name/] = vector<[generateTypeNames(type)/]>();
[/for]
[/template]