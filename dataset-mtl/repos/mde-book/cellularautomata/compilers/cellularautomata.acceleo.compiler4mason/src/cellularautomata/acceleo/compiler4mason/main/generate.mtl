[comment encoding = UTF-8 /]
[comment MDE_BOOK_START /]
[module generate('http://rules/core/1.0', 'http://rules/evol/1.0')]
[import cellularautomata::acceleo::compiler4mason::generateSubTemplates/]
[template public generateMasonAutomata(anAutomata : CellularAutomata )]
[file ('MyGeneratedMasonAutomata.java', false, 'UTF-8')]
package generated_ca;

import cellularautomata.mason.utils.*;
import sim.engine.*;
import sim.field.grid.*;

public class MyGeneratedMasonAutomata implements Steppable{
	// the width and height will change later
    public IntGrid2D tempGrid = new IntGrid2D(0,0);

    @Override
    public void step(SimState state){
    	 CA_SimulationState tut = (CA_SimulationState)state;
        // first copy the grid into tempGrid
        tempGrid.setTo(tut.grid);

        // now apply the CA rules for each cell...
        int width = tempGrid.getWidth();
        int height = tempGrid.getHeight();
        for(int x=0;x<width;x++){
			for(int y=0;y<height;y++){            	
				int currentVal = tempGrid.field['['/]tempGrid.stx(x)[']['/]tempGrid.sty(y)[']'/];
[for (aRule : Rule | anAutomata.rules)]
	[aRule.generateRule()/]
[/for]
			}
		}
	}
}
[/file]
[/template]
[comment MDE_BOOK_END /]
