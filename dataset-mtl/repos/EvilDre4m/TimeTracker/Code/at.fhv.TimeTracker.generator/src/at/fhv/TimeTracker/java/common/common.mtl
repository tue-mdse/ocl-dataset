[comment encoding = UTF-8 /]
[module common('http://www.eclipse.org/uml2/5.0.0/UML')]

[**
 * Generate the name of an element
 * @param aNamedElement The element whose name should be generated 
*/]
[template public genName(aNamedElement : NamedElement)]
[aNamedElement.name/]
[/template]

[**
 * Generate the comment for an element
 * @param The element for which the comment should be generated
*/]
[template public genComment(anElement : Element)]
[for (ownedComment : Comment | anElement.ownedComment)]
[ownedComment._body/][/for]
[/template]

[**
 * Generate the package name for a type
 * @param aType The type for which the package name should be generated
*/]
[template public genPackageName(aType : Type)]
[aType.packagePath().normalizeName()->reverse()->sep('.')/]
[/template]

[**
 * Query the package path
 * @param aType The type on which the package query should be executed
*/]
[query private packagePath(aType : Type) : Sequence(Package) = 
   Sequence{aType.getNearestPackage()}->union(aType.getNearestPackage().ancestors()->filter(Package))->select(pack : Package | pack.oclIsTypeOf(Package))
/]

[**
 * Generate the package name for a package
 * @param aPackage The package for which the name should be generated
*/]
[template public genPackageName(aPackage : Package)]
[aPackage.packagePath().normalizeName()->reverse()->sep('.')/]
[/template]

[**
 * Query the package path
 * @param aType The package on which the package query should be executed
*/]
[query private packagePath(aPackage : Package) : Sequence(Package) = 
   Sequence{aPackage.getNearestPackage()}->union(aPackage.getNearestPackage().ancestors()->filter(Package))->select(pack : Package | pack.oclIsTypeOf(Package))
/]

[**
 * Normalize the name of an element
 * @param anElement The element whose name should be normalized
*/]
[template private normalizeName(anElement : NamedElement) post(trim())]
[if ((anElement.name = 'package') or (anElement.name = 'interface') or (anElement.name = 'class'))]
   [anElement.name.concat('_')/]
[else]
   [anElement.name/]
[/if]
[/template]