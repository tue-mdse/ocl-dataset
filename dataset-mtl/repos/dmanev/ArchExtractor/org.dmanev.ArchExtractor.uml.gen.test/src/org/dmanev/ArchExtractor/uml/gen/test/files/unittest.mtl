[comment encoding = UTF-8 /]
[module unittest('http://www.eclipse.org/uml2/4.0.0/UML')]

[import org::dmanev::ArchExtractor::uml::gen::test::services::uml2services /]

[template public genUnitTest(anArtifact : Artifact)]

[comment modifications based on the model structure /]
[let artifactCodePath : String = anArtifact.getElementPath().replace('/model/model/ArchExtractor/', '') ]

[comment include package init python file /]
[file ('/' + artifactCodePath + '/__init__.py', false, 'UTF-8')]
[/file]

[comment generate unit test /]
[file ('/' + artifactCodePath + '/' + anArtifact.name + '_test.py', false, 'UTF-8')]
# auto-generated test file
import unittest
import ['umlgen.' + artifactCodePath.replaceAll('/', '.') + '.' + anArtifact.name/]
# [protected ('imports')]
# [/protected]

class [anArtifact.manifestation.supplier.name /]Test(unittest.TestCase):
    def setUp(self):
        # self._testInstance = ['umlgen.' + artifactCodePath.replaceAll('/', '.')
                                        + '.' + anArtifact.manifestation.supplier.name 
                                        + '.' + anArtifact.manifestation.supplier.name + '()' /]
        # [protected ('setUp')]
        # [/protected]
        pass

    def tearDown(self):
        # [protected ('tearDown')]
        # [/protected]
        pass

    [for(op: Operation | anArtifact.manifestation.supplier.ownedElement->filter(Operation)->sortedBy(name))]
    def test_[op.name/](self):
        # [protected (op.name)]
        # [/protected]
        pass

    [/for]

if __name__ == '__main__':
    unittest.main()
[/file]
[/let]
[/template]
