[comment encoding = UTF-8 /]
[module petriNetToTINA('http://petrinet')]


[template public petriNetToTINA(petriNet : ReseauPetri)]
[comment @main/]
[file (petriNet.name.concat('.net'), false, 'UTF-8')]
inet [petriNet.name/]
[for (el : Place | petriNet.elements->getPlaces())]
pl [el.name/] ([el.nbJeton/])
[/for]
[for (tr : Transition | petriNet.elements->getTransitions())]
tr [tr.name/] [for (a : Arc | petriNet.arcs->getArcsToTransition(tr))][a.debut.name/][if (a.type = ArcType::Normal)]*[else]?[/if][a.poids/] [/for]-> [for (a : Arc | petriNet.arcs->getArcsFromTransition(tr))][a.fin.name/][if (a.type = ArcType::Normal)]*[else]?[/if][a.poids/] [/for]
[/for]
[/file]
[/template]

[query public getPlaces(elements : OrderedSet(PetriElement)) : OrderedSet(Place) = 
	elements->select( e | e.oclIsTypeOf(Place) )
		->collect( e | e.oclAsType(Place) )
		->asOrderedSet()
/]

[query public getTransitions(elements : OrderedSet(PetriElement)) : OrderedSet(Transition) = 
	elements->select( e | e.oclIsTypeOf(Transition) )
		->collect( e | e.oclAsType(Transition) )
		->asOrderedSet()
/]

[query public getArcsToTransition(arcs : OrderedSet(Arc), tr : Transition) : OrderedSet(Arc) = 
	arcs->select( a : Arc | a.fin.oclIsTypeOf(Transition) )
		->select( a : Arc | a.fin.name = tr.name )
/]

[query public getArcsFromTransition(arcs : OrderedSet(Arc), tr : Transition) : OrderedSet(Arc) = 
	arcs->select( a : Arc | a.debut.oclIsTypeOf(Transition) )
		->select( a : Arc | a.debut.name = tr.name )
/]
