<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="core" nsURI="http://rules/core/1.0" nsPrefix="core">
  <eClassifiers xsi:type="ecore:EClass" name="Rule">
    <eStructuralFeatures xsi:type="ecore:EReference" name="evaluatedVal" lowerBound="1"
        eType="#//IntegerExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="filter" eType="#//Filter"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Add" eSuperTypes="#//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerExpression" abstract="true">
    <eOperations name="isBoolean" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryExpression" abstract="true" eSuperTypes="#//IntegerExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="#//IntegerExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="And" eSuperTypes="#//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Or" eSuperTypes="#//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Not" eSuperTypes="#//UnaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Greater" eSuperTypes="#//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Lower" eSuperTypes="#//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteral" eSuperTypes="#//IntegerExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="val" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Conditional" eSuperTypes="#//IntegerExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="ifTrueExpression" lowerBound="1"
        eType="#//IntegerExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ifFalseExpression" lowerBound="1"
        eType="#//IntegerExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
        eType="#//IntegerExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BinaryExpression" abstract="true" eSuperTypes="#//IntegerExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="left" lowerBound="1" eType="#//IntegerExpression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="right" lowerBound="1" eType="#//IntegerExpression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Mult" eSuperTypes="#//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Div" eSuperTypes="#//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Filter" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="Mod" eSuperTypes="#//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="UMinus" eSuperTypes="#//UnaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Minus" eSuperTypes="#//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="Equal" eSuperTypes="#//BinaryExpression"/>
</ecore:EPackage>
