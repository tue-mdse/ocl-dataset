[comment encoding = UTF-8 /]
[module CreateHypermediaHelpers('platform:/plugin/PIM2DotNetPlugin/metamodels/PSMMetamodel.ecore')]
[import org::eclipse::acceleo::psm2code::utilities::HandlerHelpers/]

[comment ---------------------------------------------------------------------------------------------/]

[template private LinkRelVerb(aHypermediaLink : PSMHypermediaLink)]
[if (aHypermediaLink.linkHTTPVerb.toString() = 'GET')]
Get[/if]
[if (aHypermediaLink.linkHTTPVerb.toString() = 'PUT')]
Update[/if]
[if (aHypermediaLink.linkHTTPVerb.toString() = 'POST')]
Create[/if]
[if (aHypermediaLink.linkHTTPVerb.toString() = 'DELETE')]
Delete[/if]
[/template]

[template private LinkRel(aHypermediaLink : PSMHypermediaLink , name : String , isParent : Boolean )]
[aHypermediaLink.LinkRelVerb()/][if (aHypermediaLink.hasTargetCSharpRMController.oclIsUndefined())]
 the [if (isParent)]parent [/if][name/][else][if (aHypermediaLink.linkHTTPVerb.toString() = 'GET')] all [name/]s[else] a new [name/][/if][/if]
[/template]

[template private LinkRelWithParent(aHypermediaLink : PSMHypermediaLink , name1 : String , name2 : String , isParent : Boolean)]
[aHypermediaLink.LinkRel(name1,isParent)/][if(aHypermediaLink.linkHTTPVerb.toString() = 'POST')] for this[else] of this[/if] [name2/]
[/template]

[comment ---------------------------------------------------------------------------------------------/]

[template public SiblingLinks(aHTTPActionHandler : HTTPActionHandler)]
[for (aHypermediaLink : PSMHypermediaLink | aHTTPActionHandler.hasHypermediaFunction.hasPSMHypermediaLink -> select(l | l.linkType.toString() = 'Sibling'))]
[if (aHTTPActionHandler.currentIsManager() and aHTTPActionHandler.hasParent())]
this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(this.applicationUri.AbsoluteUri ,"[aHypermediaLink.LinkRelWithParent(aHTTPActionHandler.getCurrentResource().name, aHTTPActionHandler.getParentResource().name, false)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]"));
[else]
this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(this.applicationUri.AbsoluteUri ,"[aHypermediaLink.LinkRel(aHTTPActionHandler.getCurrentResource().name,false)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]"));
[/if]
[/for]
[/template]

[comment ---------------------------------------------------------------------------------------------/]

[template public ParentLinks(aHTTPActionHandler : HTTPActionHandler)]
[if ( aHTTPActionHandler.hasHypermediaFunction.hasPSMHypermediaLink -> exists(l | l.linkType.toString() = 'Parent'))]
[if ( not aHTTPActionHandler.currentIsManager())]
String parentUri = this.applicationUri.AbsoluteUri.Substring(0, this.applicationUri.AbsoluteUri.LastIndexOf('/')) ;
[if (aHTTPActionHandler.getParentResources() -> size() > 1)]
parentUri = parentUri.Replace( "[aHTTPActionHandler.getCurrentController().oclAsType(CSharpResourceController).controllerURI/]" , "[aHTTPActionHandler.getParentRMController().controllerURI/]" ) ;
[/if]
[else]

String parentRight = this.applicationUri.AbsolutePath.Substring(0,this.applicationUri.AbsolutePath.LastIndexOf("/[aHTTPActionHandler.getParentResource().name.toLowerFirst()/]")) ;
[if (aHTTPActionHandler.getParentResources() -> size() > 1)]
parentRight = parentRight.Substring(1) ;
parentRight = parentRight.Substring(parentRight.LastIndexOf('/')) ;
[/if]

[if (aHTTPActionHandler.getParentResourceParents() -> size() > 1)]
String parentUri = "" ;

[for (r : CSharpResourceModel | aHTTPActionHandler.getParentResourceParents() )]
if (this.parent[aHTTPActionHandler.getParentResource().name/].[r.name.toLowerFirst()/] != null)
{
	parentUri = this.applicationUri.GetLeftPart(UriPartial.Authority) + "[aHTTPActionHandler.getParentRController().controllerURI/]/[r.parentName/]/" + this.parent[aHTTPActionHandler.getParentResource().name/].[r.parentName/].[r.getPk().name/] + parentRight ;
}

[/for]
[elseif (aHTTPActionHandler.getParentResourceParents() -> size() = 1)]
String parentUri = this.applicationUri.GetLeftPart(UriPartial.Authority) + "/[aHTTPActionHandler.getParentResourceParents().parentName/]/" + this.parent[aHTTPActionHandler.getParentResource().name/].[aHTTPActionHandler.getParentResource().getFks().name/] + parentRight ;
[else]
String parentUri = this.applicationUri.GetLeftPart(UriPartial.Authority) + parentRight ;
[/if]
[/if]

[for (aHypermediaLink : PSMHypermediaLink | aHTTPActionHandler.hasHypermediaFunction.hasPSMHypermediaLink -> select(l | l.linkType.toString() = 'Parent'))]
[if (aHTTPActionHandler.currentIsManager())]
this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(parentUri ,"[aHypermediaLink.LinkRel(aHTTPActionHandler.getParentResource().name.toLowerFirst() , true)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]"));
[else]
this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(parentUri ,"[aHypermediaLink.LinkRel( aHTTPActionHandler.getCurrentResource().name.toLowerFirst() , false)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]"));
[/if]
[/for][/if]
[/template]

[comment ---------------------------------------------------------------------------------------------/]

[template public ChildLinks(aHTTPActionHandler : HTTPActionHandler)]
[if ( aHTTPActionHandler.hasHypermediaFunction.hasPSMHypermediaLink -> exists(l | l.linkType.toString() = 'Child'))]
[if (aHTTPActionHandler.getRChildren() -> size() > 0 and aHTTPActionHandler.HandlerHTTPVerb.toString() = 'GET')]
String childUri ;
foreach ([aHTTPActionHandler.getCurrentResource().name/] [aHTTPActionHandler.getCurrentResource().name.toLowerFirst()/] in [aHTTPActionHandler.getCurrentResource().name.toLowerFirst()/]List)
{
	childUri = applicationUri.AbsoluteUri + '/' +[aHTTPActionHandler.getCurrentResource().name.toLowerFirst()/].[aHTTPActionHandler.getCurrentResourcePK().name/] ;
[if (aHTTPActionHandler.getCurrentResourceFks() -> size() > 1)]
	childUri = childUri.Replace( "[aHTTPActionHandler.getCurrentController().oclAsType(CSharpResourceManagerController).controllerURI/]" , "[aHTTPActionHandler.getChildController().controllerURI/]" ) ;
[/if]

[for (aHypermediaLink : PSMHypermediaLink | aHTTPActionHandler.getRChildren())]
[if (aHTTPActionHandler.hasParent() )]
	this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(childUri ,"[aHypermediaLink.LinkRelWithParent(aHTTPActionHandler.getCurrentResource().name, aHTTPActionHandler.getParentResource().name , false)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]" , [aHTTPActionHandler.getCurrentResource().name.toLowerFirst()/].[aHTTPActionHandler.getCurrentResourcePK().name/]));	
[else]
	this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(childUri ,"[aHypermediaLink.LinkRel(aHTTPActionHandler.getCurrentResource().name , false)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]" , [aHTTPActionHandler.getCurrentResource().name.toLowerFirst()/].[aHTTPActionHandler.getCurrentResourcePK().name/]));
[/if]
[/for]
}[/if]
[if (aHTTPActionHandler.getRChildren() -> size() > 0 and aHTTPActionHandler.HandlerHTTPVerb.toString() = 'POST')]
String childUri = applicationUri.AbsoluteUri + '/' + [aHTTPActionHandler.getCurrentResource().name.toLowerFirst()/].[aHTTPActionHandler.getCurrentResourcePK().name/] ;
[for (aHypermediaLink : PSMHypermediaLink | aHTTPActionHandler.getRChildren())]
[if (aHTTPActionHandler.hasParent())]
this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(childUri ,"[aHypermediaLink.LinkRelWithParent(aHTTPActionHandler.getCurrentResource().name, aHTTPActionHandler.getParentResource().name , false)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]" , [aHTTPActionHandler.getCurrentResource().name.toLowerFirst()/].[aHTTPActionHandler.getCurrentResourcePK().name/]));	
[else]
this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(childUri ,"[aHypermediaLink.LinkRel(aHTTPActionHandler.getCurrentResource().name , false)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]" , [aHTTPActionHandler.getCurrentResource().name.toLowerFirst()/].[aHTTPActionHandler.getCurrentResourcePK().name/]));
[/if]
[/for]
[/if]
[if (aHTTPActionHandler.getRMChildren() -> size() > 0)]
String baseChildUri = this.applicationUri.AbsolutePath.Substring(this.applicationUri.AbsolutePath.LastIndexOf("/[aHTTPActionHandler.getCurrentResource().name.toLowerFirst()/]"));

[for (aHypermediaLink : PSMHypermediaLink | aHTTPActionHandler.getRMChildren())]
[if (aHTTPActionHandler.hasParent() )]
this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(this.applicationUri.GetLeftPart(UriPartial.Authority)[if (aHypermediaLink.RMChildIsMulti())] + "[aHypermediaLink.hasTargetCSharpRMController.controllerURI/]"[/if] + baseChildUri + "/[aHypermediaLink.getChildRMManager().hasRelatedCSharpRModel.name/]" ,"[aHypermediaLink.LinkRel(aHypermediaLink.getChildRMManager().hasRelatedCSharpRModel.name,false)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]"));
[else]
this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(this.applicationUri.GetLeftPart(UriPartial.Authority)[if (aHypermediaLink.RMChildIsMulti())] + "[aHypermediaLink.hasTargetCSharpRMController.controllerURI/]"[/if] + baseChildUri + "/[aHypermediaLink.getChildRMManager().hasRelatedCSharpRModel.name/]" ,"[aHypermediaLink.LinkRelWithParent(aHypermediaLink.getChildRMManager().hasRelatedCSharpRModel.name, aHTTPActionHandler.getCurrentResource().name,false)/]" , "[aHypermediaLink.linkHTTPVerb/]" , "[aHypermediaLink.linkType/]"));
[/if]
[/for]
[/if]
[/if]
[/template]

[comment ---------------------------------------------------------------------------------------------/]

[template public AlgoLinks(aHTTPActionHandler : HTTPActionHandler)]
[if ( aHTTPActionHandler.hasHypermediaFunction.hasPSMHypermediaLink -> exists(l | not l.hasTargetCSharpAlgoRController.oclIsUndefined()))]
[for (link : PSMHypermediaLink | aHTTPActionHandler.hasHypermediaFunction.hasPSMHypermediaLink -> select(l | not l.hasTargetCSharpAlgoRController.oclIsUndefined()))]
this.[aHTTPActionHandler.getReturnType().toLowerFirst()/].linklist.Add(new HypermediaLink(this.applicationUri.AbsoluteUri + "[link.hasTargetCSharpAlgoRController.controllerURI/]" , " Not Implemented" , "[link.linkHTTPVerb.toString()/]" , "[link.linkType.toString()/]"));
[/for]
[/if]
[/template]

[query public getRChildren(aHTTPActionHandler : HTTPActionHandler) : Set(PSMHypermediaLink) =
	aHTTPActionHandler.hasHypermediaFunction.hasPSMHypermediaLink -> select(l | l.linkType.toString() = 'Child') -> select(l | not l.hasTargetCSharpRController.oclIsUndefined())
/]

[query public getRMChildren(aHTTPActionHandler : HTTPActionHandler) : Set(PSMHypermediaLink) =
	aHTTPActionHandler.hasHypermediaFunction.hasPSMHypermediaLink -> select(l | l.linkType.toString() = 'Child') -> select(l | not l.hasTargetCSharpRMController.oclIsUndefined())
/]

[query public getChildRMManager(aHypermediaLink : PSMHypermediaLink) : CSharpResourceModelManager = 
	aHypermediaLink.hasTargetCSharpRMController.hasAssociatedCSharpRMManager
/]

[query public RMChildIsMulti(aHypermediaLink : PSMHypermediaLink) : Boolean = 
	aHypermediaLink.hasTargetCSharpRMController.hasAssociatedCSharpRMManager.hasRelatedCSharpRModel.getFks() -> size() > 1
/]