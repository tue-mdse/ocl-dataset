[comment encoding = UTF-8 /]
[module AlgoHttpActionHandlerCSharpFile('platform:/plugin/PIM2DotNetPlugin/metamodels/PSMMetamodel.ecore')]
[import org::eclipse::acceleo::psm2code::utilities::DoxyFileHelpers/]
[import org::eclipse::acceleo::psm2code::utilities::DoxyClassHelpers/]
[import org::eclipse::acceleo::psm2code::utilities::DoxyPropertiesHelpers/]

[template public generateAlgoHttpActionHandler(aHTTPActionHandler : HTTPActionHandler , aRESTfulServicePSM : RESTfulServicePSM)]

[file (aHTTPActionHandler.genHandlerFilePath(aRESTfulServicePSM), false, 'UTF-8')]
[aHTTPActionHandler.genFileDocumentation(aHTTPActionHandler.Hbrief() , aHTTPActionHandler.Hdetails())/]
namespace [aRESTfulServicePSM.name/].Handlers
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Net;
	using System.Web;
	
	using [aRESTfulServicePSM.name/].Models;
	using [aRESTfulServicePSM.name/].Data;

	[aHTTPActionHandler.genClassDocumentation(aHTTPActionHandler.HACbrief(aRESTfulServicePSM), '')/]
    public class [aHTTPActionHandler.name/]
    {
		private I[aRESTfulServicePSM.hasEntityDatabaseController.name.toUpperFirst()/] [aRESTfulServicePSM.hasEntityDatabaseController.name.toLowerFirst()/] ;
		private [aHTTPActionHandler.getAssociatedAlgoResource().name/] [aHTTPActionHandler.getAssociatedAlgoResource().name.toLowerFirst()/];
        private Uri applicationUri;
		private HttpStatusCode _code;
        public HttpStatusCode Code		/// This code indicates the status of the action performed upon completion.
		{ 
			get
			{
				return this._code;
			}
		}

		public [aHTTPActionHandler.name/](Uri applicationUri)
        {
			this.[aHTTPActionHandler.getAssociatedAlgoResource().name.toLowerFirst()/] = new [aHTTPActionHandler.getAssociatedAlgoResource().name/]() ;
		}
		
		public [aHTTPActionHandler.getAssociatedAlgoResource().name/] [aHTTPActionHandler.HandlerHTTPVerb.toString().toLower()/][aHTTPActionHandler.getAssociatedAlgoResource().name/]()
        {
			return createHypermedia() ;
		}

        private [aHTTPActionHandler.getAssociatedAlgoResource().name/] createHypermedia()
        {
			
		
			return this.[aHTTPActionHandler.getAssociatedAlgoResource().name.toLowerFirst()/];
        }


	}
}
[/file]
[/template]

[query private getAssociatedAlgoResource(aHTTPActionHandler : HTTPActionHandler) : CSharpAlgoResourceModel = 
	aHTTPActionHandler.eContainer(HTTPAction).eContainer(CSharpAlgoResourceController).hasAssociatedCSharpAlgoModel
/]

[template public genHandlerFilePath(aHTTPActionHandler : HTTPActionHandler , aRESTfulServicePSM : RESTfulServicePSM)]
[aRESTfulServicePSM.name/]/[aRESTfulServicePSM.name/]/Handlers/[aHTTPActionHandler.getAssociatedAlgoResource().name/]/[aHTTPActionHandler.name/].cs
[/template]