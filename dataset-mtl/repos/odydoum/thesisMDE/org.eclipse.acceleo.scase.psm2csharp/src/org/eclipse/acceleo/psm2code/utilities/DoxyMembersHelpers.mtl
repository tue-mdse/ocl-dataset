[comment encoding = UTF-8 /]
[module DoxyMembersHelpers('platform:/plugin/PIM2DotNetPlugin/metamodels/PSMMetamodel.ecore')]
[import org::eclipse::acceleo::psm2code::utilities::HandlerHelpers/]

[template public genRCMemberDocumentation(action : HTTPAction)]
/** 
	@brief		[action.actionBrief()/]
	[for (param : FunctionParameter | action.HTTPActionHasParameter -> select(p | not p.bIsReturnParameter))]
	@param		[param.name/]	[param.paramDescription(action)/]	
	[/for]
	@return		[action.return(action.HTTPActionHasParameter -> select(p | p.bIsReturnParameter)->first())/]
	@details	This method is called by the API when the specified request takes place. Inside the method, the appropriate handler
				gets instantiated, and the handler's main method gets called. Finaly, the controller checks the Http status code 
				returned by the handler, and sends the appropriate response.
*/
[/template]

[template public actionBrief(action : HTTPAction)]
A web API controller action serving a "[action.ActionHTTPVerb.toString()/]" request for the specified resource.
[/template]

[template public paramDescription(param : FunctionParameter , action : HTTPAction)]
[if (action.eContainer(CSharpResourceController).hasAssociatedCSharpRModel.CSharpRModelHasProperty -> select (p | p.bIsPrimaryIdentifier) -> first().name = param.name)]
The primary identifier of the specified resource.[elseif (param.type = action.eContainer(CSharpResourceController).hasAssociatedCSharpRModel.name)]
The updated resource.[else]
The primary identifier of the parent resource.[/if]
[/template]

[template public return( action : HTTPAction , returnParameter : FunctionParameter)]
[if (action.ActionHTTPVerb.toString() = 'GET')]
The (serialized) requested resource, or a response containing the next possible actions with the appropriate error code.[elseif (action.ActionHTTPVerb.toString() = 'PUT')]
The (serialized) updated resource, or a response containing the next possible actions with the appropriate error code.[else]
The (serialized) deleted resource , or a response containing the next possible actions with the appropriate error code.[/if]
[/template]

[comment-------------------------------------------------------------------/]

[template public genRMCMemberDocumentation(action : HTTPAction)]
/** 
	@brief		[action.actionBrief()/]
	[if (action.HTTPActionHasParameter -> size() > 0)]
	[for (param : FunctionParameter | action.HTTPActionHasParameter -> select(p | not p.bIsReturnParameter))]
	@param		[param.name/]	[param.RMparamDescription(action)/]	
	[/for][/if]
	@return		[action.RMreturn(action.HTTPActionHasParameter -> select(p | p.bIsReturnParameter)->first())/]
	@details	This method is called by the API when the specified request takes place. Inside the method, the appropriate handler
				gets instantiated, and the handler's main method gets called. Finaly, the controller checks the Http status code 
				returned by the handler, and sends the appropriate response.
*/
[/template]

[template public RMparamDescription(param : FunctionParameter , action : HTTPAction)]
[if (param.type = action.eContainer(CSharpResourceManagerController).hasAssociatedCSharpRMManager.hasRelatedCSharpRModel.name)]
The resource to be created.[else]
The primary identifier of the parent resource.[/if]
[/template]

[template public RMreturn( action : HTTPAction , returnParameter : FunctionParameter)]
[if (action.ActionHTTPVerb.toString() = 'GET')]
The (serialized) requested resource manager, or a response containing the next possible actions with the appropriate error code.[else]
The (serialized) newly created resource , or a response containing the next possible actions with the appropriate error code.[/if]
[/template]

[comment-------------------------------------------------------------------/]

[template public genHCMemberDocumentation(handler : HTTPActionHandler)]
/** 
	@brief		[handler.handlerBrief()/]
	@param		applicationURI	The URI of the controller that called this handler.
	[if (handler.eContainer(HTTPAction).HTTPActionHasParameter -> size() > 0)]
	[for (param : FunctionParameter | handler.eContainer(HTTPAction).HTTPActionHasParameter -> select(p | not p.bIsReturnParameter))]
	@param		[param.name/]	[param.RMparamDescription(handler)/]	
	[/for][/if]
*/
[/template]

[template public handlerBrief(handler : HTTPActionHandler)]
The constructor of the [handler.name/]. May also check of a deserialized object's state, setting the appropriate status code if failed.
[/template]

[template public RMparamDescription(param : FunctionParameter , handler : HTTPActionHandler)]
[let controller : OclAny = handler.eContainer(HTTPAction).eContainer()]
[if (controller.oclIsTypeOf(CSharpResourceController))]
[if (controller.oclAsType(CSharpResourceController).hasAssociatedCSharpRModel.CSharpRModelHasProperty -> select (p | p.bIsPrimaryIdentifier) -> first().name = param.name)]
The primary identifier of the specified resource.[elseif (param.type = controller.oclAsType(CSharpResourceController).hasAssociatedCSharpRModel.name)]
The updated resource.[else]
The primary identifier of the parent resource.[/if]
[else]
[if (param.type = handler.eContainer(CSharpResourceManagerController).hasAssociatedCSharpRMManager.hasRelatedCSharpRModel.name)]
The resource to be created.[else]
The primary identifier of the parent resource.[/if]
[/if]
[/let]
[/template]

[template public genHMMemberDocumentation(handler : HTTPActionHandler)]
/** 
	@brief		The method that actually handles the request.	
	@details	This is the method that is available to the controller. Inside, the database controller is instantiated, 
				it performs the appropriate actions, creates the appropriate hypermedia links, and also checks for 
				errors.
	@return		The requested resource.
*/
[/template]

