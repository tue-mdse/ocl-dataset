[comment encoding = UTF-8 /]
[module DbGenericRepositoryCSharpFile('platform:/plugin/PIM2DotNetPlugin/metamodels/PSMMetamodel.ecore')]
[import org::eclipse::acceleo::psm2code::utilities::DataHelpers/]
[import org::eclipse::acceleo::psm2code::utilities::DoxyFileHelpers/]

[template public generateGenericRepositoryInterface(aRESTfulServicePSM : RESTfulServicePSM)]

[file (aRESTfulServicePSM.generateDbGenericeRepositoryPath(), false, 'UTF-8')]
[aRESTfulServicePSM.genFileDocumentation(aRESTfulServicePSM.Repbrief() , '')/]
namespace [aRESTfulServicePSM.name/].Data
{
	using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
	using System.Collections.Generic;

	/** 
	@brief		A generic repository interface.

	@details	This interface holds the definitions of all the CRUD methods available for a specific table(resource).
	*/
	public interface I[aRESTfulServicePSM.name/]GenericRepository<T> where T : class
    {
        ICollection<T> getAll();		///< Returns a collections of all the resources of this type.
        T post(T entity);		 		///< Creates a new resource. @param entity The resource to be created.
        T get(int id);					///< Gets a resource based on a primary key parameter. @param id the PK parameter.
		T getWithCollections(int id);	///< Gets a resource based on a primary key parameter and additionally loads all related collections. @param id the PK parameter.
		T put(T entity); 				///< Updates a resource based on a primary key parameter. @param id the PK parameter.
        T delete(int id);				///< Deletes a resource based on a primary key parameter. @param id the PK parameter.
		bool exists(int id);			///< Checks if a resource with the specified primary identifier exists. @param entity The resource to be updated.
    }

	
} 
[/file]
[/template]
