[comment encoding = UTF-8 /]
[module dao('http://www.eclipse.org/uml2/2.0.0/UML')/]
[import uml2services /]
[import php /]

[template public generate(class : Class) ? (daoMustBeGenerated(class)) post (trim())]
[comment @main /]
[file (getDaoFilename(class), false, 'UTF-8')]
<?php
namespace [getDaoNamespace(class)/]
 
 [getProperty('dao.stereotype')/]

/**
 * [class.ownedComment.body/]
 */
class [getDaoClassName(class)/] extends \tv\vial\acceleo\php\framework\AbstractDao

	/**
	  * DAO instance
	  */
	private static $_singleton = NULL;
		
	/**
	 * Private constructor due to singleton pattern
	 */
  	protected function __construct(){
		parent::__construct('\[getEntityClassNameWithNamespace(class)/]');
    }
	
   	/**
	 * Get the unique instance of this DAO
	 */
	public static function getInstance(){
		if (self::$_singleton == NULL){
			self::$_singleton = new [getDaoClassName(class)/]();
		}
		return self::$_singleton;
	}
	  
	/**
	 * Save an entity into database
	 * @param [getEntityClassName(class)/] $entity
	 */
	public function save(\[getEntityClassNameWithNamespace(class)/] $entity){
		parent::save($entity);
	}
	
	/**
	 * Delete the entity from database
	 * @param [getEntityClassName(class)/] $entity
	 */
	public function delete(\[getEntityClassNameWithNamespace(class)/] $entity){
		parent::supprimer($entity);
	}
?>
[/file]	
[/template]

[template public getDaoFilename(class : uml::Class) post (trim())]
[class._package.qualifiedName.replaceAll('\\.', '::').replaceAll('::', '/')/]/Dao/[getDaoClassName(class)/].php
[/template]

[template public getDaoClassName(class : uml::Class) post (trim())]
[class.name.toUpperFirst()/]Dao
[/template]

[template public getDaoNamespace(class : uml::Class) post (trim())]
[class._package.qualifiedName.replaceAll('\\.','::').replaceAll('::', '\\\\@').replaceAll('@','')/]\Dao
[/template]