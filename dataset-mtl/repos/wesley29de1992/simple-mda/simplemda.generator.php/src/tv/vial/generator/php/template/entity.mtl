[module entity('http://www.eclipse.org/uml2/2.0.0/UML')/]

[import uml2services /]

[template public entity(class : uml::Class) post (trim())]
[comment @main /]
[file (name+'.xml', false, 'UTF-8')]
<doctrine-mapping xmlns="http://doctrine-project.org/schemas/orm/doctrine-mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://doctrine-project.org/schemas/orm/doctrine-mapping
		http://doctrine-project.org/schemas/orm/doctrine-mapping.xsd">
	<entity name="[class.name/]" table="[class.name.toUpper()/]">
    	<id name="id" type="integer" column="[getPrimaryKeyColumnName()/]">
			<generator strategy="AUTO" />
   		</id>
[for (it : Property | class.attribute)]
      	<field name="[it.name/]" column="[it.getColumnName()/]" type="string" />
[/for]
[for (a : Association | class.getAssociations())]
	[let navigable: Property  = a.getFirstNavigableMemberEnd()]
	[let notNavigable: Property  = a.getFirstNotNavigableMemberEnd()]
	[if not isBidirectional(a)]
		[if navigable.isMultivalued() and (not navigable.type.qualifiedName.equalsIgnoreCase(class.qualifiedName))]
			[if notNavigable.isMultivalued()]
		[manyToMany(a)/]
			[else]
		[oneToMany(a)/]
			[/if]
		[else]
			[if notNavigable.isMultivalued()]
		[manyToOne(a)/]
			[else]
		[oneToOne(a)/]
			[/if]
		[/if]
	[else]
		
	[/if]
	[/let]
	[/let]
[/for]
	</entity>	
</doctrine-mapping>
[/file]
[/template]

[comment
	One to one association
 /]
[template public oneToOne(association : uml::Association) post (trim())]
<one-to-one field="[association.getTarget().getColumnName()/]" target-entity="[association.getTarget().type.name/]"/>
[/template] 

[comment
	One to one association
 /]
[template public manyToOne(association : uml::Association) post (trim())]
<many-to-one field="[association.getTarget().getColumnName()/]" target-entity="[association.getTarget().type.name/]"/>
[/template] 

[comment
	One to one association
 /]
[template public manyToMany(association : uml::Association) post (trim())]
<many-to-many field="[association.getTarget().getColumnName()/]" target-entity="[association.getTarget().type.name/]"/>
[/template] 


[comment
	One to one association
 /]
[template public oneToMany(association : uml::Association) post (trim())]
<one-to-many field="[association.getTarget().getColumnName()/]" target-entity="[association.getTarget().type.name/]" mapped-by="[association.getSource().type.name/]"/>
[/template] 


[comment
	One to one association
 /]
[template public getTableName(type : uml::Type) post (trim())]
[type.name.toUpper()/]
[/template] 


[template public getColumnName(property : uml::Property) post (trim())]
[if property.name.equalsIgnoreCase('')]
	[type.name/]
[else]
	[property.name/]
[/if]
[/template] 


[template public getPrimaryKeyColumnName(class : uml::Class) post (trim())]
['id_'+class.name.toLower()/]
[/template] 