[comment encoding = UTF-8 /]
[module sqlUtils('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import com::mgs::common::gen::common::files::commonUtils /]
[import com::mgs::uml::common::profileUtils /]

[query public primitiveAttributes(c : Class) : Sequence(Property) =
	c.attribute->select(p : Property | p.type.oclIsKindOf(PrimitiveType))->asOrderedSet()->asSequence()->sortedBy(name)
/]

[template public sqlId(e : Type) post (trim())]
	[e.sqlName()/]_id
[/template]

[template public sqlForeignId(e : Type) post (trim())]
	_[e.sqlName()/]_id
[/template]

[template public sqlName(e : Association) post (trim())]
	[endType.sqlName()->sep('_')/]
[/template]

[template public sqlName(e : Element) post (trim())]
	// @todo sqlName for Element
[/template]

[template public sqlPrefix(e : Element) post (trim())]
[if (owner.sqlName().size() > 0)]
	[owner.sqlName()/]_
[/if]
[/template]

[template public sqlName(e : Class) post (trim())]
	[e.name.camelCaseToUnderscore().toLower()/]
[/template]

[template public sqlName(e : Property) post (trim())]
	[e.sqlPrefix()/][e.name.toLower()/]
[/template]

[query private sqlOwningProperty(c : Class, from : Property, to : Property) : Sequence(Property) =
	 to->any(from.type = c and from.upper <> 1 and to.upper = 1)->asSequence()->union(
	 from->any(to.type = c and from.upper = 1)->asSequence()
	 )->asOrderedSet()->asSequence()->sortedBy(name)
/]

[comment return the properties as foreign keys /]
[query public sqlOwningRelations(c : Class) : Sequence(Property) = 
	c.getAssociations()
	->select(memberEnd->forAll(type.profile_isEntity()))
	->collect(a : Association | c.sqlOwningProperty(a.memberEnd->first(), a.memberEnd->last()))
	->asOrderedSet()->asSequence()->sortedBy(name)
 /]

