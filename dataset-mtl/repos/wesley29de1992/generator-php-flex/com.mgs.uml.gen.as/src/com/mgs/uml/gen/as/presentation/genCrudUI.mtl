[comment encoding = UTF-8 /]
[module genCrudUI('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import com::mgs::uml::common::profileUtils /]
[import com::mgs::uml::gen::as::common::mxmlUtils /]
[import com::mgs::uml::gen::as::common::asUtils /]
[import com::mgs::uml::common::services /]
[import com::mgs::uml::gen::as::business::genValueObject /]
[import com::mgs::uml::gen::as::business::genServices /]
[import com::mgs::uml::common::umlUtils /]
[import com::mgs::uml::gen::as::business::genBusiness /]
[import com::mgs::uml::gen::as::entity::genEntityInterface /]

[template public createUIName(c : Class) post (trim())]
	Create[c.name.toUpperFirst()/]UI
[/template]
[template public retrieveAllUIName(c : Class) post (trim())]
	RetrieveAll[c.name.toUpperFirst()/]UI
[/template]
[template public retrieveOneUIName(c : Class) post (trim())]
	RetrieveOne[c.name.toUpperFirst()/]UI
[/template]
[template public retrieveByPropertyUIName(p : Property) post (trim())]
	RetrieveOne[p.class.name.toUpperFirst()/]By[p.name.toUpperFirst()/]UI
[/template]
[template public updateUIName(c : Class) post (trim())]
	Update[c.name.toUpperFirst()/]UI
[/template]
[template public deleteUIName(c : Class) post (trim())]
	Delete[c.name.toUpperFirst()/]UI
[/template]

[template public genCrudUI(c : Class) ? (profile_isEntity())]
	
[comment @main /]

[c.genCreateUI()/]
[c.genRetrieveAllUI()/]
[c.genRetrieveOneUI()/]
[c.genUpdateUI()/]
[c.genDeleteUI()/]
[c.genRetrieveByPropertiesUI()/]

[/template]

[template public genRetrieveAllUI(c : Class)]
[file ('ui/service/' + retrieveAllUIName() + '.mxml', false, 'UTF-8')]
<?xml version="1.0" encoding="utf-8"?>
<mx:HBox implements="ui.Navigation" xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Metadata>
        ['['/]Event(name="objectSelection", type="ui.SelectionUIEvent")[']'/]
        ['['/]Event(name="serviceSend", type="ui.ServiceSendUIEvent")[']'/]
        ['['/]Event(name="serviceRecv", type="ui.ServiceRecvUIEvent")[']'/]
    </mx:Metadata>
	[mxmlScriptBegin()/]
			import entity.EntityCache;
			
			import [c.genPackageVO()/].[c.genNameVO()/];
			import [c.genEntityPackage()/].[c.interfaceName()/];
			import services.[c.genPackage()/].[c.genServiceName()/];
		
			import services.ServiceEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			import services.[c.genPackage()/].[c.serviceEventName()/];

			import ui.SelectionUIEvent;
			import ui.ServiceRecvUIEvent;
			import ui.ServiceSendUIEvent;
			
			public function handleNavigation(object:Object):void{
			}
			private function ui_callClickHandler(event:MouseEvent):void{
				var service:[c.genServiceName()/] = new [c.genServiceName()/]();
				service.addEventListener(FaultEvent.FAULT, fault);
				service.addEventListener(ServiceEvent.SERVICE_RESULT, result);
				dispatchEvent(new ServiceSendUIEvent(ServiceSendUIEvent.SEND));
				service.retrieveAll();
			}
			private function result(event:ServiceEvent):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV));
				var _vos:Array = event.result as Array;
				var _os:Array = new Array();
				for each(var _vo:Object in _vos){
					_os.push(EntityCache.getInstance().update[c.genName()/](_vo as [c.genNameVO()/]));
				}
				dispatchEvent(new SelectionUIEvent(SelectionUIEvent.SELECT, _os));
			}
			private function fault(event:FaultEvent):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV, true, event.fault.message));
			}
	[mxmlScriptEnd()/]
	<mx:Button id="ui_call" label="Retrieve All" click="ui_callClickHandler(event)" />
</mx:HBox>
[/file]
[/template]

[template public genRetrieveOneUI(c : Class)]
[file ('ui/service/' + retrieveOneUIName() + '.mxml', false, 'UTF-8')]
<?xml version="1.0" encoding="utf-8"?>
<mx:HBox implements="ui.Navigation" xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Metadata>
        ['['/]Event(name="objectSelection", type="ui.SelectionUIEvent")[']'/]
        ['['/]Event(name="serviceSend", type="ui.ServiceSendUIEvent")[']'/]
        ['['/]Event(name="serviceRecv", type="ui.ServiceRecvUIEvent")[']'/]
    </mx:Metadata>
	[mxmlScriptBegin()/]
			import entity.EntityCache;
			
			import [c.genPackageVO()/].[c.genNameVO()/];
			import [c.genEntityPackage()/].[c.interfaceName()/];
			import services.[c.genPackage()/].[c.genServiceName()/];
		
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			import services.[c.genPackage()/].[c.serviceEventName()/];
			
			import ui.SelectionUIEvent;
			import ui.ServiceRecvUIEvent;
			import ui.ServiceSendUIEvent;
			
			public function handleNavigation(object:Object):void{
			}
			private function ui_callClickHandler(event:MouseEvent):void{
				var service:[c.genServiceName()/] = new [c.genServiceName()/]();
				service.addEventListener(FaultEvent.FAULT, fault);
				service.addEventListener([c.serviceEventName()/].UPDATE, result);
				dispatchEvent(new ServiceSendUIEvent(ServiceSendUIEvent.SEND));
				service.retrieveById(ui_id.text);
			}
			private function fault(event:FaultEvent):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV, true, event.fault.message));
			}
			private function result(event:[c.serviceEventName()/]):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV));
				dispatchEvent(new SelectionUIEvent(SelectionUIEvent.SELECT, event.instance));
			}
	[mxmlScriptEnd()/]
	<mx:TextInput id="ui_id" />
	<mx:Button id="ui_call" label="Retrieve One" click="ui_callClickHandler(event)" />
</mx:HBox>
[/file]
[/template]

[template public genRetrieveByPropertiesUI(c : Class)]
[for (p : Property | c.profile_propertiesEntity()) ? (isSimplePrimitive() and isUnique)]
[file ('ui/service/' + p.retrieveByPropertyUIName() + '.mxml', false, 'UTF-8')]
<?xml version="1.0" encoding="utf-8"?>
<mx:HBox implements="ui.Navigation" xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Metadata>
        ['['/]Event(name="objectSelection", type="ui.SelectionUIEvent")[']'/]
        ['['/]Event(name="serviceSend", type="ui.ServiceSendUIEvent")[']'/]
        ['['/]Event(name="serviceRecv", type="ui.ServiceRecvUIEvent")[']'/]
    </mx:Metadata>
	[mxmlScriptBegin()/]
			import entity.EntityCache;
			
			import [c.genPackageVO()/].[c.genNameVO()/];
			import [c.genEntityPackage()/].[c.interfaceName()/];
			import services.[c.genPackage()/].[c.genServiceName()/];
		
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			import services.[c.genPackage()/].[c.serviceEventName()/];
			
			import ui.SelectionUIEvent;
			import ui.ServiceRecvUIEvent;
			import ui.ServiceSendUIEvent;
			
			public function handleNavigation(object:Object):void{
			}
			private function ui_callClickHandler(event:MouseEvent):void{
				var service:[c.genServiceName()/] = new [c.genServiceName()/]();
				service.addEventListener(FaultEvent.FAULT, fault);
				service.addEventListener([c.serviceEventName()/].UPDATE, result);
				dispatchEvent(new ServiceSendUIEvent(ServiceSendUIEvent.SEND));
				service.retrieveBy[p.name.toUpperFirst()/](ui_value.text);
			}
			private function fault(event:FaultEvent):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV, true, event.fault.message));
			}
			private function result(event:[c.serviceEventName()/]):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV));
				dispatchEvent(new SelectionUIEvent(SelectionUIEvent.SELECT, event.instance));
			}
	[mxmlScriptEnd()/]
	<mx:TextInput id="ui_value" />
	<mx:Button id="ui_call" label="Retrieve By [p.name.toUpperFirst()/]" click="ui_callClickHandler(event)" />
</mx:HBox>
[/file]
[/for]
[/template]

[template public genUpdateUI(c : Class)]
[file ('ui/service/' + updateUIName() + '.mxml', false, 'UTF-8')]
<?xml version="1.0" encoding="utf-8"?>
<mx:HBox implements="ui.Navigation" xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Metadata>
        ['['/]Event(name="objectSelection", type="ui.SelectionUIEvent")[']'/]
        ['['/]Event(name="serviceSend", type="ui.ServiceSendUIEvent")[']'/]
        ['['/]Event(name="serviceRecv", type="ui.ServiceRecvUIEvent")[']'/]
    </mx:Metadata>
	[mxmlScriptBegin()/]
			import entity.EntityCache;
			
			import [c.genPackageVO()/].[c.genNameVO()/];
			import [c.genEntityPackage()/].[c.interfaceName()/];
			import services.[c.genPackage()/].[c.genServiceName()/];
			import services.[c.genPackage()/].[c.serviceEventName()/];
			
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			import services.ServiceEvent;
			
			import ui.SelectionUIEvent;
			import ui.ServiceRecvUIEvent;
			import ui.ServiceSendUIEvent;
			
			private var current:[c.interfaceName()/];
			
			public function handleNavigation(object:Object):void{
				if(object is [c.interfaceName()/]){
					current = object as [c.interfaceName()/];
				}else{
					current = null;
				}
				ui_call.enabled = current != null && current.getId() >= 0;
			}
			private function ui_callClickHandler(event:MouseEvent):void{
				var service:[c.genServiceName()/] = new [c.genServiceName()/]();
				var _vo:[c.genNameVO()/] = EntityCache.getInstance().create[c.genName()/]VO(current, true);
				service.addEventListener(FaultEvent.FAULT, fault);
				service.addEventListener([c.serviceEventName()/].UPDATE, result);
				dispatchEvent(new ServiceSendUIEvent(ServiceSendUIEvent.SEND));
				service.update(_vo);
			}
			private function result(event:[c.serviceEventName()/]):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV));
				dispatchEvent(new SelectionUIEvent(SelectionUIEvent.SELECT, event.instance));
			}
			private function fault(event:FaultEvent):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV, true, event.fault.message));
			}
	[mxmlScriptEnd()/]
	<mx:Button id="ui_call" label="Update" click="ui_callClickHandler(event)" />
</mx:HBox>
[/file]
[/template]

[template public genDeleteUI(c : Class)]
[file ('ui/service/' + deleteUIName() + '.mxml', false, 'UTF-8')]
<?xml version="1.0" encoding="utf-8"?>
<mx:HBox implements="ui.Navigation" xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Metadata>
        ['['/]Event(name="objectSelection", type="ui.SelectionUIEvent")[']'/]
        ['['/]Event(name="serviceSend", type="ui.ServiceSendUIEvent")[']'/]
        ['['/]Event(name="serviceRecv", type="ui.ServiceRecvUIEvent")[']'/]
    </mx:Metadata>
	[mxmlScriptBegin()/]
			import entity.EntityCache;
			
			import [c.genPackageVO()/].[c.genNameVO()/];
			import [c.genEntityPackage()/].[c.interfaceName()/];
			import services.[c.genPackage()/].[c.genServiceName()/];
			import services.[c.genPackage()/].[c.serviceEventName()/];
			
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			import services.ServiceEvent;
			
			import ui.SelectionUIEvent;
			import ui.ServiceRecvUIEvent;
			import ui.ServiceSendUIEvent;
			
			private var current:[c.interfaceName()/];
			
			public function handleNavigation(object:Object):void{
				if(object is [c.interfaceName()/]){
					current = object as [c.interfaceName()/];
				}else{
					current = null;
				}
				ui_call.enabled = current != null && current.getId() >= 0;
			}
			private function ui_callClickHandler(event:MouseEvent):void{
				var service:[c.genServiceName()/] = new [c.genServiceName()/]();
				var _vo:[c.genNameVO()/] = EntityCache.getInstance().create[c.genName()/]VO(current, false);
				service.addEventListener(FaultEvent.FAULT, fault);
				service.addEventListener([c.serviceEventName()/].UPDATE, result);
				dispatchEvent(new ServiceSendUIEvent(ServiceSendUIEvent.SEND));
				service.deleteObject(_vo);
			}
			private function result(event:[c.serviceEventName()/]):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV));
				dispatchEvent(new SelectionUIEvent(SelectionUIEvent.SELECT, null));
			}
			private function fault(event:FaultEvent):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV, true, event.fault.message));
			}
	[mxmlScriptEnd()/]
	<mx:Button id="ui_call" label="Delete" click="ui_callClickHandler(event)" />
</mx:HBox>
[/file]
[/template]

[template public genCreateUI(c : Class)]
[file ('ui/service/' + createUIName() + '.mxml', false, 'UTF-8')]
<?xml version="1.0" encoding="utf-8"?>
<mx:HBox implements="ui.Navigation" xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Metadata>
        ['['/]Event(name="objectSelection", type="ui.SelectionUIEvent")[']'/]
        ['['/]Event(name="serviceSend", type="ui.ServiceSendUIEvent")[']'/]
        ['['/]Event(name="serviceRecv", type="ui.ServiceRecvUIEvent")[']'/]
    </mx:Metadata>
	[mxmlScriptBegin()/]
			import entity.EntityCache;
			
			import [c.genPackageVO()/].[c.genNameVO()/];
			import [c.genEntityPackage()/].[c.interfaceName()/];
			import services.[c.genPackage()/].[c.genServiceName()/];
			import services.[c.genPackage()/].[c.serviceEventName()/];
			
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			import services.ServiceEvent;
			
			import ui.SelectionUIEvent;
			import ui.ServiceRecvUIEvent;
			import ui.ServiceSendUIEvent;
			
			private var current:[c.interfaceName()/];
			
			public function handleNavigation(object:Object):void{
				if(object is [c.interfaceName()/]){
					current = object as [c.interfaceName()/];
				}else{
					current = null;
				}
				ui_call.enabled = current != null && current.getId() < 0;
			}
			private function ui_callClickHandler(event:MouseEvent):void{
				var service:[c.genServiceName()/] = new [c.genServiceName()/]();
				var _vo:[c.genNameVO()/] = EntityCache.getInstance().create[c.genName()/]VO(current, true);
				service.addEventListener(FaultEvent.FAULT, fault);
				service.addEventListener([c.serviceEventName()/].UPDATE, result);
				dispatchEvent(new ServiceSendUIEvent(ServiceSendUIEvent.SEND));
				service.create(_vo);
			}
			private function result(event:[c.serviceEventName()/]):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV));
				dispatchEvent(new SelectionUIEvent(SelectionUIEvent.SELECT, event.instance));
			}
			private function fault(event:FaultEvent):void{
				dispatchEvent(new ServiceRecvUIEvent(ServiceRecvUIEvent.RECV, true, event.fault.message));
			}
	[mxmlScriptEnd()/]
	<mx:Button id="ui_call" label="Create" click="ui_callClickHandler(event)" />
</mx:HBox>
[/file]
[/template]