[comment encoding = UTF-8 /]
[module asEventUtils('http://www.eclipse.org/uml2/3.0.0/UML')/]

[template private dispatcherName() post (trim())]
_eventDispatcher
[/template]

[template public genEventDispatcherInitialisation() post (trim())]
this.[dispatcherName()/] = new EventDispatcher(this);
[/template]

[template public genEventDispatcherAttributes() post (trim())]
private var [dispatcherName()/]:EventDispatcher;
[/template]

[comment generate all the methods required by the IEventDispatcher interface,
delegating all calls to a class attribute given in parameter. /]

[template public genEventDispatcherDelegateMethods() post (trim())]

public function addEventListener(type:String, listener:Function, useCapture:Boolean=false, priority:int=0, useWeakReference:Boolean=false):void
{
	this.[dispatcherName()/].addEventListener(type, listener, useCapture, priority, useWeakReference);
}

public function removeEventListener(type:String, listener:Function, useCapture:Boolean=false):void
{
	this.[dispatcherName()/].removeEventListener(type, listener, useCapture);
}

public function dispatchEvent(event:Event):Boolean
{
	return this.[dispatcherName()/].dispatchEvent(event);
}

public function hasEventListener(type:String):Boolean
{
	return this.[dispatcherName()/].hasEventListener(type);
}

public function willTrigger(type:String):Boolean
{
	return this.[dispatcherName()/].willTrigger(type);
}

[/template]
