[comment encoding = UTF-8 /]
[module genValidator('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import com::mgs::uml::common::umlUtils /]
[import com::mgs::uml::common::profileUtils /]
[import com::mgs::uml::gen::as::common::asUtils /]

[template public validatorFilePath(c : Class, p : TypedElement) post (trim())]
	ui/validator/[validatorName(c, p)/].as
[/template]

[template public validatorName(c : Class, p : Property) post (trim())]
	[c.genName()/][p.name.toUpperFirst()/]Validator
[/template]
[template public validatorName(c : Class, p : Parameter) post (trim())]
	[c.genName()/][p.operation.name.toUpperFirst()/][p.name.toUpperFirst()/]Validator
[/template]
[template public validatorName(c : Class, p : TypedElement) post (trim())]
[/template]

[template public genPropertyValidator(c : Class, p : TypedElement)]
[file (validatorFilePath(c, p), false, 'UTF-8')]
package ui.validator
{
	import mx.validators.StringValidator;
	
	public class [validatorName(c, p)/] extends StringValidator
	{
		public function [validatorName(c, p)/]()
		{
			super();
[if (p.profile_validity_getMin() > 0)]
			this.minLength = [p.profile_validity_getMin()/];
[/if]
[if (p.profile_validity_getMax() > 0)]
			this.maxLength = [p.profile_validity_getMax()/];
[/if]
		}
		
	}
}
[/file]
[/template]

[template public genValidator(c : Class) ? (profile_isEntity())]
	
[comment @main /]

[for (p : Property | c.simplePrimitiveAttributes()) ? (profile_isValidity())]
[genPropertyValidator(c, p)/]
[/for]
[for (op : Operation | c.ownedOperation)]
[for (param : Parameter | op.getInputParameters()) ? (profile_isValidity())]
[genPropertyValidator(c, param)/]
[/for]
[/for]
	
[/template]
