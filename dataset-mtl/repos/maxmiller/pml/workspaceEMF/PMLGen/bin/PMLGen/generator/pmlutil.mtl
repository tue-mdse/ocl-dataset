[comment encoding = MacRoman /]

[module pmlutil('http://www.eclipse.org/acceleo/mtl/3.0', 'http://www.eclipse.org/emf/2002/Ecore', '/PML/model/pml.ecore')/]

[query public forSensitive(arg0 : String, arg1 : Integer) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'forSensitive(java.lang.String, java.lang.Integer)', Sequence{arg0, arg1}) /]
[query public forSensitiveTimed(arg0 : String, arg1 : Integer) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'forSensitiveTimed(java.lang.String, java.lang.Integer)', Sequence{arg0, arg1}) /]

[query public forIn(arg0 : String, arg1 : String, arg2 : Integer, arg3 : Integer) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'forIn(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)', Sequence{arg0, arg1, arg2, arg3}) /]

[query public forOut(arg0 : String, arg1 : String, arg2 : Integer, arg3 : Integer) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'forOut(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)', Sequence{arg0, arg1, arg2, arg3}) /]

[query public forSel(arg0 : String, arg1 : String, arg2 : Integer) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'forSel(java.lang.String, java.lang.String, java.lang.Integer)', Sequence{arg0, arg1, arg2}) /]

[query public forInTimed(arg0 : String, arg1 : String, arg2 : Integer, arg3 : Integer) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'forInTimed(java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer)', Sequence{arg0, arg1, arg2, arg3}) /]

[query public switchIn(arg0 : String, arg1 : String, arg2 : String, arg3 : Integer) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'switchIn(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer)', Sequence{arg0, arg1, arg2, arg3}) /]

[query public processSignal(arg0 : Processor) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'processSignal(br.ufrn.lasic.pml.Processor)', Sequence{arg0}) /]

[query public registerUntimed(arg0 : Register) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'registerUntimed(br.ufrn.lasic.pml.Register)', Sequence{arg0}) /]

[query public registerTimed(arg0 : Register) : String
	= invoke('PMLGen.wrapper.ForSensitive', 'registerTimed(br.ufrn.lasic.pml.Register)', Sequence{arg0}) /]
