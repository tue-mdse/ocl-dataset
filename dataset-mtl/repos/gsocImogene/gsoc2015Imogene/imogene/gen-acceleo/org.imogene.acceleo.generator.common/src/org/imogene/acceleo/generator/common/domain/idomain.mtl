[comment encoding = UTF-8 /]
[module idomain('http://www.i-mogene.org/imogene/1.0')/]

[template public idomain(project : Project)]
[for (anEntity : CardEntity | project.entities)]
[file ('/src/org/imogene/domain/I'.concat(anEntity.name.toUpperFirst()).concat('Domain.java'), false, 'UTF-8')]
package org.imogene.domain;

import java.util.Date;
import java.util.List;
import org.imogene.entities.security.*;

import org.imogene.entities.*;

public interface ['I'+anEntity.name.toUpperFirst()+'Domain'/] {

	// Add [anEntity.name/]
	public void save[anEntity.name.toUpperFirst()/]([anEntity.name.toUpperFirst()/] [anEntity.name.toLowerFirst()/]);
	//Make the save method more generic by using AbstractEntity
//	public void save[anEntity.name.toUpperFirst()/](AbstractEntity [anEntity.name.toLowerFirst()/]);

	// List all [anEntity.name/] save 
	public List<[anEntity.name.toUpperFirst()/]> getAll[anEntity.name.toUpperFirst()/]s();

	// Find [anEntity.name/] using his id
	public [anEntity.name.toUpperFirst()/] get[anEntity.name.toUpperFirst()/]ById(long id[anEntity.name.toUpperFirst()/]);

	// Delete [anEntity.name/]
	public void delete[anEntity.name.toUpperFirst()/](long id[anEntity.name.toUpperFirst()/]);

}
[/file]
[/for]
[/template]
