[comment encoding = Cp1252 /]
[module generate('http://org.mde/wadl/metamodel')/]

[template public generate(aWebApplication : WebApplication)]
	
	[comment @main /]
	[file (('Org_mde_demo_vaadinApplication.java'), false, 'Cp1252')]
package com.example.org_mde_demo_vaadin;

import com.vaadin.Application;
import com.vaadin.ui.*;
/**
 * Main application class.
 */
public class Org_mde_demo_vaadinApplication extends Application {
 
    @Override
    public void init() {
        Window mainWindow = new Window("Org_mde_demo_vaadin Application");
        mainWindow.addComponent(createWebApplication());
        setMainWindow(mainWindow);
		/**
		*
		*
		*/
// [protected ('Main user init code')]
		// TODO Implement your web-application specific initialization here.
// [/protected]
    }

    public Component createWebApplication() {
    	VerticalLayout myTabRoot = new VerticalLayout();
    	myTabRoot.addComponent(new Label("[aWebApplication.name /]"));
    	
    	TabSheet tabsheet = new TabSheet();
    		
    	// Make the tabsheet shrink to fit the contents.
    	tabsheet.setSizeUndefined();

		[for (it : Page | aWebApplication.pages->sortedBy(p | p.name))]
		[it.component/]
    	TabSheet.Tab tab = tabsheet.addTab(new Label("[it.name /]"),
    		          "Tab for [it.name /]");
        
        [for (component : Component | it.component)]
			[if (component.oclIsKindOf(Window))]
				Window firstWindow = new Window();
                tabsheet.addComponent(firstWindow);
                
			[/if]

            [if (component.oclIsKindOf(TabSheet))]
				// Leaving this blank as Page is mapped to a Tab sheet in this implementation.
			[/if]

            [if (component.oclIsKindOf(GridLayout))]
				GridLayout layout = new GridLayout();
                tabsheet.addComponent(GridLayout);
			[/if]

            [if (component.oclIsKindOf(OrderedLayout))]
				OrderedLayout o_layout = new OrderedLayout();
                tabseet.addComponent(o_layout);
			[/if]

            [if (component.oclIsKindOf(CustomLayout))]
				CustomLayout c_layout = new CustomLayout();
                tabsheet.addComponent(c_layout);
			[/if]

            // Just for Demo purposes, I have written code like this:
            // All the AbstractComponents are added to the Window.

            [if (component.oclIsKindOf(Label))]
				Label label = new Label();
                lable.setParent(firstWindow);
				
			[/if]

             [if (component.oclIsKindOf(Link))]
				Link link = new Link();
                link.setParent(firstWindow);
				
			[/if]

            [if (component.oclIsKindOf(Upload))]
				Upload upload = new Upload();
                upload.setParent(firstWindow);
				
			[/if]

            [if (component.oclIsKindOf(Embedded))]
				Embedded embedded = new Embedded();
                embedded.setParent(firstWindow);
				
			[/if]

            [if (component.oclIsKindOf(Table))]
				Table tabel = new Table();
                tabel.setParent(firstWindow);
				
			[/if]

            [if (component.oclIsKindOf(Tree))]
				Tree tree = new Tree();
                tree.setParent(firstWindow);
				
			[/if]

            [if (component.oclIsKindOf(Button))]
				Button button = new Button();
                button.setParent(firstWindow);
				
			[/if]

            [if (component.oclIsKindOf(TextField))]
				TextField text = new TextField();
                text.setParent(firstWindow);
				
			[/if]

            [if (component.oclIsKindOf(DateField))]
				DateField field = new DateField();
                field.setParent(firstWindow); 
				
			[/if]

            [if (component.oclIsKindOf(Form))]
				Form form = new Form();
                form.setParent(firstWindow);
				
			[/if]
          
            
		[/for]

		[/for]
    	
    	myTabRoot.addComponent(tabsheet);
    	return myTabRoot;
    }
}

	[/file]
	
[/template]
