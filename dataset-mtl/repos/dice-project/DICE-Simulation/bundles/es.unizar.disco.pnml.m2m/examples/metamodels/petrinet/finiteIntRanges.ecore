<?xml version="1.0" encoding="UTF-8"?>
<!-- Meta-model for PNML specification -->
<!-- Provided by www.pnml.org -->
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="finiteIntRanges"
    nsURI="http:///symmetricnet.finiteIntRanges.ecore" nsPrefix="finiteIntRanges">
  <eClassifiers xsi:type="ecore:EClass" name="FiniteIntRange" eSuperTypes="terms.ecore#//BuiltInSort">
    <eAnnotations source="http://www.pnml.org/models/OCL">
      <details key="range" value="- ∞ &lt; self.start &lt;=  self.end &lt; ∞"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="range"/>
    </eAnnotations>
    <eAnnotations source="http://www.pnml.org/models/methods/SORT">
      <details key="signature" value="boolean equalSorts(Sort sort)"/>
      <details key="body" value="boolean isEqual = false;&#xA;&#x9;&#x9;if (this.eClass().getName().equalsIgnoreCase(sort.eClass().getName())) {&#xA;&#x9;&#x9;&#x9;if (this.getContainerNamedSort() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; sort.getContainerNamedSort() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;isEqual = this.getContainerNamedSort().getName()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.equalsIgnoreCase(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sort.getContainerNamedSort().getName());&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;if (&quot;FiniteIntRange&quot;.equalsIgnoreCase(this.eClass().getName())) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FiniteIntRange myFIR = (FiniteIntRange) this;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;FiniteIntRange thatFIR = (FiniteIntRange) sort;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;isEqual = (myFIR.getStart() == thatFIR.getStart()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    &amp;&amp; myFIR.getEnd() == thatFIR.getEnd());  &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return isEqual;"/>
      <details key="documentation" value="/**&#xA; * Returns true if this sort and argument sort are actually &#xA; * semantically the same sort, even in two different objects.&#xA; * Ex: two FiniteEnumerations or two Integers.&#xA; * @return true if so. &#xA; * @param sort the sort to which we compare this one. &#xA; */"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="start" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="end" ordered="false" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="containerFiniteIntRangeConstant"
        eType="#//FiniteIntRangeConstant" eOpposite="#//FiniteIntRangeConstant/range"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FiniteIntRangeConstant" eSuperTypes="terms.ecore#//BuiltInConstant">
    <eAnnotations source="http://www.pnml.org/models/OCL">
      <details key="InputRange" value="self.input->size() = 0 and self.range.start &lt;= self.value &lt;= self.range.end"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="InputRange"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="range" ordered="false"
        lowerBound="1" eType="#//FiniteIntRange" containment="true" eOpposite="#//FiniteIntRange/containerFiniteIntRangeConstant"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LessThan" eSuperTypes="#//FiniteIntRangeOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="FiniteIntRangeOperator" abstract="true"
      eSuperTypes="terms.ecore#//BuiltInOperator">
    <eAnnotations source="http://www.pnml.org/models/OCL">
      <details key="InputOutputTypes" value="self.input->size() = 2 and self.input->forAll{c | c.oclIsTypeOf(FiniteIntRange)} and self.output.oclIsTypeOf(booleans::Bool)"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="InputOutputTypes"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterThan" eSuperTypes="#//FiniteIntRangeOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="LessThanOrEqual" eSuperTypes="#//FiniteIntRangeOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterThanOrEqual" eSuperTypes="#//FiniteIntRangeOperator"/>
</ecore:EPackage>
