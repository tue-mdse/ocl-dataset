<?xml version="1.0" encoding="UTF-8"?>
<!-- Meta-model for PNML specification -->
<!-- Provided by www.pnml.org -->
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="strings"
    nsURI="http:///hlpn.strings.ecore" nsPrefix="strings">
  <eClassifiers xsi:type="ecore:EClass" name="HLPNString" eSuperTypes="terms.ecore#//BuiltInSort">
    <eAnnotations source="http://www.pnml.org/models/methods/SORT">
      <details key="signature" value="boolean equalSorts(Sort sort)"/>
      <details key="body" value="boolean isEqual = false;&#xA;&#x9;&#x9;if (this.eClass().getName().equalsIgnoreCase(sort.eClass().getName())) {&#xA;&#x9;&#x9;    //by default they are the same sort, unless they have been named.&#xA;&#x9;&#x9;  &#x9;isEqual = true;&#xA;&#x9;&#x9;  &#x9;if (this.getContainerNamedSort() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; sort.getContainerNamedSort() != null) {&#xA;&#x9;&#x9;&#x9;&#x9;// we test them if they have been explicitly named.&#xA;&#x9;&#x9;&#x9;&#x9;isEqual = this.getContainerNamedSort().getName()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.equalsIgnoreCase(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sort.getContainerNamedSort().getName());&#xA;&#x9;&#x9;&#x9;}// otherwise, keep the default.&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return isEqual;"/>
      <details key="documentation" value="/**&#xD; * Returns true if this sort and argument sort are actually &#xD; * semantically the same sort, even in two different objects.&#xD; * Ex: two FiniteEnumerations or two Integers.&#xD; * @return true if so. &#xD; * @param sort the sort to which we compare this one. &#xD; */"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StringConstant" eSuperTypes="terms.ecore#//BuiltInConstant">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StringOperator" abstract="true" eSuperTypes="terms.ecore#//BuiltInOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="Append" eSuperTypes="#//StringOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="Concatenation" eSuperTypes="#//StringOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterThan" eSuperTypes="#//StringOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterThanOrEqual" eSuperTypes="#//StringOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="LessThan" eSuperTypes="#//StringOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="LessThanOrEqual" eSuperTypes="#//StringOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="Length" eSuperTypes="#//StringOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="Substring" eSuperTypes="#//StringOperator">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="start" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="length" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
  </eClassifiers>
</ecore:EPackage>
