[comment encoding = UTF-8
 *******************************************************************************
 * Copyright (c) 2008-2009 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************
 /]
[module imageViewerControl('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/eef/components/1.0.0', 'http://www.eclipse.org/emf/eef/views/1.0.0', 'http://www.eclipse.org/emf/eef/mapping/1.0.0') extends org::eclipse::emf::eef::codegen::widgets::api::widgetControl/]

[import org::eclipse::emf::eef::codegen::services::naming /]
[import org::eclipse::emf::eef::codegen::services::common /]
[import org::eclipse::emf::eef::codegen::services::typeUtils /]

[comment ===== Case : model = Attribute(1) - view = Text ===== /]
[comment @Override widgetControl.declareEObjectUpdater /]
[template public declareEObjectUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides declareEObjectUpdater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('ImageViewer') and not editionElement.model.derived and not editionElement.canGeneratemodelNavigation())]
[pec.pecModelClass().toJavaIdentifier().disambiguation('event')/].set[editionElement.model.name.toUpperFirst()/]((String)event.getNewValue());
[/template]

[comment @Override widgetControl.liveUpdater /]
[template public liveUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides liveUpdater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('ImageViewer') and not editionElement.model.derived)]
if ([editionElement.metamodelGetter()/].equals(msg.getFeature()) && isAccessible([editionElement.views->first().editorID()/])){
[if (editionElement.model.oclAsType(EAttribute).isString())]
	if (msg.getNewValue() != null) {
		[view.viewIdentifier(pec)/].[editionElement.views->first().viewPackageSetter()/]((String)msg.getNewValue());
	}
[else]
//FIXME invalid case in liveUpdater(), Case : model = Attribute(1) : [editionElement.model.name/] - view = ImageViewer
[/if]
	else {
		[view.viewIdentifier(pec)/].[editionElement.views->first().viewPackageSetter()/]("");
	}
}
[/template]

[comment @Override widgetControl.updater /]
[template public updater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides updater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('ImageViewer') and not editionElement.model.derived and not editionElement.canGeneratemodelNavigation())]
[if (editionElement.model.oclAsType(EAttribute).isString())]
if (isAccessible([editionElement.views->first().editorID()/])) {
	[view.viewIdentifier(pec)/].init[editionElement.views->first().viewPackageSignature()/](EcoreUtil.getIdentification([pec.pecModelClass().toJavaIdentifier()/]), [pec.pecModelClass().toJavaIdentifier()/].get[editionElement.model.name.toJavaClassifier()/]());
}
[else]
//FIXME invalid case in updater(), Case : model = Attribute(1) : [editionElement.model.name/] - view = ImageViewer
[/if]
[/template]

[comment @Override widgetControl.filterUpdater /]
[template public filterUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides filterUpdater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('ImageViewer') and not editionElement.model.derived)]
[/template]

[comment ===== Case : model = Attribute(1) - view = Text - ModelNavigation ===== /]

[template public declareEObjectUpdater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides declareEObjectUpdater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('ImageViewer') and not editionElement.model.derived and editionElement.canGeneratemodelNavigation())]
[editionElement.name.toJavaIdentifier()/]Settings.setValue((String)event.getNewValue());
[/template]

[comment @Override widgetControl.updater /]
[template public updater(editionElement : PropertiesEditionElement, view : View, pec : PropertiesEditionComponent) overrides updater ? (editionElement.model.isAttributeSingle() and editionElement.representationName('ImageViewer') and not editionElement.model.derived and editionElement.canGeneratemodelNavigation())]
[if (editionElement.model.oclAsType(EAttribute).isString())]
if ([editionElement.name.toJavaIdentifier()/]Settings.getValue() && isAccessible([editionElement.views->first().editorID()/])) {
	[view.viewIdentifier(pec)/].init[editionElement.views->first().viewPackageSignature()/](EcoreUtil.getIdentification([pec.pecModelClass().toJavaIdentifier()/]), [editionElement.name.toJavaIdentifier()/]Settings.getValue());
}
[else]
//FIXME invalid case in updater(), Case : model = Attribute(1) : [editionElement.model.name/] - view = ImageViewer
[/if]
[/template]


