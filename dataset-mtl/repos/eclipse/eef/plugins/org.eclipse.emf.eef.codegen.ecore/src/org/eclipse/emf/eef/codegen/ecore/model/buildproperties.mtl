[comment encoding = UTF-8 /]
[module buildproperties('http://www.eclipse.org/emf/2002/GenModel')/]

[import org::eclipse::emf::eef::codegen::ecore::services::common /]
[import org::eclipse::emf::eef::codegen::ecore::services::header /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenModel /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenPackage /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenClass /]

[template public buildProperties(genModel : GenModel)]
[let pluginClassesLocation : String = if genModel.runtimeJar then genModel.modelPluginID + '.jar' else '.' endif]
[file (genModel.buildPropertiesFilePath(), false, 'UTF-8')]
[genModel.includeHeaderProperties()/]
bin.includes = [pluginClassesLocation/],\
               model/,\
[if (genModel.sameModelEditProject() or genModel.sameModelEditorProject()) ]
               icons/,\
[/if]
[if (genModel.bundleManifest) ]
               META-INF/,\
[/if]
[if (genModel.runtimePlatform <> GenRuntimePlatform::GWT) ]
               plugin.xml,\
[/if]
               plugin.properties
jars.compile.order = [pluginClassesLocation/]
source.[pluginClassesLocation/] = [for (sourceFolder : String | genModel.getModelSourceFolders()) separator (',\\           ')]
[sourceFolder/]
[/for]
[comment][sourceFolders->sep(',\\'.concat(genModel.getLineDelimiter())/][/comment]
output.[pluginClassesLocation/] = bin/
[/file]
[/let]
[/template]

[query public buildPropertiesFilePath(genModel : GenModel) : String = 'build.properties' /]
