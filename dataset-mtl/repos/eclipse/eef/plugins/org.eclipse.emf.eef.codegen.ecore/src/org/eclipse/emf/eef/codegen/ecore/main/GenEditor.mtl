[comment encoding = UTF-8 
/*******************************************************************************
 * Copyright (c) 2011 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - Initial API and implementation
 *******************************************************************************/
/]
[module GenEditor('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel')/]

[import org::eclipse::emf::eef::codegen::ecore::editor::ActionBarContributor/]
[import org::eclipse::emf::eef::codegen::ecore::editor::buildproperties /]
[import org::eclipse::emf::eef::codegen::ecore::editor::manifestmf /]
[import org::eclipse::emf::eef::codegen::ecore::editor::Editor /]
[import org::eclipse::emf::eef::codegen::ecore::editor::Plugin /]
[import org::eclipse::emf::eef::codegen::ecore::editor::pluginproperties /]
[import org::eclipse::emf::eef::codegen::ecore::editor::ModelWizard /]
[import org::eclipse::emf::eef::codegen::ecore::editor::pluginxml /]
[import org::eclipse::emf::eef::codegen::ecore::editor::editorIcons /]
[import org::eclipse::emf::eef::codegen::ecore::services::fileUtil /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenModel /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenPackage /]

[template public GenAllGenClass(model : GenModel) ? (model.canGenerateEditor())]
[comment @main /]
[comment editor generation/]
[for (p : GenPackage | model.eAllContents(GenPackage))]
	[if (p.canGenerateEditor() and p.hasConcreteClasses())]
		[p.Editor()/]
		[p.ModelWizard()/]
		[p.ActionBarContributor()/]
		[p.ModelIcon()/]
		[p.ModelWizardIcon()/]
	[/if]
[/for]

[model.Plugin()/]

[if (model.bundleManifest and not model.fileExistsEditor(model.manifestmfPath()))]
	[model.manifestmf()/]
[/if]

[if (not model.fileExistsEditor(model.pluginxmlPath()))]
	[model.pluginxml()/]
[/if]

[if (not model.fileExistsEditor(model.pluginpropertiesPath()))]
	[model.pluginproperties()/]
[/if]

[if (not model.fileExistsEditor(model.buildpropertiesPath()))]
	[model.buildproperties()/]
[/if]

[comment @TODO EditorAdvisor ??? if model.isRichClientPlatform()/]
[/template]
