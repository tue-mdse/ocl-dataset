[module GenClass('http://www.eclipse.org/emf/2002/GenModel', 'http://www.eclipse.org/emf/2002/Ecore')/]

[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenModel /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenPackage /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenBase /]
[import org::eclipse::emf::eef::codegen::ecore::services::common/] 


[query public getAbstractFlag(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAbstractFlag()', Sequence{genClass}) /]

[query public getAllBaseGenClasses(genClass : GenClass) : Sequence(GenClass)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAllBaseGenClasses()', Sequence{genClass}) /]

[query public getAllChildrenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAllChildrenFeatures()', Sequence{genClass}) /]

[query public getAllCreateChildFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAllCreateChildFeatures()', Sequence{genClass}) /]

[query public getAllCreateChildFeaturesIncludingDelegation(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAllCreateChildFeaturesIncludingDelegation()', Sequence{genClass}) /]

[comment][query public getAllEVirtualIndexBitFields(genClass : GenClass, allEVirtualIndexBitFields : Sequence(String)) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAllEVirtualIndexBitFields(Sequence(String))', Sequence{genClass, allEVirtualIndexBitFields}) /][/comment]

[query public getAllGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAllGenFeatures()', Sequence{genClass}) /]

[query public getAllGenOperations(genClass : GenClass) : Sequence(GenOperation)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAllGenOperations()', Sequence{genClass}) /]

[query public getAllGenOperations(genClass : GenClass, excludeOverrides : Boolean) : Sequence(GenOperation)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAllGenOperations(boolean)', Sequence{genClass, excludeOverrides}) /]

[query public getBaseGenClass(genClass : GenClass) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getBaseGenClass()', Sequence{genClass}) /]

[query public getBaseGenClasses(genClass : GenClass) : Sequence(GenClass)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getBaseGenClasses()', Sequence{genClass}) /]

[query public getCastFromEObject(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getCastFromEObject()', Sequence{genClass}) /]

[query public getChildrenClasses(genClass : GenClass, genFeature : GenFeature) : Sequence(GenClass)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getChildrenClasses(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getChildrenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getChildrenFeatures()', Sequence{genClass}) /]

[query public getClassExtends(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getClassExtends()', Sequence{genClass}) /]

[query public getClassExtendsGenClass(genClass : GenClass) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getClassExtendsGenClass()', Sequence{genClass}) /]

[query public getClassImplements(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getClassImplements()', Sequence{genClass}) /]

[query public getClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getClassName()', Sequence{genClass}) /]

[query public getClassTypeArguments(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getClassTypeArguments()', Sequence{genClass}) /]

[query public getContentNotifyFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getContentNotifyFeatures()', Sequence{genClass}) /]

[query public getCreateChildFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getCreateChildFeatures()', Sequence{genClass}) /]

[query public getCreateChildFeaturesIncludingDelegation(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getCreateChildFeaturesIncludingDelegation()', Sequence{genClass}) /]

[query public getCreateChildIconFileName(genClass : GenClass, genModel : GenModel, feature : GenFeature, childClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getCreateChildIconFileName(org.eclipse.emf.codegen.ecore.genmodel.GenModel, org.eclipse.emf.codegen.ecore.genmodel.GenFeature, org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass, genModel, feature, childClass}) /]

[query public getCreateChildIconFileName(genClass : GenClass, feature : GenFeature, childClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getCreateChildIconFileName(org.eclipse.emf.codegen.ecore.genmodel.GenFeature, org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass, feature, childClass}) /]

[query public getCrossPackageChildrenClasses(genClass : GenClass, genFeature : GenFeature) : Sequence(GenClass)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getCrossPackageChildrenClasses(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getCrossPackageCreateChildFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getCrossPackageCreateChildFeatures()', Sequence{genClass}) /]

[query public getDeclaredFieldGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getDeclaredFieldGenFeatures()', Sequence{genClass}) /]

[query public getDeclaredGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getDeclaredGenFeatures()', Sequence{genClass}) /]

[query public getDeclaredGenOperations(genClass : GenClass) : Sequence(GenOperation)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getDeclaredGenOperations()', Sequence{genClass}) /]

[query public getEBasicRemoveFromContainerGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEBasicRemoveFromContainerGenFeatures()', Sequence{genClass}) /]

[query public getEGetGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEGetGenFeatures()', Sequence{genClass}) /]

[query public getEInverseAddGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEInverseAddGenFeatures()', Sequence{genClass}) /]

[query public getEInverseRemoveGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEInverseRemoveGenFeatures()', Sequence{genClass}) /]

[query public getEIsSetGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEIsSetGenFeatures()', Sequence{genClass}) /]

[query public getESetFlagIndex(genClass : GenClass, genFeature : GenFeature) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getESetFlagIndex(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getESetFlagsField(genClass : GenClass, genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getESetFlagsField(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getESetGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getESetGenFeatures()', Sequence{genClass}) /]

[query public getEUnsetGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEUnsetGenFeatures()', Sequence{genClass}) /]

[comment][query public getEVirtualIndexBitFields(genClass : GenClass, eVirtualIndexBitFields : Sequence(String)) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEVirtualIndexBitFields(Sequence(String))', Sequence{genClass, eVirtualIndexBitFields}) /][/comment]

[query public getEVirtualValuesField(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEVirtualValuesField()', Sequence{genClass}) /]

[query public getExtendedGenClasses(genClass : GenClass) : Sequence(GenClass)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getExtendedGenClasses()', Sequence{genClass}) /]

[query public getExtendedGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getExtendedGenFeatures()', Sequence{genClass}) /]

[query public getExtendedGenOperations(genClass : GenClass) : Sequence(GenOperation)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getExtendedGenOperations()', Sequence{genClass}) /]

[query public getFeatureCount(genClass : GenClass) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFeatureCount()', Sequence{genClass}) /]

[query public getFeatureCountID(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFeatureCountID()', Sequence{genClass}) /]

[query public getFeatureCountValue(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFeatureCountValue()', Sequence{genClass}) /]

[query public getFeatureID(genClass : GenClass, genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFeatureID(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getFeatureValue(genClass : GenClass, genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFeatureValue(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getFlagGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFlagGenFeatures()', Sequence{genClass}) /]

[query public getFlagGenFeatures(genClass : GenClass, staticDefaultValue : String) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFlagGenFeatures(java.lang.String)', Sequence{genClass, staticDefaultValue}) /]

[query public getFlagGenFeaturesWithDefault(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFlagGenFeaturesWithDefault()', Sequence{genClass}) /]

[query public getFlagIndex(genClass : GenClass, genFeature : GenFeature) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFlagIndex(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getFlagMask(genClass : GenClass, genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFlagMask(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getFlagSize(genClass : GenClass, genFeature : GenFeature) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFlagSize(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getFlagsField(genClass : GenClass, genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFlagsField(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getGetAccessorOperation(genClass : GenClass, genFeature : GenFeature) : GenOperation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getGetAccessorOperation(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getImplementedGenClasses(genClass : GenClass) : Sequence(GenClass)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImplementedGenClasses()', Sequence{genClass}) /]

[query public getImplementedGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImplementedGenFeatures()', Sequence{genClass}) /]

[query public getImplementedGenOperations(genClass : GenClass) : Sequence(GenOperation)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImplementedGenOperations()', Sequence{genClass}) /]

[query public getImplementingGenModel(genClass : GenClass, genFeature : GenFeature) : GenModel
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImplementingGenModel(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getImportedClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImportedClassName()', Sequence{genClass}) /]

[query public getImportedInterfaceName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImportedInterfaceName()', Sequence{genClass}) /]

[query public getImportedProviderClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImportedProviderClassName()', Sequence{genClass}) /]

[query public getImportedTestCaseClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImportedTestCaseClassName()', Sequence{genClass}) /]

[query public getInheritedGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getInheritedGenFeatures()', Sequence{genClass}) /]

[query public getInterfaceExtends(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getInterfaceExtends()', Sequence{genClass}) /]

[query public getInterfaceFlag(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getInterfaceFlag()', Sequence{genClass}) /]

[query public getInterfaceName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getInterfaceName()', Sequence{genClass}) /]

[query public getInterfaceTypeArguments(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getInterfaceTypeArguments()', Sequence{genClass}) /]

[query public getInterfaceWildTypeArguments(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getInterfaceWildTypeArguments()', Sequence{genClass}) /]

[query public getInvariantOperation(genClass : GenClass, constraint : String) : GenOperation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getInvariantOperation(java.lang.String)', Sequence{genClass, constraint}) /]

[query public getInvariantOperations(genClass : GenClass) : Sequence(GenOperation)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getInvariantOperations()', Sequence{genClass}) /]

[query public getIsSetAccessorOperation(genClass : GenClass, genFeature : GenFeature) : GenOperation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getIsSetAccessorOperation(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getItemIconAccessorName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getItemIconAccessorName()', Sequence{genClass}) /]

[query public getItemIconFileName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getItemIconFileName()', Sequence{genClass}) /]

[query public getItemProviderAdapterFactoryClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getItemProviderAdapterFactoryClassName()', Sequence{genClass}) /]

[query public getLabelAndContentNotifyFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getLabelAndContentNotifyFeatures()', Sequence{genClass}) /]

[query public getLabelFeatureCandidates(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getLabelFeatureCandidates()', Sequence{genClass}) /]

[query public getLabelNotifyFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getLabelNotifyFeatures()', Sequence{genClass}) /]

[query public getListConstructor(genClass : GenClass, genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getListConstructor(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getLocalFeatureIndex(genClass : GenClass, genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getLocalFeatureIndex(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getLocalOperationIndex(genClass : GenClass, genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getLocalOperationIndex(org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genClass, genOperation}) /]

[query public getMapEntryKeyFeature(genClass : GenClass) : GenFeature
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getMapEntryKeyFeature()', Sequence{genClass}) /]

[query public getMapEntryValueFeature(genClass : GenClass) : GenFeature
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getMapEntryValueFeature()', Sequence{genClass}) /]

[query public getMixedGenFeature(genClass : GenClass) : GenFeature
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getMixedGenFeature()', Sequence{genClass}) /]

[query public getMixinGenClasses(genClass : GenClass) : Sequence(GenClass)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getMixinGenClasses()', Sequence{genClass}) /]

[query public getMixinGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getMixinGenFeatures()', Sequence{genClass}) /]

[query public getMixinGenOperations(genClass : GenClass) : Sequence(GenOperation)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getMixinGenOperations()', Sequence{genClass}) /]

[query public getModelInfo(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getModelInfo()', Sequence{genClass}) /]

[query public getNotifyFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getNotifyFeatures()', Sequence{genClass}) /]

[query public getOffsetCorrectionField(genClass : GenClass, genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getOffsetCorrectionField(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getOperationCount(genClass : GenClass) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getOperationCount()', Sequence{genClass}) /]

[query public getOperationCountID(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getOperationCountID()', Sequence{genClass}) /]

[query public getOperationCountValue(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getOperationCountValue()', Sequence{genClass}) /]

[query public getOperationID(genClass : GenClass, genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getOperationID(org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genClass, genOperation}) /]

[query public getOperationID(genClass : GenClass, genOperation : GenOperation, diagnosticCode : Boolean) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getOperationID(org.eclipse.emf.codegen.ecore.genmodel.GenOperation, boolean)', Sequence{genClass, genOperation, diagnosticCode}) /]

[query public getOperationValue(genClass : GenClass, genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getOperationValue(org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genClass, genOperation}) /]

[query public getOverrideGenOperation(genClass : GenClass, genOperation : GenOperation) : GenOperation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getOverrideGenOperation(org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genClass, genOperation}) /]

[comment][query public getOverrideGenOperations(genClass : GenClass, baseGenOperations : Sequence(GenOperation), derivedGenOperations : Sequence(GenOperation)) : Sequence(GenOperation)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getOverrideGenOperations(Sequence(GenOperation), Sequence(GenOperation))', Sequence{genClass, baseGenOperations, derivedGenOperations}) /][/comment]

[query public getPropertyFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getPropertyFeatures()', Sequence{genClass}) /]

[query public getProviderBaseClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getProviderBaseClassName()', Sequence{genClass}) /]

[query public getProviderClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getProviderClassName()', Sequence{genClass}) /]

[query public getProviderExtendsGenClass(genClass : GenClass) : GenClass
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getProviderExtendsGenClass()', Sequence{genClass}) /]

[query public getProviderImplementedGenClasses(genClass : GenClass) : Sequence(GenClass)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getProviderImplementedGenClasses()', Sequence{genClass}) /]

[query public getQualifiedClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getQualifiedClassName()', Sequence{genClass}) /]

[query public getQualifiedFeatureCountID(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getQualifiedFeatureCountID()', Sequence{genClass}) /]

[query public getQualifiedFeatureID(genClass : GenClass, genFeature : GenFeature) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getQualifiedFeatureID(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature})/]

[query public getQualifiedInterfaceName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getQualifiedInterfaceName()', Sequence{genClass}) /]

[query public getQualifiedOperationCountID(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getQualifiedOperationCountID()', Sequence{genClass}) /]

[query public getQualifiedOperationID(genClass : GenClass, genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getQualifiedOperationID(org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genClass, genOperation}) /]

[query public getQualifiedProviderClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getQualifiedProviderClassName()', Sequence{genClass}) /]

[query public getQualifiedTestCaseClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getQualifiedTestCaseClassName()', Sequence{genClass}) /]

[query public getRawImportedInterfaceName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getRawImportedInterfaceName()', Sequence{genClass}) /]

[query public getSetAccessorOperation(genClass : GenClass, genFeature : GenFeature) : GenOperation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getSetAccessorOperation(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public getSharedClassCreateChildFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getSharedClassCreateChildFeatures()', Sequence{genClass}) /]

[query public getSwitchGenClasses(genClass : GenClass) : Sequence(GenClass)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getSwitchGenClasses()', Sequence{genClass}) /]

[query public getTestCaseClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getTestCaseClassName()', Sequence{genClass}) /]

[query public getToStringGenFeatures(genClass : GenClass) : Sequence(GenFeature)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getToStringGenFeatures()', Sequence{genClass}) /]

[query public getTypeParameters(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getTypeParameters()', Sequence{genClass}) /]

[query public getUncapName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getUncapName()', Sequence{genClass}) /]

[query public getUniqueName(genClass : GenClass, genOperation : GenOperation) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getUniqueName(org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genClass, genOperation}) /]

[query public getUnsetAccessorOperation(genClass : GenClass, genFeature : GenFeature) : GenOperation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getUnsetAccessorOperation(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public hasCollidingGetAccessorOperation(genClass : GenClass, genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasCollidingGetAccessorOperation(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public hasCollidingIsSetAccessorOperation(genClass : GenClass, genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasCollidingIsSetAccessorOperation(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public hasCollidingSetAccessorOperation(genClass : GenClass, genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasCollidingSetAccessorOperation(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public hasCollidingUnsetAccessorOperation(genClass : GenClass, genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasCollidingUnsetAccessorOperation(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public hasFactoryInterfaceCreateMethod(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasFactoryInterfaceCreateMethod()', Sequence{genClass}) /]

[query public hasFeatureMapCreateChildFeatures(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasFeatureMapCreateChildFeatures()', Sequence{genClass}) /]

[query public hasGenericSuperTypes(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasGenericSuperTypes()', Sequence{genClass}) /]

[query public hasImplementedToStringGenOperation(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasImplementedToStringGenOperation()', Sequence{genClass}) /]

[query public hasOffsetCorrection(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasOffsetCorrection()', Sequence{genClass}) /]

[query public hasTests(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasTests()', Sequence{genClass}) /]

[query public isAbstract(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isAbstract()', Sequence{genClass}) /]

[query public isDocumentRoot(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isDocumentRoot()', Sequence{genClass}) /]

[query public isEObject(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isEObject()', Sequence{genClass}) /]

[query public isEObjectExtension(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isEObjectExtension()', Sequence{genClass}) /]

[query public isESetField(genClass : GenClass, genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isESetField(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public isESetFlag(genClass : GenClass, genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isESetFlag(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public isExternalInterface(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isExternalInterface()', Sequence{genClass}) /]

[query public isField(genClass : GenClass, genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isField(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public isFlag(genClass : GenClass, genFeature : GenFeature) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isFlag(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genClass, genFeature}) /]

[query public isInterface(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isInterface()', Sequence{genClass}) /]

[query public isJavaIOSerializable(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isJavaIOSerializable()', Sequence{genClass}) /]

[query public isMapEntry(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isMapEntry()', Sequence{genClass}) /]

[query public isModelRoot(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isModelRoot()', Sequence{genClass}) /]

[query public isProviderSingleton(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isProviderSingleton()', Sequence{genClass}) /]

[query public needsHasChildrenMethodOverride(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'needsHasChildrenMethodOverride()', Sequence{genClass}) /]

[query public needsRootExtendsInterfaceExtendsTag(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'needsRootExtendsInterfaceExtendsTag()', Sequence{genClass}) /]

[query public reconcile(genClass : GenClass, oldGenClassVersion : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'reconcile(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass, oldGenClassVersion}) /]

[comment
    Override of services for super interface GenClassifier 
/]
[query public getAllGenConstraints(genClass : GenClass) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getAllGenConstraints()', Sequence{genClass}) /]

[query public getClassifierAccessorName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getClassifierAccessorName()', Sequence{genClass}) /]

[query public getClassifierID(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getClassifierID()', Sequence{genClass}) /]

[query public getClassifierInstanceName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getClassifierInstanceName()', Sequence{genClass}) /]

[query public getConstraintDelegate(genClass : GenClass, constraint : String) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getConstraintDelegate(java.lang.String)', Sequence{genClass, constraint}) /]

[query public getConstraintExpression(genClass : GenClass, constraint : String, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getConstraintExpression(java.lang.String, java.lang.String)', Sequence{genClass, constraint, indentation}) /]

[query public getConstraintImplementor(genClass : GenClass, constraint : String) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getConstraintImplementor(java.lang.String)', Sequence{genClass, constraint}) /]

[query public getEcoreClassifier(genClass : GenClass) : EClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEcoreClassifier()', Sequence{genClass}) /]

[query public getFormattedName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getFormattedName()', Sequence{genClass}) /]

[query public getGenConstraints(genClass : GenClass) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getGenConstraints()', Sequence{genClass}) /]

[query public getGenModel(genClass : GenClass) : GenModel
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getGenModel()', Sequence{genClass}) /]

[query public getGeneratedInstanceClassFlag(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getGeneratedInstanceClassFlag()', Sequence{genClass}) /]

[query public getImportedBoundedWildcardInstanceClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImportedBoundedWildcardInstanceClassName()', Sequence{genClass}) /]

[query public getImportedInstanceClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImportedInstanceClassName()', Sequence{genClass}) /]

[query public getImportedMetaType(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImportedMetaType()', Sequence{genClass}) /]

[query public getImportedParameterizedInstanceClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImportedParameterizedInstanceClassName()', Sequence{genClass}) /]

[query public getImportedWildcardInstanceClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getImportedWildcardInstanceClassName()', Sequence{genClass}) /]

[query public getMetaType(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getMetaType()', Sequence{genClass}) /]

[query public getName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getName()', Sequence{genClass}) /]

[query public getQualifiedClassifierAccessor(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getQualifiedClassifierAccessor()', Sequence{genClass}) /]

[query public getRawImportedInstanceClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getRawImportedInstanceClassName()', Sequence{genClass}) /]

[query public getRawInstanceClassName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getRawInstanceClassName()', Sequence{genClass}) /]

[query public getSafeUncapName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getSafeUncapName()', Sequence{genClass}) /]

[query public getValidationDelegate(genClass : GenClass, constraint : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getValidationDelegate(java.lang.String)', Sequence{genClass, constraint}) /]

[query public hasConstraintExpression(genClass : GenClass, constraint : String) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasConstraintExpression(java.lang.String)', Sequence{genClass, constraint}) /]

[query public hasOnlyDefaultConstraints(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasOnlyDefaultConstraints()', Sequence{genClass}) /]

[query public isUncheckedCast(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'isUncheckedCast()', Sequence{genClass}) /]

[comment
    Override of services for super interface GenBase 
/]
[query public canGenerate(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'canGenerate()', Sequence{genClass}) /]

[query public canGenerateEdit(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'canGenerateEdit()', Sequence{genClass}) /]

[query public canGenerateEditor(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'canGenerateEditor()', Sequence{genClass}) /]

[query public canGenerateSchema(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'canGenerateSchema()', Sequence{genClass}) /]

[query public canGenerateTests(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'canGenerateTests()', Sequence{genClass}) /]

[query public capName(genClass : GenClass, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'capName(java.lang.String)', Sequence{genClass, name}) /]

[query public getCopyright(genClass : GenClass, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getCopyright(java.lang.String)', Sequence{genClass, indentation}) /]

[query public getDocumentation(genClass : GenClass, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getDocumentation(java.lang.String)', Sequence{genClass, indentation}) /]

[query public getEcoreModelElement(genClass : GenClass) : EModelElement
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getEcoreModelElement()', Sequence{genClass}) /]

[query public getGenAnnotation(genClass : GenClass, source : String) : GenAnnotation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'getGenAnnotation(java.lang.String)', Sequence{genClass, source}) /]

[query public hasCopyright(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasCopyright()', Sequence{genClass}) /]

[query public hasDocumentation(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'hasDocumentation()', Sequence{genClass}) /]

[query public reconcile(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'reconcile()', Sequence{genClass}) /]

[query public safeName(genClass : GenClass, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'safeName(java.lang.String)', Sequence{genClass, name}) /]

[query public uncapName(genClass : GenClass, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'uncapName(java.lang.String)', Sequence{genClass, name}) /]

[query public uncapPrefixedName(genClass : GenClass, input : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'uncapPrefixedName(java.lang.String)', Sequence{genClass, input}) /]

[query public addClassPseudoImports(genClass : GenClass) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClass', 'addClassPsuedoImports()', Sequence{genClass}) /]






[query public overridesExtendedGenOperations(genClass : GenClass, extendedGenClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'overridesExtendedGenOperations(org.eclipse.emf.codegen.ecore.genmodel.GenClass, org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass, extendedGenClass}) /]

[query public overridesGenOperations(genClass : GenClass) : Boolean
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'overridesGenOperations(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public implementsAnyEInverseAddGenFeatures(genClass : GenClass ) : Boolean
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'implementsAnyEInverseAddGenFeatures(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public implementsAnyEInverseRemoveGenFeatures(genClass : GenClass ) : Boolean
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'implementsAnyEInverseRemoveGenFeatures(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public implementsAnyEBasicRemoveFromContainerGenFeatures(genClass : GenClass ) : Boolean
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'implementsAnyEBasicRemoveFromContainerGenFeatures(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public implementsAnyEGetGenFeatures(genClass : GenClass ) : Boolean
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'implementsAnyEGetGenFeatures(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public implementsAnyESetGenFeatures(genClass : GenClass ) : Boolean
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'implementsAnyESetGenFeatures(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public implementsAnyEUnsetGenFeatures(genClass : GenClass ) : Boolean
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'implementsAnyEUnsetGenFeatures(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public implementsAnyEIsSetGenFeatures(genClass : GenClass ) : Boolean
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'implementsAnyEIsSetGenFeatures(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[comment 
	This query is used to reproduce getOffsetCorrectionField(null), used in EMF,
	but which cannot be translated "as is" with Acceleo
	because of a bug in OCL when handling 'null' in sequences.
/]
[query public getDefaultOffsetCorrectionField(genClass : GenClass) : String
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getDefaultOffsetCorrectionField(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public getInternalQualifiedInterfaceName(genClass : GenClass) : String
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getInternalQualifiedInterfaceName(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public getInternalQualifiedInterfaceName(genClass : GenClass, boolean : Boolean) : String
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getInternalQualifiedInterfaceName(org.eclipse.emf.codegen.ecore.genmodel.GenClass, java.lang.Boolean)', Sequence{genClass, boolean}) /]

[query public getChildCreationData(genClass : GenClass) : Sequence(OclAny)
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getChildCreationData(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public getChildCreationDataCreateFeature(oclAny : OclAny ) : GenFeature
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getCreateFeature(java.lang.Object)', Sequence{oclAny}) /]

[query public getChildCreationDataDelegatedFeature(oclAny : OclAny ) : GenFeature
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getDelegatedFeature(java.lang.Object)', Sequence{oclAny}) /]

[query public getChildCreationDataCreateClassifier(oclAny : OclAny ) : GenClassifier
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getCreateClassifier(java.lang.Object)', Sequence{oclAny}) /]

[query public getEVirtualIndexBitFields(genClass : GenClass) : Sequence(String)
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getEVirtualIndexBitFields(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public getAllEVirtualIndexBitFields(genClass : GenClass) : Sequence(String)
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getAllEVirtualIndexBitFields(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public getUniqueNameUpperCase(genClass : GenClass, genOp : GenOperation) : String
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'getUniqueNameUpperCase(org.eclipse.emf.codegen.ecore.genmodel.GenClass, org.eclipse.emf.codegen.ecore.genmodel.GenOperation)', Sequence{genClass, genOp}) /]

[comment
	Returns the imports to insert at the relevant position in the output file.
	The 2 parameters are just used to prevent acceleo from caching the result of this query,
	which must be evaluated for each generated class.
	The same GenClass is used to generate an interface and an implementation class.
	@param isInterface is here to prevent Acceleo from caching things.
	@param isImplementation is here to prevent Acceleo from caching things.
/]
[query public genSortedImports(genClass : GenClass, isInterface : Boolean, isImplementation : Boolean) : String
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenModelWrapper', 'genSortedImports(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[comment For Icons generation /]
[query public generateItemIcon(genClass: GenClass) : OclVoid
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'generateItemIcon(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

[query public generateCreateChildIcons(genClass: GenClass) : OclVoid
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassWrapper', 'generateCreateChildIcons(org.eclipse.emf.codegen.ecore.genmodel.GenClass)', Sequence{genClass}) /]

