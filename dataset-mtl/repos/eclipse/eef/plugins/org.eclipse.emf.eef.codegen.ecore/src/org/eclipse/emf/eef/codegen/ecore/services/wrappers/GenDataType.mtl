[comment encoding = UTF-8 /]
[module GenDataType('http://www.eclipse.org/emf/2002/GenModel', 'http://www.eclipse.org/emf/2002/Ecore')/]

[query public getBaseType(genDataType : GenDataType) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getBaseType()', Sequence{genDataType}) /]

[query public getEnumerationLiterals(genDataType : GenDataType) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getEnumerationLiterals()', Sequence{genDataType}) /]

[query public getFractionDigits(genDataType : GenDataType) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getFractionDigits()', Sequence{genDataType}) /]

[query public getImportedInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getImportedInstanceClassName()', Sequence{genDataType}) /]

[query public getImportedParameterizedObjectInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getImportedParameterizedObjectInstanceClassName()', Sequence{genDataType}) /]

[query public getImportedWildcardObjectInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getImportedWildcardObjectInstanceClassName()', Sequence{genDataType}) /]

[query public getItemType(genDataType : GenDataType) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getItemType()', Sequence{genDataType}) /]

[query public getLengthAccessorFunction(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getLengthAccessorFunction()', Sequence{genDataType}) /]

[query public getMaxLength(genDataType : GenDataType) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getMaxLength()', Sequence{genDataType}) /]

[query public getMaxLiteral(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getMaxLiteral()', Sequence{genDataType}) /]

[query public getMemberTypes(genDataType : GenDataType) : Sequence(GenDataType)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getMemberTypes()', Sequence{genDataType}) /]

[query public getMinLength(genDataType : GenDataType) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getMinLength()', Sequence{genDataType}) /]

[query public getMinLiteral(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getMinLiteral()', Sequence{genDataType}) /]

[query public getModelInfo(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getModelInfo()', Sequence{genDataType}) /]

[query public getObjectInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getObjectInstanceClassName()', Sequence{genDataType}) /]

[query public getObjectType(genDataType : GenDataType) : GenDataType
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getObjectType()', Sequence{genDataType}) /]

[query public getPrimitiveValueFunction(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getPrimitiveValueFunction()', Sequence{genDataType}) /]

[query public getQualifiedInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getQualifiedInstanceClassName()', Sequence{genDataType}) /]

[query public getSerializableFlag(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getSerializableFlag()', Sequence{genDataType}) /]

[query public getStaticValue(genDataType : GenDataType, literal : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getStaticValue(java.lang.String)', Sequence{genDataType, literal}) /]

[query public getStaticValue(genDataType : GenDataType, literal : String, includeCast : Boolean) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getStaticValue(java.lang.String, boolean)', Sequence{genDataType, literal, includeCast}) /]

[query public getTotalDigits(genDataType : GenDataType) : Integer
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getTotalDigits()', Sequence{genDataType}) /]

[query public getWhiteSpace(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getWhiteSpace()', Sequence{genDataType}) /]

[query public isArrayType(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'isArrayType()', Sequence{genDataType}) /]

[query public isMaxInclusive(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'isMaxInclusive()', Sequence{genDataType}) /]

[query public isMinInclusive(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'isMinInclusive()', Sequence{genDataType}) /]

[query public isObjectType(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'isObjectType()', Sequence{genDataType}) /]

[query public isPrimitiveType(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'isPrimitiveType()', Sequence{genDataType}) /]

[query public isSerializable(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'isSerializable()', Sequence{genDataType}) /]

[query public isXMLCalendar(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'isXMLCalendar()', Sequence{genDataType}) /]

[query public isXMLDuration(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'isXMLDuration()', Sequence{genDataType}) /]

[query public reconcile(genDataType : GenDataType, oldGenDataVersion : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'reconcile(org.eclipse.emf.codegen.ecore.genmodel.GenDataType)', Sequence{genDataType, oldGenDataVersion}) /]

[comment
    Override of services for super interface GenClassifier 
/]
[query public getAllGenConstraints(genDataType : GenDataType) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getAllGenConstraints()', Sequence{genDataType}) /]

[query public getClassifierAccessorName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getClassifierAccessorName()', Sequence{genDataType}) /]

[query public getClassifierID(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getClassifierID()', Sequence{genDataType}) /]

[query public getClassifierInstanceName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getClassifierInstanceName()', Sequence{genDataType}) /]

[query public getConstraintDelegate(genDataType : GenDataType, constraint : String) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getConstraintDelegate(java.lang.String)', Sequence{genDataType, constraint}) /]

[query public getConstraintExpression(genDataType : GenDataType, constraint : String, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getConstraintExpression(java.lang.String, java.lang.String)', Sequence{genDataType, constraint, indentation}) /]

[query public getConstraintImplementor(genDataType : GenDataType, constraint : String) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getConstraintImplementor(java.lang.String)', Sequence{genDataType, constraint}) /]

[query public getEcoreClassifier(genDataType : GenDataType) : EClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getEcoreClassifier()', Sequence{genDataType}) /]

[query public getFormattedName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getFormattedName()', Sequence{genDataType}) /]

[query public getGenConstraints(genDataType : GenDataType) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getGenConstraints()', Sequence{genDataType}) /]

[query public getGeneratedInstanceClassFlag(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getGeneratedInstanceClassFlag()', Sequence{genDataType}) /]

[query public getImportedBoundedWildcardInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getImportedBoundedWildcardInstanceClassName()', Sequence{genDataType}) /]

[query public getImportedMetaType(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getImportedMetaType()', Sequence{genDataType}) /]

[query public getImportedParameterizedInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getImportedParameterizedInstanceClassName()', Sequence{genDataType}) /]

[query public getImportedWildcardInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getImportedWildcardInstanceClassName()', Sequence{genDataType}) /]

[query public getMetaType(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getMetaType()', Sequence{genDataType}) /]

[query public getName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getName()', Sequence{genDataType}) /]

[query public getPatterns(genDataType : GenDataType) : Sequence(Sequence(String))
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getPatterns()', Sequence{genDataType}) /]

[query public getQualifiedClassifierAccessor(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getQualifiedClassifierAccessor()', Sequence{genDataType}) /]

[query public getRawImportedInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getRawImportedInstanceClassName()', Sequence{genDataType}) /]

[query public getRawInstanceClassName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getRawInstanceClassName()', Sequence{genDataType}) /]

[query public getSafeUncapName(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getSafeUncapName()', Sequence{genDataType}) /]

[query public getValidationDelegate(genDataType : GenDataType, constraint : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getValidationDelegate(java.lang.String)', Sequence{genDataType, constraint}) /]

[query public hasConstraintExpression(genDataType : GenDataType, constraint : String) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'hasConstraintExpression(java.lang.String)', Sequence{genDataType, constraint}) /]

[query public hasOnlyDefaultConstraints(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'hasOnlyDefaultConstraints()', Sequence{genDataType}) /]

[query public isUncheckedCast(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'isUncheckedCast()', Sequence{genDataType}) /]

[comment
    Override of services for super interface GenBase 
/]
[query public canGenerate(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'canGenerate()', Sequence{genDataType}) /]

[query public canGenerateEdit(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'canGenerateEdit()', Sequence{genDataType}) /]

[query public canGenerateEditor(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'canGenerateEditor()', Sequence{genDataType}) /]

[query public canGenerateSchema(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'canGenerateSchema()', Sequence{genDataType}) /]

[query public canGenerateTests(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'canGenerateTests()', Sequence{genDataType}) /]

[query public capName(genDataType : GenDataType, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'capName(java.lang.String)', Sequence{genDataType, name}) /]

[query public getCopyright(genDataType : GenDataType, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getCopyright(java.lang.String)', Sequence{genDataType, indentation}) /]

[query public getDocumentation(genDataType : GenDataType, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getDocumentation(java.lang.String)', Sequence{genDataType, indentation}) /]

[query public getEcoreModelElement(genDataType : GenDataType) : EModelElement
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getEcoreModelElement()', Sequence{genDataType}) /]

[query public getGenAnnotation(genDataType : GenDataType, source : String) : GenAnnotation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'getGenAnnotation(java.lang.String)', Sequence{genDataType, source}) /]

[query public hasCopyright(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'hasCopyright()', Sequence{genDataType}) /]

[query public hasDocumentation(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'hasDocumentation()', Sequence{genDataType}) /]

[query public reconcile(genDataType : GenDataType) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'reconcile()', Sequence{genDataType}) /]

[query public safeName(genDataType : GenDataType, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'safeName(java.lang.String)', Sequence{genDataType, name}) /]

[query public uncapName(genDataType : GenDataType, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'uncapName(java.lang.String)', Sequence{genDataType, name}) /]

[query public uncapPrefixedName(genDataType : GenDataType, input : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenDataType', 'uncapPrefixedName(java.lang.String)', Sequence{genDataType, input}) /]

[query public getStaticPositiveValue(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers', 'getStaticPositiveValue(org.eclipse.emf.codegen.ecore.genmodel.GenDataType)', Sequence{genDataType}) /]

[query public getStaticNegativeValue(genDataType : GenDataType) : String
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers', 'getStaticNegativeValue(org.eclipse.emf.codegen.ecore.genmodel.GenDataType)', Sequence{genDataType}) /]
