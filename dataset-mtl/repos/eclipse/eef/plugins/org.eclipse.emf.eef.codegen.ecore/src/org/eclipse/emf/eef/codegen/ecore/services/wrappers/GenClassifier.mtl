[comment encoding = UTF-8 /]
[module GenClassifier('http://www.eclipse.org/emf/2002/GenModel', 'http://www.eclipse.org/emf/2002/Ecore')/]

[query public getAllGenConstraints(genClassifier : GenClassifier) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getAllGenConstraints()', Sequence{genClassifier}) /]

[query public getClassifierAccessorName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getClassifierAccessorName()', Sequence{genClassifier}) /]

[query public getClassifierID(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getClassifierID()', Sequence{genClassifier}) /]

[query public getClassifierInstanceName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getClassifierInstanceName()', Sequence{genClassifier}) /]

[query public getConstraintDelegate(genClassifier : GenClassifier, constraint : String) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getConstraintDelegate(java.lang.String)', Sequence{genClassifier, constraint}) /]

[query public getConstraintExpression(genClassifier : GenClassifier, constraint : String, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getConstraintExpression(java.lang.String, java.lang.String)', Sequence{genClassifier, constraint, indentation}) /]

[query public getConstraintImplementor(genClassifier : GenClassifier, constraint : String) : GenClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getConstraintImplementor(java.lang.String)', Sequence{genClassifier, constraint}) /]

[query public getEcoreClassifier(genClassifier : GenClassifier) : EClassifier
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getEcoreClassifier()', Sequence{genClassifier}) /]

[query public getFormattedName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getFormattedName()', Sequence{genClassifier}) /]

[query public getGenConstraints(genClassifier : GenClassifier) : Sequence(String)
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getGenConstraints()', Sequence{genClassifier}) /]

[query public getGeneratedInstanceClassFlag(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getGeneratedInstanceClassFlag()', Sequence{genClassifier}) /]

[query public getImportedBoundedWildcardInstanceClassName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getImportedBoundedWildcardInstanceClassName()', Sequence{genClassifier}) /]

[query public getImportedInstanceClassName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getImportedInstanceClassName()', Sequence{genClassifier}) /]

[query public getImportedMetaType(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getImportedMetaType()', Sequence{genClassifier}) /]

[query public getQualifiedInterfaceName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getQualifiedInterfaceName()', Sequence{genClassifier}) /]

[query public getImportedParameterizedInstanceClassName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getImportedParameterizedInstanceClassName()', Sequence{genClassifier}) /]

[query public getImportedWildcardInstanceClassName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getImportedWildcardInstanceClassName()', Sequence{genClassifier}) /]

[query public getMetaType(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getMetaType()', Sequence{genClassifier}) /]

[query public getName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getName()', Sequence{genClassifier}) /]

[query public getQualifiedClassifierAccessor(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getQualifiedClassifierAccessor()', Sequence{genClassifier}) /]

[query public getRawImportedInstanceClassName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getRawImportedInstanceClassName()', Sequence{genClassifier}) /]

[query public getRawInstanceClassName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getRawInstanceClassName()', Sequence{genClassifier}) /]

[query public getSafeUncapName(genClassifier : GenClassifier) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getSafeUncapName()', Sequence{genClassifier}) /]

[query public getValidationDelegate(genClassifier : GenClassifier, constraint : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getValidationDelegate(java.lang.String)', Sequence{genClassifier, constraint}) /]

[query public hasConstraintExpression(genClassifier : GenClassifier, constraint : String) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'hasConstraintExpression(java.lang.String)', Sequence{genClassifier, constraint}) /]

[query public hasOnlyDefaultConstraints(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'hasOnlyDefaultConstraints()', Sequence{genClassifier}) /]

[query public isUncheckedCast(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'isUncheckedCast()', Sequence{genClassifier}) /]

[comment
    Override of services for super interface GenBase 
/]
[query public canGenerate(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'canGenerate()', Sequence{genClassifier}) /]

[query public canGenerateEdit(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'canGenerateEdit()', Sequence{genClassifier}) /]

[query public canGenerateEditor(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'canGenerateEditor()', Sequence{genClassifier}) /]

[query public canGenerateSchema(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'canGenerateSchema()', Sequence{genClassifier}) /]

[query public canGenerateTests(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'canGenerateTests()', Sequence{genClassifier}) /]

[query public capName(genClassifier : GenClassifier, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'capName(java.lang.String)', Sequence{genClassifier, name}) /]

[query public getCopyright(genClassifier : GenClassifier, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getCopyright(java.lang.String)', Sequence{genClassifier, indentation}) /]

[query public getDocumentation(genClassifier : GenClassifier, indentation : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getDocumentation(java.lang.String)', Sequence{genClassifier, indentation}) /]

[query public getEcoreModelElement(genClassifier : GenClassifier) : EModelElement
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getEcoreModelElement()', Sequence{genClassifier}) /]

[query public getGenAnnotation(genClassifier : GenClassifier, source : String) : GenAnnotation
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'getGenAnnotation(java.lang.String)', Sequence{genClassifier, source}) /]

[query public hasCopyright(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'hasCopyright()', Sequence{genClassifier}) /]

[query public hasDocumentation(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'hasDocumentation()', Sequence{genClassifier}) /]

[query public reconcile(genClassifier : GenClassifier) : Boolean
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'reconcile()', Sequence{genClassifier}) /]

[query public safeName(genClassifier : GenClassifier, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'safeName(java.lang.String)', Sequence{genClassifier, name}) /]

[query public uncapName(genClassifier : GenClassifier, name : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'uncapName(java.lang.String)', Sequence{genClassifier, name}) /]

[query public uncapPrefixedName(genClassifier : GenClassifier, input : String) : String
	= invoke('org.eclipse.emf.codegen.ecore.genmodel.GenClassifier', 'uncapPrefixedName(java.lang.String)', Sequence{genClassifier, input}) /]


[query public getIndexOfFirstConstraintDifferentFromNoCircular(genClassifier : GenClassifier) : Integer
	= invoke('org.eclipse.emf.eef.codegen.ecore.services.wrappers.GenClassifierWrapper', 'getIndexOfFirstConstraintDifferentFromNoCircular(org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)', Sequence{genClassifier}) /]
