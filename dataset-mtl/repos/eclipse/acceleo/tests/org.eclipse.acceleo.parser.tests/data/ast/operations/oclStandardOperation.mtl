[comment encoding = UTF-8 /]
[module oclStandardOperation('http://www.eclipse.org/emf/2002/Ecore')/]

[template public generate(eClass : EClass)]


[EClass.allInstances()/]

[eClass.oclAsType(EClass)/]
[eClass.oclIsInvalid()/]
[eClass.oclIsKindOf(EClass)/]
[eClass.oclIsTypeOf(EClass)/]
[eClass.oclIsUndefined()/]

[true <> true/]
[false = true/]
[1 < 2/]
[2 > 2/]
[2 <= 1/]
[1 >= 1/]

['e'.concat('i')/]
['e'.size()/]
['e'.substring(0, 1)/]
['e'.toInteger()/]
['e'.toLower()/]
['e'.toReal()/]
['e'.toUpper()/]

[1.abs()/]
[1.floor()/]
[1.max(2)/]
[1.min(2)/]
[1.round()/]
[1.div(2)/]
[1.mod(2)/]

[Sequence{}->any(true)/]
[Sequence{}->asBag()/]
[Sequence{}->asOrderedSet()/]
[Sequence{}->asSequence()/]
[Sequence{}->asSet()/]
[Sequence{}->collect(true)/]
[Sequence{}->collectNested(true)/]
[Sequence{}->count(eClass)/]
[Sequence{}->excludes(eClass)/]
[Sequence{}->excludesAll(Sequence{})/]
[Sequence{}->excluding(eClass)/]
[Sequence{}->exists(true)/]
[Sequence{}->flatten()/]
[Sequence{}->forAll(true)/]
[Sequence{}->includes(eClass)/]
[Sequence{}->includesAll(Sequence{})/]
[Sequence{}->including(eClass)/]
[Sequence{}->isEmpty()/]
[Sequence{}->isUnique(true)/]
[Sequence{}->notEmpty()/]
[Sequence{}->one(true)/]
[Sequence{}->product(Sequence{})/]
[Sequence{}->reject(true)/]
[Sequence{}->select(true)/]
[Sequence{}->size()/]
[Sequence{}->sortedBy(true)/]
[Sequence{1}->sum()/]


[Sequence{} = Sequence{}/]
[Sequence{} <> Sequence {}/]
[Sequence{}->append('')/]
[Sequence{}->at(1)/]
[Sequence{}->first()/]
[Sequence{}->indexOf('')/]
[Sequence{}->insertAt(1, '')/]
[Sequence{}->last()/]
[Sequence{}->prepend('')/]
[Sequence{}->subSequence(1, 2)/]
[Sequence{}->union(Sequence{})/]


[Bag{} = Bag{}/]
[Bag{} <> Bag{}/]
[Bag{}->intersection(Bag{})/]
[Bag{}->intersection(Set{})/]
[Bag{}->union(Bag{})/]
[Bag{}->union(Set{})/]


[OrderedSet{} = OrderedSet{}/]
[OrderedSet{} = Set{}/]
[OrderedSet{} <> OrderedSet{}/]
[OrderedSet{} <> Set{}/]
[OrderedSet{} - Set{}/]
[OrderedSet{}->append('')/]
[OrderedSet{}->at(1)/]
[OrderedSet{}->first()/]
[OrderedSet{}->indexOf('')/]
[OrderedSet{}->insertAt(1, '')/]
[OrderedSet{}->intersection(Bag{})/]
[OrderedSet{}->intersection(Set{})/]
[OrderedSet{}->last()/]
[OrderedSet{}->prepend('')/]
[OrderedSet{}->subOrderedSet(1, 2)/]
[OrderedSet{}->symmetricDifference(Set{})/]
[OrderedSet{}->union(Bag{})/]
[OrderedSet{}->union(Set{})/]


[Set{} = Set{}/]
[Set{} <> Set{}/]
[Set{} - Set{}/]
[Set{}->intersection(Bag{})/]
[Set{}->intersection(Set{})/]
[Set{}->symmetricDifference(Set{})/]
[Set{}->union(Bag{})/]
[Set{}->union(Set{})/]


[/template]

