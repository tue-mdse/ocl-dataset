[module service_module_1(http://www.eclipse.org/emf/2002/Ecore)/]
[template public test_call_no_argument(c:EClass)]
	[file ('no_argument_implicit_self', false)]
		[invoke('java.lang.Object', 'toString', Sequence{}).oclAsType(String).replace('@[^(]*', '')/]
	[/file]
	[file ('no_argument_explicit_self', false)]
		[c.invoke('java.lang.Object', 'toString', Sequence{}).oclAsType(String).replace('@[^(]*', '')/]
	[/file]
	[file ('no_argument_passed_self', false)]
		[invoke('java.lang.Object', 'toString', Sequence{c}).oclAsType(String).replace('@[^(]*', '')/]
	[/file]
[/template]

[template public test_call_single_argument(c:EClass)]
	[file ('single_argument_implicit_self', false)]
		[invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClass(org.eclipse.emf.ecore.EClass)', Sequence{})/]
	[/file]
	[file ('single_argument_explicit_self', false)]
		[c.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClass(org.eclipse.emf.ecore.EClass)', Sequence{})/]
	[/file]
	[file ('single_argument_passed_self', false)]
		[invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClass(org.eclipse.emf.ecore.EClass)', Sequence{c})/]
	[/file]
[/template]

[template public test_call_multiple_argument(c:EClass)]
	[file ('multiple_argument_implicit_self', false)]
		[invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassString(org.eclipse.emf.ecore.EClass, java.lang.String)', Sequence{c.name})/]
	[/file]
	[file ('multiple_argument_explicit_self', false)]
		[c.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassString(org.eclipse.emf.ecore.EClass   ,java.lang.String   )', Sequence{'AbstractClass'})/]
	[/file]
	[file ('multiple_argument_passed_self', false)]
		[invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassString(org.eclipse.emf.ecore.EClass, java.lang.String)', Sequence{c, c.name})/]
	[/file]
[/template]

[template public test_call_instanceofs(c:EClass)]
	[file ('instanceofs_implicit_self', false)]
		[invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassInstanceOf(org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)', Sequence{c.ePackage})/]
	[/file]
	[file ('instanceofs_explicit_self', false)]
		[c.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassInstanceOf(org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)', Sequence{c.ePackage})/]
	[/file]
	[file ('instanceofs_passed_self', false)]
		[invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassInstanceOf(org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)', Sequence{c, c.ePackage})/]
	[/file]
[/template]

[template public test_call_source_and_parameters(c:EClass)]
[file ('no_parameters_valid_source_no_parameter')]['TRUE'.invoke('java.lang.String', 'toLowerCase()', Sequence{})/][/file]
[file ('no_parameters_invalid_source_valid_parameter')][c.invoke('java.lang.String', 'toLowerCase()', Sequence{'TRUE'})/][/file]
[file ('no_parameters_valid_source_valid_parameter')]['FALSE'.invoke('java.lang.String', 'toLowerCase()', Sequence{'TRUE'})/][/file]

[file ('parameters_valid_source_no_parameter')]['foo'.invoke('java.lang.String', 'matches(java.lang.String)', Sequence{'foo'})/][/file]
[file ('parameters_invalid_source_valid_parameter')][invoke('java.lang.String', 'matches(java.lang.String)', Sequence{'foo', 'foo'})/][/file]
[file ('parameters_valid_source_valid_parameter')]['foo'.invoke('java.lang.String', 'matches(java.lang.String)', Sequence{'foo', 'foo'})/][/file]
[/template]
