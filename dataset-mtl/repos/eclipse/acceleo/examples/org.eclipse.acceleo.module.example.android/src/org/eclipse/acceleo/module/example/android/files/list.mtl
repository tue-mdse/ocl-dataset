[comment encoding = UTF-8 /]
[comment]
  Copyright (c) 2010, 2012 Obeo
  All rights reserved.  This program and the accompanying materials
  are made available under the terms of the Eclipse Public License 1.0
  
  Any license can be applied to the files generated with this template
  and Acceleo.

  author <a href="mailto:jonathan.musset@obeo.fr">Jonathan Musset</a>
[/comment]
[module list('http://www.eclipse.org/acceleo/example/android')/]

[template public list(a : Activity)]
	[file ('/src/android/activities/'.concat(a.name.concat('List.java')), false, 'Cp1252')]
/*******************************************************************************
 * Copyright (c) 2006, 2007, 2008, 2009 Obeo.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Obeo - initial API and implementation
 *******************************************************************************/
package android.activities;

import android.app.ListActivity;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.view.ContextMenu;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ContextMenu.ContextMenuInfo;
import android.widget.ListView;
import android.widget.SimpleCursorAdapter;
import android.widget.AdapterView.AdapterContextMenuInfo;

public class [a.name.toUpperFirst()/]List extends ListActivity {
	
    private static final int ACTIVITY_CREATE=0;
    private static final int ACTIVITY_EDIT=1;
    private static final int INSERT_ID = Menu.FIRST;
    private static final int DELETE_ID = Menu.FIRST + 1;

    private [a.name.toUpperFirst()/]DbAdapter dbHelper;
    
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.list);
        dbHelper = new [a.name.toUpperFirst()/]DbAdapter(this);
        dbHelper.open();
        fillData();
        registerForContextMenu(getListView());
    }
    
    private void fillData() {
        Cursor cursor = dbHelper.fetchAll[a.name.toUpperFirst()/]();
        startManagingCursor(cursor);
        String['['/][']'/] from = new String['['/][']'/]{
	[for (w : Widget | widgets)]
		[if (w.oclIsKindOf(Text))]
        		[a.name.toUpperFirst()/]DbAdapter.KEY_[w.name.toUpper()/],
        		
		[elseif (w.oclIsKindOf(Spinner))]
        		[a.name.toUpperFirst()/]DbAdapter.KEY_[w.name.toUpper()/],

		[/if]
	[/for]
        		};
        int['['/][']'/] to = new int['['/][']'/]{
	[for (w : Widget | widgets)]
		[if (w.oclIsKindOf(Text))]
        		R.id.textRow[w.name.toUpperFirst()/],
        		
		[elseif (w.oclIsKindOf(Spinner))]
        		R.id.textRow[w.name.toUpperFirst()/],

		[/if]
	[/for]
        		};
        
        // Now create a simple cursor adapter and set it to display
        SimpleCursorAdapter adapter = 
        	    new SimpleCursorAdapter(this, R.layout.listrow, cursor, from, to);
        setListAdapter(adapter);
    }
    
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        super.onCreateOptionsMenu(menu);
        menu.add(0, INSERT_ID, 0, R.string.menu_insert);
        return true;
    }

    @Override
    public boolean onMenuItemSelected(int featureId, MenuItem item) {
        switch(item.getItemId()) {
        case INSERT_ID:
        	create[a.name.toUpperFirst()/]();
            return true;
        }
       
        return super.onMenuItemSelected(featureId, item);
    }
	
    @Override
	public void onCreateContextMenu(ContextMenu menu, View v,
			ContextMenuInfo menuInfo) {
		super.onCreateContextMenu(menu, v, menuInfo);
        menu.add(0, DELETE_ID, 0, R.string.menu_delete);
	}

    @Override
	public boolean onContextItemSelected(MenuItem item) {
		switch(item.getItemId()) {
    	case DELETE_ID:
    		AdapterContextMenuInfo info = (AdapterContextMenuInfo) item.getMenuInfo();
	        dbHelper.delete[a.name.toUpperFirst()/](info.id);
	        fillData();
	        return true;
		}
		return super.onContextItemSelected(item);
	}
	
    private void create[a.name.toUpperFirst()/]() {
        Intent i = new Intent(this, [a.name.toUpperFirst()/]Edit.class);
        startActivityForResult(i, ACTIVITY_CREATE);
    }
    
    @Override
    protected void onListItemClick(ListView l, View v, int position, long id) {
        super.onListItemClick(l, v, position, id);
        Intent i = new Intent(this, [a.name.toUpperFirst()/]Edit.class);
        i.putExtra([a.name.toUpperFirst()/]DbAdapter.KEY_ROWID, id);
        startActivityForResult(i, ACTIVITY_EDIT);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, 
                                    Intent intent) {
        super.onActivityResult(requestCode, resultCode, intent);
        fillData();
    }
}
	[/file]
[/template]
