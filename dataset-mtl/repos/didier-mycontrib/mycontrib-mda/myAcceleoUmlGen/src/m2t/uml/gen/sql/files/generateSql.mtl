[comment encoding = UTF-8 /]
[module generateSql('http://www.eclipse.org/uml2/3.0.0/UML')/]

[import m2t::uml::gen::common::files::utilCommon/]
[import m2t::uml::gen::sql::files::utilSql /]

[template public generateSqlFile(m: Model) ? (m.name = 'LogicalView') ]
[comment @main /]
[file ('myGeneratedDataBaseStructure.sql', false)]
################################################################################################################
################# myGeneratedDataBaseStructure.sql #############################################################
################################################################################################################ 
###### Ce fichier.sql sera regulierement reconstruit en fonction de la nouvelle structure du modele UML ########
###### il est fortement conseille de utiliser une copie personnalisee pour bien controller la structure
###### de la base de donnees . Quelques ajustements seront necessaires:
######      * re-ordonner les DROP TABLES
######		* re-ordonner, aujuster et completer les INSERT-INTO
######      * autres ajustements (auto_increment , ....)
######      < UML model = [m.name/]  > 
################################################################################################################

[let databaseName : String = m.queryRetreiveCfgProperty('databaseName').default('myDataBase')] 
CREATE DATABASE IF NOT EXISTS [databaseName/];
USE [databaseName/];
[/let]


[m.genSqlDropTable()/]
######################## CREATE  TABLE ########################################

[m.genSqlCreateTable()/]

#######################   FOREIGN KEY       ####################################

[m.genSqlForeignKey()/]

#########################  INSERT INTO   #####################################

[m.genSqlInsertInto()/]

###################### VERIFICATIONS ###########################################
show tables;
[m.genSelectInSql()/]

[/file]
[/template]
