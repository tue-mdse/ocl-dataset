[comment encoding = UTF-8 /]
[module ServiceAdapterPatternImpl('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public generateElementServiceAdapterImpl(aClass : Class,str : String)]
[comment @main /]
[file ('main/java/com/softtek/app/catalogo/'.concat(aClass.name.toLower()).concat('/service/').concat(aClass.name).concat('ServiceAdapterImpl.java'), false), 'UTF-8')]

package [namespace.name.toLower()/].catalogo.[name.toLower()/].service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.softtek.app.catalogo.[name.toLower()/].repository.[name.toUpperFirst()/]Repository;
import com.softtek.app.domain.[name.toUpperFirst()/];

@Service("[name.toLower()/]ServiceAdapterImpl")
@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
public class [name.toUpperFirst()/]ServiceAdapterImpl implements [name.toUpperFirst()/]ServiceAdapter {

	@Autowired
	private [name.toUpperFirst()/]Repository [name.toLower()/]Repository;

	[for (o: Operation | aClass.ownedOperation) separator('\n')]
	@Transactional(propagation = Propagation.REQUIRED, readOnly = false)
	public [for (p: Parameter | o.ownedParameter)][if (p.direction.toString().equalsIgnoreCase('out'))][p.type.name/][/if][/for] [o.name/]([for(param : Parameter | (o.ownedParameter->select (par : Parameter | par.direction.toString().equalsIgnoreCase('in'))))separator(', ')][param.type.name/] [param.name/][/for] ) { 
		return true;		
	}[/for]
	

}

[/file]
[/template]
