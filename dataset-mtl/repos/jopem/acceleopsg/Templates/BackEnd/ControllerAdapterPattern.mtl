[comment encoding = UTF-8 /]
[module ControllerAdapterPattern('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public generateElementControllerAdapter(aClass : Class, str : String)]

[comment @main /]
[file ('main/java/'.concat(aClass._package.name.replaceAll('\\.','/')).concat('/catalogo/').concat(aClass.name.toLower()).concat('/controller/').concat(aClass.name).concat('ControllerAdapter.java'), false), 'UTF-8') ]
package [_package.name/].catalogo.[name.toLower()/].controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.util.UriComponentsBuilder;

import com.softtek.app.bean.CuentaBean;
import com.softtek.app.domain.Cuenta;
import com.softtek.app.service.CuentaService;
import com.softtek.app.service.CuentaServiceAdapter;


@Controller
public class [name.toUpperFirst()/]ControllerAdapter {
	
	@Autowired
	private [name.toUpperFirst()/]ServiceAdapter [name.toLower()/]ServiceAdapter;
	private [name.toUpperFirst()/]Controller [name.toLower()/]Controller;
	
	
	[for (o: Operation | aClass.ownedOperation) separator('\n')]
		@RequestMapping(value = "/[aClass.name.toLower()/]sAdd[o.name.toUpperFirst()/]", method = RequestMethod.GET, produces = "application/json")
		public @ResponseBody  List<[aClass.name.toUpperFirst()/]> get[o.name.toUpperFirst()/](@RequestParam(value="name", defaultValue="World") 
		String namen, HttpServletRequest request) {

			[aClass.name.toLower()/]ServiceAdapter.[o.name/]([for(param : Parameter | (o.ownedParameter->select (par : Parameter | par.direction.toString().equalsIgnoreCase('in'))))separator(', ')][param.default/][/for]);
		
			return null;
		} 
	[/for]

}

[/file]
[/template]
