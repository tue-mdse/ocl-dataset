[comment encoding = UTF-8 /]
[module ActionsView('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public generateElementActions(aClass : Class)? (aClass.getEAnnotation('crud').toString().contains('crud'))]
[comment @main /]
[file ((aClass.name.toUpperFirst()).concat('/actions.js'), false), 'UTF-8') ]
import axios from 'axios';

export const FETCH_[name.toUpper()/]_LIST_REQUEST = 'FETCH_[name.toUpper()/]_LIST_REQUEST';
export const FETCH_[name.toUpper()/]_LIST_SUCCESS = 'FETCH_[name.toUpper()/]_LIST_SUCCESS';
export const FETCH_[name.toUpper()/]_LIST_FAILURE = 'FETCH_[name.toUpper()/]_LIST_FAILURE';
export const FETCH_[name.toUpper()/]_REQUEST = 'FETCH_[name.toUpper()/]_REQUEST';
export const FETCH_[name.toUpper()/]_SUCCESS = 'FETCH_[name.toUpper()/]_SUCCESS';
export const FETCH_[name.toUpper()/]_FAILURE = 'FETCH_[name.toUpper()/]_FAILURE';
export const CREATE_[name.toUpper()/]_REQUEST = 'CREATE_[name.toUpper()/]_REQUEST';
export const CREATE_[name.toUpper()/]_SUCCESS = 'CREATE_[name.toUpper()/]_SUCCESS';
export const CREATE_[name.toUpper()/]_FAILURE = 'CREATE_[name.toUpper()/]_FAILURE';
export const UPDATE_[name.toUpper()/]_REQUEST = 'UPDATE_[name.toUpper()/]_REQUEST';
export const UPDATE_[name.toUpper()/]_SUCCESS = 'UPDATE_[name.toUpper()/]_SUCCESS';
export const UPDATE_[name.toUpper()/]_FAILURE = 'UPDATE_[name.toUpper()/]_FAILURE';
export const DELETE_[name.toUpper()/]_REQUEST = 'DELETE_[name.toUpper()/]_REQUEST';
export const DELETE_[name.toUpper()/]_SUCCESS = 'DELETE_[name.toUpper()/]_SUCCESS';
export const DELETE_[name.toUpper()/]_FAILURE = 'DELETE_[name.toUpper()/]_FAILURE';

const ROOT_URL = 'http://localhost:8080/SADF';

/**
 ** Fetch [name.toUpperFirst()/] List actions
 **/

export function fetch[name.toUpperFirst()/]ListRequest() {
  return { type: FETCH_[name.toUpper()/]_LIST_REQUEST };
}

export function fetch[name.toUpperFirst()/]ListSuccess(payload) {
  return { type: FETCH_[name.toUpper()/]_LIST_SUCCESS, payload };
}

export function fetch[name.toUpperFirst()/]ListFailure(error) {
  return { type: FETCH_[name.toUpper()/]_LIST_FAILURE, payload: error };
}

export function fetch[name.toUpperFirst()/]List(term) {

  let url = `${ROOT_URL}/[name.toLower()/]`;
  if (term) {
    url = `${url}?q=${term}`;
  }

  const request = axios({
    method: 'get',
    url: url,
    headers: ['[]'/]
  });

  return dispatch => {
    dispatch(fetch[name.toUpperFirst()/]ListRequest());
    return request
      .then(res => dispatch(fetch[name.toUpperFirst()/]ListSuccess(res)))
      .catch(ex => dispatch(fetch[name.toUpperFirst()/]ListFailure(ex)));
  };
}

/**
 ** Fetch Cliente actions
 **/

export function fetch[name.toUpperFirst()/]Request() {
  return { type: FETCH_[name.toUpper()/]_REQUEST };
}

export function fetch[name.toUpperFirst()/]Success(payload) {
  return { type: FETCH_[name.toUpper()/]_SUCCESS, payload };
}

export function fetch[name.toUpperFirst()/]Failure(error) {
  return { type: FETCH_[name.toUpper()/]_FAILURE, payload: error };
}

export function fetch[name.toUpperFirst()/](id) {

  const url = `${ROOT_URL}/[name.toLower()/]/${id}`;

  const request = axios({
    method: 'get',
    url: url,
    headers: ['[]'/]
  });

  return dispatch => {
    dispatch(fetch[name.toUpperFirst()/]Request());
    return request
      .then(res => dispatch(fetch[name.toUpperFirst()/]Success(res)))
      .catch(ex => dispatch(fetch[name.toUpperFirst()/]Failure(ex)));
  };
}

/**
 ** Create [name.toUpperFirst()/] actions
 **/

export function create[name.toUpperFirst()/]Request() {
  return { type: CREATE_[name.toUpper()/]_REQUEST };
}

export function create[name.toUpperFirst()/]Success(payload) {
  return { type: CREATE_[name.toUpper()/]_SUCCESS, payload };
}

export function create[name.toUpperFirst()/]Failure(error) {
  return { type: CREATE_[name.toUpper()/]_FAILURE, payload: error };
}

export function create[name.toUpperFirst()/](props) {

  const url = `${ROOT_URL}/[name.toLower()/]`;

  const request = axios({
    method: 'post',
    url: url,
    data: props,
    headers: ['[]'/]
  });

  return dispatch => {
    dispatch(create[name.toUpperFirst()/]Request());
    return request
      .then(res => dispatch(create[name.toUpperFirst()/]Success(res)))
      .catch(ex => dispatch(create[name.toUpperFirst()/]Failure(ex)));
  };
}

/**
 ** Update [name.toUpperFirst()/] actions
 **/

export function update[name.toUpperFirst()/]Request() {
  return { type: UPDATE_[name.toUpper()/]_REQUEST };
}

export function update[name.toUpperFirst()/]Success(payload) {
  return { type: UPDATE_[name.toUpper()/]_SUCCESS, payload };
}

export function update[name.toUpperFirst()/]Failure(error) {
  return { type: UPDATE_[name.toUpper()/]_FAILURE, payload: error };
}

export function update[name.toUpperFirst()/](id, props) {

  const url = `${ROOT_URL}/[name.toLower()/]/${id}`;

  const request = axios({
    method: 'put',
    url: url,
    data: props,
    headers: ['[]'/]
  });

  return dispatch => {
    dispatch(update[name.toUpperFirst()/]Request());
    return request
      .then(res => dispatch(update[name.toUpperFirst()/]Success(res)))
      .catch(ex => dispatch(update[name.toUpperFirst()/]Failure(ex)));
  };
}

/**
 ** Delete [name.toUpperFirst()/] actions
 **/

export function delete[name.toUpperFirst()/]Request() {
  return { type: DELETE_[name.toUpper()/]_REQUEST };
}

export function delete[name.toUpperFirst()/]Success(payload) {
  return { type: DELETE_[name.toUpper()/]_SUCCESS, payload };
}

export function delete[name.toUpperFirst()/]Failure(error) {
  return { type: DELETE_[name.toUpper()/]_FAILURE, payload: error };
}

export function delete[name.toUpperFirst()/](id) {

  const url = `${ROOT_URL}/[name.toLower()/]/${id}`;

  const request = axios({
    method: 'delete',
    url: url,
    headers: ['[]'/]
  });

  return dispatch => {
    dispatch(fetch[name.toUpperFirst()/]Request());
    return request
      .then(res => dispatch(delete[name.toUpperFirst()/]Success(res)))
      .catch(ex => dispatch(delete[name.toUpperFirst()/]Failure(ex)));
  };
}
[/file]
[/template]
