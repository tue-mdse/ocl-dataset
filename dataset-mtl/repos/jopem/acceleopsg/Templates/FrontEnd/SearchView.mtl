[comment encoding = UTF-8 /]
[module SearchView('http://www.eclipse.org/uml2/5.0.0/UML')]
[template public generateElementSearch(aClass : Class)? (aClass.getEAnnotation('crud').toString().contains('crud'))]
[comment @main /]
[file ((aClass.name.toUpperFirst()).concat('/').concat(aClass.name.toUpperFirst()).concat('Search.js'), false), 'UTF-8') ]
import React, { Component, PropTypes } from 'react';
import { Button } from 'react-bootstrap';
import { connect } from 'react-redux';
import { reduxForm, Field, reset } from 'redux-form';

import { fetch[name.toUpperFirst()/]List } from './actions';

class [name.toUpperFirst()/]Search extends Component {
  constructor(props) {
    super(props);
    this.onFormSubmit = this.onFormSubmit.bind(this);
  }

  onFormSubmit(props) {
    this.props.fetch[name.toUpperFirst()/]List(props.term)
      .then(() => {
        reset;
      });
  }

  render() {
    const { handleSubmit, submitting } = this.props;

    return(
      <form
        role="form"
        className="input-group"
        onSubmit={handleSubmit(this.onFormSubmit)}>
        <Field
          name="term"
          component="Input"
          className="form-control"
          placeholder="Buscar [name.toUpperFirst()/]..." />
        <span className="input-group-btn">
          <Button
            type="submit"
            className="btn btn-green"
            disabled={submitting}>
              <i className={`${submitting ? 'fa fa-refresh fa-spin' : 'fa fa-search'}`} />
          </Button>
        </span>
      </form>
    );
  }
}

[name.toUpperFirst()/]Search.propTypes = {
  fetch[name.toUpperFirst()/]List: PropTypes.func.isRequired,
  handleSubmit: PropTypes.func.isRequired,
  submitting: PropTypes.bool.isRequired
};

const form = reduxForm({
  form: '[name.toUpperFirst()/]SearchForm',
});

export default connect(null, { fetch[name.toUpperFirst()/]List })(form([name.toUpperFirst()/]Search));
[/file]
[/template]
