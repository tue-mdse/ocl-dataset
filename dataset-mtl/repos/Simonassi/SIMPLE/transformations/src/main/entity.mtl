[comment encoding = UTF-8 /]
[module entity('http://www.example.org/ctx', 'http://www.example.org/sml')]

[import org::eclipse::acceleo::module::sample::main::resources /]
[import org::eclipse::acceleo::module::sample::main::generate /]


[comment template that generates all java code/]
[template public javaEntities(aSMLModel : SMLModel)]
[comment @main/]
[for (n : EntityClass  | eAllContents(EntityParticipant).isOfType->asSet()->union(contextModel.eAllContents(ctx::EntityClass)->asSet()))]
[javaEntitie(n)/]
[/for]
[for (r : RelatorClass  | eAllContents(RelatorParticipant).isOfType->asSet())]
[javaRelator(r)/]
[/for]
[for (s : SituationType | elements.oclAsType(SituationType))]
[javaSituation(s)/]
[/for]
[/template]

[comment datatype representation in java code/]
[template public datatype(d : DataType) post (trim())]
	[d.name.clean()/]
[/template]

[comment generate a java class based on a EntityClass/]
[template public javaEntitie(n : EntityClass)]
[file (getProperty('genDir')+'/'+getProperty('javaDir')+'/'+getProperty('javaPackage').replaceAll('\\.', '/')+'/model/'+n.name.toUpperFirst()+'.java', false, 'UTF-8')]
package [getProperty('javaPackage')/].model;

import [getProperty('builtinsPackage')/].*;

public[if isAbstract] abstract[/if] class [n.name.toUpperFirst().clean()/][if (not superclass.oclIsUndefined())] extends [superclass.name.toUpperFirst().clean()/][/if] {
	
	[for (a : Attribute | attribute)]
	private [datatype(a.datatype)/] [name.clean()/];
	[/for]
	[if isAbstract = false]private String key;[/if]	

	[for (a : Attribute | attribute)]
	public void set[name.toUpperFirst().clean()/]([datatype(a.datatype)/] [name.clean()/]) {
		this.[name.clean()/] = [name.clean()/];
	}

	public [datatype(a.datatype)/] get[name.toUpperFirst().clean()/]() {
		return [name.clean()/];
	}
	
	[/for]
	[if isAbstract = false]
	public String getKey() {
		return key;
	}

	public void setKey(String key) {
		this.key = key;
	}
	[/if]	
}
[/file]
[/template]

[comment generate a java class based on a EntityClass/]
[template public javaRelator(n : RelatorClass)]
[file (getProperty('genDir')+'/'+getProperty('javaDir')+'/'+getProperty('javaPackage').replaceAll('\\.', '/')+'/model/'+n.name.toUpperFirst()+'.java', false, 'UTF-8')]
package [getProperty('javaPackage')/].model;
import [getProperty('builtinsPackage')/].*;

public class [n.name.toUpperFirst().clean()/] extends Situation{
	
	[for (a : Attribute | attribute)]
	private [datatype(a.datatype)/] [name.clean()/];
	[/for]
	[for (a: Association | self.associations())]
	private [a.target.name.toUpperFirst().clean()/] [name.clean()/];
	[/for]
	private String key;	

	[for (a : Attribute | attribute)]
	public [datatype(a.datatype)/] get[name.toUpperFirst().clean()/]() {
		return [name.clean()/];
	}

	public void set[name.toUpperFirst().clean()/]([datatype(a.datatype)/] [name.clean()/]) {
		this.[name.clean()/] = [name.clean()/];
	}
	
	[/for]
	[for (a: Association | self.associations())]
	public [a.target.name.toUpperFirst().clean()/] get[name.toUpperFirst().clean()/]() {
		return [name.clean()/];
	}

	public void set[name.toUpperFirst()/]([a.target.name.toUpperFirst().clean()/] [name.clean()/]) {
		this.[name.clean()/] = [name.clean()/];
	}
	
	[/for]
	public String getKey() {
		return key;
	}

	public void setKey(String key) {
		this.key = key;
	}

	@Override
	public Situation createNewSit(EventBean event) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object doActionAtCreateDeactivationEvent() {
		// TODO Auto-generated method stub
		return null;
	}

}
[/file]

[/template]

[template public javaSituation(s : SituationType)]
[file (getProperty('genDir')+'/'+getProperty('javaDir')+'/'+getProperty('javaPackage').replaceAll('\\.', '/')+'/situation/'+s.name()+'.java', false, 'UTF-8')]
package [getProperty('javaPackage')/].situation;

import com.espertech.esper.client.EventBean;

import [getProperty('javaPackage')/].model.*;
import [getProperty('javaPackage')/].situation.*;
import [getProperty('builtinsPackage')/].*;

public class [s.name()/] extends Situation {
	
	[for (p : Participant | s.elements->filter(Participant))]
	[javaSituation_attribute_declaration(p)/]
	[/for]

	[for (p : Participant | s.elements->filter(Participant))]
	[javaSituation_attribute_get_set(p)/]
	[/for]
	
	@Override
	public [s.name()/](){
		setSitName("[s.name.toUpperFirst()/]");

		setEplA("[epl_ativacao(s)/]");

		setEplA("[epl_desativacao(s)/]");
	}

	@Override
	public Situation createNewSit(EventBean event) {
		[s.name.toUpperFirst()/] [s.name.toLowerFirst() /] = new [s.name/]();
        
		try{
			[for (p : Participant | s.elements->filter(Participant))]
			[javaSituation_createNewSet(p)/]
			[/for]
		}catch(Exception e){
    		System.out.println("[s.name.toUpperFirst()/]: " + e);
    	}
		
		return [s.name.toLowerFirst() /];
	}

	@Override
	public Object doActionAtCreateDeactivationEvent() {
		[s.name.toUpperFirst()/] [s.name.toLowerFirst() /] = new [s.name/]();
        
		try{
			[for (p : Participant | s.elements->filter(Participant))]
			[javaSituation_doActionAtCreateDeactivationEvent(p)/]
			[/for]
		}catch(Exception e){
    		System.out.println("[s.name.toUpperFirst()/]: " + e);
    	}
		
		return [s.name.toLowerFirst() /];
	}

}

[/file]
[/template]

[template public javaSituation_attribute_declaration(p : Participant) post(trim())]
private [print_participant_name(p)/] [binding_name(p)/];
[/template]

[template public javaSituation_attribute_get_set(p : Participant) post(trim())]
[javaSituation_attribute_get_set_1(p)/]
[/template]

[template public javaSituation_attribute_get_set_1(p : Participant) post(trim())]
public void set[javaSituation_attribute_get_set_name(p)/]( [print_participant_name(p)/] [binding_name(p)/]) {
	this.[binding_name(p)/] = [binding_name(p)/];
}

public [print_participant_name(p)/] get[javaSituation_attribute_get_set_name(p)/]() {
	return [binding_name(p)/];
}
[/template]

[template public javaSituation_attribute_get_set_name(p : Participant) post(trim())]
[if(p.nodeParameter.oclIsUndefined())]
[print_participant_name(p) /][index_name(p) /]
[else]
[p.nodeParameter.name.toUpperFirst() /]
[/if]
[/template]

[template public javaSituation_attribute_get_set_more_than_1(p : Participant) post(trim())]
public void set[print_participant_name(p)/](int index, [print_participant_name(p)/] [print_participant_name_lower(p)/]) {
	this.[print_participant_name_lower(p)/][ '[' /]index[ ']' /] = [print_participant_name_lower(p)/];
}

public [print_participant_name(p)/] get[print_participant_name(p)/](int index) {
	return [print_participant_name_lower(p)/][ '[' /]index[ ']' /];
}
[/template]


[template public javaSituation_createNewSet(p : Participant) post(trim())]

[p.eContainer(SituationType).name.toLowerFirst() /].set[javaSituation_attribute_get_set_name(p)/](([print_participant_name(p)/])event.get("[binding_name(p)/]"));
[/template]


[template public javaSituation_doActionAtCreateDeactivationEvent(p : Participant) post(trim())]
[p.eContainer(SituationType).name.toLowerFirst() /].set[javaSituation_attribute_get_set_name(p)/](this.get[javaSituation_attribute_get_set_name(p)/]());
[/template]