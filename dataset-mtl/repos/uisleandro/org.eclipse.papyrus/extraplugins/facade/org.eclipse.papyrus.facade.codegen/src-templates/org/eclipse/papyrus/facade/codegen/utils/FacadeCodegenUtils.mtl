[comment]Copyright (c) 2013 CEA LIST.

All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
 CEA LIST - Initial API and implementation[/comment]
[comment encoding = UTF-8 /]
[module FacadeCodegenUtils('http://www.eclipse.org/emf/2002/Ecore','http://www.eclipse.org/papyrus/facademapping', 'http://www.eclipse.org/emf/2002/GenModel','http://www.eclipse.org/uml2/5.0.0/UML')/]

[query public getUMLMetaElement( facadeMetaElement : EObject,  genModel :GenModel) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getUMLMetaElement( org.eclipse.emf.ecore.EObject,org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeMetaElement,genModel}) 
/]

[query public findUMLMetaElement( facadeMetaElement : EObject,  genModel :GenModel) : EObject
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'findUMLMetaElement( org.eclipse.emf.ecore.EObject,org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeMetaElement,genModel}) 
/]

[query public findUMLGetAccessor( facadeMetaFeature : EObject,  facadeGenModel :GenModel) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'findUMLGetAccessor( org.eclipse.emf.ecore.EObject,org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeMetaFeature,facadeGenModel}) 
/]

[query public findUMLAccessorName( facadeMetaFeature : EObject,  facadeGenModel :GenModel) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'findUMLAccessorName( org.eclipse.emf.ecore.EObject,org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeMetaFeature,facadeGenModel}) 
/]

[query public getClassifierAccessorName(  genModel:GenModel,  mapping:Mapping) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getClassifierAccessorName( org.eclipse.emf.codegen.ecore.genmodel.GenModel,org.eclipse.papyrus.facademapping.Mapping)', Sequence{genModel,mapping}) 
/]

[query public getFeatureAccessorName(  genModel:GenModel,  mapping:Mapping) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getFeatureAccessorName( org.eclipse.emf.codegen.ecore.genmodel.GenModel,org.eclipse.papyrus.facademapping.Mapping)', Sequence{genModel,mapping}) 
/]

[query public getUMLPackageName( mapping : Mapping) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getUMLPackageName( org.eclipse.papyrus.facademapping.Mapping)', Sequence{mapping}) 
/]

[query public getPackagePathFromUML( facadeMetaElement:EObject) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getPackagePathFromUML(org.eclipse.emf.ecore.EObject)', Sequence{facadeMetaElement}) 
/]

[query public getPackagePathFromMapping( mapping : Mapping) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getPackagePathFromMapping(org.eclipse.papyrus.facademapping.Mapping)', Sequence{mapping}) 
/]

[query public getUMLFactory( facadeMetaElement:EObject,  genModel:GenModel) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getUMLFactory( org.eclipse.emf.ecore.EObject,org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeMetaElement,genModel})
/]

[query public getUMLAccessorName( mapping : Mapping,  genModel :GenModel) : EObject
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getUMLAccessorName( org.eclipse.papyrus.facademapping.Mapping ,org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{mapping,genModel}) 
/]

[query public getAllMetaclassMappings( facadeGenModel :GenModel) : Sequence(Mapping)
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getAllMetaclassMappings(org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeGenModel}) 
/]

[query public getUMLFeatureFromMapping( mapping : Mapping,  genModel :GenModel) : EObject
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getUMLFeatureFromMapping( org.eclipse.papyrus.facademapping.Mapping ,org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{mapping,genModel}) 
/]

[query public getAllFeatureMappings( facadeGenModel :GenModel) : Sequence(Mapping)
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getAllFeatureMappings(org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeGenModel}) 
/]

[query public getAppropriateQualifiedTypeName( genClassifier :GenClassifier) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getAppropriateQualifiedTypeName(org.eclipse.emf.codegen.ecore.genmodel.GenClassifier)', Sequence{genClassifier}) 
/]

[query public getAllStereotypeQualifiedNames( facadeMetaElement:EObject,  facadeGenModel:GenModel) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getAllStereotypeQualifiedNames( org.eclipse.emf.ecore.EObject,org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeMetaElement,facadeGenModel})
/]

[query public getNonAssociationStereotypeQualifiedNames( facadeMetaElement:EObject,  facadeGenModel:GenModel) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getNonAssociationStereotypeQualifiedNames( org.eclipse.emf.ecore.EObject,org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeMetaElement,facadeGenModel})
/]

[query public getUMLEnumElementFromMapping( mapping : Mapping) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getUMLEnumElementFromMapping( org.eclipse.papyrus.facademapping.Mapping )', Sequence{mapping}) 
/]

[query public getFacadeEnumElementFromMapping( mapping : Mapping) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getFacadeEnumElementFromMapping( org.eclipse.papyrus.facademapping.Mapping )', Sequence{mapping}) 
/]

[query public getAllEnumLiteralMappings( facadeGenModel :GenModel) : Sequence(Mapping)
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getAllEnumLiteralMappings(org.eclipse.emf.codegen.ecore.genmodel.GenModel)', Sequence{facadeGenModel}) 
/]

[query public isStereotypeProperty(genFeature:GenFeature) : Boolean
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'isStereotypeProperty(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genFeature}) 
/]

[query public isExtensionProperty(genFeature:GenFeature) : Boolean
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'isExtensionProperty(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genFeature}) 
/]

[query public isExtentionStereotypeProperty(genFeature:GenFeature) : Boolean
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'isExtentionStereotypeProperty(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genFeature}) 
/]

[query public isPrimtiveList(genTypedElement:GenTypedElement) : Boolean
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'isPrimtiveList(org.eclipse.emf.codegen.ecore.genmodel.GenTypedElement)', Sequence{genTypedElement}) 
/]

[query public isPrimitive(genTypedElement:GenTypedElement) : Boolean
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'isPrimitive(org.eclipse.emf.codegen.ecore.genmodel.GenTypedElement)', Sequence{genTypedElement}) 
/]

[query public getCorrespondingStereotypeMapping(mapping : Mapping, genModel:GenModel,genPackage:GenPackage) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getCorrespondingStereotypeMapping(org.eclipse.papyrus.facademapping.Mapping,org.eclipse.emf.codegen.ecore.genmodel.GenModel,org.eclipse.emf.codegen.ecore.genmodel.GenPackage)', Sequence{mapping,genModel,genPackage}) 
/]

[query public getStereotypeQualifiedName(genFeature:GenFeature) : String
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'getStereotypeQualifiedName(org.eclipse.emf.codegen.ecore.genmodel.GenFeature)', Sequence{genFeature}) 
/]

[query public copyEcore(genPackage:GenPackage) : OclVoid 
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'copyEcore(org.eclipse.emf.codegen.ecore.genmodel.GenPackage)', Sequence{genPackage}) 
/]

[query public initUtilsCaches(traceabilityContext : OclAny) : OclVoid 
= invoke('org.eclipse.papyrus.facade.codegen.utils.FacadeCodegenUtils', 'initUtilsCaches()', Sequence{}) 
/]
