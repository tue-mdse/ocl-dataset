[comment]Copyright (c) 2013 CEA LIST.

All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
 Obeo - Initial API and implementation
 CEA LIST - Modification to support Facade code generation[/comment]
[comment encoding = UTF-8 /]
[module AbstractRepresentingClass('http://www.eclipse.org/emf/2002/GenModel', 'http://www.eclipse.org/emf/2002/Ecore')/]

[import org::eclipse::emf::eef::codegen::ecore::services::common /]
[import org::eclipse::emf::eef::codegen::ecore::services::header /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenModel /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenPackage /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenClass /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenClassifier /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenFeature /]
[import org::eclipse::emf::eef::codegen::ecore::services::wrappers::GenDataType /]
[import org::eclipse::emf::eef::codegen::ecore::services::StringUtil /]


[template public abstractRepresentingClass(genPackage : GenPackage) { genModel : GenModel = genPackage.genModel; packageName : String = genPackage.getUtilitiesPackageName(); className : String = 'AbstractRepresentingElement'} ]
[genModel.initializeImportManager(packageName, className)/]

[genModel.getImportedName('org.eclipse.emf.common.util.URI')/]

[file (genPackage.abstractRepresentingClassPath(className), false, 'UTF-8')]
[genModel.includeHeader()/]
package [packageName/];
[let content : String = genPackage. abstractRepresentingFileContent(genModel, className)]
[genModel.genSortedImports()/]
[content/]
[/let]
[/file]
[/template]

[template protected  abstractRepresentingFileContent(genPackage : GenPackage, genModel : GenModel, className : String)]

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;
import org.eclipse.papyrus.facade.utils.RepresentingElement;


public abstract class AbstractRepresentingElement extends MinimalEObjectImpl.Container implements RepresentingElement {


	protected EObject __representedElement;

	@Override
	public EObject get__Represented() {
		return __representedElement;
	}

	@Override
	public void set__Represented(EObject represented) {
		this.__representedElement = represented;
	}


}

[/template]

[query public abstractRepresentingClassPath(genPackage : GenPackage, className : String) : String
	= genPackage.genModel.extractSourceDirectory(genPackage.genModel.modelDirectory) + '/'+ genPackage.getUtilitiesPackageName().toPath() + '/' +
		className+ '.java'/]
