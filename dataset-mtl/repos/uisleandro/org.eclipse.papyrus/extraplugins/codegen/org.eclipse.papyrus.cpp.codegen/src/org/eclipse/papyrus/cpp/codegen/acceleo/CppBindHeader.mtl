[module CppBindHeader('http://www.eclipse.org/uml2/5.0.0/UML')/]
[import org::eclipse::papyrus::acceleo::GenUtils/]
[import org::eclipse::papyrus::cpp::codegen::utils::CppGenUtils/]
[import org::eclipse::papyrus::cpp::codegen::acceleo::util::clazz::CppClassIncludeClassDeclaration/]
[import org::eclipse::papyrus::cpp::codegen::acceleo::util::CppTemplates/]
[import org::eclipse::papyrus::cpp::codegen::preferences::CppCodeGenUtils/]
[import org::eclipse::papyrus::cpp::codegen::acceleo::CppIncludeUtils/]


[template public CppBindHeader(class : Class)] 
#ifndef [getFullNameUC()/]_H
#define [getFullNameUC()/]_H

/************************************************************
              [class.name/] template binding header
 ************************************************************/

[for (path : String |
	Sequence{ _package.cppOwnerPackageIncludePath() }
		->addAll( CppClassAllIncludes() )
		->flatten()
		->asOrderedSet())]
[path.IncludeDirective()/]
[/for]

[CppIncludeHeader()/]

[let tb : TemplateBinding = getTemplateBindings()]
[let templateElement : Element = tb.target->asSequence()->first()]
[IncludeDirective( _package.getFullPath() + '/' + templateElement.owner.oclAsType(NamedElement).name + '.' + getHeaderSuffix() )/]

[openNS()/] 
/************************************************************/
typedef [templateElement.owner.oclAsType(NamedElement).name/]<[for (tb.parameterSubstitution)][CppTemplateBindingParameter()/][/for]> [class.name/];

[closeNS()/]
[/let][/let]

/************************************************************
              End of [class.name/] template binding header
 ************************************************************/

#endif
[/template]
