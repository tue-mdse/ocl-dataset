[comment encoding = UTF-8 /]
[module EnumService('http://www.eclipse.org/uml2/5.0.0/UML')/]

[query public literal(arg1 : String, arg2 : String) : String
	= invoke('org.eclipse.papyrus.qompass.designer.core.acceleo.EnumService',
		'literal(java.lang.String, java.lang.String)', Sequence{arg1, arg2}) /]

[query public enumSvcPrefix() : String
	= invoke('org.eclipse.papyrus.qompass.designer.core.acceleo.EnumService', 'enumSvcPrefix()', Sequence{}) /]

[query public literalKey(arg0 : Element, arg1 : String, arg2 : String) : String
	= invoke('org.eclipse.papyrus.qompass.designer.core.acceleo.EnumService', 'literalKey(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public quoteLiteral(arg0 : Element, arg1 : String, arg2 : String) : String
	= invoke('org.eclipse.papyrus.qompass.designer.core.acceleo.EnumService', 'quoteLiteral(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

[query public checkAndCreateDependency(arg0 : Classifier, arg1 : NamedElement) : OclVoid
	= invoke('org.eclipse.papyrus.qompass.designer.core.acceleo.EnumService', 'checkAndCreateDependency(org.eclipse.uml2.uml.Classifier, org.eclipse.uml2.uml.NamedElement)', Sequence{arg0, arg1}) /]

[query public createEnumPackage(arg0 : Package) : OclVoid
	= invoke('org.eclipse.papyrus.qompass.designer.core.acceleo.EnumService', 'createEnumPackage(org.eclipse.uml2.uml.Package)', Sequence{arg0}) /]