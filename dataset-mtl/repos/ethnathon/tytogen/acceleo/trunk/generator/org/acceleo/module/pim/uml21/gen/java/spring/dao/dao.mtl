[module dao('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::acceleo::module::pim::uml21::gen::java::spring::profile/]
[import org::acceleo::module::pim::uml21::gen::java::spring::common/]
[import org::acceleo::module::pim::uml21::gen::java::spring::ioc/]
[import org::acceleo::module::pim::uml21::gen::java::spring::services::uml2services /]
[import org::acceleo::module::pim::uml21::gen::java::spring::services::springservices /]

[import org::acceleo::module::pim::uml21::services::stringservice /]
[import org::acceleo::module::pim::uml21::services::uml2services /]

[import org::acceleo::module::pim::uml21::gen::java::common::common /]
[import org::acceleo::module::pim::uml21::gen::java::common::specifics /]
[import org::acceleo::module::pim::uml21::gen::java::common::dataTypes /]
[import org::acceleo::module::pim::uml21::gen::java::common::structure /]

[comment][template private fullFilePath(class : Class)]
[if (class.isDao())][class.pathToMainJava()/]/[class.daoPackage().toPath()/]/I[class.name/].java[/if]
[/template][/comment]


[template public generateSpringDao(class : Class) ? (class.isDao())]
[comment This template is called by the main module file /]
[file (fullFilePath(class.pathToMainJava(), class.daoPackage().toPath(),'I'.concat(class.name).concat('.java')), false))]
package [daoPackage()/];

// [protected ('imports')] 
import org.sharengo.orm.DAO;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;

import org.sharengo.exceptions.TechnicalException;

[if (class.operationsParametersTypes()->isEmpty())]
import [class.entityPackage()/].[class.name/];
[else]
	[for (type:Type|class.operationsParametersTypes())]
		[if (type.hasStereotype(getProperty('Entity')))]
import [class.entityPackage()/].[type.name/];
		[else]
import [type.getCompleteName()/];	
		[/if]
	[/for]
[/if]

[class.genCollectionImports()/]

// [/protected] 

[class.generateJavadoc()/]
public interface I[class.name/] extends DAO<[class.name/]> {	
	// Custom operations
[for (oper:Operation|class.ownedOperation)]
	[oper.generateJavadoc()/]
	public [oper.generateReturn()/] [oper.name/]([oper.generateRawParameters()/]) throws TechnicalException;
[/for]
}
[/file]
[/template]
