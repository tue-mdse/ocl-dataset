[module ioc('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::acceleo::module::pim::uml21::gen::java::spring::common/]
[import org::acceleo::module::pim::uml21::services::uml2services /]
[import org::acceleo::module::pim::uml21::services::stringservice /]

[import org::acceleo::module::pim::uml21::gen::java::spring::services::springservices /]

[import org::acceleo::module::pim::uml21::gen::java::common::specifics /]
[import org::acceleo::module::pim::uml21::gen::java::common::dataTypes /]
[import org::acceleo::module::pim::uml21::gen::java::common::structure /]

[template public iocImport(class : Class, stereotypeName : String) post(trim())]
[for (dependency:Dependency|class.clientDependency)]
	[if (dependency.supplier->asSequence()->first().hasStereotype(getProperty(stereotypeName)))]
		[if (stereotypeName = 'Config')]
			import [dependency.supplier.daoPackage()/].[dependency.supplier.name/];
		[else]
			import [dependency.supplier.daoPackage()/].I[dependency.supplier.name/];
		[/if]
	[/if]
[/for]

[/template]


[template public iocAccessors(class : Class, stereotypeName : String)]
[for (dependency:Dependency|class.clientDependency)]
	[if (dependency.supplier->asSequence()->first().hasStereotype(getProperty(stereotypeName)))]
private I[dependency.supplier.name/] [dependency.supplier.name.toLowerFirst()/] = null;

	public void set[dependency.supplier.name/](I[dependency.supplier.name/] [supplier.name.toLowerFirst()/]) {
		this.[dependency.supplier.name.toLowerFirst()/] = [dependency.supplier.name.toLowerFirst()/];
	}
	
	public I[dependency.supplier.name/] get[dependency.supplier.name/]() {
		return this.[dependency.supplier.name.toLowerFirst()/];
	}
[/if]
[/for]

[/template]


[template public iocAccessors2(class : Class, stereotypeName : String)]
[for (dependency:Dependency|class.clientDependency)]
	[if (dependency.supplier->asSequence()->first().hasStereotype(getProperty(stereotypeName)))]
	private [dependency.supplier.name/] [dependency.supplier.name.toLowerFirst()/] = null;

	public void set[dependency.supplier.name/]([dependency.supplier.name/] [dependency.supplier.name.toLowerFirst()/]) {
		this.[dependency.supplier.name.toLowerFirst()/] = [dependency.supplier.name.toLowerFirst()/];
	}
	
	public [dependency.supplier.name/] get[dependency.supplier.name/]() {
		return this.[dependency.supplier.name.toLowerFirst()/];
	}
	[/if]
[/for]

[/template]


[template public iocInjectors(class : Class, stereotypeName : String)]
[for (dependency:Dependency|class.clientDependency)]
[if (dependency.supplier->asSequence()->first().hasStereotype(getProperty(stereotypeName)))]
	 	<property name="[dependency.supplier.name.toLowerFirst()/]" ref="[dependency.supplier.computeBeanId()/]"/>			
[/if]
[/for]

[/template]



[comment][query private hasStereotype(arg0 : Element, arg1 : String) : Boolean = invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'hasStereotype(org.eclipse.uml2.uml.Element, java.lang.String)', Sequence{arg0, arg1})/]
[query private computeBeanId(arg0 : String) : String = invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'computeBeanId(java.lang.String)', Sequence{arg0})/]
[query private computeBeanId(arg0 : Element) : String = invoke('org.acceleo.module.pim.uml21.gen.java.spring.services.SpringServices', 'computeBeanId(org.eclipse.uml2.uml.Element)', Sequence{arg0})/][/comment]
