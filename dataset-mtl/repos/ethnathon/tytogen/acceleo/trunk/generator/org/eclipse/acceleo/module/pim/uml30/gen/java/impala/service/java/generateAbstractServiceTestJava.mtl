[module generateAbstractServiceTestJava('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::acceleo::module::pim::uml21::gen::java::common::common /]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::service::common::servicePathUtil /]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::common::pathUtil /]
[import org::acceleo::module::pim::uml21::gen::java::common::requests /]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::common::requests /]
[import org::acceleo::module::pim::uml21::gen::java::spring::java::javaclass /]
[import org::acceleo::module::pim::uml21::gen::java::common::structure /]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::common::structureUtil /]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::common::stringUtil /]
[import org::acceleo::module::pim::uml21::gen::java::common::dataTypes /]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::main::common::mainCommon /]

[template public generateAbstractServiceTestJava(aModel : Model)]
[file (aModel.generateProjectFolder().concat(aModel.pathToTestJava()).concat('/tests/integration/AbstractServiceTest.java'), false, 'UTF-8')]
package tests.integration;
//[protected ('imports')]
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.sql.DataSource;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import junit.framework.TestCase;



import org.impalaframework.facade.Impala;
import org.impalaframework.module.ModuleDefinitionSource;
import org.impalaframework.module.RootModuleDefinition;
import org.impalaframework.interactive.definition.source.TestDefinitionSource;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.util.FileCopyUtils;
//[/protected]

public abstract class AbstractServiceTest extends TestCase implements
        ModuleDefinitionSource {
    protected JdbcTemplate jdbcTemplate = null;
    protected final Log log = LogFactory.getLog(getClass());

	@Override
    public void setUp() throws Exception {
        super.setUp();
        Impala.init(this);
        this.jdbcTemplate = new JdbcTemplate(AbstractServiceTest.getBean(
                "dataSource", DataSource.class));

        runScript("../[aModel.generateSpecificProjectFolder('-build')/]/src/main/resources/db/emptyDB.txt");
        runScript("../[aModel.generateSpecificProjectFolder('-build')/]/src/main/resources/db/populateDB.txt");
    }

    private void runScript(String file) throws IOException,
            FileNotFoundException {
        String empty = FileCopyUtils.copyToString(new FileReader(file));
        String['['/][']'/] statements = empty.split(";");
        for (String sql : statements) {
            if (sql.trim().length() > 0) {
                jdbcTemplate.execute(sql);
            }
        }
    }

	protected static <T extends Object> T getBean(String beanName, Class<T> type) {
		return Impala.getModuleBean("[aModel.generateProjectFolder()/]", beanName, type);
	}

    public final RootModuleDefinition getModuleDefinition() {
        return new TestDefinitionSource("[aModel.generateSpecificProjectFolder('-hibernate')/]", "[aModel.generateSpecificProjectFolder('-dao')/]", "[aModel.generateSpecificProjectFolder('-service')/]").getModuleDefinition();

//        return new SimpleModuleDefinitionSource("[aModel.generateSpecificProjectFolder('-main')/]",
//                new String['[]'/] { "[aModel.generateSpecificProjectFolder('-service-context')/].xml", "[aModel.generateSpecificProjectFolder('-dao')/].xml"
//				[if (aModel.eAllContents(Class)->select(aClass:Class|aClass.isManageableEntity())->notEmpty())]
//									, "[aModel.generateProjectFolder()/]-manageable.xml"
//				[/if] 
//				 }, new String['[]'/] {
//                        "[aModel.generateSpecificProjectFolder('-hibernate')/]", 
//                        "[aModel.generateSpecificProjectFolder('-dao')/]", 
//                        "[aModel.generateSpecificProjectFolder('-service')/]" })
//                .getModuleDefinition();
    }
	
}
[/file]
[/template]
