[comment]
/*
 *  TOPPERS/A-RTEGEN
 *      Automotive Runtime Environment Generator
 *
 *  Copyright (C) 2013-2016 by Eiwa System Management, Inc., JAPAN
 *
 *  上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
 *  ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
 *  変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 *  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
 *      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
 *      スコード中に含まれていること．
 *  (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
 *      用できる形で再配布する場合には，再配布に伴うドキュメント（利用
 *      者マニュアルなど）に，上記の著作権表示，この利用条件および下記
 *      の無保証規定を掲載すること．
 *  (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
 *      用できない形で再配布する場合には，次のいずれかの条件を満たすこ
 *      と．
 *    (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
 *        作権表示，この利用条件および下記の無保証規定を掲載すること．
 *    (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
 *        報告すること．
 *  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
 *      害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
 *      また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
 *      由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
 *      免責すること．
 *
 *  本ソフトウェアは，AUTOSAR（AUTomotive Open System ARchitecture）仕
 *  様に基づいている．上記の許諾は，AUTOSARの知的財産権を許諾するもので
 *  はない．AUTOSARは，AUTOSAR仕様に基づいたソフトウェアを商用目的で利
 *  用する者に対して，AUTOSARパートナーになることを求めている．
 *
 *  本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 *  よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
 *  に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
 *  アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
 *  の責任を負わない．
 * 
 *  $Id: moduleInterlinkHeader.mtl 19918 2016-01-08 06:05:46Z hiroki.kitagawa $
 */
[/comment]
[comment encoding = UTF-8 /]
[module moduleInterlinkHeader('http://nces.is.nagoya-u.ac.jp/a-rte/rte/module')]

[import jp::ac::nagoya_u::is::nces::a_rte::codegen::rte::common::schmApi /]
[import jp::ac::nagoya_u::is::nces::a_rte::codegen::rte::common::fileUtil /]
[import jp::ac::nagoya_u::is::nces::a_rte::codegen::rte::common::symbolUtil /]

[template public genModuleInterlinkHeader(aModuleInterlinkHeader : ModuleInterlinkHeader)]
[file (aModuleInterlinkHeader.fileName, false, 'ASCII')]
	[aModuleInterlinkHeader.genFileHeader()/]

	[aModuleInterlinkHeader.genFileIncludes()/]

	[aModuleInterlinkHeader.genInternalGlobalVariableDeclarations()/]

	[aModuleInterlinkHeader.genSchmApiFunctionDeclarations()/]
	
	[aModuleInterlinkHeader.genExecutableEntityDeclarations()/]

	[aModuleInterlinkHeader.genFileFooter()/]
[/file]
[/template]

[template private genFileHeader(aModuleInterlinkHeader : ModuleInterlinkHeader)]
[aModuleInterlinkHeader.genFileHeaderComment()/]

[aModuleInterlinkHeader.genGuardDeclarationStart()/]

[aModuleInterlinkHeader.genExternCDeclarationStart()/]
[/template]

[template private genFileFooter(aModuleInterlinkHeader : ModuleInterlinkHeader)]
[aModuleInterlinkHeader.genExternCDeclarationEnd()/]

[aModuleInterlinkHeader.genGuardDeclarationEnd()/]
[/template]

[template private genInternalGlobalVariableDeclarations (aModuleInterlinkHeader : ModuleInterlinkHeader) ]
/*
 * Internal Global Variable Declarations
 */
[for (aGroup : GlobalVariableFileContentsGroup | aModuleInterlinkHeader.globalVariableGroup)]
	[aGroup.memoryMapping.genMemoryMappingStart()/]

	[for (aGlobalVariable : GlobalVariable | aGroup.globalVariable)]
		[aGlobalVariable.genGlobalVariableDeclaration()/]
	[/for]

	[aGroup.memoryMapping.genMemoryMappingEnd()/]

[/for]
[/template]

[template private genSchmApiFunctionDeclarations (aModuleInterlinkHeader : ModuleInterlinkHeader) ]
/*
 * Basic Software Scheduler API Implementation Function Declarations
 */
[for (aGroup : SchmApiFileContentsGroup | aModuleInterlinkHeader.schmApiGroup)]
	[aGroup.memoryMapping.genMemoryMappingStart()/]

	[for (aSchmApi : SchmApi | aGroup.schmApi)]
		[aSchmApi.genFunctionDeclaration()/]

	[/for]

	[aGroup.memoryMapping.genMemoryMappingEnd()/]

[/for]
[/template]

[template private genExecutableEntityDeclarations (aModuleInterlinkHeader : ModuleInterlinkHeader) ]
/*
 * BswSchedulableEntity Declarations
 */
[for (aGroup : ExecutableEntityFileContentsGroup | aModuleInterlinkHeader.dependentExecutableEntityGroup)]
	[aGroup.memoryMapping.genMemoryMappingStart()/]

	[for (aExecutableEntity : ExecutableEntity | aGroup.executableEntity)]
		[aExecutableEntity.genFunctionDeclaration()/]
	[/for]

	[aGroup.memoryMapping.genMemoryMappingEnd()/]

[/for]
[/template]
