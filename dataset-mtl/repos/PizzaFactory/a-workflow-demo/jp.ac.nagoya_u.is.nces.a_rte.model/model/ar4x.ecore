<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="ar4x" nsURI="http://nces.is.nagoya-u.ac.jp/a-rte/ar4x" nsPrefix="ar4x">
  <eAnnotations source="http://www.eclipse.org/OCL/Import">
    <details key="ecore" value="http://www.eclipse.org/emf/2002/Ecore#/"/>
    <details key="module" value="rte.ecore#//module"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Ar4xRoot"/>
  <eSubpackages name="m2" nsURI="http://nces.is.nagoya-u.ac.jp/a-rte/ar4x/m2" nsPrefix="m2">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
      <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
      <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="M2Root">
      <eStructuralFeatures xsi:type="ecore:EReference" name="autosar" lowerBound="1"
          eType="#//m2/Autosar" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Autosar" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="#//m2/String"
          derived="true" iD="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="モデル要素識別のための内部ID"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="arPackage" upperBound="-1"
          eType="#//m2/ArPackage" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ArPackage" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="element" upperBound="-1"
          eType="#//m2/ArElement" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="arPackage" upperBound="-1"
          eType="#//m2/ArPackage" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ArElement" abstract="true" eSuperTypes="#//m2/Identifiable"/>
    <eClassifiers xsi:type="ecore:EClass" name="Identifiable" abstract="true" eSuperTypes="#//m2/Referrable">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="category" eType="#//m2/CategoryString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="M2Object" abstract="true"/>
    <eClassifiers xsi:type="ecore:EClass" name="SwBaseType" eSuperTypes="#//m2/ArElement">
      <eOperations name="getUpperLimitForUnsignedInteger" lowerBound="1" eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="baseTypeEncoding" lowerBound="1"
          eType="#//m2/BaseTypeEncodingString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="baseTypeSize" eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="nativeDeclaration" eType="#//m2/NativeDeclarationString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SenderReceiverInterface" eSuperTypes="#//m2/PortInterface">
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataElement" upperBound="-1"
          eType="#//m2/VariableDataPrototype" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="invalidationPolicy" upperBound="-1"
          eType="#//m2/InvalidationPolicy" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableDataPrototype" eSuperTypes="#//m2/AutosarDataPrototype">
      <eStructuralFeatures xsi:type="ecore:EReference" name="initValue" eType="#//m2/ValueSpecification"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Referrable" abstract="true" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="#//m2/String"
          derived="true" iD="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="モデル要素識別のための内部ID"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="shortName" lowerBound="1"
          eType="#//m2/Identifier"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="reference" lowerBound="1"
          eType="#//m2/Ref" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="モデル要素を参照するためのAUTOSARリファレンス"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwComponentType" abstract="true" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="port" upperBound="-1"
          eType="#//m2/PortPrototype" containment="true" eOpposite="#//m2/PortPrototype/parent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PortPrototype" abstract="true" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" eType="#//m2/SwComponentType"
          derived="true" eOpposite="#//m2/SwComponentType/port"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="portApiOption" upperBound="-1"
          eType="#//m2/PortApiOption" eOpposite="#//m2/PortApiOption/port"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AtomicSwComponentType" abstract="true"
        eSuperTypes="#//m2/SwComponentType">
      <eOperations name="getUsingApplicationDataTypes" ordered="false" upperBound="-1"
          eType="#//m2/ApplicationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="使用しているアプリケーションデータ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getUsingDataTypes()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->select(oclIsKindOf(ApplicationDataType)).oclAsType(ApplicationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getUsingImplementationDataTypes" ordered="false" upperBound="-1"
          eType="#//m2/ImplementationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="使用しているアプリケーションデータ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getUsingDataTypes()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->collect(t | getImplementationDataType(t))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getUsingDataTypes" ordered="false" upperBound="-1" eType="#//m2/AutosarDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="使用しているAUTOSARデータ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let internalUsingDataTypes : Set(AutosarDataType) = if self.internalBehavior.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then Set{}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else self.internalBehavior.getUsingDataTypes()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;in getRPorts().getUsingDataTypes()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->union(getPPorts().getUsingDataTypes())&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->union(internalUsingDataTypes)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getImplementationDataType" lowerBound="1" eType="#//m2/ImplementationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="実装データ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if self.internalBehavior.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else self.internalBehavior.getImplementationDataType(dataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <eParameters name="dataType" lowerBound="1" eType="#//m2/AutosarDataType"/>
      </eOperations>
      <eOperations name="getImplementationDataTypes" ordered="false" upperBound="-1"
          eType="#//m2/ImplementationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if self.internalBehavior.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then Set{}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else self.internalBehavior.getImplementationDataTypes(applicationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <eParameters name="applicationDataType" lowerBound="1" eType="#//m2/ApplicationDataType"/>
      </eOperations>
      <eOperations name="getUsingClientServerInterfaces" ordered="false" upperBound="-1"
          eType="#//m2/ClientServerInterface">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getRPorts().requiredInterface&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->union(getPPorts().providedInterface)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->select(oclIsKindOf(ClientServerInterface)).oclAsType(ClientServerInterface)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getRPorts" ordered="false" upperBound="-1" eType="#//m2/RPortPrototype">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.port&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->select(oclIsKindOf(RPortPrototype)).oclAsType(RPortPrototype)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getPPorts" ordered="false" upperBound="-1" eType="#//m2/PPortPrototype">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.port&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->select(oclIsKindOf(PPortPrototype)).oclAsType(PPortPrototype)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="internalBehavior" eType="#//m2/SwcInternalBehavior"
          containment="true" eOpposite="#//m2/SwcInternalBehavior/parent">
        <eAnnotations source="tags">
          <details key="xml.roleWrapperElement" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ApplicationSwComponentType" eSuperTypes="#//m2/AtomicSwComponentType"/>
    <eClassifiers xsi:type="ecore:EClass" name="RPortPrototype" eSuperTypes="#//m2/PortPrototype">
      <eOperations name="getUsingDataTypes" ordered="false" upperBound="-1" eType="#//m2/AutosarDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="使用しているデータ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if self.requiredInterface.oclIsKindOf(SenderReceiverInterface)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then self.requiredInterface.oclAsType(SenderReceiverInterface).dataElement.type&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if self.requiredInterface.oclIsKindOf(ClientServerInterface)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.requiredInterface.oclAsType(ClientServerInterface).operation.argument.type&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else OrderedSet(AutosarDataType){}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="requiredInterface" lowerBound="1"
          eType="#//m2/PortInterface">
        <eAnnotations source="stereotypes">
          <details key="isOfType" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="requiredComSpec" upperBound="-1"
          eType="#//m2/RPortComSpec" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PPortPrototype" eSuperTypes="#//m2/PortPrototype">
      <eOperations name="getUsingDataTypes" ordered="false" upperBound="-1" eType="#//m2/AutosarDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="使用しているデータ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if self.providedInterface.oclIsKindOf(SenderReceiverInterface)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then self.providedInterface.oclAsType(SenderReceiverInterface).dataElement.type&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if self.providedInterface.oclIsKindOf(ClientServerInterface)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.providedInterface.oclAsType(ClientServerInterface).operation.argument.type&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else OrderedSet(AutosarDataType){}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="providedInterface" lowerBound="1"
          eType="#//m2/PortInterface">
        <eAnnotations source="stereotypes">
          <details key="isOfType" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="providedComSpec" upperBound="-1"
          eType="#//m2/PPortComSpec" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwcInternalBehavior" eSuperTypes="#//m2/Identifiable #//m2/InternalBehavior">
      <eOperations name="getReferencerIncludedDataTypeSets" ordered="false" upperBound="-1"
          eType="#//m2/IncludedDataTypeSet">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="アプリケーションデータ型を参照するIncludedDataTypeSetの取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.includedDataTypeSet&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->select(i | i.dataType->includes(dataType))"/>
        </eAnnotations>
        <eParameters name="dataType" lowerBound="1" eType="#//m2/ApplicationDataType"/>
      </eOperations>
      <eOperations name="getReferencerIncludedDataTypeSets" ordered="false" upperBound="-1"
          eType="#//m2/IncludedDataTypeSet">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="実装データ型を参照するIncludedDataTypeSetの取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.includedDataTypeSet&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->select(i | i.dataType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->collect(t | getImplementationDataType(t))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;->includes(dataType))"/>
        </eAnnotations>
        <eParameters name="dataType" lowerBound="1" eType="#//m2/ImplementationDataType"/>
      </eOperations>
      <eOperations name="getUsingDataTypes" ordered="false" upperBound="-1" eType="#//m2/AutosarDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="使用しているAUTOSARデータ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.includedDataTypeSet.dataType->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getImplementationDataType" lowerBound="1" eType="#//m2/ImplementationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="実装データ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if dataType.oclIsKindOf(ImplementationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then dataType.oclAsType(ImplementationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else self.getImplementationDataType(dataType.oclAsType(ApplicationDataType))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <eParameters name="dataType" lowerBound="1" eType="#//m2/AutosarDataType"/>
      </eOperations>
      <eOperations name="getImplementationDataType" lowerBound="1" eType="#//m2/ImplementationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let implDataType : ImplementationDataType = getImplementationDataTypes(applicationDataType)->any(true)&#xA;&#x9;&#x9;&#x9;&#x9;in if implDataType.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else implDataType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
        <eParameters name="applicationDataType" lowerBound="1" eType="#//m2/ApplicationDataType"/>
      </eOperations>
      <eOperations name="getImplementationDataTypes" ordered="false" upperBound="-1"
          eType="#//m2/ImplementationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.dataTypeMapping.dataTypeMap->select(m | m.applicationDataType = applicationDataType).implementationDataType->asOrderedSet()"/>
        </eAnnotations>
        <eParameters name="applicationDataType" lowerBound="1" eType="#//m2/ApplicationDataType"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="runnable" lowerBound="1"
          upperBound="-1" eType="#//m2/RunnableEntity" containment="true" eOpposite="#//m2/RunnableEntity/parent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="event" upperBound="-1"
          eType="#//m2/RteEvent" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="portApiOption" upperBound="-1"
          eType="#//m2/PortApiOption" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="includedDataTypeSet"
          upperBound="-1" eType="#//m2/IncludedDataTypeSet" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//m2/AtomicSwComponentType" derived="true" eOpposite="#//m2/AtomicSwComponentType/internalBehavior"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="explicitInterRunnableVariable"
          upperBound="-1" eType="#//m2/VariableDataPrototype" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ExecutableEntity" abstract="true"
        eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="canEnterExclusiveArea"
          upperBound="-1" eType="#//m2/ExclusiveArea" eOpposite="#//m2/ExclusiveArea/enterExecutableEntity"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="runsInsideExclusiveArea"
          upperBound="-1" eType="#//m2/ExclusiveArea"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swAddrMethod" eType="#//m2/SwAddrMethod"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RunnableEntity" eSuperTypes="#//m2/ExecutableEntity">
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataSendPoint" upperBound="-1"
          eType="#//m2/VariableAccess" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataReceivePointByArgument"
          upperBound="-1" eType="#//m2/VariableAccess" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="serverCallPoint" upperBound="-1"
          eType="#//m2/ServerCallPoint" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="event" upperBound="-1"
          eType="#//m2/RteEvent" eOpposite="#//m2/RteEvent/startOnEvent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//m2/SwcInternalBehavior" derived="true" eOpposite="#//m2/SwcInternalBehavior/runnable"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="#//m2/CIdentifier"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="writtenLocalVariable"
          upperBound="-1" eType="#//m2/VariableAccess" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="readLocalVariable" upperBound="-1"
          eType="#//m2/VariableAccess" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableAccess" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="accessedVariable" lowerBound="1"
          eType="#//m2/AutosarVariableRef" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AutosarVariableRef" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="autosarVariableIref"
          eType="#//m2/VariableInAtomicSwcTypeInstanceRef" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="autosarVariable" eType="#//instance/VariableDataInstanceInSwc"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="localVariable" eType="#//m2/VariableDataPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableInAtomicSwcTypeInstanceRef"
        eSuperTypes="#//m2/M2Object #//m2/IInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="portPrototype" lowerBound="1"
          eType="#//m2/PortPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetDataPrototype"
          lowerBound="1" eType="#//m2/VariableDataPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteEvent" abstract="true" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="startOnEvent" eType="#//m2/RunnableEntity"
          eOpposite="#//m2/RunnableEntity/event"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="config" upperBound="-1"
          eType="#//ecuc/RteEventToTaskMapping" derived="true" eOpposite="#//ecuc/RteEventToTaskMapping/rteEvent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TimingEvent" eSuperTypes="#//m2/RteEvent">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="period" eType="#//m2/TimeValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BackgroundEvent" eSuperTypes="#//m2/RteEvent"/>
    <eClassifiers xsi:type="ecore:EClass" name="DataSendCompletedEvent" eSuperTypes="#//m2/RteEvent">
      <eStructuralFeatures xsi:type="ecore:EReference" name="eventSource" lowerBound="1"
          eType="#//m2/VariableAccess"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="eventSourceData" lowerBound="1"
          eType="#//instance/VariableDataInstanceInSwc" changeable="false" volatile="true"
          transient="true" derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="eventSource.accessedVariable.autosarVariable"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataReceivedEvent" eSuperTypes="#//m2/RteEvent">
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataIref" lowerBound="1"
          eType="#//m2/RVariableInAtomicSwcInstanceRef" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="data" lowerBound="1"
          eType="#//instance/VariableDataInstanceInSwc"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataReceiveErrorEvent" eSuperTypes="#//m2/RteEvent">
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataIref" lowerBound="1"
          eType="#//m2/RVariableInAtomicSwcInstanceRef" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="data" lowerBound="1"
          eType="#//instance/VariableDataInstanceInSwc"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RVariableInAtomicSwcInstanceRef" eSuperTypes="#//m2/M2Object #//m2/IInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextRPort" lowerBound="1"
          eType="#//m2/PortPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetDataElement" lowerBound="1"
          eType="#//m2/VariableDataPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucModuleConfigurationValues" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitionRef" lowerBound="1"
          eType="#//m2/Ref"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ecucDefEdition" lowerBound="1"
          eType="#//m2/RevisionLabelString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="implementationConfigVariant"
          lowerBound="1" eType="#//m2/EcucConfigurationVariantEnum"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="container" lowerBound="1"
          upperBound="-1" eType="#//m2/EcucContainerValue" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucContainerValue" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitionRef" lowerBound="1"
          eType="#//m2/Ref"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parameterValue" upperBound="-1"
          eType="#//m2/EcucParameterValue" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="referenceValue" upperBound="-1"
          eType="#//m2/EcucAbstractReferenceValue" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="subContainer" upperBound="-1"
          eType="#//m2/EcucContainerValue" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucParameterValue" abstract="true"
        eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitionRef" lowerBound="1"
          eType="#//m2/Ref"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucNumericalParamValue" eSuperTypes="#//m2/EcucParameterValue">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
          eType="#//m2/Numerical"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucTextualParamValue" eSuperTypes="#//m2/EcucParameterValue">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
          eType="#//m2/VerbatimString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucAbstractReferenceValue" abstract="true"
        eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="definitionRef" lowerBound="1"
          eType="#//m2/Ref"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucReferenceValue" eSuperTypes="#//m2/EcucAbstractReferenceValue">
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
          eType="#//m2/Identifiable"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucInstanceReferenceValue" eSuperTypes="#//m2/EcucAbstractReferenceValue">
      <eStructuralFeatures xsi:type="ecore:EReference" name="valueIref" lowerBound="1"
          eType="#//m2/AnyInstanceRef" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
          eType="#//instance/IInstanceObject"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RPortComSpec" abstract="true" eSuperTypes="#//m2/M2Object"/>
    <eClassifiers xsi:type="ecore:EClass" name="PPortComSpec" abstract="true" eSuperTypes="#//m2/M2Object"/>
    <eClassifiers xsi:type="ecore:EClass" name="ReceiverComSpec" abstract="true" eSuperTypes="#//m2/RPortComSpec">
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataElement" lowerBound="1"
          eType="#//m2/VariableDataPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SenderComSpec" abstract="true" eSuperTypes="#//m2/PPortComSpec">
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataElement" lowerBound="1"
          eType="#//m2/VariableDataPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="transmissionAcknowledge"
          eType="#//m2/TransmissionAcknowledgementRequest" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TransmissionAcknowledgementRequest"
        eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="timeout" lowerBound="1"
          eType="#//m2/TimeValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NonqueuedSenderComSpec" eSuperTypes="#//m2/SenderComSpec">
      <eStructuralFeatures xsi:type="ecore:EReference" name="initValue" lowerBound="1"
          eType="#//m2/ValueSpecification" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="QueuedSenderComSpec" eSuperTypes="#//m2/SenderComSpec"/>
    <eClassifiers xsi:type="ecore:EClass" name="NonqueuedReceiverComSpec" eSuperTypes="#//m2/ReceiverComSpec">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="aliveTimeout" lowerBound="1"
          eType="#//m2/TimeValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="initValue" lowerBound="1"
          eType="#//m2/ValueSpecification" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="filter" eType="#//m2/DataFilter"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PortInterface" eSuperTypes="#//m2/ArElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="CompositionSwComponentType" eSuperTypes="#//m2/SwComponentType">
      <eStructuralFeatures xsi:type="ecore:EReference" name="component" upperBound="-1"
          eType="#//m2/SwComponentPrototype" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="connector" upperBound="-1"
          eType="#//m2/SwConnector" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwConnector" abstract="true" eSuperTypes="#//m2/Identifiable"/>
    <eClassifiers xsi:type="ecore:EClass" name="AssemblySwConnector" eSuperTypes="#//m2/SwConnector">
      <eStructuralFeatures xsi:type="ecore:EReference" name="requester" lowerBound="1"
          eType="#//instance/PortInstanceInComposition"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="provider" lowerBound="1"
          eType="#//instance/PortInstanceInComposition"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="providerIref" lowerBound="1"
          eType="#//m2/PPortPrototypeInCompositionInstanceRef" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="requesterIref" lowerBound="1"
          eType="#//m2/RPortPrototypeInCompositionInstanceRef" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DelegationSwConnector" eSuperTypes="#//m2/SwConnector">
      <eStructuralFeatures xsi:type="ecore:EReference" name="innerPort" lowerBound="1"
          eType="#//instance/PortInstanceInComposition"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="outerPort" lowerBound="1"
          eType="#//m2/PortPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="innerPortIref" lowerBound="1"
          eType="#//m2/PortInCompositionInstanceRef" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PortPrototypeInCompositionInstanceRef"
        abstract="true" eSuperTypes="#//m2/M2Object #//m2/IInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextComponent" lowerBound="1"
          eType="#//m2/SwComponentPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RPortPrototypeInCompositionInstanceRef"
        eSuperTypes="#//m2/PortPrototypeInCompositionInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetRPort" lowerBound="1"
          eType="#//m2/RPortPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PPortPrototypeInCompositionInstanceRef"
        eSuperTypes="#//m2/PortPrototypeInCompositionInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetPPort" lowerBound="1"
          eType="#//m2/PPortPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwComponentPrototype" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="#//m2/SwComponentType">
        <eAnnotations source="stereotypes">
          <details key="isOfType" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="instance" upperBound="-1"
          eType="#//instance/SwComponentInstanceInSystem" derived="true" eOpposite="#//instance/SwComponentInstanceInSystem/prototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ValueSpecification" abstract="true"
        eSuperTypes="#//m2/M2Object"/>
    <eClassifiers xsi:type="ecore:EClass" name="AutosarDataType" abstract="true" eSuperTypes="#//m2/ArElement">
      <eOperations name="getSwImplPolicy" lowerBound="1" eType="#//m2/SwImplPolicyEnum">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if swDataDefProps.swImplPolicy.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then SwImplPolicyEnum::unspecified&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.swImplPolicy&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swDataDefProps" eType="#//m2/SwDataDefProps"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="invalidValue" eType="#//m2/ValueSpecification"
          changeable="false" volatile="true" transient="true" derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="if swDataDefProps.invalidValue.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.invalidValue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="compuMethod" eType="#//m2/CompuMethod"
          changeable="false" volatile="true" transient="true" derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="if swDataDefProps.compuMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.compuMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataConstr" eType="#//m2/DataConstr"
          changeable="false" volatile="true" transient="true" derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="if swDataDefProps.dataConstr.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.dataConstr&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swAddrMethod" eType="#//m2/SwAddrMethod"
          changeable="false" volatile="true" transient="true" derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="if swDataDefProps.swAddrMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.swAddrMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ApplicationDataType" abstract="true"
        eSuperTypes="#//m2/AutosarDataType"/>
    <eClassifiers xsi:type="ecore:EClass" name="ImplementationDataType" eSuperTypes="#//m2/AutosarDataType">
      <eOperations name="getLeafImplementationDataType" lowerBound="1" eType="#//m2/ImplementationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="末端の実装データ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if swDataDefProps.implementationDataType.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;then self&#xA;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.implementationDataType.getLeafImplementationDataType()&#xA;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isPrimitiveType" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getLeafImplementationDataType().category = 'VALUE'"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isPointerType" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getLeafImplementationDataType().category = 'DATA_REFERENCE'"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isArrayType" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getLeafImplementationDataType().category = 'ARRAY'"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isStructType" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getLeafImplementationDataType().category = 'STRUCTURE'"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isUnionType" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getLeafImplementationDataType().category = 'UNION'"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isRedefinitionType" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="category = 'TYPE_REFERENCE'"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isComplexType" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not isPrimitiveType()"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="subElement" upperBound="-1"
          eType="#//m2/ImplementationDataTypeElement" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="baseType" eType="#//m2/SwBaseType"
          changeable="false" volatile="true" transient="true" derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="if swDataDefProps.baseType.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.baseType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="swAlignment" eType="#//m2/AlignmentType"
          changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="if swDataDefProps.swAlignment.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.swAlignment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ImplementationDataTypeElement" eSuperTypes="#//m2/Identifiable">
      <eOperations name="isRedefinitionType" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="category = 'TYPE_REFERENCE'"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="arraySize" eType="#//m2/PositiveInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="arraySizeSemantics" eType="#//m2/ArraySizeSemanticsEnum"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="subElement" upperBound="-1"
          eType="#//m2/ImplementationDataTypeElement" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swDataDefProps" eType="#//m2/SwDataDefProps"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ArraySizeSemanticsEnum">
      <eLiterals name="fixedSize"/>
      <eLiterals name="variableSize" value="1"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwDataDefProps" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="invalidValue" eType="#//m2/ValueSpecification"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="baseType" eType="#//m2/SwBaseType"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="swImplPolicy" eType="#//m2/SwImplPolicyEnum"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swAddrMethod" eType="#//m2/SwAddrMethod"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="swAlignment" eType="#//m2/AlignmentType"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="compuMethod" eType="#//m2/CompuMethod"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataConstr" eType="#//m2/DataConstr"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="implementationDataType"
          eType="#//m2/ImplementationDataType"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swPointerTargetProps"
          eType="#//m2/SwPointerTargetProps" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataTypeMap" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="implementationDataType"
          lowerBound="1" eType="#//m2/ImplementationDataType"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="applicationDataType"
          lowerBound="1" eType="#//m2/ApplicationDataType"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataTypeMappingSet" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataTypeMap" upperBound="-1"
          eType="#//m2/DataTypeMap" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="modeRequestTypeMap" upperBound="-1"
          eType="#//m2/ModeRequestTypeMap" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModeDeclarationGroupPrototype" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="#//m2/ModeDeclarationGroup">
        <eAnnotations source="stereotypes">
          <details key="isOfType" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModeRequestTypeMap" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="implementationDataType"
          lowerBound="1" eType="#//m2/ImplementationDataType"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="modeGroup" lowerBound="1"
          eType="#//m2/ModeDeclarationGroup"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModeDeclaration" eSuperTypes="#//m2/ArElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="ModeDeclarationGroup" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="initialMode" lowerBound="1"
          eType="#//m2/ModeDeclaration"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="modeDeclaration" ordered="false"
          lowerBound="1" upperBound="-1" eType="#//m2/ModeDeclaration" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ApplicationPrimitiveDataType" eSuperTypes="#//m2/ApplicationDataType"/>
    <eClassifiers xsi:type="ecore:EClass" name="AutosarDataPrototype" abstract="true"
        eSuperTypes="#//m2/DataPrototype">
      <eOperations name="getSwAddrMethod" lowerBound="1" eType="#//m2/SwAddrMethod">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="アドレッシング方式の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let implType : m2::ImplementationDataType = getImplementationDataType() , applType : m2::ApplicationDataType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;= getApplicationDataType()&#xA;&#x9;&#x9;&#x9;&#x9;in if not self.swAddrMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.swAddrMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if not implType.swAddrMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then implType.swAddrMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if not applType.swAddrMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then applType.swAddrMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif endif endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getSwAlignment" lowerBound="1" eType="#//m2/AlignmentType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="アラインメントの取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let implType : m2::ImplementationDataType = getImplementationDataType()&#xA;&#x9;&#x9;&#x9;&#x9;in if not self.swAlignment.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.swAlignment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if not implType.swAlignment.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then implType.swAlignment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getApplicationDataType" lowerBound="1" eType="#//m2/ApplicationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="アプリケーションデータ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if self.type.oclIsKindOf(m2::ApplicationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then self.type.oclAsType(m2::ApplicationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getImplementationDataType" lowerBound="1" eType="#//m2/ImplementationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="実装データ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if self.type.oclIsKindOf(m2::ImplementationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then self.type.oclAsType(m2::ImplementationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataPrototype" abstract="true" eSuperTypes="#//m2/Identifiable">
      <eOperations name="getSwImplPolicy" lowerBound="1" eType="#//m2/SwImplPolicyEnum">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if swDataDefProps.swImplPolicy.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then SwImplPolicyEnum::unspecified&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.swImplPolicy&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swDataDefProps" eType="#//m2/SwDataDefProps"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swAddrMethod" eType="#//m2/SwAddrMethod"
          changeable="false" volatile="true" transient="true" derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="if swDataDefProps.swAddrMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.swAddrMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="swAlignment" eType="#//m2/AlignmentType"
          changeable="false" volatile="true" transient="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="if swDataDefProps.swAlignment.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else swDataDefProps.swAlignment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1"
          eType="#//m2/AutosarDataType">
        <eAnnotations source="stereotypes">
          <details key="isOfType" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ExclusiveArea" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="swcConfig" upperBound="-1"
          eType="#//ecuc/RteExclusiveAreaImplementation" derived="true" eOpposite="#//ecuc/RteExclusiveAreaImplementation/rteExclusiveArea"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="bswConfig" upperBound="-1"
          eType="#//ecuc/RteBswExclusiveAreaImpl" eOpposite="#//ecuc/RteBswExclusiveAreaImpl/rteBswExclusiveArea"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//m2/InternalBehavior" eOpposite="#//m2/InternalBehavior/exclusiveArea"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="enterExecutableEntity"
          upperBound="-1" eType="#//m2/ExecutableEntity" eOpposite="#//m2/ExecutableEntity/canEnterExclusiveArea"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NumericalValueSpecification" eSuperTypes="#//m2/ValueSpecification">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
          eType="#//m2/Numerical"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TextValueSpecification" eSuperTypes="#//m2/ValueSpecification">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1"
          eType="#//m2/VerbatimString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ConstantReference" eSuperTypes="#//m2/ValueSpecification">
      <eOperations name="getEndValueSpec" lowerBound="1" eType="#//m2/ValueSpecification">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="最終的に参照されるValueSpecificationを取得する"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if constant.valueSpec.oclIsKindOf(ConstantReference)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then constant.valueSpec.oclAsType(ConstantReference).getEndValueSpec()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else constant.valueSpec&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="constant" lowerBound="1"
          eType="#//m2/ConstantSpecification"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ReferenceValueSpecification" eSuperTypes="#//m2/ValueSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="NOTE 未サポートのため，属性は定義しない．"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ArrayValueSpecification" eSuperTypes="#//m2/ValueSpecification">
      <eStructuralFeatures xsi:type="ecore:EReference" name="element" lowerBound="1"
          upperBound="-1" eType="#//m2/ValueSpecification" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RecordValueSpecification" eSuperTypes="#//m2/ValueSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="NOTE 未サポートのため，属性は定義しない．"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="field" lowerBound="1"
          upperBound="-1" eType="#//m2/ValueSpecification" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ApplicationValueSpecification" eSuperTypes="#//m2/ValueSpecification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="NOTE 未サポートのため，属性は定義しない．"/>
      </eAnnotations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ConstantSpecification" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="valueSpec" lowerBound="1"
          eType="#//m2/ValueSpecification" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OperationInvokedEvent" eSuperTypes="#//m2/RteEvent">
      <eStructuralFeatures xsi:type="ecore:EReference" name="operationIref" lowerBound="1"
          eType="#//m2/POperationInAtomicSwcInstanceRef" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="operation" lowerBound="1"
          eType="#//instance/POperationInstanceInSwc" eOpposite="#//instance/POperationInstanceInSwc/operationInvokedEvent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="POperationInAtomicSwcInstanceRef"
        eSuperTypes="#//m2/M2Object #//m2/IInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextPPort" lowerBound="1"
          eType="#//m2/PPortPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetProvidedOperation"
          lowerBound="1" eType="#//m2/ClientServerOperation"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ClientServerInterface" eSuperTypes="#//m2/PortInterface">
      <eStructuralFeatures xsi:type="ecore:EReference" name="operation" lowerBound="1"
          upperBound="-1" eType="#//m2/ClientServerOperation" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="possibleError" upperBound="-1"
          eType="#//m2/ApplicationError" containment="true" eOpposite="#//m2/ApplicationError/parent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ClientServerOperation" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="possibleError" upperBound="-1"
          eType="#//m2/ApplicationError"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1"
          eType="#//m2/ArgumentDataPrototype" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ApplicationError" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="errorCode" lowerBound="1"
          eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//m2/ClientServerInterface" derived="true" eOpposite="#//m2/ClientServerInterface/possibleError"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ArgumentDataPrototype" eSuperTypes="#//m2/AutosarDataPrototype">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="direction" lowerBound="1"
          eType="#//m2/ArgumentDirectionEnum"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ArgumentDirectionEnum">
      <eLiterals name="in"/>
      <eLiterals name="out" value="1"/>
      <eLiterals name="inout" value="2"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="DataFilterTypeEnum">
      <eLiterals name="always"/>
      <eLiterals name="maskedNewEqualsX"/>
      <eLiterals name="maskedNewDiffersMaskedOld"/>
      <eLiterals name="maskedNewDiffersX"/>
      <eLiterals name="never"/>
      <eLiterals name="newIsWithin"/>
      <eLiterals name="newIsOutside"/>
      <eLiterals name="oneEveryN"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataFilter" eSuperTypes="#//m2/M2Object">
      <eOperations name="isFilterEnabled" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="dataFilterType &lt;> DataFilterTypeEnum::always"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isCompatibleWith" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.dataFilterType = another.dataFilterType and self.mask = another.mask and self.max = another.max and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;self.min = another.min and self.offset = another.offset and self.period = another.period and self.x = another.x"/>
        </eAnnotations>
        <eParameters name="another" lowerBound="1" eType="#//m2/DataFilter"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="dataFilterType" lowerBound="1"
          eType="#//m2/DataFilterTypeEnum"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mask" eType="#//m2/UnlimitedInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="max" eType="#//m2/UnlimitedInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="min" eType="#//m2/UnlimitedInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="offset" eType="#//m2/PositiveInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="period" eType="#//m2/PositiveInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="x" eType="#//m2/UnlimitedInteger"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="QueuedReceiverComSpec" eSuperTypes="#//m2/ReceiverComSpec">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="queueLength" lowerBound="1"
          eType="#//m2/PositiveInteger"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Numerical" instanceClassName="java.math.BigDecimal"/>
    <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="java.lang.Integer"/>
    <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedInteger" instanceClassName="java.math.BigInteger"/>
    <eClassifiers xsi:type="ecore:EDataType" name="PositiveInteger" instanceClassName="java.lang.Integer"/>
    <eClassifiers xsi:type="ecore:EDataType" name="TimeValue" instanceClassName="java.math.BigDecimal"/>
    <eClassifiers xsi:type="ecore:EDataType" name="Ref" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EDataType" name="CIdentifier" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EDataType" name="Identifier" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EDataType" name="VerbatimString" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EDataType" name="Float" instanceClassName="java.math.BigDecimal"/>
    <eClassifiers xsi:type="ecore:EClass" name="InvalidationPolicy" eSuperTypes="#//m2/M2Object">
      <eOperations name="isInvalidationEnabled" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="無効化が有効かどうか"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not handleInvalid.oclIsUndefined() and (handleInvalid = m2::HandleInvalidEnum::keep or handleInvalid =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;m2::HandleInvalidEnum::replace)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isInvalidationKeep" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not handleInvalid.oclIsUndefined() and handleInvalid = m2::HandleInvalidEnum::keep"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isInvalidationReplace" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not handleInvalid.oclIsUndefined() and handleInvalid = m2::HandleInvalidEnum::replace"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataElement" lowerBound="1"
          eType="#//m2/VariableDataPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="handleInvalid" eType="#//m2/HandleInvalidEnum"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="HandleInvalidEnum">
      <eLiterals name="dontInvalidate"/>
      <eLiterals name="keep" value="1"/>
      <eLiterals name="replace" value="2"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PortApiOption" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="portArgValue" upperBound="-1"
          eType="#//m2/PortDefinedArgumentValue" containment="true" eOpposite="#//m2/PortDefinedArgumentValue/parent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="port" lowerBound="1"
          eType="#//m2/PortPrototype" eOpposite="#//m2/PortPrototype/portApiOption"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="enableTakeAddress" lowerBound="1"
          eType="#//m2/Boolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PortDefinedArgumentValue" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1"
          eType="#//m2/ValueSpecification" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="valueType" lowerBound="1"
          eType="#//m2/ImplementationDataType">
        <eAnnotations source="stereotypes">
          <details key="isOfType" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//m2/PortApiOption" derived="true" eOpposite="#//m2/PortApiOption/portArgValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IncludedDataTypeSet" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="literalPrefix" eType="#//m2/Identifier"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataType" lowerBound="1"
          upperBound="-1" eType="#//m2/AutosarDataType"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="System" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="rootSoftwareComposition"
          eType="#//m2/RootSwCompositionPrototype" containment="true">
        <eAnnotations source="tags">
          <details key="xml.roleWrapperElement" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="mapping" upperBound="-1"
          eType="#//m2/SystemMapping" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RootSwCompositionPrototype" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="softwareComposition"
          lowerBound="1" eType="#//m2/CompositionSwComponentType">
        <eAnnotations source="stereotypes">
          <details key="isOfType" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SystemMapping" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataMapping" upperBound="-1"
          eType="#//m2/DataMapping" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataMapping" abstract="true" eSuperTypes="#//m2/M2Object"/>
    <eClassifiers xsi:type="ecore:EClass" name="SystemSignal" eSuperTypes="#//m2/ArElement"/>
    <eClassifiers xsi:type="ecore:EClass" name="ISignal" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="systemSignal" lowerBound="1"
          eType="#//m2/SystemSignal"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ISignalIPdu" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="iSignalToPduMapping"
          upperBound="-1" eType="#//m2/ISignalToIPduMapping" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ISignalToIPduMapping" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="iSignal" eType="#//m2/ISignal"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="iSignalGroup" eType="#//m2/ISignalGroup"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SenderReceiverToSignalMapping" eSuperTypes="#//m2/DataMapping">
      <eStructuralFeatures xsi:type="ecore:EReference" name="systemSignal" lowerBound="1"
          eType="#//m2/SystemSignal"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataElementIref" lowerBound="1"
          eType="#//m2/VariableDataPrototypeInSystemInstanceRef" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataElement" lowerBound="1"
          eType="#//instance/VariableDataInstance"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SenderReceiverToSignalGroupMapping"
        eSuperTypes="#//m2/DataMapping">
      <eStructuralFeatures xsi:type="ecore:EReference" name="signalGroup" lowerBound="1"
          eType="#//m2/SystemSignalGroup"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataElementIref" lowerBound="1"
          eType="#//m2/VariableDataPrototypeInSystemInstanceRef" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataElement" lowerBound="1"
          eType="#//instance/VariableDataInstance"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="typeMapping" lowerBound="1"
          eType="#//m2/SenderRecCompositeTypeMapping" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableDataPrototypeInSystemInstanceRef"
        eSuperTypes="#//m2/M2Object #//m2/IInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextComponent" eType="#//m2/SwComponentPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextPort" lowerBound="1"
          eType="#//m2/PortPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetDataPrototype"
          lowerBound="1" eType="#//m2/VariableDataPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucValueCollection" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="ecucValue" lowerBound="1"
          upperBound="-1" eType="#//m2/EcucModuleConfigurationValues">
        <eAnnotations source="tags">
          <details key="xml.name" value="ECUC-MODULE-CONFIGURATION-VALUES-REF"/>
          <details key="xml.namePlural" value="ECUC-VALUES"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ecuExtract" lowerBound="1"
          eType="#//m2/System"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="NativeDeclarationString" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EClass" name="ServerCallPoint" abstract="true" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="operationIref" lowerBound="1"
          eType="#//m2/ROperationInAtomicSwcInstanceRef" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="operation" lowerBound="1"
          eType="#//instance/OperationInstanceInSwc"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SynchronousServerCallPoint" eSuperTypes="#//m2/ServerCallPoint"/>
    <eClassifiers xsi:type="ecore:EClass" name="IInstanceRef" abstract="true" interface="true">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceRef" lowerBound="1"
          upperBound="-1" eType="#//m2/Identifier" volatile="true" transient="true"
          derived="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ROperationInAtomicSwcInstanceRef"
        eSuperTypes="#//m2/M2Object #//m2/IInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextRPort" lowerBound="1"
          eType="#//m2/RPortPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetRequiredOperation"
          lowerBound="1" eType="#//m2/ClientServerOperation"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="SwImplPolicyEnum">
      <eLiterals name="unspecified"/>
      <eLiterals name="standard" value="1"/>
      <eLiterals name="const" value="2"/>
      <eLiterals name="fixed" value="3"/>
      <eLiterals name="measurementPoint" value="4"/>
      <eLiterals name="queued" value="5"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="java.lang.Boolean"/>
    <eClassifiers xsi:type="ecore:EEnum" name="MemoryAllocationKeywordPolicyType">
      <eLiterals name="addrMethodShortName"/>
      <eLiterals name="addrMethodShortNameAndAlignment"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwAddrMethod" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="memoryAllocationKeywordPolicy"
          eType="#//m2/MemoryAllocationKeywordPolicyType"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sectionInitializationPolicy"
          eType="#//m2/SectionInitializationPolicyType"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CompuMethod" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="compuInternalToPhys"
          eType="#//m2/Compu" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DataConstr" eSuperTypes="#//m2/ArElement">
      <eOperations name="getLowerLimitValue" lowerBound="1" eType="#//m2/VerbatimString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let lowerLimit : Limit = self.dataConstrRule.internalConstrs.lowerLimit->any(true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in if lowerLimit.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else lowerLimit.value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getUpperLimitValue" lowerBound="1" eType="#//m2/VerbatimString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let upperLimit : Limit = self.dataConstrRule.internalConstrs.upperLimit->any(true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in if upperLimit.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else upperLimit.value&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataConstrRule" upperBound="-1"
          eType="#//m2/DataConstrRule" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="SectionInitializationPolicyType"
        instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EClass" name="DataConstrRule" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="internalConstrs" eType="#//m2/InternalConstrs"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InternalConstrs" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="lowerLimit" eType="#//m2/Limit"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="upperLimit" eType="#//m2/Limit"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Compu" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="compuScale" upperBound="-1"
          eType="#//m2/CompuScale" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Limit" eSuperTypes="#//m2/M2Object">
      <eAnnotations source="stereotypes">
        <details key="atpMixedString" value="true"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="#//m2/VerbatimString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CompuScale" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="lowerLimit" eType="#//m2/Limit"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="shortLabel" eType="#//m2/Identifier"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" eType="#//m2/CIdentifier"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="upperLimit" eType="#//m2/Limit"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="compuConst" eType="#//m2/CompuConst"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CompuConst" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="vt" eType="#//m2/VerbatimString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AnyInstanceRef" eSuperTypes="#//m2/M2Object #//m2/IInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextElement" upperBound="-1"
          eType="#//m2/Identifiable">
        <eAnnotations source="tags">
          <details key="xml.roleWrapperElement" value="false"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
          eType="#//m2/Identifiable"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="CategoryString" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EDataType" name="BaseTypeEncodingString" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EDataType" name="RevisionLabelString" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EEnum" name="EcucConfigurationVariantEnum">
      <eLiterals name="variantPostBuildSelectable" value="5"/>
      <eLiterals name="variantPreCompile" value="6"/>
      <eLiterals name="preconfiguredConfiguration"/>
      <eLiterals name="variantPostBuildLoadable" value="4"/>
      <eLiterals name="variantPostBuild" value="3"/>
      <eLiterals name="variantLinkTime" value="2"/>
      <eLiterals name="recommendedConfiguration" value="1"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="AlignmentType" instanceClassName="java.lang.String"/>
    <eClassifiers xsi:type="ecore:EClass" name="EcuAbstractionSwComponentType" eSuperTypes="#//m2/AtomicSwComponentType"/>
    <eClassifiers xsi:type="ecore:EClass" name="NvBlockSwComponentType" eSuperTypes="#//m2/AtomicSwComponentType"/>
    <eClassifiers xsi:type="ecore:EClass" name="SensorActuatorSwComponentType" eSuperTypes="#//m2/AtomicSwComponentType"/>
    <eClassifiers xsi:type="ecore:EClass" name="ComplexDeviceDriverSwComponentType"
        eSuperTypes="#//m2/AtomicSwComponentType"/>
    <eClassifiers xsi:type="ecore:EClass" name="ServiceProxySwComponentType" eSuperTypes="#//m2/AtomicSwComponentType"/>
    <eClassifiers xsi:type="ecore:EClass" name="ServiceSwComponentType" eSuperTypes="#//m2/AtomicSwComponentType"/>
    <eClassifiers xsi:type="ecore:EClass" name="PortInCompositionInstanceRef" abstract="true"
        eSuperTypes="#//m2/M2Object #//m2/IInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextComponent" lowerBound="1"
          eType="#//m2/SwComponentPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PPortInCompositionInstanceRef" eSuperTypes="#//m2/PortInCompositionInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetPPort" lowerBound="1"
          eType="#//m2/PPortPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RPortInCompositionInstanceRef" eSuperTypes="#//m2/PortInCompositionInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetRPort" lowerBound="1"
          eType="#//m2/RPortPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InternalBehavior" abstract="true"
        interface="true" eSuperTypes="#//m2/Identifiable">
      <eOperations name="getParent" eType="#//m2/Referrable"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataTypeMapping" upperBound="-1"
          eType="#//m2/DataTypeMappingSet"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="exclusiveArea" upperBound="-1"
          eType="#//m2/ExclusiveArea" containment="true" eOpposite="#//m2/ExclusiveArea/parent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwcBswRunnableMapping" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="swcRunnable" lowerBound="1"
          eType="#//m2/RunnableEntity"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="bswEntity" lowerBound="1"
          eType="#//m2/BswModuleEntity"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwcBswMapping" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="runnableMapping" upperBound="-1"
          eType="#//m2/SwcBswRunnableMapping" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swcBehavior" lowerBound="1"
          eType="#//m2/SwcInternalBehavior"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="bswBehavior" lowerBound="1"
          eType="#//m2/BswInternalBehavior"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswInternalBehavior" eSuperTypes="#//m2/InternalBehavior">
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//m2/BswModuleDescription" eOpposite="#//m2/BswModuleDescription/internalBehavior"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="entity" lowerBound="1"
          upperBound="-1" eType="#//m2/BswModuleEntity" containment="true" eOpposite="#//m2/BswModuleEntity/parent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="event" upperBound="-1"
          eType="#//m2/BswEvent" containment="true" eOpposite="#//m2/BswEvent/parent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="implementation" upperBound="-1"
          eType="#//m2/BswImplementation" eOpposite="#//m2/BswImplementation/behavior"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="modeSenderPolicy" upperBound="-1"
          eType="#//m2/BswModeSenderPolicy" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="bswSchedulableEntity"
          upperBound="-1" eType="#//m2/BswSchedulableEntity" changeable="false" volatile="true"
          transient="true" derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="entity->select(oclIsKindOf(BswSchedulableEntity)).oclAsType(BswSchedulableEntity)->asOrderedSet()"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswModeSenderPolicy" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="providedModeGroup" lowerBound="1"
          eType="#//m2/ModeDeclarationGroupPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="queueLength" lowerBound="1"
          eType="#//m2/PositiveInteger"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Implementation" abstract="true" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="swcBswMapping" eType="#//m2/SwcBswMapping"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswImplementation" eSuperTypes="#//m2/Implementation">
      <eStructuralFeatures xsi:type="ecore:EReference" name="behavior" lowerBound="1"
          eType="#//m2/BswInternalBehavior" eOpposite="#//m2/BswInternalBehavior/implementation"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswModuleDescription" eSuperTypes="#//m2/ArElement">
      <eOperations name="getEnableInternalBehavior" lowerBound="1" eType="#//m2/BswInternalBehavior">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="実装データ型の取得&#xA;(マルチインスタンス未対応前提で1つ返す)"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let behavior : Set(BswInternalBehavior) = self.internalBehavior->select(implementation->size() > 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in if behavior->isEmpty() then&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;behavior->any(true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="internalBehavior" upperBound="-1"
          eType="#//m2/BswInternalBehavior" containment="true" eOpposite="#//m2/BswInternalBehavior/parent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="providedEntry" upperBound="-1"
          eType="#//m2/BswModuleEntry"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="providedModeGroup" ordered="false"
          upperBound="-1" eType="#//m2/ModeDeclarationGroupPrototype" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="requiredModeGroup" ordered="false"
          upperBound="-1" eType="#//m2/ModeDeclarationGroupPrototype" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswModuleEntry" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="serviceId" eType="#//m2/PositiveInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="callType" lowerBound="1"
          eType="#//m2/BswCallTypeEnum"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="executionContext" lowerBound="1"
          eType="#//m2/BswExecutionContextEnum"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswModuleEntity" abstract="true" eSuperTypes="#//m2/ExecutableEntity">
      <eStructuralFeatures xsi:type="ecore:EReference" name="implementedEntry" lowerBound="1"
          eType="#//m2/BswModuleEntry"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//m2/BswInternalBehavior" eOpposite="#//m2/BswInternalBehavior/entity"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="accessedModeGroup" upperBound="-1"
          eType="#//m2/ModeDeclarationGroupPrototype">
        <eAnnotations source="tags">
          <details key="xml.namePlural" value="ACCESSED-MODE-GROUPS"/>
          <details key="xml.name" value="MODE-DECLARATION-GROUP-PROTOTYPE-REF"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="managedModeGroup" upperBound="-1"
          eType="#//m2/ModeDeclarationGroupPrototype">
        <eAnnotations source="tags">
          <details key="xml.namePlural" value="MANAGED-MODE-GROUPS"/>
          <details key="xml.name" value="MODE-DECLARATION-GROUP-PROTOTYPE-REF"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswSchedulableEntity" eSuperTypes="#//m2/BswModuleEntity">
      <eStructuralFeatures xsi:type="ecore:EReference" name="event" upperBound="-1"
          eType="#//m2/BswEvent" eOpposite="#//m2/BswEvent/startsOnEvent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswEvent" abstract="true" eSuperTypes="#//m2/Identifiable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="startsOnEvent" eType="#//m2/BswSchedulableEntity"
          eOpposite="#//m2/BswSchedulableEntity/event"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="config" upperBound="-1"
          eType="#//ecuc/RteBswEventToTaskMapping" eOpposite="#//ecuc/RteBswEventToTaskMapping/rteBswEvent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//m2/BswInternalBehavior" eOpposite="#//m2/BswInternalBehavior/event"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="disabledInMode" upperBound="-1"
          eType="#//m2/ModeInBswModuleDescriptionInstanceRef" containment="true">
        <eAnnotations source="tags">
          <details key="xml.namePlural" value="DISABLED-IN-MODE-IREFS"/>
          <details key="xml.name" value="DISABLED-IN-MODE-IREF"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswModeSwitchEvent" eSuperTypes="#//m2/BswEvent">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="activation" lowerBound="1"
          eType="#//m2/ModeActivationKind"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="modeIref" lowerBound="1"
          upperBound="2" eType="#//m2/ModeInBswModuleDescriptionInstanceRef" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ModeInBswModuleDescriptionInstanceRef"
        eSuperTypes="#//m2/M2Object #//m2/IInstanceRef">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextModeDeclarationGroup"
          lowerBound="1" eType="#//m2/ModeDeclarationGroupPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="targetMode" lowerBound="1"
          eType="#//m2/ModeDeclaration"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ModeActivationKind">
      <eLiterals name="onEntry" value="1"/>
      <eLiterals name="onExit" value="2"/>
      <eLiterals name="onTransition" value="3"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswTimingEvent" eSuperTypes="#//m2/BswEvent">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="period" eType="#//m2/TimeValue"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswBackgroundEvent" eSuperTypes="#//m2/BswEvent"/>
    <eClassifiers xsi:type="ecore:EEnum" name="BswCallTypeEnum">
      <eLiterals name="regular"/>
      <eLiterals name="callback" value="1"/>
      <eLiterals name="interrupt" value="2"/>
      <eLiterals name="scheduled" value="3"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="BswExecutionContextEnum">
      <eLiterals name="task"/>
      <eLiterals name="interruptCat1" value="1"/>
      <eLiterals name="interruptCat2" value="2"/>
      <eLiterals name="hook" value="3"/>
      <eLiterals name="unspecified" value="4"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="BswCalledEntity" eSuperTypes="#//m2/BswModuleEntity"/>
    <eClassifiers xsi:type="ecore:EClass" name="BswInterruptEntity" eSuperTypes="#//m2/BswModuleEntity">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="interruptSource" lowerBound="1"
          eType="#//m2/String"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SystemSignalGroup" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="systemSignal" upperBound="-1"
          eType="#//m2/SystemSignal"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ISignalGroup" eSuperTypes="#//m2/ArElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="systemSignalGroup" lowerBound="1"
          eType="#//m2/SystemSignalGroup"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="iSignal" upperBound="-1"
          eType="#//m2/ISignal"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SenderRecCompositeTypeMapping" abstract="true"/>
    <eClassifiers xsi:type="ecore:EClass" name="SenderRecRecordTypeMapping" eSuperTypes="#//m2/SenderRecCompositeTypeMapping">
      <eStructuralFeatures xsi:type="ecore:EReference" name="recordElementMapping"
          ordered="false" upperBound="-1" eType="#//m2/SenderRecRecordElementMapping"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SenderRecRecordElementMapping" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="implementationRecordElement"
          eType="#//m2/ImplementationDataTypeElement"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="complexTypeMapping" eType="#//m2/SenderRecCompositeTypeMapping"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="systemSignal" eType="#//m2/SystemSignal"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SenderRecArrayTypeMapping" eSuperTypes="#//m2/SenderRecCompositeTypeMapping">
      <eStructuralFeatures xsi:type="ecore:EReference" name="arrayElementMapping"
          ordered="false" upperBound="-1" eType="#//m2/SenderRecArrayElementMapping"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IndexedArrayElement" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="implementationArrayElement"
          eType="#//m2/ImplementationDataTypeElement"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="index" lowerBound="1"
          eType="#//m2/Integer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SenderRecArrayElementMapping" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EReference" name="indexedArrayElement"
          lowerBound="1" eType="#//m2/IndexedArrayElement" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="complexTypeMapping" eType="#//m2/SenderRecCompositeTypeMapping"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="systemSignal" eType="#//m2/SystemSignal"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwPointerTargetProps" eSuperTypes="#//m2/M2Object">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetCategory" eType="#//m2/Identifier"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swDataDefProps" eType="#//m2/SwDataDefProps"
          containment="true"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="ecuc" nsURI="http://nces.is.nagoya-u.ac.jp/a-rte/ar4x/ecuc"
      nsPrefix="ecuc">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
      <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
      <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="EcucObject" abstract="true"/>
    <eClassifiers xsi:type="ecore:EClass" name="EcucReferrable" abstract="true" eSuperTypes="#//ecuc/EcucObject">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="#//m2/String"
          derived="true" iD="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="shortName" lowerBound="1"
          eType="#//m2/Identifier">
        <eAnnotations source="stereotypes">
          <details key="nonEcuc" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="reference" lowerBound="1"
          eType="#//m2/Ref" transient="true" derived="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1"
          eType="#//m2/Identifiable">
        <eAnnotations source="stereotypes">
          <details key="nonEcuc" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucModule" abstract="true" eSuperTypes="#//ecuc/EcucReferrable">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="referenceBase" lowerBound="1"
          eType="#//m2/Ref">
        <eAnnotations source="stereotypes">
          <details key="nonEcuc" value="true"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucContainer" abstract="true" eSuperTypes="#//ecuc/EcucReferrable"/>
    <eClassifiers xsi:type="ecore:EClass" name="Rte" eSuperTypes="#//ecuc/EcucModule">
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteGeneration" lowerBound="1"
          eType="#//ecuc/RteGeneration" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswGeneral" lowerBound="1"
          eType="#//ecuc/RteBswGeneral" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteSwComponentInstance"
          upperBound="-1" eType="#//ecuc/RteSwComponentInstance" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteOsInteraction" lowerBound="1"
          upperBound="-1" eType="#//ecuc/RteOsInteraction" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteInitializationBehavior"
          lowerBound="1" upperBound="-1" eType="#//ecuc/RteInitializationBehavior"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswModuleInstance"
          upperBound="-1" eType="#//ecuc/RteBswModuleInstance" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteGeneration" eSuperTypes="#//ecuc/EcucContainer"/>
    <eClassifiers xsi:type="ecore:EClass" name="RteBswGeneral" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteUseComShadowSignalApi"
          lowerBound="1" eType="#//m2/Boolean"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucRoot">
      <eStructuralFeatures xsi:type="ecore:EReference" name="rte" eType="#//ecuc/Rte"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="os" eType="#//ecuc/Os"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="com" eType="#//ecuc/Com"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ecuC" eType="#//ecuc/EcuC"
          containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteSwComponentInstance" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteEventToTaskMapping"
          upperBound="-1" eType="#//ecuc/RteEventToTaskMapping" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteExclusiveAreaImplementation"
          upperBound="-1" eType="#//ecuc/RteExclusiveAreaImplementation" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteSoftwareComponentInstance"
          eType="#//m2/SwComponentPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteEventToTaskMapping" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteEvent" lowerBound="1"
          eType="#//m2/RteEvent" eOpposite="#//m2/RteEvent/config"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteActivationOffset"
          eType="#//m2/TimeValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteMappedToTask" eType="#//ecuc/OsTask"
          eOpposite="#//ecuc/OsTask/mappedRteEvent"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rtePositionInTask" eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteUsedOsAlarm" eType="#//ecuc/OsAlarm"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteUsedOsEvent" eType="#//ecuc/OsEvent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Os" eSuperTypes="#//ecuc/EcucModule">
      <eStructuralFeatures xsi:type="ecore:EReference" name="osTask" upperBound="-1"
          eType="#//ecuc/OsTask" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osEvent" upperBound="-1"
          eType="#//ecuc/OsEvent" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osApplication" upperBound="-1"
          eType="#//ecuc/OsApplication" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osAlarm" upperBound="-1"
          eType="#//ecuc/OsAlarm" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osResource" upperBound="-1"
          eType="#//ecuc/OsResource" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osSpinlock" upperBound="-1"
          eType="#//ecuc/OsSpinlock" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osIoc" eType="#//ecuc/OsIoc"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osOS" lowerBound="1"
          eType="#//ecuc/OsOS" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="OsTaskScheduleEnum">
      <eLiterals name="FULL"/>
      <eLiterals name="NON"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsTask" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osTaskActivation" lowerBound="1"
          eType="#//m2/PositiveInteger"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osTaskPriority" lowerBound="1"
          eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osTaskSchedule" lowerBound="1"
          eType="#//ecuc/OsTaskScheduleEnum"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osTaskAccessingApplication"
          ordered="false" upperBound="-1" eType="#//ecuc/OsApplication">
        <eAnnotations source="tags">
          <details key="ecuc.definitionShortName" value="OsTaskAccessingApplication"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osTaskEvent" ordered="false"
          upperBound="-1" eType="#//ecuc/OsEvent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="mappedRteEvent" upperBound="-1"
          eType="#//ecuc/RteEventToTaskMapping" derived="true" eOpposite="#//ecuc/RteEventToTaskMapping/rteMappedToTask"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownerApplication" ordered="false"
          upperBound="-1" eType="#//ecuc/OsApplication" derived="true" eOpposite="#//ecuc/OsApplication/osAppTask"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="mappedRteBswEvent" upperBound="-1"
          eType="#//ecuc/RteBswEventToTaskMapping" eOpposite="#//ecuc/RteBswEventToTaskMapping/rteBswMappedToTask"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteExclusiveAreaImplementation" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteExclusiveAreaImplMechanism"
          eType="#//ecuc/RteExclusiveAreaImplMechanismEnum"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteExclusiveArea" lowerBound="1"
          eType="#//m2/ExclusiveArea" eOpposite="#//m2/ExclusiveArea/swcConfig"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteExclusiveAreaOsResource"
          eType="#//ecuc/OsResource"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteExclusiveAreaOsSpinlock"
          eType="#//ecuc/OsSpinlock"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="RteExclusiveAreaImplMechanismEnum">
      <eLiterals name="ALL_INTERRUPT_BLOCKING"/>
      <eLiterals name="COOPERATIVE_RUNNABLE_PLACEMENT" value="1"/>
      <eLiterals name="OS_INTERRUPT_BLOCKING" value="2"/>
      <eLiterals name="OS_RESOURCE" value="3"/>
      <eLiterals name="OS_SPINLOCK" value="4"/>
      <eLiterals name="NONE" value="5"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsEvent" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osEventMask" eType="#//m2/UnlimitedInteger"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Com" eSuperTypes="#//ecuc/EcucModule">
      <eStructuralFeatures xsi:type="ecore:EReference" name="comConfig" lowerBound="1"
          eType="#//ecuc/ComConfig" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ComConfig" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="comSignal" upperBound="-1"
          eType="#//ecuc/ComSignal" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="comSignalGroup" upperBound="-1"
          eType="#//ecuc/ComSignalGroup" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="ComTransferPropertyEnum">
      <eLiterals name="PENDING"/>
      <eLiterals name="TRIGGERED"/>
      <eLiterals name="TRIGGERED_ON_CHANGE"/>
      <eLiterals name="TRIGGERED_ON_CHANGE_WITHOUT_REPETITION"/>
      <eLiterals name="TRIGGERED_WITHOUT_REPETITION"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ComSignal" eSuperTypes="#//ecuc/EcucContainer">
      <eOperations name="transfersImmediately" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not comTransferProperty.oclIsUndefined() and comTransferProperty &lt;> ComTransferPropertyEnum::PENDING"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="comSystemTemplateSystemSignal"
          eType="#//m2/ISignalToIPduMapping"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="comHandleId" lowerBound="1"
          eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="comTransferProperty"
          eType="#//ecuc/ComTransferPropertyEnum"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ComSignalGroup" eSuperTypes="#//ecuc/EcucContainer">
      <eOperations name="transfersImmediately" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not comTransferProperty.oclIsUndefined() and comTransferProperty &lt;> ComTransferPropertyEnum::PENDING"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="comGroupSignal" upperBound="-1"
          eType="#//ecuc/ComGroupSignal" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="comSystemTemplateSignalGroup"
          eType="#//m2/ISignalToIPduMapping"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="comHandleId" lowerBound="1"
          eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="comTransferProperty"
          eType="#//ecuc/ComTransferPropertyEnum"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ComGroupSignal" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="comSystemTemplateSystemSignal"
          eType="#//m2/ISignalToIPduMapping"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="comHandleId" lowerBound="1"
          eType="#//m2/Integer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsAlarm" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="expectedConfig" upperBound="-1"
          eType="#//ecuc/RteUsedOsActivation" derived="true" eOpposite="#//ecuc/RteUsedOsActivation/rteActivationOsAlarm"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsResource" eSuperTypes="#//ecuc/EcucContainer"/>
    <eClassifiers xsi:type="ecore:EClass" name="OsApplication" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osApplicationCoreAssignment"
          eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osTrusted" lowerBound="1"
          eType="#//m2/Boolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osAppEcucPartition" eType="#//ecuc/EcucPartition"
          eOpposite="#//ecuc/EcucPartition/implOsApplication"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osApplicationTrustedFunction"
          upperBound="-1" eType="#//ecuc/OsApplicationTrustedFunction" containment="true"
          eOpposite="#//ecuc/OsApplicationTrustedFunction/parent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osAppTask" upperBound="-1"
          eType="#//ecuc/OsTask" eOpposite="#//ecuc/OsTask/ownerApplication"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcuC" eSuperTypes="#//ecuc/EcucModule">
      <eStructuralFeatures xsi:type="ecore:EReference" name="ecucPartitionCollection"
          eType="#//ecuc/EcucPartitionCollection" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucPartitionCollection" eSuperTypes="#//ecuc/EcucContainer">
      <eOperations name="getAssignedCores" ordered="false" upperBound="-1" eType="#//m2/Integer">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.ecucPartition.getOwnerCore()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ecucPartition" upperBound="-1"
          eType="#//ecuc/EcucPartition" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="EcucPartition" eSuperTypes="#//ecuc/EcucContainer">
      <eOperations name="isTrusted" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let osApp : OsApplication = self.implOsApplication->any(true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in if osApp.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else osApp.osTrusted&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getOwnerCore" lowerBound="1" eType="#//m2/Integer">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let osApp : OsApplication = self.implOsApplication->any(true)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in if osApp.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else osApp.osApplicationCoreAssignment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="ecucPartitionBswModuleExecution"
          lowerBound="1" eType="#//m2/Boolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="partitionCanBeRestarted"
          lowerBound="1" eType="#//m2/Boolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ecucPartitionSoftwareComponent"
          upperBound="-1" eType="#//instance/SwComponentInstanceInSystem" eOpposite="#//instance/SwComponentInstanceInSystem/ownerPartition"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="implOsApplication" upperBound="-1"
          eType="#//ecuc/OsApplication" derived="true" eOpposite="#//ecuc/OsApplication/osAppEcucPartition"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="OsSpinlockLockMethodEnum">
      <eLiterals name="LOCK_NOTHING"/>
      <eLiterals name="LOCK_CAT2_INTERRUPTS"/>
      <eLiterals name="LOCK_ALL_INTERRUPTS"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsSpinlock" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="osSpinlockAccessingApplication"
          ordered="false" upperBound="-1" eType="#//ecuc/OsApplication">
        <eAnnotations source="tags">
          <details key="ecuc.definitionShortName" value="OsSpinlockAccessingApplication"/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osSpinlockLockMethod"
          lowerBound="1" eType="#//ecuc/OsSpinlockLockMethodEnum"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteOsInteraction" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteUsedOsActivation"
          upperBound="-1" eType="#//ecuc/RteUsedOsActivation" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteUsedOsActivation" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteExpectedTickDuration"
          lowerBound="1" eType="#//m2/TimeValue"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteExpectedActivationOffset"
          lowerBound="1" eType="#//m2/TimeValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteActivationOsAlarm"
          eType="#//ecuc/OsAlarm" eOpposite="#//ecuc/OsAlarm/expectedConfig"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteInitializationBehavior" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteInitializationStrategy"
          lowerBound="1" eType="#//ecuc/RteInitializationStrategyEnum"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteSectionInitializationPolicy"
          lowerBound="1" upperBound="-1" eType="#//m2/SectionInitializationPolicyType"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EEnum" name="RteInitializationStrategyEnum">
      <eLiterals name="RTE_INITIALIZATION_STRATEGY_AT_DATA_DECLARATION"/>
      <eLiterals name="RTE_INITIALIZATION_STRATEGY_AT_DATA_DECLARATION_AND_PARTITION_RESTART"
          value="1"/>
      <eLiterals name="RTE_INITIALIZATION_STRATEGY_AT_RTE_START" value="2"/>
      <eLiterals name="RTE_INITIALIZATION_STRATEGY_AT_RTE_START_AND_PARTITION_RESTART"
          value="3"/>
      <eLiterals name="RTE_INITIALIZATION_STRATEGY_NONE" value="4"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsIoc" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="osIocCommunication" ordered="false"
          upperBound="-1" eType="#//ecuc/OsIocCommunication" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsIocCommunication" eSuperTypes="#//ecuc/EcucContainer">
      <eOperations name="getLoopbackSenderProperties" lowerBound="1" eType="#//ecuc/OsIocSenderProperties">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let loopback : OsIocSenderProperties = osIocSenderProperties&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->any(osIocSendingOsApplication = self.osIocReceiverProperties.osIocReceivingOsApplication)&#xA;&#x9;&#x9;&#x9;&#x9;in if loopback.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null else loopback&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osIocSenderProperties"
          lowerBound="1" upperBound="-1" eType="#//ecuc/OsIocSenderProperties" containment="true"
          eOpposite="#//ecuc/OsIocSenderProperties/parent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osIocReceiverProperties"
          lowerBound="1" eType="#//ecuc/OsIocReceiverProperties" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osIocDataProperties"
          lowerBound="1" upperBound="-1" eType="#//ecuc/OsIocDataProperties" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osIocBufferLength" eType="#//m2/Integer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsIocSenderProperties" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="osIocSendingOsApplication"
          lowerBound="1" eType="#//ecuc/OsApplication"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//ecuc/OsIocCommunication" derived="true" eOpposite="#//ecuc/OsIocCommunication/osIocSenderProperties"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osIocSenderId" eType="#//m2/Integer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsIocReceiverProperties" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="osIocReceivingOsApplication"
          lowerBound="1" eType="#//ecuc/OsApplication"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsIocDataProperties" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osIocDataPropertyIndex"
          eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osIocInitValue" eType="#//m2/VerbatimString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="osIocDataType" lowerBound="1"
          eType="#//m2/ImplementationDataType"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsApplicationTrustedFunction" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osTrustedFunctionName"
          lowerBound="1" eType="#//m2/CIdentifier"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//ecuc/OsApplication" derived="true" eOpposite="#//ecuc/OsApplication/osApplicationTrustedFunction"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OsOS" eSuperTypes="#//ecuc/EcucContainer">
      <eOperations name="isMulticoreOs" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not self.osNumberOfCores.oclIsUndefined()"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osNumberOfCores" eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="osMasterCoreId" eType="#//m2/Integer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteBswEventToTaskMapping" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteBswActivationOffset"
          eType="#//m2/TimeValue"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswEvent" lowerBound="1"
          eType="#//m2/BswEvent" eOpposite="#//m2/BswEvent/config"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteBswPositionInTask"
          eType="#//m2/Integer"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswMappedToTask" eType="#//ecuc/OsTask"
          eOpposite="#//ecuc/OsTask/mappedRteBswEvent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswUsedOsAlarm" eType="#//ecuc/OsAlarm"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswUsedOsEvent" eType="#//ecuc/OsEvent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteBswRequiredModeGroupConnection"
        eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//ecuc/RteBswModuleInstance" derived="true" eOpposite="#//ecuc/RteBswModuleInstance/rteBswRequiredModeGroupConnection"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswProvidedModeGroup"
          lowerBound="1" eType="#//m2/ModeDeclarationGroupPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswRequiredModeGroup"
          lowerBound="1" eType="#//m2/ModeDeclarationGroupPrototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteBswModuleInstance" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswEventToTaskMapping"
          upperBound="-1" eType="#//ecuc/RteBswEventToTaskMapping" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswExclusiveAreaImpl"
          upperBound="-1" eType="#//ecuc/RteBswExclusiveAreaImpl" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswImplementation"
          lowerBound="1" eType="#//m2/BswImplementation" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswRequiredModeGroupConnection"
          ordered="false" upperBound="-1" eType="#//ecuc/RteBswRequiredModeGroupConnection"
          containment="true" eOpposite="#//ecuc/RteBswRequiredModeGroupConnection/parent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RteBswExclusiveAreaImpl" eSuperTypes="#//ecuc/EcucContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswExclusiveArea"
          lowerBound="1" eType="#//m2/ExclusiveArea" eOpposite="#//m2/ExclusiveArea/bswConfig"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswExclusiveAreaOsResource"
          eType="#//ecuc/OsResource"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rteExclusiveAreaImplMechanism"
          eType="#//ecuc/RteExclusiveAreaImplMechanismEnum"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="rteBswExclusiveAreaOsSpinlock"
          eType="#//ecuc/OsSpinlock"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="instance" nsURI="http://nces.is.nagoya-u.ac.jp/a-rte/ar4x/instance"
      nsPrefix="instance">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
      <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
      <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="InstanceReferrable" abstract="true"
        eSuperTypes="#//instance/IInstanceObject">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="#//m2/String"
          iD="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PortInstanceInComposition" eSuperTypes="#//instance/InstanceReferrable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextComponent" lowerBound="1"
          eType="#//m2/SwComponentPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="prototype" lowerBound="1"
          eType="#//m2/PortPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="dataElement" upperBound="-1"
          eType="#//instance/VariableDataInstanceInComposition" containment="true"
          eOpposite="#//instance/VariableDataInstanceInComposition/parent"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="operation" upperBound="-1"
          eType="#//instance/OperationInstanceInComposition" containment="true" eOpposite="#//instance/OperationInstanceInComposition/parent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableDataInstanceInSwc" abstract="true"
        eSuperTypes="#//instance/VariableDataInstance">
      <eOperations name="getTargetShortName" lowerBound="1" eType="#//m2/Identifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.prototype.shortName"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isEventSemantics" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="イベントセマンティクスかどうか"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getSwImplPolicy() = m2::SwImplPolicyEnum::queued"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getSwImplPolicy" lowerBound="1" eType="#//m2/SwImplPolicyEnum">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="ソフトウェア実装方式の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let implType : m2::ImplementationDataType = getImplementationDataType() , applType : m2::ApplicationDataType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;= getApplicationDataType()&#xA;&#x9;&#x9;&#x9;&#x9;in if not applType.getSwImplPolicy().oclIsUndefined() and applType.getSwImplPolicy() &lt;> m2::SwImplPolicyEnum::unspecified&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then applType.getSwImplPolicy()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if not implType.getSwImplPolicy().oclIsUndefined() and implType.getSwImplPolicy() &lt;> m2::SwImplPolicyEnum::unspecified&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then implType.getSwImplPolicy()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else self.prototype.getSwImplPolicy()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getBaseType" lowerBound="1" eType="#//m2/SwBaseType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="ベース型の習得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let implType : m2::ImplementationDataType = getImplementationDataType()&#xA;&#x9;&#x9;&#x9;&#x9;in if not implType.baseType.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then implType.baseType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getInvalidValue" lowerBound="1" eType="#//m2/ValueSpecification">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="無効値の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let implType : m2::ImplementationDataType = getImplementationDataType() , applType : m2::ApplicationDataType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;= getApplicationDataType()&#xA;&#x9;&#x9;&#x9;&#x9;in if not applType.invalidValue.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then applType.invalidValue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if not implType.invalidValue.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then implType.invalidValue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getSwAddrMethod" lowerBound="1" eType="#//m2/SwAddrMethod">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="アドレッシング方式の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let implType : m2::ImplementationDataType = getImplementationDataType() , applType : m2::ApplicationDataType&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;= getApplicationDataType()&#xA;&#x9;&#x9;&#x9;&#x9;in if not self.prototype.swAddrMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.prototype.swAddrMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if not implType.swAddrMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then implType.swAddrMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if not implType.getLeafImplementationDataType().swAddrMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then implType.getLeafImplementationDataType().swAddrMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if not applType.swAddrMethod.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then applType.swAddrMethod&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif endif endif endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getSwAlignment" lowerBound="1" eType="#//m2/AlignmentType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="アラインメントの取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let implType : m2::ImplementationDataType = getImplementationDataType()&#xA;&#x9;&#x9;&#x9;&#x9;in if not self.prototype.swAlignment.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then self.prototype.swAlignment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else if not implType.swAlignment.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then implType.swAlignment&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getApplicationDataType" lowerBound="1" eType="#//m2/ApplicationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="アプリケーションデータ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if self.prototype.type.oclIsKindOf(m2::ApplicationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then self.prototype.type.oclAsType(m2::ApplicationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getImplementationDataType" lowerBound="1" eType="#//m2/ImplementationDataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="実装データ型の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if self.prototype.type.oclIsKindOf(m2::ImplementationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then self.prototype.type.oclAsType(m2::ImplementationDataType)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getOwnerAtomicSwc().getImplementationDataType(self.prototype.type.oclAsType(m2::ApplicationPrimitiveDataType))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getOwnerAtomicSwc" lowerBound="1" eType="#//m2/AtomicSwComponentType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="アトミックSW-Cの取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.contextPort.parent.oclAsType(m2::AtomicSwComponentType)"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="prototype" lowerBound="1"
          eType="#//m2/VariableDataPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextPort" lowerBound="1"
          eType="#//m2/PortPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="instance" upperBound="-1"
          eType="#//instance/VariableDataInstanceInComposition" derived="true" eOpposite="#//instance/VariableDataInstanceInComposition/prototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableDataInstanceInComposition"
        eSuperTypes="#//instance/VariableDataInstance">
      <eOperations name="isProvided" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="prototype.oclIsKindOf(PVariableDataInstanceInSwc)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isRequired" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="prototype.oclIsKindOf(RVariableDataInstanceInSwc)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getTargetShortName" lowerBound="1" eType="#//m2/Identifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.prototype.prototype.shortName"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="prototype" lowerBound="1"
          eType="#//instance/VariableDataInstanceInSwc" eOpposite="#//instance/VariableDataInstanceInSwc/instance"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//instance/PortInstanceInComposition" derived="true" eOpposite="#//instance/PortInstanceInComposition/dataElement"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="requesterConnection"
          upperBound="-1" eType="#//instance/AssemblyDataInstanceConnector" derived="true"
          eOpposite="#//instance/AssemblyDataInstanceConnector/provider"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="providerConnection" upperBound="-1"
          eType="#//instance/AssemblyDataInstanceConnector" derived="true" eOpposite="#//instance/AssemblyDataInstanceConnector/requester"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PVariableDataInstanceInSwc" eSuperTypes="#//instance/VariableDataInstanceInSwc">
      <eOperations name="isInvalidationEnabled" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="無効化が有効かどうか"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not getInvalidationPolicy().oclIsUndefined() and getInvalidationPolicy().isInvalidationEnabled().oclAsType(Boolean)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getInvalidationPolicy" lowerBound="1" eType="#//m2/InvalidationPolicy">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="無効値処理方法の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="contextPPort.providedInterface.oclAsType(m2::SenderReceiverInterface).invalidationPolicy&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->any(dataElement = self.prototype)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getInitValue" lowerBound="1" eType="#//m2/ValueSpecification">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let initValue : m2::ValueSpecification = getComSpec().oclAsType(m2::NonqueuedSenderComSpec).initValue&#xA;&#x9;&#x9;&#x9;&#x9;in if initValue.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else initValue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getComSpec" lowerBound="1" eType="#//m2/SenderComSpec">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let comSpec : m2::SenderComSpec = contextPPort.providedComSpec.oclAsType(m2::SenderComSpec)->any(dataElement = self.prototype)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in if comSpec.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else comSpec&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isAccessedByDataSendPoint" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="getOwnerAtomicSwc().internalBehavior.runnable.dataSendPoint->exists(accessedVariable.autosarVariable = self)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isTAckEnabled" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not getComSpec().transmissionAcknowledge.oclIsUndefined()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isTAckTimeoutEnabled" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not getComSpec().transmissionAcknowledge.oclIsUndefined() and getComSpec().transmissionAcknowledge.timeout &lt;> 0"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getRelatedDataSendCompletedEvent" ordered="false" upperBound="-1"
          eType="#//m2/DataSendCompletedEvent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="ar4x::m2::DataSendCompletedEvent.allInstances()->select(eventSourceData = self)->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextPPort" lowerBound="1"
          eType="#//m2/PPortPrototype" changeable="false" volatile="true" transient="true"
          derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="contextPort.oclAsType(m2::PPortPrototype)"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RVariableDataInstanceInSwc" eSuperTypes="#//instance/VariableDataInstanceInSwc">
      <eOperations name="isFilterEnabled" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="if getFilter().oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else getFilter().isFilterEnabled()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getFilter" lowerBound="1" eType="#//m2/DataFilter">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let filter : m2::DataFilter = getComSpec().oclAsType(m2::NonqueuedReceiverComSpec).filter&#xA;&#x9;&#x9;&#x9;&#x9;in if filter.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else filter&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isAliveTimeoutEnabled" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let comSpec : m2::NonqueuedReceiverComSpec = getComSpec().oclAsType(m2::NonqueuedReceiverComSpec)&#xA;&#x9;&#x9;&#x9;&#x9;in not comSpec.oclIsUndefined() and comSpec.aliveTimeout &lt;> 0"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isInvalidationEnabled" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="無効化が有効かどうか"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not getInvalidationPolicy().oclIsUndefined() and getInvalidationPolicy().isInvalidationEnabled().oclAsType(Boolean)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isInvalidationKeep" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="無効化ポリシーがKeepかどうか"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not getInvalidationPolicy().oclIsUndefined() and getInvalidationPolicy().isInvalidationKeep().oclAsType(Boolean)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isInvalidationReplace" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="無効化ポリシーがReplaceかどうか"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="not getInvalidationPolicy().oclIsUndefined() and getInvalidationPolicy().isInvalidationReplace().oclAsType(Boolean)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getInvalidationPolicy" lowerBound="1" eType="#//m2/InvalidationPolicy">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="無効値処理方法の取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="contextRPort.requiredInterface.oclAsType(m2::SenderReceiverInterface).invalidationPolicy&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;->any(dataElement = self.prototype)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getInitValue" lowerBound="1" eType="#//m2/ValueSpecification">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let initValue : m2::ValueSpecification = getComSpec().oclAsType(m2::NonqueuedReceiverComSpec).initValue&#xA;&#x9;&#x9;&#x9;&#x9;in if initValue.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else initValue&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getQueueLength" lowerBound="1" eType="#//m2/PositiveInteger">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="QueuedReceiverComSpecのキュー長を返す"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let comSpec : m2::QueuedReceiverComSpec = getComSpec().oclAsType(m2::QueuedReceiverComSpec)&#xA;&#x9;&#x9;&#x9;&#x9;in if comSpec.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else comSpec.queueLength&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getComSpec" lowerBound="1" eType="#//m2/ReceiverComSpec">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="let comSpec : m2::ReceiverComSpec = contextRPort.requiredComSpec.oclAsType(m2::ReceiverComSpec)->any(dataElement = self.prototype)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;in if comSpec.oclIsUndefined()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else comSpec&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getRelatedDataReceivedEvent" ordered="false" upperBound="-1"
          eType="#//m2/DataReceivedEvent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="ar4x::m2::DataReceivedEvent.allInstances()->select(data = self)->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getRelatedDataReceiveErrorEvent" ordered="false" upperBound="-1"
          eType="#//m2/DataReceiveErrorEvent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="ar4x::m2::DataReceiveErrorEvent.allInstances()->select(data = self)->asOrderedSet()"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextRPort" lowerBound="1"
          eType="#//m2/RPortPrototype" changeable="false" volatile="true" transient="true"
          derived="true" resolveProxies="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="derivation" value="contextPort.oclAsType(m2::RPortPrototype)"/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AssemblyDataInstanceConnector">
      <eStructuralFeatures xsi:type="ecore:EReference" name="provider" lowerBound="1"
          eType="#//instance/VariableDataInstanceInComposition" eOpposite="#//instance/VariableDataInstanceInComposition/requesterConnection"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="requester" lowerBound="1"
          eType="#//instance/VariableDataInstanceInComposition" eOpposite="#//instance/VariableDataInstanceInComposition/providerConnection"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DelegationDataInstanceConnector">
      <eStructuralFeatures xsi:type="ecore:EReference" name="outer" lowerBound="1"
          eType="#//instance/VariableDataInstanceInSwc"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="inner" lowerBound="1"
          eType="#//instance/VariableDataInstanceInComposition"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OperationInstanceInSwc" abstract="true"
        eSuperTypes="#//instance/InstanceReferrable">
      <eOperations name="getOwnerAtomicSwc" lowerBound="1" eType="#//m2/AtomicSwComponentType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="アトミックSW-Cの取得"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.contextPort.parent.oclAsType(m2::AtomicSwComponentType)"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="prototype" lowerBound="1"
          eType="#//m2/ClientServerOperation"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextPort" lowerBound="1"
          eType="#//m2/PortPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="instance" upperBound="-1"
          eType="#//instance/OperationInstanceInComposition" derived="true" eOpposite="#//instance/OperationInstanceInComposition/prototype"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ROperationInstanceInSwc" eSuperTypes="#//instance/OperationInstanceInSwc"/>
    <eClassifiers xsi:type="ecore:EClass" name="POperationInstanceInSwc" eSuperTypes="#//instance/OperationInstanceInSwc">
      <eStructuralFeatures xsi:type="ecore:EReference" name="operationInvokedEvent"
          upperBound="-1" eType="#//m2/OperationInvokedEvent" derived="true" eOpposite="#//m2/OperationInvokedEvent/operation"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="OperationInstanceInComposition" eSuperTypes="#//instance/InstanceReferrable">
      <eOperations name="getTargetShortName" lowerBound="1" eType="#//m2/Identifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
          <details key="body" value="self.prototype.prototype.shortName"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="prototype" lowerBound="1"
          eType="#//instance/OperationInstanceInSwc" eOpposite="#//instance/OperationInstanceInSwc/instance"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="parent" lowerBound="1"
          eType="#//instance/PortInstanceInComposition" derived="true" eOpposite="#//instance/PortInstanceInComposition/operation"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="requesterConnection"
          upperBound="-1" eType="#//instance/AssemblyOperationInstanceConnector" derived="true"
          eOpposite="#//instance/AssemblyOperationInstanceConnector/provider"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="providerConnection" upperBound="-1"
          eType="#//instance/AssemblyOperationInstanceConnector" derived="true" eOpposite="#//instance/AssemblyOperationInstanceConnector/requester"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="AssemblyOperationInstanceConnector">
      <eStructuralFeatures xsi:type="ecore:EReference" name="requester" lowerBound="1"
          eType="#//instance/OperationInstanceInComposition" eOpposite="#//instance/OperationInstanceInComposition/providerConnection"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="provider" lowerBound="1"
          eType="#//instance/OperationInstanceInComposition" eOpposite="#//instance/OperationInstanceInComposition/requesterConnection"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="IInstanceObject" abstract="true" interface="true">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="instanceId" lowerBound="1"
          upperBound="-1" eType="#//m2/Identifier" volatile="true" transient="true"
          derived="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SwComponentInstanceInSystem" eSuperTypes="#//instance/InstanceReferrable">
      <eStructuralFeatures xsi:type="ecore:EReference" name="contextRootComposition"
          lowerBound="1" eType="#//m2/RootSwCompositionPrototype"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="prototype" lowerBound="1"
          eType="#//m2/SwComponentPrototype" eOpposite="#//m2/SwComponentPrototype/instance"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownerPartition" ordered="false"
          upperBound="-1" eType="#//ecuc/EcucPartition" derived="true" eOpposite="#//ecuc/EcucPartition/ecucPartitionSoftwareComponent"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="InstanceRoot">
      <eStructuralFeatures xsi:type="ecore:EReference" name="assemblyDataInstanceConnector"
          upperBound="-1" eType="#//instance/AssemblyDataInstanceConnector" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="delegationDataInstanceConnector"
          upperBound="-1" eType="#//instance/DelegationDataInstanceConnector" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="swComponentInstanceInSystem"
          upperBound="-1" eType="#//instance/SwComponentInstanceInSystem" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="portInstanceInComposition"
          upperBound="-1" eType="#//instance/PortInstanceInComposition" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="variableDataInstanceInSwc"
          upperBound="-1" eType="#//instance/VariableDataInstanceInSwc" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="operationInstanceInSwc"
          upperBound="-1" eType="#//instance/OperationInstanceInSwc" containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="assemblyOperationInstanceConnector"
          upperBound="-1" eType="#//instance/AssemblyOperationInstanceConnector" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="VariableDataInstance" abstract="true"
        eSuperTypes="#//instance/InstanceReferrable"/>
  </eSubpackages>
</ecore:EPackage>
