[comment encoding = UTF-8 /]

[module generate('http://fr.inria.aoste.timemodel.ccslmodel.clockexpressionandrelation', 
	'http://www.eclipse.org/emf/2002/Ecore', 
	'http://org.gemoc.moccml/1.0', 
	'http://fr.inria.aoste.timemodel',
	'http://org.gemoc.moccml.fsmmodel/1.0',
	'http://www.eclipse.org/xtend', 
	'http://www.eclipse.org/xtend/RichString', 
	'http://www.eclipse.org/xtext/xbase/Xbase',
	'http://mleduc.fr/gseq') ]
[template public generate(aProgram : Program)]
[comment @main/]
[file (aProgram.name+'_FiacreProcess.fcr', false, 'UTF-8')]
// *********************** Type Declaration ******************************/
const NUMBER_Programs : int is [aProgram.eAllContents(Program)->size()/]
const NUMBER_Methods : int is [aProgram.eAllContents(Method)->size()/]
const NUMBER_Operations : int is [aProgram.eAllContents(Operation)->size()/]
const NUMBER_Prints : int is [aProgram.eAllContents(Print)->size()/]
const NUMBER_MethodCalls : int is [aProgram.eAllContents(MethodCall)->size()/]
const NUMBER_BooleanExpressions : int is [aProgram.eAllContents(BooleanExpression)->size()/]
const NUMBER_Ifs : int is [aProgram.eAllContents(If)->size()/]
const NUMBER_Trues : int is [aProgram.eAllContents(True)->size()/]
const NUMBER_Falses : int is [aProgram.eAllContents(False)->size()/]
const NUMBER_Equalitys : int is [aProgram.eAllContents(Equality)->size()/]
const NUMBER_Nots : int is [aProgram.eAllContents(Not)->size()/]
const NUMBER_Ands : int is [aProgram.eAllContents(And)->size()/]
const NUMBER_IntegerExpressions : int is [aProgram.eAllContents(IntegerExpression)->size()/]
const NUMBER_Consts : int is [aProgram.eAllContents(Const)->size()/]
const NUMBER_Vars : int is [aProgram.eAllContents(Var)->size()/]
const NUMBER_Assigns : int is [aProgram.eAllContents(Assign)->size()/]
const NUMBER_Pluss : int is [aProgram.eAllContents(Plus)->size()/]
const NUMBER_GreaterThans : int is [aProgram.eAllContents(GreaterThan)->size()/]
const NUMBER_Whiles : int is [aProgram.eAllContents(While)->size()/]

type Method_methodsArray is array [Program.eContents(Method)->size()/] of int
type Operation_operationsArray is array [Method.eContents(Operation)->size()/] of int
type MethodCall_calledByArray is array [Method.eContents(MethodCall)->size()/] of int


/*********************************************************************
Defining the Functions for : Program
**********************************************************************/
/*********************************************************************
Defining the Functions for : BooleanExpression
**********************************************************************/
/*********************************************************************
Defining the Functions for : Method
**********************************************************************/
/*********************************************************************
Defining the Functions for : Operation
**********************************************************************/
/*********************************************************************
Defining the Functions for : Print
**********************************************************************/
/*********************************************************************
Defining the Functions for : If
**********************************************************************/
/*********************************************************************
Defining the Functions for : Assign
**********************************************************************/
/*********************************************************************
Defining the Functions for : MethodCall
**********************************************************************/
/*********************************************************************
Defining the Functions for : Plus
**********************************************************************/
/************************* Program Process Instances***************************/
[for (element : Program| aProgram.eAllContents(Program))]
process p[element.name/] ['['/][element.name/]_start:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:Program
    from s0  [element.name/]_start; global:=Program_init( global , global.refToElement_id) ;  to s0
[/for]
/************************* BooleanExpression Process Instances***************************/
[for (element : BooleanExpression| aProgram.eAllContents(BooleanExpression))]
process p[element.name/] ['['/][element.name/]_bvalue:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:BooleanExpression
    from s0  [element.name/]_bvalue; global:=BooleanExpression_bvalue( global , global.refToElement_id) ;  to s0
[/for]
/************************* Method Process Instances***************************/
[for (element : Method| aProgram.eAllContents(Method))]
process p[element.name/] ['['/][element.name/]_callIt:in none,[element.name/]_endOf:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:Method
    from s0  [element.name/]_callIt; global:=Method_call( global , global.refToElement_id) ;  to s0
    from s0  [element.name/]_endOf;  to s0
[/for]
/************************* Operation Process Instances***************************/
[for (element : Operation| aProgram.eAllContents(Operation))]
process p[element.name/] ['['/][element.name/]_startOfOperation:in none,[element.name/]_execute:in none,[element.name/]_endOfOperation:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:Operation
    from s0  [element.name/]_startOfOperation;  to s0
    from s0  [element.name/]_execute; global:=Operation_execute( global , global.refToElement_id) ;  to s0
    from s0  [element.name/]_endOfOperation;  to s0
[/for]
/************************* Print Process Instances***************************/
[for (element : Print| aProgram.eAllContents(Print))]
process p[element.name/] ['['/][element.name/]_print:in none[']'/](&global : SystemDataRoot, id : read int) is
	states s0
	var _self:Print
    from s0  [element.name/]_print; global:=Print_print( global , global.refToElement_id) ;  to s0
[/for]
process pUnConstrainedSemantics['['/][for (element : Program| aProgram.eAllContents(Program))]
[element.name/]_start:out none,[/for][for (element : BooleanExpression| aProgram.eAllContents(BooleanExpression))]
[element.name/]_bvalue:out none,[/for][for (element : Method| aProgram.eAllContents(Method))]
[element.name/]_callIt:out none,[element.name/]_endOf:out none,[/for][for (element : Operation| aProgram.eAllContents(Operation))]
[element.name/]_startOfOperation:out none,[element.name/]_execute:out none,[element.name/]_endOfOperation:out none,[/for][for (element : Print| aProgram.eAllContents(Print))]
[element.name/]_print:out none,[/for][for (element : If| aProgram.eAllContents(If))]
[element.name/]_doEvaluateIf:out none,[element.name/]_evaluateTrue:out none,[element.name/]_evaluateFalse:out none,[/for][for (element : Assign| aProgram.eAllContents(Assign))]
[/for][for (element : MethodCall| aProgram.eAllContents(MethodCall))]
[/for][for (element : Plus| aProgram.eAllContents(Plus))]
[/for][']'/] is
	states s0
[for (element : Program| aProgram.eAllContents(Program))]
    from s0  [element.name/]_start;  to s0

[/for]
[for (element : BooleanExpression| aProgram.eAllContents(BooleanExpression))]
    from s0  [element.name/]_bvalue;  to s0

[/for]
[for (element : Method| aProgram.eAllContents(Method))]
    from s0  [element.name/]_callIt;  to s0
    from s0  [element.name/]_endOf;  to s0

[/for]
[for (element : Operation| aProgram.eAllContents(Operation))]
    from s0  [element.name/]_startOfOperation;  to s0
    from s0  [element.name/]_execute;  to s0
    from s0  [element.name/]_endOfOperation;  to s0

[/for]
[for (element : Print| aProgram.eAllContents(Print))]
    from s0  [element.name/]_print;  to s0

[/for]
[for (element : If| aProgram.eAllContents(If))]
    from s0  [element.name/]_doEvaluateIf;  to s0
    from s0  [element.name/]_evaluateTrue;  to s0
    from s0  [element.name/]_evaluateFalse;  to s0

[/for]
[for (element : Assign| aProgram.eAllContents(Assign))]

[/for]
[for (element : MethodCall| aProgram.eAllContents(MethodCall))]

[/for]
[for (element : Plus| aProgram.eAllContents(Plus))]

[/for]

[file ('pUnConstrainedSemantics.fcr', false, 'UTF-8')]
process pUnConstrainedSemantics['['/][for (element : Program| aProgram.eAllContents(Program))]
[element.name/]_start:out none,[/for][for (element : BooleanExpression| aProgram.eAllContents(BooleanExpression))]
[element.name/]_bvalue:out none,[/for][for (element : Method| aProgram.eAllContents(Method))]
[element.name/]_callIt:out none,[element.name/]_endOf:out none,[/for][for (element : Operation| aProgram.eAllContents(Operation))]
[element.name/]_startOfOperation:out none,[element.name/]_execute:out none,[element.name/]_endOfOperation:out none,[/for][for (element : Print| aProgram.eAllContents(Print))]
[element.name/]_print:out none,[/for][for (element : If| aProgram.eAllContents(If))]
[element.name/]_doEvaluateIf:out none,[element.name/]_evaluateTrue:out none,[element.name/]_evaluateFalse:out none,[/for][for (element : Assign| aProgram.eAllContents(Assign))]
[/for][for (element : MethodCall| aProgram.eAllContents(MethodCall))]
[/for][for (element : Plus| aProgram.eAllContents(Plus))]
[/for][']'/] is
	
	states s0
[for (element : Program| aProgram.eAllContents(Program))]
    from s0  [element.name/]_start;  to s0

[/for]
[for (element : BooleanExpression| aProgram.eAllContents(BooleanExpression))]
    from s0  [element.name/]_bvalue;  to s0

[/for]
[for (element : Method| aProgram.eAllContents(Method))]
    from s0  [element.name/]_callIt;  to s0
    from s0  [element.name/]_endOf;  to s0

[/for]
[for (element : Operation| aProgram.eAllContents(Operation))]
    from s0  [element.name/]_startOfOperation;  to s0
    from s0  [element.name/]_execute;  to s0
    from s0  [element.name/]_endOfOperation;  to s0

[/for]
[for (element : Print| aProgram.eAllContents(Print))]
    from s0  [element.name/]_print;  to s0

[/for]
[for (element : If| aProgram.eAllContents(If))]
    from s0  [element.name/]_doEvaluateIf;  to s0
    from s0  [element.name/]_evaluateTrue;  to s0
    from s0  [element.name/]_evaluateFalse;  to s0

[/for]
[for (element : Assign| aProgram.eAllContents(Assign))]

[/for]
[for (element : MethodCall| aProgram.eAllContents(MethodCall))]

[/for]
[for (element : Plus| aProgram.eAllContents(Plus))]

[/for]
[/file]
/******************** Process Parallelization for Program******************/
component sys is

var 
	global : SystemDataRoot,
    ID: int := 0
	//global : SystemDataRoot := INITIAL_Configuration

port
[for (element : Program| aProgram.eAllContents(Program))]
[element.name/]_start: none,

[/for][for (element : BooleanExpression| aProgram.eAllContents(BooleanExpression))]
[element.name/]_bvalue: none,

[/for][for (element : Method| aProgram.eAllContents(Method))]
[element.name/]_callIt: none,[element.name/]_endOf: none,

[/for][for (element : Operation| aProgram.eAllContents(Operation))]
[element.name/]_startOfOperation: none,[element.name/]_execute: none,[element.name/]_endOfOperation: none,

[/for][for (element : Print| aProgram.eAllContents(Print))]
[element.name/]_print: none,

[/for][for (element : If| aProgram.eAllContents(If))]
[element.name/]_doEvaluateIf: none,[element.name/]_evaluateTrue: none,[element.name/]_evaluateFalse: none,

[/for][for (element : Assign| aProgram.eAllContents(Assign))]

[/for][for (element : MethodCall| aProgram.eAllContents(MethodCall))]

[/for][for (element : Plus| aProgram.eAllContents(Plus))]

[/for]

par

pUnConstrainedSemantics['['/][for (element : Program| aProgram.eAllContents(Program))]
[element.name/]_start,[/for][for (element : BooleanExpression| aProgram.eAllContents(BooleanExpression))]
[element.name/]_bvalue,[/for][for (element : Method| aProgram.eAllContents(Method))]
[element.name/]_callIt,[element.name/]_endOf,[/for][for (element : Operation| aProgram.eAllContents(Operation))]
[element.name/]_startOfOperation,[element.name/]_execute,[element.name/]_endOfOperation,[/for][for (element : Print| aProgram.eAllContents(Print))]
[element.name/]_print,[/for][for (element : If| aProgram.eAllContents(If))]
[element.name/]_doEvaluateIf,[element.name/]_evaluateTrue,[element.name/]_evaluateFalse,[/for][for (element : Assign| aProgram.eAllContents(Assign))]
,[/for][for (element : MethodCall| aProgram.eAllContents(MethodCall))]
,[/for][for (element : Plus| aProgram.eAllContents(Plus))]
,[/for][']'/]
[for (element : Program| aProgram.eAllContents(Program))]
|| p[element.name/] ['['/][element.name/]_start[']'/] (&global, ID)
[/for]
[for (element : BooleanExpression| aProgram.eAllContents(BooleanExpression))]
|| p[element.name/] ['['/][element.name/]_bvalue[']'/] (&global, ID)
[/for]
[for (element : Method| aProgram.eAllContents(Method))]
|| p[element.name/] ['['/][element.name/]_callIt,[element.name/]_endOf[']'/] (&global, ID)
[/for]
[for (element : Operation| aProgram.eAllContents(Operation))]
|| p[element.name/] ['['/][element.name/]_startOfOperation,[element.name/]_execute,[element.name/]_endOfOperation[']'/] (&global, ID)
[/for]
[for (element : Print| aProgram.eAllContents(Print))]
|| p[element.name/] ['['/][element.name/]_print[']'/] (&global, ID)
[/for]
[for (element : If| aProgram.eAllContents(If))]
|| p[element.name/] ['['/][element.name/]_doEvaluateIf,[element.name/]_evaluateTrue,[element.name/]_evaluateFalse[']'/] (&global, ID)
[/for]
[for (element : Assign| aProgram.eAllContents(Assign))]
|| p[element.name/] ['['/][']'/] (&global, ID)
[/for]
[for (element : MethodCall| aProgram.eAllContents(MethodCall))]
|| p[element.name/] ['['/][']'/] (&global, ID)
[/for]
[for (element : Plus| aProgram.eAllContents(Plus))]
|| p[element.name/] ['['/][']'/] (&global, ID)
[/for]
end par
sys 
[/file]
[/template]
