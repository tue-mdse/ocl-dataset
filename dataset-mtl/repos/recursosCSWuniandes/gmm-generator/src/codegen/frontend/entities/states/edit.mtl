[comment encoding = UTF-8 /]
[module edit('http://www.eclipse.org/uml2/5.0.0/UML') extends frontend::entities::main ]
[import ::utils /]

[template public mainEditState(c : Class, path : String)]
[let filePath : String = path.concat(c.getInstanceStatesFolder()+'edit/')]
    [c.genController(filePath)/]
    [c.genTemplate(filePath)/]
[/let]
[/template]

[template private genController(c : Class, path : String)]
[file (path.concat(c.getName()).concat('.edit.ctrl.js'), false, 'UTF-8')]
/*
[c.getModel().license()/]
*/
(function (ng) {

    var mod = ng.module("[c.getModule()/]");

    mod.controller("[c.getEditCtrlName()/]", ['['/]"$scope", "$state", "[c.getRecordName()/]",
        function ($scope, $state, [c.getRecordName()/]) {
            $scope.currentRecord = [c.getRecordName()/];
            $scope.actions = {
                save: {
                    displayName: 'Save',
                    icon: 'save',
                    fn: function () {
                        if ($scope.[c.getFormName()/].$valid) {
                            $scope.currentRecord.put().then(function (rc) {
                                $state.go('[c.getDetailStateName()/]', {[c.getIdParamName()/]: rc.id}, {reload: true});
                            });
                        }
                    }
                },
                cancel: {
                    displayName: 'Cancel',
                    icon: 'remove',
                    fn: function () {
                        $state.go('[c.getDetailStateName()/]');
                    }
                }
            };
        }[']'/]);
})(window.angular);
[/file]
[/template]

[template private genTemplate(c : Class, path : String)]
[file (path.concat(c.getName()).concat('.edit.tpl.html'), false, 'UTF-8')]
<!--
[c.getModel().license()/]
-->
<header>
    <toolbar name="model.name" display-name="model.displayName" actions='actions'></toolbar>
</header>
<form novalidate name="[c.getFormName()/]" role="form">
    <fieldset>
        [if (c.getModel().valueOf('form')='true')]
        <input id="id" class="form-control" type="hidden" ng-model="currentRecord.id"/>
        [for (a : Property | c.getAllAttribs())]
    <div class="form-group col-md-12" ng-class="{'has-success': [c.getFormName()/].[a.name/].$valid && [c.getFormName()/].[a.name/].$dirty, 'has-error': [c.getFormName()/].[a.name/].$invalid && [c.getFormName()/].[a.name/].$dirty}" >
        <label for="[a.name/]" class="col-md-2 control-label">[a.name.toUpperFirst()/]</label>
        <div class="col-md-10">
        [if (a.type.name='String')]
            <input id="[a.name/]" name="[a.name/]" class="form-control" type="text" ng-model="currentRecord.[a.name/]" ng-required="[a.isRequired()/]" />
        [elseif (a.type.name='Integer' or a.type.name='Long'  or a.type.name='Float')]
            <input id="[a.name/]" name="[a.name/]" class="form-control" type="number" ng-model="currentRecord.[a.name/]" ng-required="[a.isRequired()/]" />
        [elseif (a.type.name='Image')]
            <input id="[a.name/]" name="[a.name/]" class="form-control" type="url" ng-model="currentRecord.[a.name/]" ng-required="[a.isRequired()/]" />
        [elseif (a.type.name='Boolean')]
            <input id="[a.name/]" name="[a.name/]" class="form-control" ng-checked="currentRecord.[a.name/]" type="checkbox" ng-model="currentRecord.[a.name/]" ng-required="[a.isRequired()/] && currentRecord.[a.name/].$isEmpty" />
        [elseif (a.type.name='Date')]
            <date-picker value="currentRecord.[a.name/]" model="[a.name/]"></date-picker>
        [/if]
        </div>
    </div>
        [/for]
        [for (a : Property | c.getReferences(false)->reject(isComposite()))]
    <div class="form-group col-md-12" ng-class="{'has-success': [c.getFormName()/].[a.name/].$valid && [c.getFormName()/].[a.name/].$dirty, 'has-error': [c.getFormName()/].[a.name/].$invalid && [c.getFormName()/].[a.name/].$dirty}" >
        <label for="[a.name/]" class="col-md-2 control-label">[a.name.toUpperFirst()/]</label>
        <div class="col-md-10">
            <select id="[a.name/]" name="[a.name/]" class="form-control" ng-options="rc.name for rc in references.[a.name/] track by rc.id" ng-model="currentRecord.[a.name/]"></select>
        </div>
    </div>
        [/for]    
        [else]
        <crud-form fields='model.fields' record='currentRecord' lists-of-values="references"></crud-form>
        [/if]
    </fieldset>
</form>
[/file]
[/template]

[template private getFormName(c : Class)]
[c.getName()/]Form
[/template]