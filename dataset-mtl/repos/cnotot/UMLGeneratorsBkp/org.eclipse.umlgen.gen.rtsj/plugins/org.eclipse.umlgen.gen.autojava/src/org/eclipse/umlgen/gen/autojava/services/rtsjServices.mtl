[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2012, 2014 CNES and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Cedric Notot (Obeo) - initial API and implementation
[/comment]

[module rtsjServices('http://www.eclipse.org/uml2/5.0.0/UML')/]

[query public getPortSize(arg0 : Port) : Integer
	= invoke('org.eclipse.umlgen.gen.autojava.services.RTSJServices', 'getPortSize(org.eclipse.uml2.uml.Port)', Sequence{arg0}) /]

[query public computePortSize(arg0 : Integer, arg1 : Interface) : Integer
	= invoke('org.eclipse.umlgen.gen.autojava.services.RTSJServices', 'computePortSize(int,org.eclipse.uml2.uml.Interface)', Sequence{arg0,arg1}) /]

[query public getMBuffer(arg0 : Port) : Integer
	= invoke('org.eclipse.umlgen.gen.autojava.services.RTSJServices', 'getMBuffer(org.eclipse.uml2.uml.Port)', Sequence{arg0}) /]

[query public getPortBuffer(arg0 : Class) : Integer
	= invoke('org.eclipse.umlgen.gen.autojava.services.RTSJServices', 'getPortBuffer(org.eclipse.uml2.uml.Class)', Sequence{arg0}) /]

[**
 * The documentation of the query
 * @param arg0 Signal receiver
 */]
[query public computeSignalSize(arg0 : Signal) : Integer
	= invoke('org.eclipse.umlgen.gen.autojava.services.RTSJServices', 'computeSignalSize(org.eclipse.uml2.uml.Signal)', Sequence{arg0}) /]

[**
 * The documentation of the query
 * @param arg0 Port receiver
 */]
[query public isPortAsynchronous(arg0 : Port) : Boolean
	= invoke('org.eclipse.umlgen.gen.autojava.services.RTSJServices', 'isPortAsynchronous(org.eclipse.uml2.uml.Port)', Sequence{arg0}) /]
