[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2012, 2014 CNES and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Cedric Notot (Obeo) - initial API and implementation
[/comment]

[module rootFile('http://www.eclipse.org/uml2/5.0.0/UML','http://www.eclipse.org/umlgen/dsl/asl','http://www.eclipse.org/umlgen/dsl/eth')]

[import org::eclipse::umlgen::gen::autojava::files::ethernetComFile /]
[import org::eclipse::umlgen::gen::autojava::specific::root /]
[import org::eclipse::umlgen::gen::autojava::specific::lib::feature /]
[import org::eclipse::umlgen::gen::autojava::requests::ethernet /]
[import org::eclipse::umlgen::gen::autojava::requests::common /]
[import org::eclipse::umlgen::gen::autojava::services::utilServices /]
[import org::eclipse::umlgen::gen::autojava::common::common /]

[template public genRootBody(aContainer : Container, aClass : Class)]
[aContainer.genRootPackagePath().genPackageDeclaration()/]

import org.eclipse.umlgen.rtsj.framework.*;
import org.eclipse.umlgen.rtsj.framework.types.*;
[for (aProp : Property | minimize(aContainer.get('components'))->filter(Property))]
import [aProp.genDecoratorPackagePath()/].[aProp.type.oclAsType(Class).genName()/];
[/for]
[aClass.genDistributedEthernetComImports(aContainer)/]
// [protected ('to add imports for '.concat(aContainer.genRootClassName()))]

// [/protected]

public class [aContainer.genRootClassName()/] {

	[aClass.genDistributedRoot(aContainer)/]

[for (p : Property | aContainer.get('components')->filter(Property))]
	[p.genAttribute()/]
[/for]
// [protected ('to add fields for '.concat(aContainer.genRootClassName()))]

// [/protected]

[comment Generate methods /]
[for (o : Operation | aClass.get('ownedOperation')->filter(Operation)->select(itO : Operation | not itO.name.equalsIgnoreCase(aClass.name)))]
	[o.genOperation()/]
[/for]

}
[/template]

[template public genRootPackagePath(aContainer : Container)]
[aContainer.genDecoratorPackagePath()/]
[/template]
