[comment encoding = UTF-8 

Copyright (c) 2012 Obeo
All rights reserved.  This program and the accompanying materials
are made available under the terms of the Eclipse Public License 1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

You can apply any license to the files generated with this module and Acceleo.

Contributors :
	Mathieu Cartaud (Obeo) - initial API and implementation
/]
[module extensionExsdFile('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel', 'http://www.obeonetwork.org/dsl/eclipse')]

[import org::obeonetwork::dsl::gen::eclipse::common::normalizeName /]

[template private extensionExsdFile(anExtensionPoint : ExtensionPointProvider)]
[anExtensionPoint.eContainer(Bundle).genBundlePath()/]/schema/[anExtensionPoint.genExtensionName()/].exsd
[/template]

[template public genExtensionExsdFile(anExtensionPoint : ExtensionPointProvider)]
[file (extensionExsdFile(), false, 'UTF-8')]
<!-- Schema file written by PDE -->
<schema targetNamespace="[anExtensionPoint.ancestors(Bundle).genBundleID()/]" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="[anExtensionPoint.ancestors(Bundle).genBundleID()/]" id="[anExtensionPoint.ancestors(Bundle).genBundleID()/].[anExtensionPoint.genExtensionName()/]" name="[anExtensionPoint.genExtensionName()/]"/>
      </appinfo>
      <documentation>
         ['['/]Enter description of this extension point.]
      </documentation>
   </annotation>

     <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="[anExtensionPoint.genExtensionName()/]" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="[anExtensionPoint.genExtensionName()/]">
      <complexType>
         <attribute name="[anExtensionPoint.className/]" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="[anExtensionPoint.eContainer(Bundle).genBundleID()/].registry.Abstract[anExtensionPoint.refactorExtensionClassName()/]Extension:[anExtensionPoint.eContainer(Bundle).genBundleID()/].registry.I[anExtensionPoint.refactorExtensionClassName()/]Extension"/>
               </appinfo>
            </annotation>
         </attribute>
[for (anAttribute : JavaAttribute | anExtensionPoint.javaAttributes)]
         <attribute name="[anAttribute.name/]" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="[anAttribute.eContainer(Bundle).genBundleID()/].registry.Abstract[anExtensionPoint.genExtensionName()/]Extension:[anAttribute.eContainer(Bundle).genBundleID()/].registry.I[anExtensionPoint.genExtensionName()/]Extension"/>
               </appinfo>
            </annotation>
         </attribute>
[/for][for (anAttribute : StringAttribute | anExtensionPoint.stringAttributes)]
         <attribute name="[anAttribute.name/]" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
[/for]
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         ['['/]Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         ['['/]Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         ['['/]Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         ['['/]Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation> 


</schema>
[/file]
[/template]