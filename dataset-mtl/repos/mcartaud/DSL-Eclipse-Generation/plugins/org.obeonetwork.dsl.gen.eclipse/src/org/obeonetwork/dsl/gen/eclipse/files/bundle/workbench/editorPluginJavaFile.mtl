[comment encoding = UTF-8 

Copyright (c) 2012 Obeo
All rights reserved.  This program and the accompanying materials
are made available under the terms of the Eclipse Public License 1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

You can apply any license to the files generated with this module and Acceleo.

Contributors :
	Mathieu Cartaud (Obeo) - initial API and implementation
/]
[module editorPluginJavaFile('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel', 'http://www.obeonetwork.org/dsl/eclipse')]

[import org::obeonetwork::dsl::gen::eclipse::common::normalizeName /]


[template private editorPluginJavaFile(anEditor : Editor)]
[anEditor.eContainer(Bundle).genBundleJavaPath()/]/editors/[anEditor.name.replaceAll(' ', '_').toUpperFirst()/]Plugin.java
[/template]

[template public genEditorPluginJavaFile(anEditor : Editor)]
[file (editorPluginJavaFile(), false, 'UTF-8')]
package [anEditor.eContainer(Bundle).genBundleID()/].editors;

import org.eclipse.emf.codegen.ecore.genmodel.provider.GenModelEditPlugin;
import org.eclipse.emf.common.EMFPlugin;

import org.eclipse.emf.common.ui.EclipseUIPlugin;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.ecore.provider.EcoreEditPlugin;

//[protected (': add editorPlugin imports for ' + anEditor.name)]
//[/protected]

/**
 * This is the central singleton for the [anEditor.name.replaceAll(' ', '').toUpperFirst()/] editor plugin.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
[anEditor.eContainer(Bundle).genMail()/]
 * @generated
 */
public final class [anEditor.name.replaceAll(' ', '').toUpperFirst()/]Plugin extends EMFPlugin {

	//[protected (': add editorPlugin attributes for ' + anEditor.name)]
	//[/protected]

	/**
	 * Keep track of the singleton.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final [anEditor.name.replaceAll(' ', '').toUpperFirst()/]Plugin INSTANCE = new [anEditor.name.replaceAll(' ', '').toUpperFirst()/]Plugin();

	/**
	 * Keep track of the singleton.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static Implementation plugin;

	/**
	 * Create the instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public [anEditor.name.replaceAll(' ', '').toUpperFirst()/]Plugin() {
		super(new ResourceLocator ['['/]] {
				EcoreEditPlugin.INSTANCE,
				GenModelEditPlugin.INSTANCE,
			});
	}

	/**
	 * Returns the singleton instance of the [anEditor.name.replaceAll(' ', '').toUpperFirst()/] plugin.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the singleton instance.
	 * @generated
	 */
	@Override
	public ResourceLocator getPluginResourceLocator() {
		return plugin;
	}

	/**
	 * Returns the singleton instance of the [anEditor.name.replaceAll(' ', '').toUpperFirst()/] plugin.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the singleton instance.
	 * @generated
	 */
	public static Implementation getPlugin() {
		return plugin;
	}

	/**
	 * The actual implementation of the [anEditor.name.replaceAll(' ', '').toUpperFirst()/] <b>Plugin</b>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class Implementation extends EclipseUIPlugin {
		/**
		 * Creates an instance.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Implementation() {
			super();
	
			// Remember the static instance.
			//
			plugin = this;
		}
	}

	//[protected (': add editorPlugin methods for ' + anEditor.name)]
	//[/protected]

}

[/file]
[/template]