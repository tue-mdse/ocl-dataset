[comment encoding = UTF-8 

Copyright (c) 2012 Obeo
All rights reserved.  This program and the accompanying materials
are made available under the terms of the Eclipse Public License 1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

You can apply any license to the files generated with this module and Acceleo.

Contributors :
	Mathieu Cartaud (Obeo) - initial API and implementation
/]
[module normalizeName('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel', 'http://www.obeonetwork.org/dsl/eclipse')]

[import org::obeonetwork::dsl::gen::eclipse::services::findModelBundle /]


[comment --------------------------------------------------------------------------
  Name
 ---------------------------------------------------------------------------------- /]
[template public genApplicationName(anApplication : Application)]
[anApplication.applicationID.substituteAll('.', '-')/]
[/template]

[template public refactorNatureName(aNature : Nature)]
[aNature.name.substituteAll(' ', '_')/]
[/template]

[template public refactorBuilderName(aBuilder : Builder)]
[aBuilder.name.substituteAll(' ', '_')/]
[/template]

[template public refactorCategoryName(aCategory : Category)]
[aCategory.name.substituteAll(' ', '_')/]
[/template]

[template public refactorWizardName(aWizard : Wizard)]
[aWizard.name.substituteAll(' ', '_')/]
[/template]

[template public refactorDecoratorName(aDecorator : Decorator)]
[aDecorator.name.substituteAll(' ', '_')/]
[/template]

[template public refactorMarkerName(aMarker : Marker)]
[aMarker.name.substituteAll(' ', '_')/]
[/template]

[template public refactorHelpLabel(anHelpContent : HelpContents)]
[anHelpContent.label.substituteAll(' ', '_').toLowerFirst()/]
[/template]

[template public refactorDynamicHelpLabel(aDynamicHelp : DynamicHelp)]
[aDynamicHelp.label.substituteAll(' ', '_').toLowerFirst()/]
[/template]

[template public refactorEditorName(anEditor : Editor)]
[anEditor.name.replaceAll(' ', '_')/]
[/template]

[template public refactorPerspectiveName(aPerspective : Perspective)]
[aPerspective.name.replaceAll(' ', '_')/]
[/template]

[template public refactorCommandName(aCommand : Command)]
[aCommand.name.replaceAll(' ', '_')/]
[/template]

[template private refactorPopupName(aPopup : PopupMenuContribution)]
[aPopup.name.replaceAll(' ', '_')/]
[/template]

[template public refactorHandlerName(anHandler : DefaultHandler)]
[anHandler.name.replaceAll(' ', '_')/]
[/template]

[template public refactorHandlerName(anHandler : ContextualHandler)]
[anHandler.name.replaceAll(' ', '_')/]
[/template]

[template public refactorViewName(aView : View)]
[aView.name.replaceAll(' ', '_')/]
[/template]

[template public refactorMenuName(aMenu : MenuContribution)]
[aMenu.name.replaceAll(' ', '_')/]
[/template]

[template public refactorToolbarName(aToolbar : ToolbarContribution)]
[aToolbar.name.replaceAll(' ', '_')/]
[/template]

[template public refactorContextName(aContext : Context)]
[aContext.name.replaceAll(' ', '_')/]
[/template]

[template public genExtensionName(anExtensionPoint : ExtensionPointProvider)]
[anExtensionPoint.name.toUpperFirst().replaceAll(' ', '_').substitute('Extension', '')/]
[/template]

[template public refactorName(aBundle : Bundle)]
[aBundle.author.substituteAll(' ', '.').substituteAll('.', ' . ').tokenize().toUpperFirst().substituteAll('.', ' ')/]
[/template]

[template private refactorNameForMail(aBundle : Bundle)]
[aBundle.author.toLower().replaceAll(' ', '.')/]
[/template]

[template private refactorName(anApplication : Application)]
[anApplication.defaultAuthor.substituteAll(' ', '.').substituteAll('.', ' . ').tokenize().toUpperFirst().substituteAll('.', ' ')/]
[/template]

[template private refactorNameForMail(anApplication : Application)]
[anApplication.defaultAuthor.toLower().replaceAll(' ', '.')/]
[/template]

[template public iconName(aView : View)]
View-[aView.refactorViewName().toUpperFirst()/]-Icon.gif
[/template]

[template public iconName(anEditor : Editor)]
Editor-[anEditor.refactorEditorName().toUpperFirst()/]-Icon.gif
[/template]

[template public iconName(aWizard : Wizard)]
Wizard-[aWizard.refactorWizardName().toUpperFirst()/]-Icon.gif
[/template]

[template public iconName(aPerspective : Perspective)]
Perspective-[aPerspective.refactorPerspectiveName().toUpperFirst()/]-Icon.gif
[/template]

[template public iconName(aMenu : MenuContribution)]
Menu-[aMenu.refactorMenuName().toUpperFirst()/]-Icon.gif
[/template]

[template public iconName(aCommand : Command)]
Command-[aCommand.refactorCommandName().toUpperFirst()/]-Icon.gif
[/template]

[template public iconName(aDecorator : Decorator)]
Decorator-[aDecorator.refactorDecoratorName().toUpperFirst()/]-Icon.gif
[/template]

[template public genAttributeClassName(anAttribute : JavaAttribute)]
[anAttribute.nonQualifiedName.toUpperFirst().replaceAll(' ', '')/]
[/template]

[query public staticExtensionName(anExtensionPoint : ExtensionPointProvider) : String = 
anExtensionPoint.name.replaceAll(' ', '_').toUpper()
/]

[template public staticJavaAttributeName(anAttribute : JavaAttribute)]
[anAttribute.name.replaceAll(' ', '_').toUpper()/]
[/template]

[template public staticStringAttributeName(anAttribute : StringAttribute)]
[anAttribute.name.replaceAll(' ', '_').toUpper()/]
[/template]

[template public refactorAttributeName(anAttribute : StringAttribute)]
[anAttribute.name.toUpperFirst().substituteAll(' ', '')/]
[/template]

[template public refactorAttributeName(anAttribute : JavaAttribute)]
[anAttribute.name.toUpperFirst().substituteAll(' ', '')/]
[/template]

[template public genServicePackageName(aDeclarativeService : DeclarativeService)]
[aDeclarativeService.ancestors(Bundle).genBundleID()/].services
[/template]

[template public refactorExtensionClassName(anExtensionPoint : ExtensionPointProvider)]
[anExtensionPoint.className.toUpperFirst().substituteAll(' ', '')/]
[/template]

[template public genExtensionClientClass(anExtensionPoint : ExtensionPointClient)]
[anExtensionPoint.name.toUpperFirst().substituteAll(' ', '')/]
[/template]


[comment --------------------------------------------------------------------------
  ID
 ---------------------------------------------------------------------------------- /]
[template public genApplicationID(anApplication : Application)]
[anApplication.baseNamespace/].[anApplication.applicationID/]
[/template]

[template public genParentID(anApplication : Application)]
[anApplication.getTheBundleForModel().substituteAll('-', '.').substituteAll('_', '.').toLower()/]
[/template]

[template public genFeatureID(aFeature : Feature)]
[aFeature.eContainer(Application).baseNamespace/].[aFeature.ID/]
[/template]

[template public genRepositoryID(aRepository : Repository)]
[aRepository.eContainer(Application).baseNamespace/].[aRepository.ID/]
[/template]

[template public genBundleID(aBundle : Bundle)]
[aBundle.eContainer(Application).baseNamespace/].[aBundle.ID/]
[/template]

[template public genNatureID(aNature : Nature)]
[aNature.eContainer(Bundle).genBundleID()/].nature-id.[aNature.refactorNatureName().toLowerFirst()/]
[/template]

[template public genBuilderID(aBuilder : Builder)]
[aBuilder.eContainer(Bundle).genBundleID()/].builder-id.[aBuilder.refactorBuilderName().toLowerFirst()/]
[/template]

[template public genCategoryID(aCategory : Category)]
[aCategory.eContainer(Bundle).genBundleID()/].category-id.[aCategory.refactorCategoryName().toLowerFirst()/]
[/template]

[template public genWizardID(aWizard : Wizard)]
[aWizard.eContainer(Bundle).genBundleID()/].wizard-id.[aWizard.refactorWizardName().toLowerFirst()/]
[/template]

[template public genDecoratorID(aDecorator : Decorator)]
[aDecorator.eContainer(Bundle).genBundleID()/].decorator-id.[aDecorator.refactorDecoratorName().toLowerFirst()/]
[/template]

[template public genMarkerID(aMarker : Marker)]
[aMarker.eContainer(Bundle).genBundleID()/].marker-id.[aMarker.refactorMarkerName().toLowerFirst()/]
[/template]

[template public genPerspectiveID(aPerspective : Perspective)]
[aPerspective.eContainer(Bundle).genBundleID()/].perspective-id.[aPerspective.refactorPerspectiveName().toLowerFirst()/]
[/template]

[template public genCommandID(aCommand : Command)]
[aCommand.eContainer(Bundle).genBundleID()/].command-id.[aCommand.refactorCommandName().toLowerFirst()/]
[/template]

[template public genPopupID(aPopup : PopupMenuContribution)]
[aPopup.eContainer(Bundle).genBundleID()/].popup-id.[aPopup.refactorPopupName().toLowerFirst()/]
[/template]

[template public genViewID(aView : View)]
[aView.eContainer(Bundle).genBundleID()/].view-id.[aView.refactorViewName().toLowerFirst()/]
[/template]

[template public genEditorID(anEditor : Editor)]
[anEditor.eContainer(Bundle).genBundleID()/].editor-id.[anEditor.refactorEditorName().toLowerFirst()/]
[/template]

[template public genMenuEditorID(anEditor : Editor)]
[anEditor.eContainer(Bundle).genBundleID()/].menuEditor-id.[anEditor.refactorEditorName().toLowerFirst()/]
[/template]

[template public genMenuID(aMenu : MenuContribution)]
[aMenu.eContainer(Bundle).genBundleID()/].menu-id.[aMenu.refactorMenuName().toLowerFirst()/]
[/template]

[template public genToolbarID(aToolbar : ToolbarContribution)]
[aToolbar.eContainer(Bundle).genBundleID()/].toolbar-id.[aToolbar.refactorToolbarName().toLowerFirst()/]
[/template]

[template public genDefinitionID(aCommand : Command)]
[aCommand.eContainer(Bundle).genBundleID()/].definition-id.[aCommand.refactorCommandName().toLowerFirst()/]
[/template]

[template public genContextID(aContext : Context)]
[aContext.eContainer(Bundle).genBundleID()/].context-id.[aContext.refactorContextName().toLowerFirst()/]
[/template]

[template public genInterfaceProvidedID(aProvidedService : ProvidedService)]
[aProvidedService.interface.genPackage.basePackage/].[aProvidedService.interface.genPackage.ecorePackage.name/].[aProvidedService.interface.ecoreClass.name/]
[/template]

[template public genImplementationID(aDeclarativeService : DeclarativeService)]
[aDeclarativeService.delegatorClass.genPackage.basePackage/].[aDeclarativeService.delegatorClass.ecoreClass.eSuperTypes.name/]
[/template]

[template public genInterfaceID(aRequiredService : RequiredService)]
[for (aProvidedService : ProvidedService | aRequiredService.ancestors(Application).eAllContents(ProvidedService))]
[if (aRequiredService.reference.eType.name = aProvidedService.interface.ecoreClass.name)]
[aProvidedService.interface.genPackage.basePackage/].[aProvidedService.interface.ecoreClass.ePackage.name/].[aProvidedService.interface.ecoreClass.name/][/if][/for]
[/template]


[comment --------------------------------------------------------------------------
  Path
 ---------------------------------------------------------------------------------- /]
[template public genFeaturePath(aFeature : Feature)]
features/[aFeature.genFeatureID()/]
[/template]

[template public genRepositoryPath(aRepository : Repository)]
repositories/[aRepository.genRepositoryID()/]
[/template]

[template public genBundlePath(aBundle : Bundle)]
plugins/[aBundle.genBundleID()/]
[/template]

[template public genBundleTestPath(aBundle : Bundle)]
tests/[aBundle.genBundleID()/].tests
[/template]

[template public genBundleJavaPath(aBundle : Bundle)]
[aBundle.genBundlePath()/]/src/[aBundle.eContainer(Application).baseNamespace.substituteAll('.', '/')/]/[aBundle.ID.substituteAll('.', '/')/]
[/template]

[template public genBundleJavaTestPath(aBundle : Bundle)]
[aBundle.genBundleTestPath()/]/src/[aBundle.eContainer(Application).baseNamespace.substituteAll('.', '/')/]/[aBundle.ID.substituteAll('.', '/')/]/tests
[/template]

[template public genNaturePath(aNature : Nature)]
[aNature.eContainer(Bundle).genBundleID()/].natures.[aNature.refactorNatureName().toUpperFirst()/]
[/template]

[template public genBuilderPath(aBuilder : Builder)]
[aBuilder.eContainer(Bundle).genBundleID()/].builders.[aBuilder.refactorBuilderName().toUpperFirst()/]
[/template]

[template public genWizardPath(aWizard : Wizard)]
[aWizard.eContainer(Bundle).genBundleID()/].wizards.[aWizard.refactorWizardName().toUpperFirst()/]
[/template]

[template public genPerspectivePath(aPerspective : Perspective)]
[aPerspective.eContainer(Bundle).genBundleID()/].perspectives.[aPerspective.refactorPerspectiveName().toUpperFirst()/]
[/template]

[template public genHandlerPath(anHandler : DefaultHandler)]
[anHandler.eContainer(Bundle).genBundleID()/].handlers.[anHandler.refactorHandlerName().toUpperFirst()/]
[/template]

[template public genHandlerPath(anHandler : ContextualHandler)]
[anHandler.eContainer(Bundle).genBundleID()/].handlers.[anHandler.refactorHandlerName().toUpperFirst()/]
[/template]

[template public genViewPath(aView : View)]
[aView.eContainer(Bundle).genBundleID()/].views.[aView.refactorViewName().toUpperFirst()/]
[/template]

[template public genViewFilePath(aView : View)]
[aView.eContainer(Bundle).genBundleID()/].views
[/template]

[template public genEditorPath(anEditor : Editor)]
[anEditor.eContainer(Bundle).genBundleID()/].editors.[anEditor.refactorEditorName().toUpperFirst()/]
[/template]

[template public genServicePackagePath(aDeclarativeService : DeclarativeService)]
[aDeclarativeService.genServicePackageName().substituteAll('.', '/')/]
[/template]


[comment --------------------------------------------------------------------------
  Version
 ---------------------------------------------------------------------------------- /]
[template public applicationVersion(anApplication : Application)]
[if (anApplication.version.oclIsUndefined() or anApplication.version->size() > 0)]1.0.0.qualifier[else][anApplication.version/].qualifier[/if]
[/template]

[template public bundleVersion(aBundle : Bundle)]
[if (aBundle.version.oclIsUndefined() or aBundle.version->size() > 0)]1.0.0.qualifier[else][aBundle.version/].qualifier[/if]
[/template]

[template public featureVersion(aFeature : Feature)]
[if (aFeature.version.oclIsUndefined() or aFeature.version->size() > 0)]1.0.0.qualifier[else][aFeature.version/].qualifier[/if]
[/template]


[comment --------------------------------------------------------------------------
  Mail
 ---------------------------------------------------------------------------------- /]
[template public genMail(aBundle : Bundle)]
[if (aBundle.author->size() > 0 and not(aBundle.author.oclIsUndefined()))]
 * @author <a href="mailto:[aBundle.refactorNameForMail()/]@obeo.fr">[aBundle.refactorName()/]</a>[elseif (aBundle.eContainer(Application).defaultAuthor->size() > 0 and not(aBundle.eContainer(Application).defaultAuthor.oclIsUndefined()))]
 * @author <a href="mailto:[aBundle.eContainer(Application).refactorNameForMail()/]@obeo.fr">[aBundle.eContainer(Application).refactorName()/]</a>[else]
 * @author <a href="mailto:invalid.invalid@obeo.fr">No Author</a>
[/if]
[/template]
