[comment encoding = UTF-8 /]
[module folder('http://www.eclipse.org/uml2/3.0.0/UML')]

[template public layoutfile(c : Class) ]
[file ('res/layout/' + c.name + '.xml', false)]
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical" >

    <TextView
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="@string/hello" />

</LinearLayout>
[/file]
[/template]



[template public stringsfile(p : Package) ]
[for (c : Class | p.ownedElement -> select(e:Element | e.oclIsKindOf(Class)))]
	[if (c.getAppliedStereotype('profile::AndroidManifestXML') <> null)]
		[file ('res/values/strings.xml', false)]
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="hello">Hello World, [c.getValue(c.getAppliedStereotype('profile::AndroidManifestXML'), 'MainActivity').oclAsType(Class).name.toUpperFirst()/]!</string>
    <string name="app_name">[c.getValue(c.getAppliedStereotype('profile::AndroidManifestXML'), 'MainActivity').oclAsType(Class).name.toUpperFirst()/]</string>
</resources>
		[/file]
	[/if]
[/for]
[/template]



[template public copyImageFile() ]
	[copyImageFile('C:/Program Files (x86)/eclipse/workspace/SWE_Android/src/SWE_Android/files/','C:/Program Files (x86)/eclipse/workspace/SWE_Android/src_gen/res/drawable-hdpi/', 'ic_launcher_h.png') /]
	[copyImageFile('C:/Program Files (x86)/eclipse/workspace/SWE_Android/src/SWE_Android/files/','C:/Program Files (x86)/eclipse/workspace/SWE_Android/src_gen/res/drawable-ldpi/', 'ic_launcher_l.png') /]
	[copyImageFile('C:/Program Files (x86)/eclipse/workspace/SWE_Android/src/SWE_Android/files/','C:/Program Files (x86)/eclipse/workspace/SWE_Android/src_gen/res/drawable-mdpi/', 'ic_launcher_m.png') /]
[/template]

[query public copyImageFile(sourcePath: String, destinationPath: String, name: String) : Boolean = invoke('SWE_Android.files.Utility','copyImageFile(java.lang.String, java.lang.String, java.lang.String)', Sequence{sourcePath, destinationPath, name}) /]
