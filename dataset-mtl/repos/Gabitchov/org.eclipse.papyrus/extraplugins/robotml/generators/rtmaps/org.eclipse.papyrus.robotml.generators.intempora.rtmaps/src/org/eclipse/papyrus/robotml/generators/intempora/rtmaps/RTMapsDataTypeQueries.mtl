[comment encoding = Cp1252 /]
[comment]
/*****************************************************************************
 * Copyright (c) 2013 INTEMPORA S.A.
 *
 * This software is a computer program whose purpose is to transform RobotML models
 * into RTMaps diagrams and RTMaps components via source code generation techniques.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *  Nicolas DU LAC (INTEMPORA) - Initial API and implementation
 *
 *****************************************************************************/
[/comment]
[module RTMapsDataTypeQueries('http://www.eclipse.org/uml2/3.0.0/UML', 'http://Papyrus/RobotML/1')/]

[query public getMAPSIOEltAccessFunction(type_name : String, ioelt_name : String, return_var_name : String) : String
	= invoke('org.eclipse.papyrus.robotml.generators.intempora.rtmaps.RTMapsDataTypeQueries', 'getMAPSIOEltAccessFunction(java.lang.String, java.lang.String, java.lang.String)', Sequence{type_name,ioelt_name,return_var_name}) /]
	
[query public getRTMapsOutputDefForPrimitiveType(arg0 : String, arg1 : String, arg2 : Integer) : String
	= invoke('org.eclipse.papyrus.robotml.generators.intempora.rtmaps.RTMapsDataTypeQueries', 'getRTMapsOutputDefForPrimitiveType(java.lang.String, java.lang.String, int)', Sequence{arg0, arg1, arg2}) /]

[query public getRTMapsInputDefForPrimitiveType(arg0 : String, arg1 : String) : String
	= invoke('org.eclipse.papyrus.robotml.generators.intempora.rtmaps.RTMapsDataTypeQueries', 'getRTMapsInputDefForPrimitiveType(java.lang.String, java.lang.String)', Sequence{arg0, arg1}) /]

[query public getPckOutputDir(arg : String) : String
	= invoke('org.eclipse.papyrus.robotml.generators.intempora.rtmaps.RTMapsDataTypeQueries', 'getPckOutputDir(java.lang.String)', Sequence{arg}) /]

[query public getNbElementsInVector(type_name : String, ioelt_name : String, return_value_name : String) : String
	= invoke('org.eclipse.papyrus.robotml.generators.intempora.rtmaps.RTMapsDataTypeQueries', 'getNbElementsInVector(java.lang.String, java.lang.String, java.lang.String)', Sequence{type_name, ioelt_name, return_value_name}) /]

[query public setVectorSizeForVector(type_name : String, nb_elements : Integer, ioelt_name : String) : String
	= invoke('org.eclipse.papyrus.robotml.generators.intempora.rtmaps.RTMapsDataTypeQueries', 'setVectorSizeForVector(java.lang.String, int, java.lang.String)', Sequence{type_name, nb_elements, ioelt_name}) /]

[query public hasRTMapsNativeImplementation(c : Class) : Boolean
	= invoke('org.eclipse.papyrus.robotml.generators.intempora.rtmaps.RTMapsDataTypeQueries', 'hasRTMapsNativeImplementation(org.eclipse.uml2.uml.Class)', Sequence{c}) /]

[query public getRTMapsNativeComponentNameFromGenericAttribute(c : Class) : String
	= invoke('org.eclipse.papyrus.robotml.generators.intempora.rtmaps.RTMapsDataTypeQueries', 'getRTMapsNativeComponentNameFromGenericAttribute(org.eclipse.uml2.uml.Class)', Sequence{c}) /]

[query public getRTMapsNativeLibraryPathFromGenericAttribute(c : Class) : String
	= invoke('org.eclipse.papyrus.robotml.generators.intempora.rtmaps.RTMapsDataTypeQueries', 'getRTMapsNativeLibraryPathFromGenericAttribute(org.eclipse.uml2.uml.Class)', Sequence{c}) /]
