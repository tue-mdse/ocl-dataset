[comment deprecated /]
[comment encoding = UTF-8 /]
[module generateContextTypeClass('http://www.eclipse.org/papyrus/2010/domaincontextcodegen','http://www.eclipse.org/emf/2002/Ecore')/]

[template public generateContextTypeClass(domain : DomainContext)]
	[comment this template is used to generate a class to obtain the client context/]
	[file (domain.typeProjectName.substituteAll('.', '/').concat('/element/'+domain.elementTypeNamePrefix.concat('TypeContext.java')), false, 'UTF-8')]
	
	package [ domain.typeProjectName.concat('.element')/];

	import org.eclipse.gmf.runtime.emf.type.core.ClientContextManager;
	import org.eclipse.gmf.runtime.emf.type.core.IClientContext;

	/**
 	* This is a [domain.elementTypeNamePrefix/] context in order to call helper for UML
	 *
 	*/
	public class [domain.elementTypeNamePrefix/]TypeContext {

	/**
	 * the ID if [domain.elementTypeNamePrefix/] Type Context
	 */
	public static final String ID = "[domain.IClientContextID/]"; //$NON-NLS-1$
	/**
 	* Used to obtain the [domain.elementTypeNamePrefix/] context 
 	* @return the [domain.elementTypeNamePrefix/] context
 	* @throws Exception if the context is not found 
 	*/
	public static IClientContext getContext() throws Exception {
		IClientContext context = ClientContextManager.getInstance().getClientContext(ID);
		if(context == null) {
			throw new Exception("Could not retrieve context : "+ID+".");
		}

		return context;
	}

	}
	[/file]
	
[/template]
