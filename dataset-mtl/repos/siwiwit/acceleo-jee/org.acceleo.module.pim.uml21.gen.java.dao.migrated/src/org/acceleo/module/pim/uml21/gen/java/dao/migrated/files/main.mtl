[module main('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::acceleo::module::pim::uml21::gen::java::dao::api::daodefaultdaoproperties /]
[import org::acceleo::module::pim::uml21::gen::java::dao::api::daofactory /]
[import org::acceleo::module::pim::uml21::gen::java::dao::api::daointerfacecustomized /]
[import org::acceleo::module::pim::uml21::gen::java::dao::api::daointerfacedirect /]
[import org::acceleo::module::pim::uml21::gen::java::dao::jdbc::daojdbcconnection /]
[import org::acceleo::module::pim::uml21::gen::java::dao::jdbc::daojdbcdaoproperties /]
[import org::acceleo::module::pim::uml21::gen::java::dao::jdbc::daojdbcdirect /]
[import org::acceleo::module::pim::uml21::gen::java::dao::memcache::daomemcachedaoproperties /]
[import org::acceleo::module::pim::uml21::gen::java::dao::memcache::daomemcachedirect /]
[import org::acceleo::module::pim::uml21::gen::java::dao::test::daointerfacedirecttestjunittestsuite /]
[import org::acceleo::module::pim::uml21::gen::java::dao::test::daointerfacedirecttestjunit /]
[import org::acceleo::module::pim::uml21::gen::sql::mysql::sqlconstraints /]
[import org::acceleo::module::pim::uml21::gen::sql::mysql::sqlcreate /]
[import org::acceleo::module::pim::uml21::gen::sql::sqlserver2005::sqlconstraints /]
[import org::acceleo::module::pim::uml21::gen::sql::sqlserver2005::sqlcreate /]

[template public generate(aModel : Model)]
	[comment @main /]

	[comment Call the file block in 'daodefaultdaoproperties' /]
	[ aModel.generateProperties() /]

	[comment Call the file block in 'daofactory' /]
	[ aModel.generateDaoFactory() /]

	[for (aClassifier : Classifier | aModel.ownedElement->filter(Classifier))]
		[aClassifier.generateClassifier()/]
	[/for]

	[for (pack : Package | aModel.ownedElement->filter(Package))]
		[pack.generatePackage()/]
	[/for]


	[comment Call the file block in 'daojdbcconnection' /]
	[ generateDaoJdbcConnection() /]

	[comment Call the file block in 'daojdbcdaoproperties' /]
	[ generateDaoJdbcDaoProperties() /]

	[comment Call the file block in 'daomemcachedaoproperties' /]
	[ generateDaoMemCacheDaoProperties() /]

	[comment Call the file block in 'daointerfacedirecttestjunittestsuite' /]
	[ generateDaoInterfaceDirectTestSuit() /]

	[comment Call the file block in 'sqlconstraints' /]
	[ generateSqlConstraints() /]

	[comment Call the file block in 'sqlcreate' /]
	[ generateSqlCreate() /]

	[comment Call the file block in 'sqlserver2005::sqlconstraints' /]
	[ generateSqlServer2005Constraints() /]

	[comment Call the file block in 'sqlserver2005::sqlcreate' /]
	[ generateSqlServer2005Create() /]

[/template]

[template public generatePackage(aPackage : Package)]
	[for (aClassifier : Classifier | aPackage.ownedElement->filter(Classifier))]
		[aClassifier.generateClassifier()/]
	[/for]
	[for (pack : Package | aPackage.nestedPackage)]
		[pack.generatePackage()/]
	[/for]
[/template]

[template public generateClassifier(aClassifier : Classifier)]
	[if (aClassifier.oclIsTypeOf(Class))]
		[let aClass : Class = aClassifier.oclAsType(Class)]
			[comment Call the file block in 'daointerfacecustomized' /]
			[ aClass.generateDaoInterfaceCustomized() /]

			[comment Call the file block in 'daointerfacedirect' /]
			[ aClass.generateDaoInterfaceDirect() /]

			[comment Call the file block in 'daojdbcdirect' /]
			[ aClass.generateDaoJdbcDirect() /]

			[comment Call the file block in 'daomemcachedirect' /]
			[ aClass.generateDaoMemCacheDirect() /]

			[comment Call the file block in 'daointerfacedirecttestjunit' /]
			[ aClass.generateInterfaceDirectTest() /]
		[/let]
	[/if]
[/template]

