[comment encoding = UTF-8 /]
[module generateHibenateContextXml('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::hibernate::common::hibernatePathUtil /]
[import org::acceleo::module::pim::uml21::gen::java::common::common /]
[import org::eclipse::acceleo::module::pim::uml30::gen::java::impala::common::pathUtil /]

[template public generateHibenateContextXml(aModel : Model, resourceFoler : String)]
	[file (aModel.generateProjectFolder().concat(resourceFoler).concat('/').concat(aModel.generateProjectFolder()).concat('-context.xml'), false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:service="http://www.impalaframework.org/schema/service"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.impalaframework.org/schema/service http://impala.googlecode.com/svn/schema/service-registry.xsd">

    <service:export-array beanNames="dataSource,sessionFactory,transactionManager,hibernateInterceptor"/>
    
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:mysql.properties</value>
            </list>
        </property>
    </bean> 
    
    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"
            value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    <!-- applicationContext merge-point -->
    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.default_batch_fetch_size">16</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
                <prop key="hibernate.cache.query_cache_factory">org.hibernate.cache.StandardQueryCacheFactory</prop>
                <prop key="hibernate.show_sql">true</prop>
                <!-- add specific (non-supported in the Spring cartridge) hibernate properties here -->
            </props>
        </property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource"><ref local="dataSource"/></property>
        <property name="mappingResources">
            <value>[aModel.generateSpecificProjectFolder('')/].hbm.xml</value>
        </property>
        <property name="hibernateProperties" ref="hibernateProperties"/>
        <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>
        <property name="eventListeners">
            <map>
                <entry key="merge">
                    <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean>

    <!-- The Hibernate interceptor -->
    <bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- applicationContext hibernateInterceptor merge-point -->
    </bean>

</beans>
	[/file]
[/template]
