[module servicedwrxml('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import org::acceleo::module::pim::uml21::gen::java::spring::profile/]
[import org::acceleo::module::pim::uml21::gen::java::spring::common/]
[import org::acceleo::module::pim::uml21::gen::java::spring::ioc/]
[import org::acceleo::module::pim::uml21::gen::java::spring::services::uml2services /]
[import org::acceleo::module::pim::uml21::gen::java::spring::services::springservices /]
[import org::acceleo::module::pim::uml21::gen::java::spring::tests::entitytesthelper /]

[import org::acceleo::module::pim::uml21::services::stringservice /]
[import org::acceleo::module::pim::uml21::services::uml2services /]

[import org::acceleo::module::pim::uml21::gen::java::common::common /]
[import org::acceleo::module::pim::uml21::gen::java::common::specifics /]
[import org::acceleo::module::pim::uml21::gen::java::common::dataTypes /]
[import org::acceleo::module::pim::uml21::gen::java::common::structure /]
[import org::acceleo::module::pim::uml21::gen::java::dao::api::daocommon /]

[comment][template public fullFilePath(model : Model)]
[if (model.webservices()->notEmpty())][model.pathToMainResources()/]/META-INF/spring/[model.baseImports()/]/layer-dwr-services.xml[/if]
[/template][/comment]


[template public generateSerciveDwrSpringApplicationContext(model : Model)? (model.webservices()->notEmpty())]
[comment This template is called by the main module file /]
[file (model.fullFilePath(model.pathToMainResources(), 'META-INF/spring/'.concat(model.baseImports()), 'layer-dwr-services.xml'), false))]
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-2.0.xsd">
	
[for (class:Class|model.webservices())]
	<bean id="dwr[class.name.toUpperFirst()/]" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces" value="[class._package.getCompleteName()/].I[class.name.toUpperFirst()/]"/>
        <property name="target" ref="[class.name.toLowerFirst()/]"/>
		<dwr:remote javascript="DWR[class.name.toUpperFirst()/]">
	[for (oper:Operation|class.ownedOperation->select(isRemote()))]
			<dwr:include method="[oper.name/]" />
	[/for]
		</dwr:remote>
	</bean>
[/for]
		  
	<!-- [protected ('dwr configuration')] of dwr configuration -->	
	<!--
	<dwr:configuration>
		<dwr:convert type="bean" class="package.ReturnedBeanClass" />
	</dwr:configuration>
	-->
	<!-- [/protected] of dwr configuration -->
			
</beans>
[/file]
[/template]



