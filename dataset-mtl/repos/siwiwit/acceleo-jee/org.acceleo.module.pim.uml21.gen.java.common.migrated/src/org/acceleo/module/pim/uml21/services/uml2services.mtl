[comment encoding = UTF-8 /]
[module uml2services('http://www.eclipse.org/uml2/3.0.0/UML')/]

[comment][query public getAssociations(arg0 : Class) : Sequence(Association)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'getAssociations(org.eclipse.uml2.uml.Class)', Sequence{arg0}) /]

[query public getAssociations(arg0 : Interface) : Sequence(Association)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'getAssociations(org.eclipse.uml2.uml.Interface)', Sequence{arg0}) /][/comment]

[query public isNavigable(arg0 : Property) : Boolean
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'isNavigable(org.eclipse.uml2.uml.Property)', Sequence{arg0}) /]

[query public returnResult(arg0 : Operation) : Parameter
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'returnResult(org.eclipse.uml2.uml.Operation)', Sequence{arg0}) /]

[query public subClass(arg0 : Class) : Sequence(Class)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'subClass(org.eclipse.uml2.uml.Class)', Sequence{arg0}) /]

[query public hasStereotype(arg0 : Element, stereotypeName: String) : Boolean
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'hasStereotype(org.eclipse.uml2.uml.Element, java.lang.String)', Sequence{arg0, stereotypeName}) /]

[query public filterWithStereotype(arg0 : Sequence(Element), arg1 : String) : Sequence(Element)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'filterWithStereotype(java.util.List, java.lang.String)', Sequence{arg0, arg1}) /]

[query public attributeIds(arg0 : Sequence(Element)) : Sequence(Element)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'attributeIds(java.util.List)', Sequence{arg0}) /]

[query public filterWithOutStereotype(arg0 : Sequence(Element), arg1 : String) : Sequence(Element)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'filterWithOutStereotype(java.util.List, java.lang.String)', Sequence{arg0, arg1}) /]

[query public attributeNotIds(arg0 : Sequence(Element)) : Sequence(Element)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'attributeNotIds(java.util.List)', Sequence{arg0}) /]

[query public primitiveAttributes(arg0 : Class) : Sequence(Property)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'primitiveAttributes(org.eclipse.uml2.uml.Class)', Sequence{arg0}) /]

[query public pointedAttribute(arg0 : Class) : Sequence(Property)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'pointedAttribute(org.eclipse.uml2.uml.Class)', Sequence{arg0}) /]

[query public oppositeAttribute(arg0 : Property) : Property
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'oppositeAttribute(org.eclipse.uml2.uml.Property)', Sequence{arg0}) /]

[query public oppositeAttributeOf(arg0 : Association, arg1 : Classifier) : Property
	= arg0.memberEnd->select(type<>arg1)->first() /]

[query public getRealParameters(arg0 : Operation) : Sequence(Parameter)
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'getRealParameters(org.eclipse.uml2.uml.Operation)', Sequence{arg0}) /]

[query public getElementByXmiId(arg0 : String, arg1 : Element) : Element
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'getElementByXmiId(java.lang.String, org.eclipse.uml2.uml.Element)', Sequence{arg0, arg1}) /]

[query public getValue(arg0 : Element, arg1 : String, arg2 : String) : OclAny
	= invoke('org.acceleo.module.pim.uml21.services.Uml2Services', 'getValue(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence{arg0, arg1, arg2}) /]

