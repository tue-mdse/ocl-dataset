[comment encoding = UTF-8 /]
[comment]--------------------------------------------------------------
--                           Marte2Mast                              --
--      Converter of Schedulability analysis models made with UML2   --
--   and The UML Profile for MARTE to MAST, the Analysis Suite for   --
--                      Real-Time Applications                       --
--                                                                   --
--                     Copyright (C) 2010-2011                       --
--                 Universidad de Cantabria, SPAIN                   --
--                                                                   --
--                                                                   --
--           URL: http://mast.unican.es/umlmast/marte2mast           --
--                                                                   --
--  Authors: Alvaro Garcia Cuesta   alvaro@binarynonsense.com        --
--           Julio Medina           julio.medina@unican.es           --
--                                                                   --
-- This program is free software; you can redistribute it and/or     --
-- modify it under the terms of the GNU General Public               --
-- License as published by the Free Software Foundation; either      --
-- version 2 of the License, or (at your option) any later version.  --
--                                                                   --
-- This program is distributed in the hope that it will be useful,   --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of    --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU --
-- General Public License for more details.                          --
--                                                                   --
-- You should have received a copy of the GNU General Public         --
-- License along with this program; if not, write to the             --
-- Free Software Foundation, Inc., 59 Temple Place - Suite 330,      --
-- Boston, MA 02111-1307, USA.                                       --
--                                                                   --
-------------------------------------------------------------[/comment]
[module shared_resource('http://www.eclipse.org/uml2/3.0.0/UML')/]
[import helperfunctions/]
[import log/]

[template public shared_resource(e : Element)]

[if self.getStereotypeProperty('SaSharedResource', 'protectKind').toString() = 'PriorityCeiling']
Shared_Resource ([self.logElement('SaSharedResource')/]
    Type         => Immediate_Ceiling_Resource
,   Name         => [self.getElementShortName()/]
	[if self.getStereotypeProperty('SaSharedResource', 'ceiling') <> null]
,   Ceiling      => [parseNFP_Integer(self.getStereotypeProperty('SaSharedResource', 'ceiling').toString(), 'value').toString()/]
		[if parseNFP_Integer(self.getStereotypeProperty('SaSharedResource', 'ceiling').toString(), 'source').toString() = 'req']
,   Preassigned  => No	
		[/if]
	[/if][comment end ceiling not null/]
);		
[elseif self.getStereotypeProperty('SaSharedResource', 'protectKind').toString() = 'PriorityInheritance'][comment end if PriorityCeiling/]
Shared_Resource ([self.logElement('SaSharedResource')/]
    Type         => Priority_Inheritance_Resource
,   Name         => [self.getElementShortName()/]
);
[elseif self.getStereotypeProperty('SaSharedResource', 'protectKind').toString() = 'StackBased'][comment end if PriorityInheritance/]
Shared_Resource ([self.logElement('SaSharedResource')/]
    Type             => SRP_Resource
,   Name         => [self.getElementShortName()/]
	[if self.getStereotypeProperty('SaSharedResource', 'ceiling') <> null]
,	Preemption_Level => [parseNFP_Integer(self.getStereotypeProperty('SaSharedResource', 'ceiling').toString(), 'value').toString()/]
		[if parseNFP_Integer(self.getStereotypeProperty('SaSharedResource', 'ceiling').toString(), 'source').toString() = 'req']
,   Preassigned  => No		
		[/if]
	[/if][comment end ceiling not null/]
[/if][comment end if StackBased/]

[/template]