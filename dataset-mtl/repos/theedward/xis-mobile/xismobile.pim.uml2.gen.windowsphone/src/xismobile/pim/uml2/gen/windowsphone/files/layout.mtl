[comment encoding = UTF-8 /]
[module layout('http://www.eclipse.org/uml2/4.0.0/UML')]

[import xismobile::pim::uml2::gen::windowsphone::common::xisMobileUtils /]
[import xismobile::pim::uml2::gen::windowsphone::files::widget /]
[import xismobile::pim::uml2::gen::windowsphone::services::services /]

[template public generatePageXaml(c : Class)]

[file (c.getModel().name.toUpperFirst() + '/' + c.getModel().name.toUpperFirst() + '/' + c.name.toUpperFirst() + 'Page.xaml', false, 'UTF-8')]
<phone:PhoneApplicationPage 
    x:Class="[c.getModel().name.replace('-', '_').replace(' ', '').toUpperFirst()/].[c.name.toUpperFirst()/]Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
	xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" d:DesignWidth="480" d:DesignHeight="768"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    shell:SystemTray.IsVisible="True">

    <!--LayoutRoot is the root grid where all page content is placed-->
    <Grid x:Name="LayoutRoot" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--TitlePanel contains the name of the application and page title-->
        <StackPanel x:Name="TitlePanel" Grid.Row="0" Margin="12,17,0,28">
            <TextBlock x:Name="ApplicationTitle" Text="[c.getModel().name.toUpperFirst()/]" Style="{StaticResource PhoneTextNormalStyle}"/>
            [if (c.hasTitle())]
			<TextBlock x:Name="PageTitle" Text="[c.getTitle()/]" Margin="9,-7,0,0" Style="{StaticResource PhoneTextTitle1Style}"/>
            [/if]
        </StackPanel>

        <!--ContentPanel - place additional content here-->
        <Grid x:Name="ContentPanel" Grid.Row="1" Margin="12,0,12,0">
		[let widgets : Sequence(Class) = c.getXisInteractionSpaceWidgets()]
		[for (cl : Class | widgets)]
			[writeWidget(widgets, cl)/]
		[/for]
		[/let]
		</Grid>
    </Grid>
 
    <!--Code of ApplicationBar-->
	[if (c.hasOptionsMenu())]
    <phone:PhoneApplicationPage.ApplicationBar>
        <shell:ApplicationBar IsVisible="True" IsMenuEnabled="True">
		[let menu : Class = c.getOptionsMenu()]
			[for (el : Class | menu.getChildren())]
			[if (el.isXisMenuItem())]
			[el.writeMenuItem()/]
			[/if]
			[/for]
		[/let]
        </shell:ApplicationBar>
    </phone:PhoneApplicationPage.ApplicationBar>
	[/if]

</phone:PhoneApplicationPage>
[/file]
[/template]

[template private writeMenuItem(c : Class) post (trim())]
<shell:ApplicationBarIconButton
	[if (c.hasXisAction())]
	[let o : Operation = c.getXisAction()]
	[if (o.isCancelAction() or o.isCreateAction() or o.isUpdateAction()
		 or o.isDeleteteAction() or o.isDeleteteAllAction() or o.isWebServiceAction())]
	IconUri="[writeActionIcon(o)/]"
	[/if]
	Click="[o.name/]"
	[/let]
	[/if]
	[if (not c.getXisWidgetValue(c.getXisMenuItem()).oclIsUndefined())]
	Text="[c.getXisWidgetValue(c.getXisMenuItem())/]"
	[else]
	Text="[c.name/]"
	[/if]
/>
[/template]

[template private writeActionIcon(o : Operation) post (trim())]
[if (o.isCancelAction())]
/Images/appbar_button1.png
[elseif (o.isCreateAction())]
/Images/appbar.new.rest.png
[elseif (o.isUpdateAction())]
/Images/appbar_button1.png
[elseif (o.isDeleteteAction() or o.isDeleteteAllAction())]
/Images/appbar.delete.rest.png
[elseif (o.isWebServiceAction())]
/Images/appbar_button1.png
[/if]
[/template]
