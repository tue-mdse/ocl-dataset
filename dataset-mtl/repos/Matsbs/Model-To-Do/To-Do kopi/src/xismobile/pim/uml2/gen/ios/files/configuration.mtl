[comment encoding = UTF-8 /]
[module configuration('http://www.eclipse.org/uml2/4.0.0/UML')]

[import xismobile::pim::uml2::gen::ios::common::xisMobileUtils/]

[template public generateConfigFiles(m : Model)]

[m.generateAppDelegate()/]
[m.generateMainFile()/]

[/template]

[template private generateAppDelegate(m : Model)]

[file (m.name.toUpperFirst() + 'AppDelegate.h', false, 'UTF-8')]
#import <UIKit/UIKit.h>
#import "[m.getMainView()/]ViewController.h"

@interface [m.name.toUpperFirst()/]AppDelegate : UIResponder <UIApplicationDelegate>

@property (strong, nonatomic) UIWindow *window;
@property (nonatomic,retain) UINavigationController *navController;

@end
[/file]

[file (m.name.toUpperFirst() + 'AppDelegate.m', false, 'UTF-8')]
#import "[m.name.toUpperFirst()/]AppDelegate.h"

@implementation [m.name.toUpperFirst()/]AppDelegate

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions{
    self.window = ['['/]['['/]UIWindow alloc[']'/] initWithFrame:['['/]['['/]UIScreen mainScreen[']'/] bounds[']'/][']'/];
    // Override point for customization after application launch.
    [m.getMainView()/]ViewController *mainView = ['['/]['['/][m.getMainView()/]ViewController alloc[']'/] init[']'/];
    self.navController = ['['/]['['/]UINavigationController alloc[']'/]initWithRootViewController:mainView[']'/];
    ['['/]self.window setRootViewController:self.navController[']'/];
    ['['/]self.window makeKeyAndVisible[']'/];
    return YES;
}
@end
[/file]
[/template]

[template private generateMainFile(m : Model)]
[file ('main.m', false, 'UTF-8')]
#import <UIKit/UIKit.h>

#import "[m.name/]AppDelegate.h"

int main(int argc, char * argv['['/][']'/])
{
    @autoreleasepool {
        return UIApplicationMain(argc, argv, nil, NSStringFromClass(['['/][m.name.toUpperFirst()/]AppDelegate class[']'/]));
    }
}
[/file]
[/template]

[template public getMainView(m : Model)]
[let spaces : OrderedSet(Class) = m.getAllXisInteractionSpaces()][for (c : Class | spaces)][if (c.isMainScreen())][c.name/][/if][/for][/let]
[/template]


