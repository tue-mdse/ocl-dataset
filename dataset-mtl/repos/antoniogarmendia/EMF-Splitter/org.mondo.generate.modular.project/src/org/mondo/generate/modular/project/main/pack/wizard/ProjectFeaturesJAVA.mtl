[comment encoding = UTF-8 /]
[module ProjectFeaturesJAVA('http://www.eclipse.org/emf/2002/Ecore','http://mondo.org/runtimePatterns')]
[import org::mondo::generate::modular::project::main::requests::global_queriesModularProject /]

[template public ProjectFeaturesJAVA(anProjectName : String, anPackageName : String, c : ClassRoleInstance)]

[file ('src/'.concat(anProjectName.toLower() + '.' + getProperty('prefix_name') + '.' + c.element.name).replaceAll('\\.','/').concat('/wizard/').concat(c.element.name.toString()).concat('ProjectFeatures.java'),false, 'UTF-8')]
package [anProjectName.toLower()/].[getProperty('prefix_name')/].[c.element.name.toLowerCase()/].wizard;

public class [c.element.name/]ProjectFeatures {
	
	
	//Attributes
	[for (attr : EAttribute | c.element.eAllAttributes)]
	private [attr.eType.instanceClassName /] atr_[attr.name /];
	[/for]
	
	[comment If the Instance Project has no name defined /]
	[if (c.HasTypeFeature_EAttribute('name')=false)]
	//Project Name
	private String projectName;	
	[/if]
	
	//Constructor with Attributes
	public [c.element.name/]ProjectFeatures(
	[for (attr : EAttribute | c.element.eAllAttributes)]
		 [attr.eType.instanceClassName /] atr_[attr.name /] [if(c.element.eAllAttributes->asSequence()->size()<>i)],[/if][/for]){
		[for (attr : EAttribute | c.element.eAllAttributes)]
		this.atr_[attr.name /] = atr_[attr.name /];
		[/for]
	
	}											

	//Constructor
	public [c.element.name/]ProjectFeatures() {
		[if (c.HasTypeFeature_EAttribute('name')=true)]
		atr_[c.Get_ClassRoleInstance_TypeFeature_EAttribute('name').name/] = "org.eclipse.modular.example"; 
		[else]
		projectName = "org.eclipse.modular.example";
		[/if]
	}

	//Get Methods
	[for (attr : EAttribute | c.element.eAllAttributes)]	
	public [attr.eType.instanceClassName  /] Get_[attr.name /]()
	{
		return atr_[attr.name /];
	}
	[/for]
	
	//Set Methods
	[for (attr : EAttribute | c.element.eAllAttributes)]	
	public void Set_[attr.name /]([attr.eType.instanceClassName  /] arg)
	{
		this.atr_[attr.name /] = arg;
	}
	[/for]

	[if (c.HasTypeFeature_EAttribute('name')=false)]
	public String get_ProjectName() {
		return projectName;
	}

	public void set_ProjectName(String projectName) {
		this.projectName = projectName;
	}
	[/if]
}

[/file]

[/template]
