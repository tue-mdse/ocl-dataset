[comment encoding = UTF-8 /]
[module GraphicalSiriusEditor('http://www.eclipse.org/emf/2002/Ecore')]


[template public GraphicalSiriusEditor(anProjectName : String)]

[file ('src/'.concat(anProjectName.toLower() + '.' + getProperty('prefix_name')).replaceAll('\\.','/').concat('/editor/GraphicalSiriusEditor.java'),false, 'UTF-8')]
package [anProjectName.toLower()/].[getProperty('prefix_name')/].editor;

import org.eclipse.core.runtime.IPath;
import org.eclipse.ui.IEditorLauncher;

import java.io.File;

import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.URIConverter;
import org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl;
import org.eclipse.sirius.business.api.session.Session;
import org.eclipse.sirius.business.api.session.SessionManager;
import org.eclipse.sirius.ui.business.api.dialect.DialectUIManager;
import org.eclipse.sirius.viewpoint.DAnalysis;
import org.eclipse.sirius.viewpoint.DRepresentation;
import org.eclipse.sirius.viewpoint.DView;

import [anProjectName.toLower()/].[getProperty('prefix_name')/].ext.CreateDesignSiriusProject;

public class GraphicalSiriusEditor implements IEditorLauncher {

	@Override
	public void open(IPath file) {
		// TODO Auto-generated method stub
		//Convert File URI to platform URI
		URIConverter converter = new ExtensibleURIConverterImpl();
		URI fileUri = URI.createFileURI(ResourcesPlugin.getWorkspace().getRoot().getLocation().toOSString() + File.separator);
		URI platformURI = URI.createPlatformResourceURI("/", false);
		converter.getURIMap().put(fileUri, platformURI);
		URI anfileURI = converter.normalize(URI.createFileURI(file.toFile().getAbsolutePath()));

		IProgressMonitor monitor = new NullProgressMonitor();
		// Step 1: get the *.aird file and the corresponding Sirius Session
		URI sessionResourceURI = anfileURI.trimFileExtension().appendFileExtension(CreateDesignSiriusProject.aird);
		boolean existSession = converter.exists(sessionResourceURI, null);
		if(existSession==false)
		{
			CreateDesignSiriusProject c = new CreateDesignSiriusProject();
			c.ExecuteAfterCreateFile(anfileURI);
		}		
		final Session createdSession = SessionManager.INSTANCE.getSession(sessionResourceURI,monitor);
		createdSession.open(monitor);
		
		// Step 2: Get the DRepresentation to open
		DAnalysis root = (DAnalysis) createdSession.getSessionResource().getContents().get(0);
		DView dView = root.getOwnedViews().get(0);
		DRepresentation dRepresentation = dView.getOwnedRepresentations().get(0);
				
		// Step 3: Open representation
		DialectUIManager.INSTANCE.openEditor(createdSession, dRepresentation, monitor);
				
		System.out.println("Sirius Editor: " + file.toString());
	}
}
[/file]
[/template]
