[comment encoding = UTF-8 /]
[module generateJsModel('http://pouexmm/1.0')]
[import dmss::pouex::acceleo::main::generateUtils/]

[comment]
/**
 * Copyright (C) 2014 Leonardo Rossi <leonardo.rossi@studenti.unipr.it>
 *
 * This source code is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This source code is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this source code; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 */
[/comment]

[template public generateGameJsModel(aGame : Game)]
[comment @main Generate Json Model/]
[file ('model/'+ aGame.name.generateUnderscoreName() +'.json', false, 'UTF-8')] 
{
  "name": "[aGame.name.generateUnderscoreName()/]",
  "pouex": {
    "name": "[aGame.pouex.name.generateUnderscoreName()/]",
    "birthday": "[aGame.pouex.birthday/]", 
    "body": {
      [for (bp : BodyPart | aGame.pouex.bodyparts) separator('  ,\n')]
      	[bp.generateModelBodyPart()/]
      [/for]
    },
	"features": {
    [for (f : Feature | aGame.pouex.features) separator('      ,\n')]
      "[f.name.generateUnderscoreName()/]": {
  	    "value": [f.default/],
	    "default": [f.default/],
  	    "minimum": [f.minimum/],
	    "maximum": [f.maximum/],
	    "type": "[f.type/]"
      }
    [/for]
    },
    "states": {
    [for (s : State | aGame.pouex.states) separator('      ,\n')]
      "[s.name.generateUnderscoreName()/]": {
        "active": false
      }
    [/for]
    },
    "actions": {
    [for (a : Action | aGame.pouex.actions) separator('      ,\n')]
      "[a.name.generateUnderscoreName()/]": [ '[' /] 
      [for (i : Influence | a.influences) separator('        ,\n')]
        {
      	  "feature": "[i.feature.name.generateUnderscoreName()/]",
          "operation": "[i.value/]",
          "operator": "[i.generateMathOperator()/]"
        }
      [/for]
      ]
    [/for]
    }
  }
}
[/file]
[/template]

[template public generateModelBodyPart(bp : BodyPart) post(trim())]
"[bp.name.generateUnderscoreName()/]": {
  "imageUrl": "imgs/[bp.image/]",
  "default": "imgs/[bp.image/]",
  "subparts": {
  [for (sp : BodyPart | bp.subparts) separator('    ,\n')]
    [sp.generateModelBodyPart()/]
  [/for]
  }
}
[/template]

[template public generateMathOperator(i : Influence) post(trim())]
	[if (i.operator.toString() = 'ADDITION')]+
    [elseif (i.operator.toString() = 'SUBTRACTION')]-
	[elseif (i.operator.toString() = 'MULTIPLICATION')]*
	[elseif (i.operator.toString() = 'DIVISION')]/
	[elseif (i.operator.toString() = 'MODULE')]%[/if]
[/template]
