[
  {
    "operations": {"allInstances": 1},
    "body": "ecore::EClass.allInstances()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "eClass.oclAsType(ecore::EClass)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsInvalid": 1},
    "body": "eClass.oclIsInvalid()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsKindOf": 1},
    "body": "eClass.oclIsKindOf(ecore::EClass)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "eClass.oclIsTypeOf(ecore::EClass)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsUndefined": 1},
    "body": "eClass.oclIsUndefined()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "true.<>(true)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "BooleanLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "false.=(true)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "BooleanLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"<": 1},
    "body": "1.<(2)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {">": 1},
    "body": "2.>(2)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"<=": 1},
    "body": "2.<=(1)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {">=": 1},
    "body": "1.>=(1)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "'e'.concat('i')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"size": 1},
    "body": "'e'.size()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"substring": 1},
    "body": "'e'.substring(0, 1)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toInteger": 1},
    "body": "'e'.toInteger()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toLower": 1},
    "body": "'e'.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toReal": 1},
    "body": "'e'.toReal()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toUpper": 1},
    "body": "'e'.toUpper()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"abs": 1},
    "body": "1.abs()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"floor": 1},
    "body": "1.floor()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"max": 1},
    "body": "1.max(2)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"min": 1},
    "body": "1.min(2)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"round": 1},
    "body": "1.round()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"div": 1},
    "body": "1.div(2)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"mod": 1},
    "body": "1.mod(2)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->any(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"asBag": 1},
    "body": "Sequence {}->asBag()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"asOrderedSet": 1},
    "body": "Sequence {}->asOrderedSet()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"asSequence": 1},
    "body": "Sequence {}->asSequence()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"asSet": 1},
    "body": "Sequence {}->asSet()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->collect(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->collectNested(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"count": 1},
    "body": "Sequence {}->count(eClass)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"excludes": 1},
    "body": "Sequence {}->excludes(eClass)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"excludesAll": 1},
    "body": "Sequence {}->excludesAll(Sequence {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"excluding": 1},
    "body": "Sequence {}->excluding(eClass)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->exists(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"flatten": 1},
    "body": "Sequence {}->flatten()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->forAll(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"includes": 1},
    "body": "Sequence {}->includes(eClass)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"includesAll": 1},
    "body": "Sequence {}->includesAll(Sequence {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"including": 1},
    "body": "Sequence {}->including(eClass)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"isEmpty": 1},
    "body": "Sequence {}->isEmpty()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->isUnique(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"notEmpty": 1},
    "body": "Sequence {}->notEmpty()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->one(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"product": 1},
    "body": "Sequence {}->product(Sequence {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->reject(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->select(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"size": 1},
    "body": "Sequence {}->size()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {}->sortedBy(temp1 : OclVoid | true)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"sum": 1},
    "body": "Sequence {1}->sum()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "Sequence {}->=(Sequence {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "Sequence {}-><>(Sequence {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"append": 1},
    "body": "Sequence {}->append('')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"at": 1},
    "body": "Sequence {}->at(1)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"first": 1},
    "body": "Sequence {}->first()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"indexOf": 1},
    "body": "Sequence {}->indexOf('')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"insertAt": 1},
    "body": "Sequence {}->insertAt(1, '')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"last": 1},
    "body": "Sequence {}->last()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"prepend": 1},
    "body": "Sequence {}->prepend('')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"subSequence": 1},
    "body": "Sequence {}->subSequence(1, 2)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"union": 1},
    "body": "Sequence {}->union(Sequence {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "Bag {}->=(Bag {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "Bag {}-><>(Bag {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"intersection": 1},
    "body": "Bag {}->intersection(Bag {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"intersection": 1},
    "body": "Bag {}->intersection(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"union": 1},
    "body": "Bag {}->union(Bag {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"union": 1},
    "body": "Bag {}->union(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "OrderedSet {}->=(OrderedSet {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "OrderedSet {}->=(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "OrderedSet {}-><>(OrderedSet {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "OrderedSet {}-><>(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"-": 1},
    "body": "OrderedSet {}->-(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"append": 1},
    "body": "OrderedSet {}->append('')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"at": 1},
    "body": "OrderedSet {}->at(1)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"first": 1},
    "body": "OrderedSet {}->first()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"indexOf": 1},
    "body": "OrderedSet {}->indexOf('')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"insertAt": 1},
    "body": "OrderedSet {}->insertAt(1, '')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"intersection": 1},
    "body": "OrderedSet {}->intersection(Bag {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"intersection": 1},
    "body": "OrderedSet {}->intersection(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"last": 1},
    "body": "OrderedSet {}->last()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"prepend": 1},
    "body": "OrderedSet {}->prepend('')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"subOrderedSet": 1},
    "body": "OrderedSet {}->subOrderedSet(1, 2)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"symmetricDifference": 1},
    "body": "OrderedSet {}->symmetricDifference(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"union": 1},
    "body": "OrderedSet {}->union(Bag {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"union": 1},
    "body": "OrderedSet {}->union(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "Set {}->=(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "Set {}-><>(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"-": 1},
    "body": "Set {}->-(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"intersection": 1},
    "body": "Set {}->intersection(Bag {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"intersection": 1},
    "body": "Set {}->intersection(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"symmetricDifference": 1},
    "body": "Set {}->symmetricDifference(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"union": 1},
    "body": "Set {}->union(Bag {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"union": 1},
    "body": "Set {}->union(Set {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "CollectionLiteralExpImpl": 2
    },
    "properties": []
  }
]
