[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"+": 1},
    "body": "aCity.name.+('.txt')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aCity.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aCity.stats",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["stats"]
  },
  {
    "operations": {
      "not": 1,
      "or": 2,
      "oclIsTypeOf": 3
    },
    "body": "s.oclIsTypeOf(cs::NumPostTimeSlot).or(s.oclIsTypeOf(cs::NumPostLang)).or(s.oclIsTypeOf(cs::CategoriesCount)).not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 6,
      "TypeExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "s.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "s.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "s.metric",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["metric"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aCity.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostTimeSlot))->collect(temp2 : NumPostTimeSlot | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aCity.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostTimeSlot))->collect(temp2 : NumPostTimeSlot | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aCity.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostTimeSlot))->collect(temp2 : NumPostTimeSlot | temp2.postsPerTimeSlot)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "postsPerTimeSlot"
    ]
  },
  {
    "operations": {},
    "body": "e.key",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["key"]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aCity.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostLang))->collect(temp2 : NumPostLang | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aCity.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostLang))->collect(temp2 : NumPostLang | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aCity.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostLang))->collect(temp2 : NumPostLang | temp2.langNumber)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "langNumber",
      "stats"
    ]
  },
  {
    "operations": {},
    "body": "e.key",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["key"]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aCity.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::CategoriesCount))->collect(temp2 : CategoriesCount | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aCity.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::CategoriesCount))->collect(temp2 : CategoriesCount | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aCity.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::CategoriesCount))->collect(temp2 : CategoriesCount | temp2.catNumber)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "catNumber",
      "stats"
    ]
  },
  {
    "operations": {},
    "body": "e.key",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["key"]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {},
    "body": "aCity.districts",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["districts"]
  },
  {
    "operations": {},
    "body": "d.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "d.stats",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["stats"]
  },
  {
    "operations": {
      "not": 1,
      "or": 2,
      "oclIsTypeOf": 3
    },
    "body": "s.oclIsTypeOf(cs::NumPostTimeSlot).or(s.oclIsTypeOf(cs::NumPostLang)).or(s.oclIsTypeOf(cs::CategoriesCount)).not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 3,
      "TypeExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "s.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "s.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "s.metric",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["metric"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostTimeSlot))->collect(temp2 : NumPostTimeSlot | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostTimeSlot))->collect(temp2 : NumPostTimeSlot | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostTimeSlot))->collect(temp2 : NumPostTimeSlot | temp2.postsPerTimeSlot)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "postsPerTimeSlot"
    ]
  },
  {
    "operations": {},
    "body": "e.key",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["key"]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostLang))->collect(temp2 : NumPostLang | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostLang))->collect(temp2 : NumPostLang | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostLang))->collect(temp2 : NumPostLang | temp2.langNumber)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "langNumber"
    ]
  },
  {
    "operations": {},
    "body": "e.key",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["key"]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::CategoriesCount))->collect(temp2 : CategoriesCount | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::CategoriesCount))->collect(temp2 : CategoriesCount | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::CategoriesCount))->collect(temp2 : CategoriesCount | temp2.catNumber)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "catNumber"
    ]
  },
  {
    "operations": {},
    "body": "e.key",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["key"]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {},
    "body": "d.places",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["places"]
  },
  {
    "operations": {},
    "body": "p.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "p.stats",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["stats"]
  },
  {
    "operations": {
      "not": 1,
      "or": 2,
      "oclIsTypeOf": 3
    },
    "body": "s.oclIsTypeOf(cs::NumPostTimeSlot).or(s.oclIsTypeOf(cs::NumPostLang)).or(s.oclIsTypeOf(cs::CategoriesCount)).not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 3,
      "TypeExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "s.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "s.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "s.metric",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["metric"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "p.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostTimeSlot))->collect(temp2 : NumPostTimeSlot | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "p.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostTimeSlot))->collect(temp2 : NumPostTimeSlot | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "p.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostTimeSlot))->collect(temp2 : NumPostTimeSlot | temp2.postsPerTimeSlot)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "postsPerTimeSlot"
    ]
  },
  {
    "operations": {},
    "body": "e.key",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["key"]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "p.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostLang))->collect(temp2 : NumPostLang | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "p.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostLang))->collect(temp2 : NumPostLang | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "p.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::NumPostLang))->collect(temp2 : NumPostLang | temp2.langNumber)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "langNumber",
      "stats"
    ]
  },
  {
    "operations": {},
    "body": "e.key",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["key"]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "p.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::CategoriesCount))->collect(temp2 : CategoriesCount | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "p.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::CategoriesCount))->collect(temp2 : CategoriesCount | temp2.name)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "stats",
      "name"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "p.stats->collect(temp1 : Statistic | temp1.oclAsType(cs::CategoriesCount))->collect(temp2 : CategoriesCount | temp2.catNumber)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "catNumber",
      "stats"
    ]
  },
  {
    "operations": {},
    "body": "e.key",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["key"]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  }
]
