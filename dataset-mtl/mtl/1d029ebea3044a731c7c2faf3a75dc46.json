[
  {
    "operations": {
      "not": 2,
      "oclIsUndefined": 2,
      "+": 10
    },
    "body": "if am.ownerModel.oclIsUndefined().not() then '/'.+(am.ownerModel.name).+('/').+(am.name).+('.mo') else if am.ownerPackage.oclIsUndefined().not() then '/'.+(am.ownerPackage.withinClause).+('/').+(am.ownerPackage.name).+('/').+(am.name).+('.mo') else '' endif endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 14,
      "VariableExpImpl": 7,
      "StringLiteralExpImpl": 8,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 10
    },
    "properties": [
      "name",
      "withinClause",
      "ownerModel",
      "name",
      "ownerPackage"
    ]
  },
  {
    "operations": {
      "not": 2,
      "oclIsUndefined": 2,
      "concat": 2,
      "replaceAll": 1
    },
    "body": "if am.ownerModel.oclIsUndefined().not() then am.ownerModel.name else if am.ownerPackage.oclIsUndefined().not() then am.ownerPackage.withinClause.replaceAll('/', '.').concat('.'.concat(am.ownerPackage.name)) else '' endif endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 7,
      "StringLiteralExpImpl": 4,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 8
    },
    "properties": [
      "name",
      "withinClause",
      "ownerModel",
      "name",
      "ownerPackage"
    ]
  },
  {
    "operations": {
      "not": 3,
      "oclIsUndefined": 3,
      "notEmpty": 3
    },
    "body": "if c.fromModelicaPart.oclIsUndefined().not() then if c.fromModelicaPart.arraySize->notEmpty() then true else if c.toModelicaPart.oclIsUndefined().not() then if c.toModelicaPart.arraySize->notEmpty() then true else false endif else false endif endif else if c.toModelicaPart.oclIsUndefined().not() then if c.toModelicaPart.arraySize->notEmpty() then true else false endif else false endif endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 6,
      "OperationCallExpImpl": 9,
      "IfExpImpl": 6,
      "BooleanLiteralExpImpl": 7,
      "PropertyCallExpImpl": 9
    },
    "properties": [
      "fromModelicaPart",
      "toModelicaPart",
      "arraySize"
    ]
  },
  {
    "operations": {
      "not": 3,
      "oclIsUndefined": 3,
      "notEmpty": 3,
      "asSequence": 3
    },
    "body": "if c.fromModelicaPart.oclIsUndefined().not() then if c.fromModelicaPart.arraySize->notEmpty() then c.fromModelicaPart.arraySize->asSequence() else if c.toModelicaPart.oclIsUndefined().not() then if c.toModelicaPart.arraySize->notEmpty() then c.toModelicaPart.arraySize->asSequence() else Sequence {} endif else Sequence {} endif endif else if c.toModelicaPart.oclIsUndefined().not() then if c.toModelicaPart.arraySize->notEmpty() then c.toModelicaPart.arraySize->asSequence() else Sequence {} endif else Sequence {} endif endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 9,
      "OperationCallExpImpl": 12,
      "CollectionLiteralExpImpl": 4,
      "IfExpImpl": 6,
      "PropertyCallExpImpl": 15
    },
    "properties": [
      "fromModelicaPart",
      "toModelicaPart",
      "arraySize"
    ]
  },
  {
    "operations": {
      "not": 2,
      "oclIsTypeOf": 2,
      "and": 1
    },
    "body": "aModelicaClassDefinition.oclIsTypeOf(modelica::Record).not().and(aModelicaClassDefinition.oclIsTypeOf(modelica::Enumeration).not())",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "getPath(aModelicaClassDefinition)",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.isReplaceable",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isReplaceable"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.isFinal",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isFinal"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.isModelicaEncapsulated",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isModelicaEncapsulated"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.isPartial",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isPartial"]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "and": 1,
      "oclAsType": 1
    },
    "body": "aModelicaClassDefinition.oclIsTypeOf(modelica::Connector).and(aModelicaClassDefinition.oclAsType(modelica::Connector).isExpandable)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isExpandable"]
  },
  {
    "operations": {
      "toLower": 1,
      "eClass": 1
    },
    "body": "aModelicaClassDefinition.eClass().name.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.extends",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["extends"]
  },
  {
    "operations": {},
    "body": "aModelicaExtends",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "<>": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaExtends.modification.oclIsUndefined().not().and(aModelicaExtends.modification.<>(''))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["modification"]
  },
  {
    "operations": {},
    "body": "aModelicaExtends.modification",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["modification"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.comments",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["comments"]
  },
  {
    "operations": {},
    "body": "aModelicaComment",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.modelicaComponents",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["modelicaComponents"]
  },
  {
    "operations": {},
    "body": "aModelicaComponent.isFinal",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isFinal"]
  },
  {
    "operations": {},
    "body": "aModelicaComponent.isReplaceable",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isReplaceable"]
  },
  {
    "operations": {},
    "body": "aModelicaComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.records",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["records"]
  },
  {
    "operations": {},
    "body": "aRecord",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "contains": 1,
      "toString": 1
    },
    "body": "aModelicaValueProperties->exists(p : ModelicaValueProperty | p.visibility.toString().contains('protected'))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["visibility"]
  },
  {
    "operations": {
      "contains": 1,
      "toString": 1
    },
    "body": "aModelicaValueProperties->select(p : ModelicaValueProperty | p.visibility.toString().contains('protected'))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["visibility"]
  },
  {
    "operations": {},
    "body": "aModelicaProtectedValueProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aModelicaClassDefinition.equationSection.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["equationSection"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.equationSection",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["equationSection"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.algorithmSections",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["algorithmSections"]
  },
  {
    "operations": {},
    "body": "aModelicaAlgorithmSection",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.annotations",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["annotations"]
  },
  {
    "operations": {},
    "body": "aModelicaAnnotation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aModelicaClassDefinition.oclIsTypeOf(modelica::Enumeration)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "getPath(aModelicaClassDefinition)",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.comments",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["comments"]
  },
  {
    "operations": {},
    "body": "aModelicaComment",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "', '",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aModelicaClassDefinition.oclAsType(modelica::Enumeration).enumerationLiterals",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["enumerationLiterals"]
  },
  {
    "operations": {},
    "body": "enumLiteral.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.annotations",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["annotations"]
  },
  {
    "operations": {},
    "body": "aModelicaAnnotation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aModelicaClassDefinition.oclIsTypeOf(modelica::Record)",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.isReplaceable",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isReplaceable"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.isFinal",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isFinal"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.isModelicaEncapsulated",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isModelicaEncapsulated"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.isPartial",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isPartial"]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "and": 1,
      "oclAsType": 1
    },
    "body": "aModelicaClassDefinition.oclIsTypeOf(modelica::Connector).and(aModelicaClassDefinition.oclAsType(modelica::Connector).isExpandable)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isExpandable"]
  },
  {
    "operations": {
      "toLower": 1,
      "eClass": 1
    },
    "body": "aModelicaClassDefinition.eClass().name.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.extends",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["extends"]
  },
  {
    "operations": {},
    "body": "aModelicaExtends",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "<>": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaExtends.modification.oclIsUndefined().not().and(aModelicaExtends.modification.<>(''))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["modification"]
  },
  {
    "operations": {},
    "body": "aModelicaExtends.modification",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["modification"]
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.comments",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["comments"]
  },
  {
    "operations": {},
    "body": "aModelicaComment",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.modelicaComponents",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["modelicaComponents"]
  },
  {
    "operations": {},
    "body": "aModelicaComponent.isFinal",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isFinal"]
  },
  {
    "operations": {},
    "body": "aModelicaComponent.isReplaceable",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isReplaceable"]
  },
  {
    "operations": {},
    "body": "aModelicaComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.records",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["records"]
  },
  {
    "operations": {},
    "body": "aRecord",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.annotations",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["annotations"]
  },
  {
    "operations": {},
    "body": "aModelicaAnnotation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaClassDefinition.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "contains": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaExtends.from_modelica_primitive_types.oclIsUndefined().not().and(aModelicaExtends.from_modelica_primitive_types.contains('ModelicaReal'))",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["from_modelica_primitive_types"]
  },
  {
    "operations": {
      "contains": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaExtends.from_modelica_primitive_types.oclIsUndefined().not().and(aModelicaExtends.from_modelica_primitive_types.contains('ModelicaInteger'))",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 4,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["from_modelica_primitive_types"]
  },
  {
    "operations": {
      "not": 1,
      "contains": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaExtends.from_modelica_primitive_types.oclIsUndefined().not().and(aModelicaExtends.from_modelica_primitive_types.contains('ModelicaBoolean'))",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["from_modelica_primitive_types"]
  },
  {
    "operations": {
      "contains": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaExtends.from_modelica_primitive_types.oclIsUndefined().not().and(aModelicaExtends.from_modelica_primitive_types.contains('ModelicaString'))",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 4,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["from_modelica_primitive_types"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aModelicaExtends.from_modelica_standard_library.oclIsUndefined().not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["from_modelica_standard_library"]
  },
  {
    "operations": {},
    "body": "aModelicaExtends.from_modelica_standard_library",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["from_modelica_standard_library"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aModelicaExtends.extendedModelicaClass.oclIsUndefined().not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["extendedModelicaClass"]
  },
  {
    "operations": {"+": 2},
    "body": "getWithin(aModelicaExtends.extendedModelicaClass).+('.').+(aModelicaExtends.extendedModelicaClass.name)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "extendedModelicaClass"
    ]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aModelicaComponent.oclIsTypeOf(modelica::ModelicaValueProperty)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "<>": 1,
      "toString": 1,
      "oclAsType": 1
    },
    "body": "aModelicaComponent.oclAsType(modelica::ModelicaValueProperty).visibility.toString().<>('protected')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["visibility"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aModelicaComponent.oclAsType(modelica::ModelicaValueProperty)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aModelicaComponent.oclIsTypeOf(modelica::ModelicaPort)",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aModelicaComponent.oclAsType(modelica::ModelicaPort)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aModelicaComponent.oclIsTypeOf(modelica::ModelicaPart)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aModelicaComponent.oclAsType(modelica::ModelicaPart)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "<>": 1,
      "toString": 1
    },
    "body": "aModelicaValueProperty.flowFlag.toString().<>('none')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["flowFlag"]
  },
  {
    "operations": {"toString": 1},
    "body": "aModelicaValueProperty.flowFlag.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["flowFlag"]
  },
  {
    "operations": {
      "<>": 1,
      "toString": 1
    },
    "body": "aModelicaValueProperty.variability.toString().<>('continuous')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["variability"]
  },
  {
    "operations": {"toString": 1},
    "body": "aModelicaValueProperty.variability.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["variability"]
  },
  {
    "operations": {
      "<>": 1,
      "toString": 1
    },
    "body": "aModelicaValueProperty.causality.toString().<>('none')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["causality"]
  },
  {
    "operations": {"toString": 1},
    "body": "aModelicaValueProperty.causality.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["causality"]
  },
  {
    "operations": {},
    "body": "aModelicaValueProperty.type_specifier",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type_specifier"]
  },
  {
    "operations": {},
    "body": "aModelicaValueProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "first": 1
    },
    "body": "aModelicaValueProperty.arraySize->first().oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["arraySize"]
  },
  {
    "operations": {},
    "body": "', '",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaValueProperty.arraySize",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["arraySize"]
  },
  {
    "operations": {},
    "body": "arraySize",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "<>": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaValueProperty.modification.oclIsUndefined().not().and(aModelicaValueProperty.modification.<>(''))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["modification"]
  },
  {
    "operations": {},
    "body": "aModelicaValueProperty.modification",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["modification"]
  },
  {
    "operations": {
      "<>": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaValueProperty.default_value.<>('null').and(aModelicaValueProperty.default_value.oclIsUndefined().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["default_value"]
  },
  {
    "operations": {},
    "body": "aModelicaValueProperty.default_value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["default_value"]
  },
  {
    "operations": {
      "<>": 1,
      "toString": 1
    },
    "body": "aModelicaPort.causality.toString().<>('none')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["causality"]
  },
  {
    "operations": {"toString": 1},
    "body": "aModelicaPort.causality.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["causality"]
  },
  {
    "operations": {},
    "body": "aModelicaPort.type_specifier",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type_specifier"]
  },
  {
    "operations": {},
    "body": "aModelicaPort.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "first": 1
    },
    "body": "aModelicaPort.arraySize->first().oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["arraySize"]
  },
  {
    "operations": {},
    "body": "', '",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaPort.arraySize",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["arraySize"]
  },
  {
    "operations": {},
    "body": "arraySize",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "<>": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaPort.modification.oclIsUndefined().not().and(aModelicaPort.modification.<>(''))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["modification"]
  },
  {
    "operations": {},
    "body": "aModelicaPort.modification",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["modification"]
  },
  {
    "operations": {
      "<>": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaPort.conditionalExpression.oclIsUndefined().not().and(aModelicaPort.conditionalExpression.<>(''))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["conditionalExpression"]
  },
  {
    "operations": {},
    "body": "aModelicaPort.conditionalExpression",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["conditionalExpression"]
  },
  {
    "operations": {
      "<>": 1,
      "toString": 1
    },
    "body": "aModelicaPart.visibility.toString().<>('public')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["visibility"]
  },
  {
    "operations": {"toString": 1},
    "body": "aModelicaPart.visibility.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["visibility"]
  },
  {
    "operations": {},
    "body": "aModelicaPart.type_specifier",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type_specifier"]
  },
  {
    "operations": {},
    "body": "aModelicaPart.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "first": 1
    },
    "body": "aModelicaPart.arraySize->first().oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["arraySize"]
  },
  {
    "operations": {},
    "body": "', '",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaPart.arraySize",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["arraySize"]
  },
  {
    "operations": {},
    "body": "arraySize",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aModelicaPart.constrainedBy.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["constrainedBy"]
  },
  {
    "operations": {},
    "body": "aModelicaPart.constrainedBy.instanceForConstrainedBy.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "constrainedBy",
      "instanceForConstrainedBy"
    ]
  },
  {
    "operations": {
      "<>": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1,
      "toString": 1
    },
    "body": "aModelicaPart.constrainedBy.modification.oclIsUndefined().not().and(aModelicaPart.constrainedBy.modification.toString().<>(''))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "modification",
      "constrainedBy"
    ]
  },
  {
    "operations": {"toString": 1},
    "body": "aModelicaPart.constrainedBy.modification.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "modification",
      "constrainedBy"
    ]
  },
  {
    "operations": {
      "<>": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aModelicaPart.modification.oclIsUndefined().not().and(aModelicaPart.modification.<>(''))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["modification"]
  },
  {
    "operations": {},
    "body": "aModelicaPart.modification",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["modification"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aModelicaPart.conditionalExpression.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["conditionalExpression"]
  },
  {
    "operations": {"toString": 1},
    "body": "aModelicaPart.conditionalExpression.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["conditionalExpression"]
  },
  {
    "operations": {},
    "body": "aEquationSection.equations->exists(e : Equation | e.isInitial)",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "isInitial",
      "equations"
    ]
  },
  {
    "operations": {},
    "body": "aEquationSection.equations->select(e : Equation | e.isInitial)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "isInitial",
      "equations"
    ]
  },
  {
    "operations": {},
    "body": "aEquation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aEquationSection.connects",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["connects"]
  },
  {
    "operations": {},
    "body": "aConnects",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "aEquationSection.equations->select(e : Equation | e.isInitial.not())",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "isInitial",
      "equations"
    ]
  },
  {
    "operations": {},
    "body": "aEquation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaAlgorithmSection.algorithm",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["algorithm"]
  },
  {
    "operations": {},
    "body": "aModelicaAlgorithm",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aModelicaAlgorithm.body",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["body"]
  },
  {
    "operations": {"=": 1},
    "body": "ok.=(true)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.fromModelicaPart.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromModelicaPart"]
  },
  {
    "operations": {},
    "body": "aConnect.fromModelicaPart.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "fromModelicaPart"
    ]
  },
  {
    "operations": {
      "not": 2,
      "oclIsUndefined": 2,
      "or": 1
    },
    "body": "aConnect.from.oclIsUndefined().not().or(aConnect.fromPort.oclIsUndefined().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "fromPort",
      "from"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.fromPart.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromPart"]
  },
  {
    "operations": {},
    "body": "aConnect.fromPart",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromPart"]
  },
  {
    "operations": {
      "not": 2,
      "oclIsUndefined": 2,
      "or": 1
    },
    "body": "aConnect.from.oclIsUndefined().not().or(aConnect.fromPort.oclIsUndefined().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "fromPort",
      "from"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.from.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["from"]
  },
  {
    "operations": {},
    "body": "aConnect.from.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "from"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.fromPort.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromPort"]
  },
  {
    "operations": {},
    "body": "aConnect.fromPort",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromPort"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.toModelicaPart.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toModelicaPart"]
  },
  {
    "operations": {},
    "body": "aConnect.toModelicaPart.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "toModelicaPart"
    ]
  },
  {
    "operations": {
      "not": 2,
      "oclIsUndefined": 2,
      "or": 1
    },
    "body": "aConnect.to.oclIsUndefined().not().or(aConnect.toPort.oclIsUndefined().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "to",
      "toPort"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.toPart.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toPart"]
  },
  {
    "operations": {},
    "body": "aConnect.toPart",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toPart"]
  },
  {
    "operations": {
      "not": 2,
      "oclIsUndefined": 2,
      "or": 1
    },
    "body": "aConnect.to.oclIsUndefined().not().or(aConnect.toPort.oclIsUndefined().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "to",
      "toPort"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.to.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["to"]
  },
  {
    "operations": {},
    "body": "aConnect.to.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "to"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.toPort.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toPort"]
  },
  {
    "operations": {},
    "body": "aConnect.toPort",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toPort"]
  },
  {
    "operations": {"size": 1},
    "body": "Sequence {1..sequenceArray->size()}",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"at": 1},
    "body": "sequenceLetter->at(i)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"at": 1},
    "body": "sequenceArray->at(i)",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.fromModelicaPart.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromModelicaPart"]
  },
  {
    "operations": {},
    "body": "aConnect.fromModelicaPart.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "fromModelicaPart"
    ]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "aConnect.fromModelicaPart.arraySize->size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "fromModelicaPart",
      "arraySize"
    ]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"size": 1},
    "body": "Sequence {1..sequenceArray->size()}",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"at": 1},
    "body": "sequenceLetter->at(i)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 2,
      "oclIsUndefined": 2,
      "or": 1
    },
    "body": "aConnect.from.oclIsUndefined().not().or(aConnect.fromPort.oclIsUndefined().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "fromPort",
      "from"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.fromPart.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromPart"]
  },
  {
    "operations": {},
    "body": "aConnect.fromPart",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromPart"]
  },
  {
    "operations": {
      "not": 2,
      "oclIsUndefined": 2,
      "or": 1
    },
    "body": "aConnect.from.oclIsUndefined().not().or(aConnect.fromPort.oclIsUndefined().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "fromPort",
      "from"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.from.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["from"]
  },
  {
    "operations": {},
    "body": "aConnect.from.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "from"
    ]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "aConnect.from.arraySize->size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "arraySize",
      "from"
    ]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"size": 1},
    "body": "Sequence {1..aConnect.from.arraySize->size()}",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "arraySize",
      "from"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "sequenceLetter->at(i)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.fromPort.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromPort"]
  },
  {
    "operations": {},
    "body": "aConnect.fromPort",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fromPort"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.toModelicaPart.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toModelicaPart"]
  },
  {
    "operations": {},
    "body": "aConnect.toModelicaPart.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "toModelicaPart"
    ]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "aConnect.toModelicaPart.arraySize->size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "toModelicaPart",
      "arraySize"
    ]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"size": 1},
    "body": "Sequence {1..sequenceArray->size()}",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"at": 1},
    "body": "sequenceLetter->at(i)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 2,
      "or": 1,
      "oclIsUndefined": 2
    },
    "body": "aConnect.to.oclIsUndefined().not().or(aConnect.toPort.oclIsUndefined().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "to",
      "toPort"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.toPart.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toPart"]
  },
  {
    "operations": {},
    "body": "aConnect.toPart",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toPart"]
  },
  {
    "operations": {
      "not": 2,
      "oclIsUndefined": 2,
      "or": 1
    },
    "body": "aConnect.to.oclIsUndefined().not().or(aConnect.toPort.oclIsUndefined().not())",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 5,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "to",
      "toPort"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.to.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["to"]
  },
  {
    "operations": {},
    "body": "aConnect.to.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "to"
    ]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "aConnect.to.arraySize->size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "to",
      "arraySize"
    ]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"size": 1},
    "body": "Sequence {1..aConnect.to.arraySize->size()}",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "to",
      "arraySize"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "sequenceLetter->at(i)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aConnect.toPort.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toPort"]
  },
  {
    "operations": {},
    "body": "aConnect.toPort",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["toPort"]
  },
  {
    "operations": {"size": 1},
    "body": "Sequence {1..sequenceArray->size()}",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aEquation.body",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["body"]
  },
  {
    "operations": {},
    "body": "aModelicaAnnotation.body",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["body"]
  },
  {
    "operations": {},
    "body": "aModelicaComment.body",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["body"]
  }
]
