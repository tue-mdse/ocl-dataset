[
  {
    "operations": {},
    "body": "Sequence {localizedString('_UI_SpezielleAttribute_ausweichen_feature'), localizedString('_UI_Panzerung_panzer_feature')}",
    "type": "QueryExpression",
    "constructs": {
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "Sequence {character.persona.ausweichen, character.persona.oclAsType(shr5::KoerperPersona).panzer}",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "persona",
      "ausweichen",
      "panzer"
    ]
  },
  {
    "operations": {},
    "body": "Sequence {combatInfoTitel(self), combatInfoValues(character)}",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {localizedString('_UI_Beschreibbar_name_feature'), 'code', 'page'}",
    "type": "QueryExpression",
    "constructs": {
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 3,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "Sequence {beschreibbarNameList(list), scrCodeList(list), scrPageList(list)}",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 3,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"asSequence": 1},
    "body": "list->collect(temp1 : Beschreibbar | getText(temp1))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"asSequence": 1},
    "body": "list->collect(temp1 : Quelle | getSimpleText(temp1.srcBook))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["srcBook"]
  },
  {
    "operations": {"asSequence": 1},
    "body": "list->collect(temp1 : Quelle | temp1.srcBook.code)->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "srcBook",
      "code"
    ]
  },
  {
    "operations": {"asSequence": 1},
    "body": "list->collect(temp1 : Quelle | temp1.page)->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["page"]
  },
  {
    "operations": {"asSequence": 1},
    "body": "list->collect(temp1 : GeldWert | formatMoney(temp1))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {
      "oclIsKindOf": 1,
      "asSequence": 1
    },
    "body": "character.inventar->select(temp1 : AbstraktGegenstand | temp1.oclIsKindOf(shr5::Kleidung))->collect(temp2 : AbstraktGegenstand | Set {getText(temp2)}->asSequence())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["inventar"]
  },
  {
    "operations": {
      "oclIsKindOf": 1,
      "oclAsType": 1,
      "asSequence": 1
    },
    "body": "character.inventar->select(temp1 : AbstraktGegenstand | temp1.oclIsKindOf(shr5::Kleidung))->collect(temp2 : AbstraktGegenstand | Set {getText(temp2.oclAsType(shr5::Kleidung).ruestung)}->asSequence())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "ruestung",
      "inventar"
    ]
  },
  {
    "operations": {"asSequence": 1},
    "body": "character.connections->collect(temp1 : Connection | Set {getText(temp1)}->asSequence())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["connections"]
  },
  {
    "operations": {"asSequence": 1},
    "body": "character.connections->collect(temp1 : Connection | getSimpleText(temp1))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["connections"]
  },
  {
    "operations": {
      "selectByType": 1,
      "eAllContents": 1,
      "asSequence": 1
    },
    "body": "character.eAllContents()->selectByType(shr5::Magazin)->collect(temp1 : Magazin | getText(temp1))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "oclAsType": 1,
      "asSequence": 1
    },
    "body": "character.persona.oclAsType(shr5::KoerperPersona).eigenschaften->collect(temp1 : PersonaEigenschaft | Set {getText(temp1)}->asSequence())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eigenschaften",
      "persona"
    ]
  },
  {
    "operations": {
      "oclAsType": 1,
      "asSequence": 1
    },
    "body": "character.persona.oclAsType(shr5::KoerperPersona).eigenschaften->collect(temp1 : PersonaEigenschaft | Set {getSimpleText(temp1)}->asSequence())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eigenschaften",
      "persona"
    ]
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('de.urszeidler.shr5.acceleo.util.ShadowrunTextTools', 'getSimpleText(java.lang.Object)', Sequence {arg0})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('de.urszeidler.shr5.acceleo.util.ShadowrunTextTools', 'getObjectText(java.lang.Object)', Sequence {anOclAny})",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "sum": 1,
      "oclAsType": 2,
      "-": 1,
      "eGet": 2
    },
    "body": "getOrderedBasedAttibutesForPersona(persona)->collect(ea : EAttribute | persona.eGet(ea).oclAsType(oclstdlib::Integer).-(persona.spezies.eGet(base2SpeciesMin(ea)).oclAsType(oclstdlib::Integer)))->sum()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 5,
      "QueryInvocationSpec": 2,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["spezies"]
  },
  {
    "operations": {"sum": 1},
    "body": "persona.fertigkeitsGruppen->collect(pfg : PersonaFertigkeitsGruppe | pfg.stufe)->sum()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "fertigkeitsGruppen",
      "stufe"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsKindOf": 1,
      "sum": 1
    },
    "body": "persona.fertigkeiten->select(pf : PersonaFertigkeit | pf.fertigkeit.oclIsKindOf(shr5::Wissensfertigkeit).not())->collect(pfg : PersonaFertigkeit | pfg.stufe)->sum()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "stufe",
      "fertigkeit",
      "fertigkeiten"
    ]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "sum": 1
    },
    "body": "persona.fertigkeiten->select(pf : PersonaFertigkeit | pf.fertigkeit.oclIsTypeOf(shr5::Wissensfertigkeit))->collect(pfg : PersonaFertigkeit | pfg.stufe)->sum()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "stufe",
      "fertigkeit",
      "fertigkeiten"
    ]
  },
  {
    "operations": {"sum": 1},
    "body": "persona.eigenschaften->collect(pfg : PersonaEigenschaft | pfg.karmaKosten)->sum()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eigenschaften",
      "karmaKosten"
    ]
  },
  {
    "operations": {"sum": 1},
    "body": "pe->collect(pfg : PersonaEigenschaft | pfg.karmaKosten)->sum()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["karmaKosten"]
  },
  {
    "operations": {">": 1},
    "body": "rest.>(0)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "text",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "concat": 1,
      "substring": 1
    },
    "body": "text.concat(emtpty.substring(text.size()))",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {"<": 1},
    "body": "qua.karmaKosten.<(0)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["karmaKosten"]
  },
  {
    "operations": {
      "*": 2,
      "+": 2
    },
    "body": "persona.staerke.*(15).+('/').+(persona.staerke.*(10))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 4,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["staerke"]
  },
  {
    "operations": {"+": 6},
    "body": "deck.attribute1.+('|').+(deck.attribute2).+('|').+(deck.attribute3).+('|').+(deck.attribute4)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 4,
      "StringLiteralExpImpl": 3,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "attribute4",
      "attribute3",
      "attribute1",
      "attribute2"
    ]
  },
  {
    "operations": {
      "*": 2,
      "+": 4
    },
    "body": "persona.geschicklichkeit.*(persona.spezies.laufen).+('/').+(persona.geschicklichkeit.*(persona.spezies.rennen)).+('/').+(persona.spezies.sprinten)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 5,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 8
    },
    "properties": [
      "laufen",
      "spezies",
      "geschicklichkeit",
      "sprinten",
      "rennen"
    ]
  },
  {
    "operations": {"+": 2},
    "body": "aFahrzeug.handling.+('/').+(aFahrzeug.handlingGelaende)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "handling",
      "handlingGelaende"
    ]
  },
  {
    "operations": {"toString": 1},
    "body": "aFahrzeug.geschwindigkeit.toString()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["geschwindigkeit"]
  },
  {
    "operations": {"toString": 1},
    "body": "aFahrzeug.geschwindigkeit.toString()",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["geschwindigkeit"]
  },
  {
    "operations": {"+": 2},
    "body": "aFahrzeug.geschwindigkeit.+('/').+(aFahrzeug.geschwindigkeitGelaende)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "geschwindigkeit",
      "geschwindigkeitGelaende"
    ]
  },
  {
    "operations": {"toString": 1},
    "body": "aFahrzeug.rumpf.toString()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["rumpf"]
  },
  {
    "operations": {"toString": 1},
    "body": "r.min.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["min"]
  },
  {
    "operations": {},
    "body": "sep",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.kurz.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["kurz"]
  },
  {
    "operations": {},
    "body": "sep1",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.kurz.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["kurz"]
  },
  {
    "operations": {},
    "body": "sep",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.mittel.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["mittel"]
  },
  {
    "operations": {},
    "body": "sep1",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.mittel.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["mittel"]
  },
  {
    "operations": {},
    "body": "sep",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.weit.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["weit"]
  },
  {
    "operations": {},
    "body": "sep1",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.weit.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["weit"]
  },
  {
    "operations": {},
    "body": "sep",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.extrem.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["extrem"]
  },
  {
    "operations": {"toString": 1},
    "body": "r.min.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["min"]
  },
  {
    "operations": {},
    "body": "sep",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.kurz.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["kurz"]
  },
  {
    "operations": {},
    "body": "sep",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.mittel.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["mittel"]
  },
  {
    "operations": {},
    "body": "sep",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.weit.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["weit"]
  },
  {
    "operations": {},
    "body": "sep",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "r.extrem.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["extrem"]
  },
  {
    "operations": {"/": 1},
    "body": "persona.essenz./(100)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["essenz"]
  },
  {
    "operations": {},
    "body": "persona.konstitutionBasis",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["konstitutionBasis"]
  },
  {
    "operations": {
      "not": 1,
      "=": 1
    },
    "body": "persona.konstitutionBasis.=(persona.konstitution).not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "konstitutionBasis",
      "konstitution"
    ]
  },
  {
    "operations": {},
    "body": "persona.konstitution",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["konstitution"]
  },
  {
    "operations": {},
    "body": "persona.willenskraftBasis",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["willenskraftBasis"]
  },
  {
    "operations": {
      "not": 1,
      "=": 1
    },
    "body": "persona.willenskraftBasis.=(persona.willenskraft).not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "willenskraftBasis",
      "willenskraft"
    ]
  },
  {
    "operations": {},
    "body": "persona.willenskraft",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["willenskraft"]
  },
  {
    "operations": {},
    "body": "persona.geschicklichkeitBasis",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["geschicklichkeitBasis"]
  },
  {
    "operations": {
      "not": 1,
      "=": 1
    },
    "body": "persona.geschicklichkeitBasis.=(persona.geschicklichkeit).not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "geschicklichkeit",
      "geschicklichkeitBasis"
    ]
  },
  {
    "operations": {},
    "body": "persona.geschicklichkeit",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["geschicklichkeit"]
  },
  {
    "operations": {},
    "body": "persona.logikBasis",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["logikBasis"]
  },
  {
    "operations": {
      "not": 1,
      "=": 1
    },
    "body": "persona.logikBasis.=(persona.logik).not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "logikBasis",
      "logik"
    ]
  },
  {
    "operations": {},
    "body": "persona.logik",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["logik"]
  },
  {
    "operations": {},
    "body": "persona.reaktionBasis",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["reaktionBasis"]
  },
  {
    "operations": {
      "not": 1,
      "=": 1
    },
    "body": "persona.reaktionBasis.=(persona.reaktion).not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "reaktionBasis",
      "reaktion"
    ]
  },
  {
    "operations": {},
    "body": "persona.reaktion",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["reaktion"]
  },
  {
    "operations": {},
    "body": "persona.intuitionBasis",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["intuitionBasis"]
  },
  {
    "operations": {
      "not": 1,
      "=": 1
    },
    "body": "persona.intuitionBasis.=(persona.intuition).not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "intuition",
      "intuitionBasis"
    ]
  },
  {
    "operations": {},
    "body": "persona.intuition",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["intuition"]
  },
  {
    "operations": {},
    "body": "persona.charismaBasis",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["charismaBasis"]
  },
  {
    "operations": {
      "not": 1,
      "=": 1
    },
    "body": "persona.charismaBasis.=(persona.charisma).not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "charisma",
      "charismaBasis"
    ]
  },
  {
    "operations": {},
    "body": "persona.charisma",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["charisma"]
  },
  {
    "operations": {},
    "body": "persona.staerkeBasis",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["staerkeBasis"]
  },
  {
    "operations": {
      "not": 1,
      "=": 1
    },
    "body": "persona.staerkeBasis.=(persona.staerke).not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "staerkeBasis",
      "staerke"
    ]
  },
  {
    "operations": {},
    "body": "persona.staerke",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["staerke"]
  },
  {
    "operations": {},
    "body": "src.srcBook",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["srcBook"]
  },
  {
    "operations": {},
    "body": "src.page",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["page"]
  }
]
