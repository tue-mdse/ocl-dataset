[
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.umlgen.gen.c.services.UML2Services', 'eResourceName(org.eclipse.emf.ecore.EObject)', Sequence {})",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.umlgen.gen.c.services.UML2Services', 'getCorrespondingMergeNode(org.eclipse.uml2.uml.DecisionNode)', Sequence {})",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.umlgen.gen.c.services.UML2Services', 'isReferencedByClause(org.eclipse.uml2.uml.ActivityNode)', Sequence {})",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.umlgen.gen.c.services.UML2Services', 'usesFallthrough(org.eclipse.uml2.uml.Clause)', Sequence {})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 2},
    "body": "node.eAnnotations->select(temp1 : EAnnotation | temp1.source.=('http://www.eclipse.org/documentation'))->collect(temp2 : EAnnotation | temp2.details)->select(temp3 : EStringToStringMapEntry | temp3.key.=('COMMENT_BEFORE'))->collect(temp4 : EStringToStringMapEntry | temp4.value)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 5,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 5
    },
    "properties": [
      "value",
      "source",
      "details",
      "key",
      "eAnnotations"
    ]
  },
  {
    "operations": {"=": 2},
    "body": "node.eAnnotations->select(temp1 : EAnnotation | temp1.source.=('http://www.eclipse.org/documentation'))->collect(temp2 : EAnnotation | temp2.details)->select(temp3 : EStringToStringMapEntry | temp3.key.=('COMMENT_INLINE'))->collect(temp4 : EStringToStringMapEntry | temp4.value)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 5,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 5
    },
    "properties": [
      "value",
      "source",
      "details",
      "key",
      "eAnnotations"
    ]
  },
  {
    "operations": {"=": 2},
    "body": "node.eAnnotations->select(temp1 : EAnnotation | temp1.source.=('http://www.eclipse.org/documentation'))->collect(temp2 : EAnnotation | temp2.details)->select(temp3 : EStringToStringMapEntry | temp3.key.=('COMMENT_SAME_LINE'))->collect(temp4 : EStringToStringMapEntry | temp4.value)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 5
    },
    "properties": [
      "value",
      "source",
      "details",
      "key",
      "eAnnotations"
    ]
  },
  {
    "operations": {"=": 2},
    "body": "node.eAnnotations->select(temp1 : EAnnotation | temp1.source.=('http://www.eclipse.org/documentation'))->collect(temp2 : EAnnotation | temp2.details)->select(temp3 : EStringToStringMapEntry | temp3.key.=('COMMENT_LAST_LINE'))->collect(temp4 : EStringToStringMapEntry | temp4.value)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 5
    },
    "properties": [
      "value",
      "source",
      "details",
      "key",
      "eAnnotations"
    ]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "node.outgoing->collect(temp1 : ActivityEdge | temp1.target)->reject(temp2 : ActivityNode | isReferencedByClause(temp2))->collect(temp3 : ActivityNode | gen(temp3))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 4,
      "TemplateInvocationSpec": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "outgoing",
      "target"
    ]
  },
  {
    "operations": {"eClass": 1},
    "body": "node.eClass()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "self.name.=('break')",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "self.name.=('continue')",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  }
]
