[
  {
    "operations": {
      "getNearestPackage": 1,
      "+": 4,
      "oclAsType": 2
    },
    "body": "if hasStereotype(self,C_Cpp::Template) then getApplication(self,C_Cpp::Template).oclAsType(C_Cpp::Template).declaration else if hasStereotype(self,C_Cpp::External) then getApplication(self,C_Cpp::External).oclAsType(C_Cpp::External).name else getFullPath(self.getNearestPackage()).+('/').+(ne.name).+('.').+(getHeaderSuffix(self)) endif endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 7,
      "OperationCallExpImpl": 7,
      "QueryInvocationSpec": 6,
      "TypeExpImpl": 6,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "declaration",
      "name",
      "name"
    ]
  },
  {
    "operations": {},
    "body": "hasStereotypeTree(self,C_Cpp::ExternLibrary)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "ne",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "getApplicationTree(self,C_Cpp::ExternLibrary).oclAsType(C_Cpp::ExternLibrary).includes",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["includes"]
  },
  {
    "operations": {},
    "body": "include",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  }
]
