[
  {
    "operations": {
      "not": 1,
      "or": 1,
      "and": 1,
      "endsWith": 1,
      "notEmpty": 1
    },
    "body": "aClass.attribute->select(aProperty : Property | isAssociationAttribute(aProperty).not().and(aProperty.type.name.endsWith('Date')))->notEmpty().or(hasManyAssociations(aClass))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "attribute",
      "type"
    ]
  },
  {
    "operations": {
      "not": 1,
      "asOrderedSet": 1,
      "equalsIgnoreCase": 1
    },
    "body": "aClass.attribute->select(temp1 : Property | isAssociationAttribute(temp1))->collect(e : Property | getDatatypeByProperty(e))->select(temp2 : Class | temp2.package.qualifiedName.equalsIgnoreCase(aClass.package.qualifiedName).not())->asOrderedSet()->sortedBy(temp3 : Class | temp3.name)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "VariableExpImpl": 6,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 2,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "qualifiedName",
      "name",
      "attribute",
      "package"
    ]
  },
  {
    "operations": {"excludes": 1},
    "body": "getFeaturesToImport(aClass)->excludes(anImportedClass)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "or": 5,
      "notEmpty": 1
    },
    "body": "aClass.attribute->select(temp1 : Property | isAssociationAttribute(temp1).not())->collect(temp2 : Property | getDatatypeByProperty(temp2))->select(temp3 : Class | hasPattern(temp3).or(hasMax(temp3)).or(hasMin(temp3)).or(hasMinLength(temp3)).or(hasMaxLength(temp3)).or(hasTemporal(temp3)))->notEmpty()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 9,
      "OperationCallExpImpl": 7,
      "QueryInvocationSpec": 8,
      "PropertyCallExpImpl": 1
    },
    "properties": ["attribute"]
  }
]
