[
  {
    "operations": {
      "not": 1,
      "oclIsInvalid": 1
    },
    "body": "self.name.oclIsInvalid().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"trim": 1},
    "body": "generateThePlatformDependentName(self.name).trim()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"=": 1},
    "body": "aName.=('Real')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "aName.=('Boolean')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "aName.=('Integer')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "aName.=('String')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "aName.=('')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "self.defaultValue.oclIsTypeOf(uml::LiteralString)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"stringValue": 1},
    "body": "self.defaultValue.stringValue()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "self.defaultValue.oclIsTypeOf(uml::LiteralBoolean)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"booleanValue": 1},
    "body": "self.defaultValue.booleanValue()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "self.defaultValue.oclIsTypeOf(uml::LiteralInteger)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"integerValue": 1},
    "body": "self.defaultValue.integerValue()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "self.defaultValue.oclIsTypeOf(uml::LiteralNull)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "self.defaultValue.oclIsTypeOf(uml::LiteralReal)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"realValue": 1},
    "body": "self.defaultValue.realValue()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"stringValue": 1},
    "body": "self.defaultValue.stringValue()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aConstraint.specification.oclIsTypeOf(uml::LiteralBoolean)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specification"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aConstraint.specification.oclIsTypeOf(uml::LiteralInteger)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specification"]
  },
  {
    "operations": {},
    "body": "aConstraint.specification.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "specification"
    ]
  },
  {
    "operations": {"integerValue": 1},
    "body": "aConstraint.specification.integerValue()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specification"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aConstraint.specification.oclIsTypeOf(uml::LiteralReal)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specification"]
  },
  {
    "operations": {},
    "body": "aConstraint.specification.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "specification"
    ]
  },
  {
    "operations": {"realValue": 1},
    "body": "aConstraint.specification.realValue()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specification"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aConstraint.specification.oclIsTypeOf(uml::LiteralString)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specification"]
  },
  {
    "operations": {},
    "body": "aConstraint.specification.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "specification"
    ]
  },
  {
    "operations": {"stringValue": 1},
    "body": "aConstraint.specification.stringValue()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specification"]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aConstraint.specification.oclIsTypeOf(uml::LiteralNull)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specification"]
  },
  {
    "operations": {},
    "body": "aConstraint.specification.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "specification"
    ]
  },
  {
    "operations": {},
    "body": "aConstraint.specification.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "specification"
    ]
  },
  {
    "operations": {"booleanValue": 1},
    "body": "aConstraint.specification.booleanValue()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specification"]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "size": 1,
      "and": 1,
      "=": 2,
      ">": 1
    },
    "body": "self.attribute->select(temp1 : Property | temp1.lower.=(temp1.upper).and(temp1.lower.=(1)).not())->size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 6,
      "IntegerLiteralExpImpl": 2,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "attribute",
      "lower",
      "upper"
    ]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "self.attribute->select(temp1 : Property | Set {temp1.association}->size().>(0))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "association",
      "attribute"
    ]
  },
  {
    "operations": {},
    "body": "self.type.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "self.generalization",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["generalization"]
  },
  {
    "operations": {},
    "body": "self.general.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "general",
      "name"
    ]
  },
  {
    "operations": {"<>": 1},
    "body": "pPkg.<>(null)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "NullLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "self.name.=(self.nestingPackage)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "nestingPackage",
      "name"
    ]
  },
  {
    "operations": {},
    "body": "self.nestingPackage",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["nestingPackage"]
  },
  {
    "operations": {},
    "body": "self.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "filter": 1,
      "size": 1,
      "allOwnedElements": 1,
      ">": 1
    },
    "body": "aClass.allOwnedElements()->filter(uml::StateMachine)->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "eContents": 1,
      "indexOf": 1
    },
    "body": "b->sortedBy(n : Property | n.eContainer().eContents()->indexOf(n))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "eContents": 1,
      "indexOf": 1
    },
    "body": "b->sortedBy(n : Operation | n.eContainer().eContents()->indexOf(n))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "eContents": 1,
      "indexOf": 1
    },
    "body": "b->sortedBy(n : StateMachine | n.eContainer().eContents()->indexOf(n))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "eContents": 1,
      "indexOf": 1
    },
    "body": "b->sortedBy(n : NamedElement | n.eContainer().eContents()->indexOf(n))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3
    },
    "properties": []
  }
]
