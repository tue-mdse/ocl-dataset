[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "fileName(e)",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"filter": 1},
    "body": "e.content->filter(markup::Section)->any(temp1 : Section | true)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["content"]
  },
  {
    "operations": {},
    "body": "self.title",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["title"]
  },
  {
    "operations": {},
    "body": "self.title",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["title"]
  },
  {
    "operations": {},
    "body": "e",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "autoRotateImage(self).not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"eAllContents": 1},
    "body": "e.eAllContents(markup::Image)->select(temp1 : Image | hasLandscapeRatio(temp1))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "img.url",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["url"]
  },
  {
    "operations": {">": 1},
    "body": "getWidthRatio(img).>(1.5)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "RealLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "img.url",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["url"]
  },
  {
    "operations": {">": 1},
    "body": "getWidthRatio(img).>(1.3)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "RealLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "img.url",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["url"]
  },
  {
    "operations": {},
    "body": "img.url",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["url"]
  },
  {
    "operations": {"eClass": 1},
    "body": "elem.eClass().name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "decoded.=('\u2019')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "c.content->collect(temp1 : StructureElement | toTex(temp1))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["content"]
  },
  {
    "operations": {},
    "body": "b.content->collect(temp1 : BlockContent | toTex(temp1))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["content"]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "b",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "self.level.=(2)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["level"]
  },
  {
    "operations": {"=": 1},
    "body": "self.level.=(3)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["level"]
  },
  {
    "operations": {},
    "body": "self.title",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["title"]
  },
  {
    "operations": {"=": 1},
    "body": "self.level.=(4)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["level"]
  },
  {
    "operations": {},
    "body": "self.title",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["title"]
  },
  {
    "operations": {"=": 1},
    "body": "self.level.=(5)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["level"]
  },
  {
    "operations": {},
    "body": "self.title",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["title"]
  },
  {
    "operations": {"=": 1},
    "body": "self.level.=(6)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["level"]
  },
  {
    "operations": {},
    "body": "self.title",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["title"]
  },
  {
    "operations": {},
    "body": "self.title",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["title"]
  },
  {
    "operations": {},
    "body": "e",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "notEmpty": 1,
      "=": 1
    },
    "body": "Set {e.attributes}->select(a : Annotations | a.CSSClass.=('footnote'))->notEmpty()",
    "type": "TemplateGuard",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "CSSClass",
      "attributes"
    ]
  },
  {
    "operations": {
      "sep": 1,
      "asSequence": 1
    },
    "body": "drop(e.content->asSequence(),1)->collect(temp1 : OclAny | toTex(temp1))->sep(' ')",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TemplateInvocationSpec": 1,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["content"]
  },
  {
    "operations": {"sep": 1},
    "body": "Set {genContent(e)}->sep(' ')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "isEmpty": 1,
      "=": 1
    },
    "body": "Set {e.attributes}->select(a : Annotations | a.CSSClass.=('footnote'))->isEmpty()",
    "type": "TemplateGuard",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "CSSClass",
      "attributes"
    ]
  },
  {
    "operations": {},
    "body": "e.format->collect(temp1 : Formatting | toTex(temp1))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["format"]
  },
  {
    "operations": {"replaceAll": 3},
    "body": "e.data.replaceAll('_', '\\\\_').replaceAll('\t', '    ').replaceAll('->', '\\$\\\\rightarrow\\$')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 6,
      "PropertyCallExpImpl": 1
    },
    "properties": ["data"]
  },
  {
    "operations": {},
    "body": "e.format",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["format"]
  },
  {
    "operations": {"<>": 1},
    "body": "f.<>(markup::Formatting::none)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "e.lineBreak",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["lineBreak"]
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::emphasis)",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::strong)",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::bold)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::italic)",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::code)",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::monospace)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::underlined)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::citation)",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::subscript)",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "value.=(markup::Formatting::superscript)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "trim": 1,
      "toString": 1
    },
    "body": "genContent(c).toString().trim()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "TemplateInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {
      "trim": 1,
      "toString": 1
    },
    "body": "genContent(p).toString().trim()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {
      "trim": 1,
      "toString": 1
    },
    "body": "genContent(p).toString().trim()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "l.listType.<>(markup::ListType::TABLE_OF_CONTENT)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["listType"]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "l",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "l.items",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["items"]
  },
  {
    "operations": {},
    "body": "li",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "l",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "l.content->collect(temp1 : BlockContent | toTex(temp1))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["content"]
  },
  {
    "operations": {
      "not": 2,
      "and": 1,
      "isEmpty": 2,
      "first": 1
    },
    "body": "l.items->isEmpty().not().and(l.items->first().items->isEmpty().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": ["items"]
  },
  {
    "operations": {"first": 1},
    "body": "l.items->first()",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["items"]
  },
  {
    "operations": {"first": 1},
    "body": "l.items->first().items",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["items"]
  },
  {
    "operations": {},
    "body": "li",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"first": 1},
    "body": "l.items->first()",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["items"]
  },
  {
    "operations": {
      "eContents": 2,
      "first": 1
    },
    "body": "t.eContents(markup::TableRow)->first().eContents(markup::TableCell)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"eContents": 1},
    "body": "t.eContents(markup::TableRow)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"eContents": 1},
    "body": "butLast(r.eContents(markup::TableCell))",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "last": 1,
      "eContents": 1
    },
    "body": "r.eContents(markup::TableCell)->last()",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "eContents": 1,
      "notEmpty": 1
    },
    "body": "Set {r.eContents(markup::TableCell)->any(c : TableCell | c.isCellHeader)}->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isCellHeader"]
  },
  {
    "operations": {},
    "body": "hasLandscapeRatio(self)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "img.url",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["url"]
  },
  {
    "operations": {},
    "body": "autoRotateImage(self)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "img.url",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["url"]
  },
  {
    "operations": {},
    "body": "img.url",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["url"]
  },
  {
    "operations": {
      "not": 1,
      "and": 1
    },
    "body": "autoRotateImage(self).not().and(hasLandscapeRatio(self))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "img.url",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["url"]
  },
  {
    "operations": {},
    "body": "link.hrefOrHashName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["hrefOrHashName"]
  },
  {
    "operations": {},
    "body": "link.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  }
]
