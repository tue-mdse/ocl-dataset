[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "pn.name.concat('.hpp')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"filter": 1},
    "body": "pn.processes->filter(forsyde::CompositeProcess)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["processes"]
  },
  {
    "operations": {},
    "body": "cp.component.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "component"
    ]
  },
  {
    "operations": {"filter": 1},
    "body": "pn.processes->filter(forsyde::LeafProcess)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["processes"]
  },
  {
    "operations": {
      "not": 1,
      "isEmpty": 1,
      "=": 1
    },
    "body": "lp.constructorArguments->select(ca : ConstructorArgument | ca.type.=(''))->isEmpty().not()",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "type",
      "constructorArguments"
    ]
  },
  {
    "operations": {
      "last": 1,
      "lastIndex": 1,
      "replaceAll": 1,
      "substring": 1
    },
    "body": "lp.name.substring(1, lp.name.lastIndex(lp.name.replaceAll('[0-9]', '').last(1)))",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 3,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "pn.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "pn.ports",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ports"]
  },
  {
    "operations": {"toString": 1},
    "body": "port.moc.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["moc"]
  },
  {
    "operations": {},
    "body": "port",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "port.dataType.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["dataType"]
  },
  {
    "operations": {},
    "body": "port.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "pn.signals",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["signals"]
  },
  {
    "operations": {"toString": 1},
    "body": "sig.moc.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["moc"]
  },
  {
    "operations": {"toString": 1},
    "body": "sig.dataType.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["dataType"]
  },
  {
    "operations": {},
    "body": "sig.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "pn.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"filter": 1},
    "body": "pn.processes->filter(forsyde::LeafProcess)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["processes"]
  },
  {
    "operations": {},
    "body": "lp.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"toString": 1},
    "body": "lp.processConstructor.moc.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "moc",
      "processConstructor"
    ]
  },
  {
    "operations": {},
    "body": "lp.processConstructor.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "processConstructor"
    ]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "lp.constructorArguments",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["constructorArguments"]
  },
  {
    "operations": {},
    "body": "carg",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "filter": 1,
      "not": 1,
      "isEmpty": 1
    },
    "body": "lp.ports->filter(forsyde::OutputPort)->isEmpty().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ports"]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"filter": 1},
    "body": "lp.ports->filter(forsyde::OutputPort)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ports"]
  },
  {
    "operations": {"first": 1},
    "body": "getBindings(oport)->first()",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {
      "filter": 1,
      "not": 1,
      "isEmpty": 1
    },
    "body": "lp.ports->filter(forsyde::InputPort)->isEmpty().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ports"]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"filter": 1},
    "body": "lp.ports->filter(forsyde::InputPort)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ports"]
  },
  {
    "operations": {"first": 1},
    "body": "getBindings(iport)->first()",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"filter": 1},
    "body": "lp.ports->filter(forsyde::OutputPort)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ports"]
  },
  {
    "operations": {
      "excluding": 1,
      "first": 1
    },
    "body": "getBindings(oport)->excluding(getBindings(oport)->first())",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "lp.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "oport.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "b",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"filter": 1},
    "body": "pn.processes->filter(forsyde::CompositeProcess)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["processes"]
  },
  {
    "operations": {},
    "body": "cp.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "cp.component.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "component"
    ]
  },
  {
    "operations": {},
    "body": "cp.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "cp.ports",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ports"]
  },
  {
    "operations": {},
    "body": "getBindings(port)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "cp.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "port.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "b",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "port.oclIsTypeOf(forsyde::InputPort)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "port.oclIsTypeOf(forsyde::OutputPort)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "filter": 2,
      "eContainer": 3,
      "or": 1,
      "union": 2,
      "=": 4
    },
    "body": "p.eContainer(forsyde::ProcessNetwork).signals->select(s : Signal | s.targetPort.=(p).or(s.sourcePort.=(p)))->union(p.eContainer(forsyde::ProcessNetwork).ports->filter(forsyde::InputPort)->select(tp : InputPort | tp.boundPort.=(p)))->union(p.eContainer(forsyde::ProcessNetwork).ports->filter(forsyde::OutputPort)->select(tp : OutputPort | tp.boundPort.=(p)))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 11,
      "OperationCallExpImpl": 12,
      "TypeExpImpl": 5,
      "PropertyCallExpImpl": 7
    },
    "properties": [
      "signals",
      "boundPort",
      "ports",
      "boundPort",
      "targetPort",
      "sourcePort"
    ]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "b.oclIsTypeOf(forsyde::Signal)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "b.oclAsType(forsyde::Port).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "b.oclAsType(forsyde::Signal).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"=": 1},
    "body": "ca.type.=('string')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "ca.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {"=": 1},
    "body": "ca.type.=('string')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  }
]
