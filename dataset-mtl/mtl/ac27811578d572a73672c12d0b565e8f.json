[
  {
    "operations": {},
    "body": "genFilePath(aPort)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "anInterface",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anInterface.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"notEmpty": 1},
    "body": "getReceptionsWithParameters(anInterface)->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "anInterface",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "filter": 2,
      "not": 2,
      "oclIsKindOf": 1,
      "and": 1
    },
    "body": "minimize(self,getAllReceptions(self)->collect(temp1 : Reception | get(temp1,'ownedElement'))->filter(uml::TypedElement)->select(aProp : TypedElement | isJavaPrimitive(aProp.type).not().and(aProp.type.oclIsKindOf(uml::Enumeration).not()))->collect(temp2 : TypedElement | temp2.type))->filter(uml::Type)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 6,
      "OperationCallExpImpl": 6,
      "QueryInvocationSpec": 4,
      "TypeExpImpl": 3,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": ["type"]
  },
  {
    "operations": {"+": 2},
    "body": "genDecoratorPackagePath(aType).+('.').+(genName(aType))",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TemplateInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "filter": 2,
      "not": 2,
      "oclIsKindOf": 1,
      "and": 1
    },
    "body": "minimize(self,getAllReceptions(self)->collect(temp1 : Reception | temp1.signal)->collect(temp2 : Signal | get(temp2,'ownedElement'))->filter(uml::TypedElement)->select(aProp : TypedElement | isJavaPrimitive(aProp.type).not().and(aProp.type.oclIsKindOf(uml::Enumeration).not()))->collect(temp3 : TypedElement | temp3.type))->filter(uml::Type)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 4,
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 7,
      "QueryInvocationSpec": 4,
      "TypeExpImpl": 3,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "signal",
      "type"
    ]
  },
  {
    "operations": {"+": 2},
    "body": "genDecoratorPackagePath(aType).+('.').+(genName(aType))",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TemplateInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aPort",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anInterface",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'User'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'Async'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anInterface",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "getReceptionsWithParameters(anInterface)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "anOperation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "false",
    "type": "TemplateInvocationArgument",
    "constructs": {"BooleanLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "isLossyBuffer(aPort)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "0",
    "type": "QueryInvocationArgument",
    "constructs": {"IntegerLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anInterface",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aPort",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aPort",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anInterface",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'User'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'Async'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anInterface",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "getAllReceptions(anInterface)->select(aReception : Reception | aReception.signal.<>(null))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "NullLiteralExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["signal"]
  },
  {
    "operations": {},
    "body": "anOperation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aPort",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anOperation.signal",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["signal"]
  },
  {
    "operations": {
      "filter": 1,
      "sep": 1
    },
    "body": "get(anOperation.signal,'ownedAttribute')->filter(uml::Property)->collect(temp1 : Property | genMethodParam(temp1))->sep(', ')",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TemplateInvocationSpec": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["signal"]
  },
  {
    "operations": {"filter": 1},
    "body": "get(anOperation.signal,'ownedAttribute')->filter(uml::Property)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["signal"]
  },
  {
    "operations": {},
    "body": "anOperation.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "filter": 1,
      "size": 1,
      ">": 1
    },
    "body": "get(anOperation.signal,'ownedAttribute')->filter(uml::Property)->size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["signal"]
  },
  {
    "operations": {},
    "body": "anOperation.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anOperation.signal",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["signal"]
  },
  {
    "operations": {"sep": 1},
    "body": "getParams(anOperation)->collect(temp1 : TypedElement | genTypeName(temp1))->sep('_')",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "TemplateInvocationSpec": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  }
]
