[
  {
    "operations": {},
    "body": "'no_argument_implicit_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "replace": 1,
      "invoke": 1,
      "oclAsType": 1
    },
    "body": "self.invoke('java.lang.Object', 'toString', Sequence {}).oclAsType(oclstdlib::String).replace('@[^(]*', '')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 4,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'no_argument_explicit_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "replace": 1,
      "invoke": 1,
      "oclAsType": 1
    },
    "body": "c.invoke('java.lang.Object', 'toString', Sequence {}).oclAsType(oclstdlib::String).replace('@[^(]*', '')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 4,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'no_argument_passed_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "replace": 1,
      "invoke": 1,
      "oclAsType": 1
    },
    "body": "self.invoke('java.lang.Object', 'toString', Sequence {c}).oclAsType(oclstdlib::String).replace('@[^(]*', '')",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "StringLiteralExpImpl": 4,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'single_argument_implicit_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClass(org.eclipse.emf.ecore.EClass)', Sequence {})",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'single_argument_explicit_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "c.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClass(org.eclipse.emf.ecore.EClass)', Sequence {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'single_argument_passed_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClass(org.eclipse.emf.ecore.EClass)', Sequence {c})",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'multiple_argument_implicit_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassString(org.eclipse.emf.ecore.EClass, java.lang.String)', Sequence {c.name})",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "'multiple_argument_explicit_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "c.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassString(org.eclipse.emf.ecore.EClass   ,java.lang.String   )', Sequence {'AbstractClass'})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 3,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'multiple_argument_passed_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassString(org.eclipse.emf.ecore.EClass, java.lang.String)', Sequence {c, c.name})",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "'instanceofs_implicit_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassInstanceOf(org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)', Sequence {c.ePackage})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ePackage"]
  },
  {
    "operations": {},
    "body": "'instanceofs_explicit_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "c.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassInstanceOf(org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)', Sequence {c.ePackage})",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ePackage"]
  },
  {
    "operations": {},
    "body": "'instanceofs_passed_self'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.acceleo.engine.tests.mock.MockService', 'serviceClassInstanceOf(org.eclipse.emf.ecore.EObject, org.eclipse.emf.ecore.EObject)', Sequence {c, c.ePackage})",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ePackage"]
  },
  {
    "operations": {},
    "body": "'no_parameters_valid_source_no_parameter'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "'TRUE'.invoke('java.lang.String', 'toLowerCase()', Sequence {})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 3,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'no_parameters_invalid_source_valid_parameter'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "c.invoke('java.lang.String', 'toLowerCase()', Sequence {'TRUE'})",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 3,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'no_parameters_valid_source_valid_parameter'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "'FALSE'.invoke('java.lang.String', 'toLowerCase()', Sequence {'TRUE'})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 4,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'parameters_valid_source_no_parameter'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "'foo'.invoke('java.lang.String', 'matches(java.lang.String)', Sequence {'foo'})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 4,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'parameters_invalid_source_valid_parameter'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('java.lang.String', 'matches(java.lang.String)', Sequence {'foo', 'foo'})",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 4,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'parameters_valid_source_valid_parameter'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "'foo'.invoke('java.lang.String', 'matches(java.lang.String)', Sequence {'foo', 'foo'})",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 5,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  }
]
