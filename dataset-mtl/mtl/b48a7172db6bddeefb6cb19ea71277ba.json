[
  {
    "operations": {"asSequence": 1},
    "body": "seq->select(d : DataType | hasStereotype(d,'embedded_C::Typedef'))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(d,'embedded_C::Typedef')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "hasStereotype(d,'embedded_C::Typedef').not()",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(d,'embedded_C::Attribute')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(d,'embedded_C::Union')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "getValue": 1,
      "toString": 1,
      "getAppliedStereotype": 1
    },
    "body": "d.getValue(d.getAppliedStereotype('embedded_C::Typedef'), 'MappedType').toString()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "getValue": 1,
      "toString": 1,
      "getAppliedStereotype": 1
    },
    "body": "d.getValue(d.getAppliedStereotype('embedded_C::Attribute'), 'Attribute').toString()",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  }
]
