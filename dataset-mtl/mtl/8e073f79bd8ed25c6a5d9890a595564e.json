[
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "genImport(aClass).trim()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasCollections(aClass)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasManyToManyAssociation(aClass)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasManyToOneAssociation(aClass)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasOneToManyAssociation(aClass)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasOneToOneAssociation(aClass)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasOrderedCollections(aClass)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasAttributesConstraint(aClass,'@Max')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasAttributesConstraint(aClass,'@Min')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"or": 1},
    "body": "hasAttributesConstraint(aClass,'@NotNull').or(hasMandatoryAttribute(aClass))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasAttributesConstraint(aClass,'@Pattern')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"or": 1},
    "body": "hasAttributesConstraint(aClass,'@Size').or(hasMandatoryCollectionSize(aClass))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Clonable')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Mergable')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Metadatable')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Taggable')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Audited')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Indexed')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Audited')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Indexed')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasEAnnotation(aClass,'@BusinessRulesConstraint')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Taggable')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Metadatable')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Mergable')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aClass,'Clonable')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "union": 1,
      "asSequence": 2
    },
    "body": "aClass.ownedAttribute->asSequence()->union(getOutgoingNavigableOwnedEnd(aClass)->asSequence()->sortedBy(temp1 : Property | temp1.name))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "ownedAttribute",
      "name"
    ]
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "and": 2,
      "=": 1
    },
    "body": "hasStereotype(aClass,'Indexed').and(aProperty.association.oclIsUndefined()).and(aProperty.upper.=(1))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "association",
      "upper"
    ]
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aProperty.association.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["association"]
  },
  {
    "operations": {"<>": 1},
    "body": "aProperty.upper.<>(1)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["upper"]
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "aProperty.nameExpression.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["nameExpression"]
  },
  {
    "operations": {"tokenize": 1},
    "body": "aProperty.nameExpression.name.tokenize(';')",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "nameExpression"
    ]
  },
  {
    "operations": {"trim": 1},
    "body": "annotation.trim()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "and": 1,
      ">": 1
    },
    "body": "hasConstraint(aProperty,'@NotNull').not().and(aProperty.lower.>(0))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["lower"]
  },
  {
    "operations": {
      "<>": 1,
      "and": 1
    },
    "body": "aProperty.upper.<>(1).and(aProperty.isOrdered)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "isOrdered",
      "upper"
    ]
  },
  {
    "operations": {
      "not": 1,
      "contains": 1,
      "oclIsUndefined": 1,
      "and": 1
    },
    "body": "aProperty.nameExpression.oclIsUndefined().not().and(aProperty.nameExpression.name.contains(constraint))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "nameExpression"
    ]
  },
  {
    "operations": {
      "contains": 1,
      "not": 1,
      "oclIsUndefined": 1,
      "size": 1,
      "and": 1,
      ">": 1
    },
    "body": "aClass.ownedAttribute->select(temp1 : Property | temp1.nameExpression.oclIsUndefined().not().and(temp1.nameExpression.name.contains(constraint)))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 4,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "ownedAttribute",
      "name",
      "nameExpression"
    ]
  },
  {
    "operations": {
      "<>": 1,
      "size": 1,
      "and": 1,
      "=": 1,
      ">": 1
    },
    "body": "getOutgoingNavigableOwnedEnd(aClass)->select(temp1 : Property | temp1.upper.<>(1).and(getAssociationOtherEnd(temp1).upper.=(1)))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 3,
      "PropertyCallExpImpl": 2
    },
    "properties": ["upper"]
  },
  {
    "operations": {
      "<>": 2,
      "size": 1,
      "and": 1,
      ">": 1
    },
    "body": "getOutgoingNavigableOwnedEnd(aClass)->select(temp1 : Property | temp1.upper.<>(1).and(getAssociationOtherEnd(temp1).upper.<>(1)))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 5,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 3,
      "PropertyCallExpImpl": 2
    },
    "properties": ["upper"]
  },
  {
    "operations": {
      "<>": 1,
      "size": 1,
      "and": 1,
      "=": 1,
      ">": 1
    },
    "body": "getOutgoingNavigableOwnedEnd(aClass)->select(temp1 : Property | temp1.upper.=(1).and(getAssociationOtherEnd(temp1).upper.<>(1)))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 3,
      "PropertyCallExpImpl": 2
    },
    "properties": ["upper"]
  },
  {
    "operations": {
      "size": 1,
      "and": 1,
      "=": 2,
      ">": 1
    },
    "body": "getOutgoingNavigableOwnedEnd(aClass)->select(temp1 : Property | temp1.upper.=(1).and(getAssociationOtherEnd(temp1).upper.=(1)))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 3,
      "PropertyCallExpImpl": 2
    },
    "properties": ["upper"]
  },
  {
    "operations": {
      "size": 1,
      "and": 1,
      "union": 1,
      "=": 2,
      ">": 1
    },
    "body": "aClass.ownedAttribute->union(getOutgoingNavigableOwnedEnd(aClass))->select(temp1 : Property | temp1.lower.=(1).and(temp1.upper.=(1)))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 6,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 3,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "ownedAttribute",
      "lower",
      "upper"
    ]
  },
  {
    "operations": {
      "<=": 1,
      "<>": 1,
      "not": 1,
      "or": 1,
      "size": 1,
      "and": 2,
      "union": 1,
      "-": 1,
      "=": 1,
      ">": 2
    },
    "body": "aClass.ownedAttribute->union(getOutgoingNavigableOwnedEnd(aClass))->select(temp1 : Property | temp1.lower.>(0).or(temp1.upper.<>(1.-())).and(temp1.lower.<=(1).and(temp1.upper.=(1)).not()))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 12,
      "VariableExpImpl": 6,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 5,
      "PropertyCallExpImpl": 5
    },
    "properties": [
      "ownedAttribute",
      "lower",
      "upper"
    ]
  },
  {
    "operations": {
      "<>": 1,
      "size": 1,
      ">": 1
    },
    "body": "aClass.ownedAttribute->select(temp1 : Property | temp1.upper.<>(1))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "IntegerLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "ownedAttribute",
      "upper"
    ]
  },
  {
    "operations": {
      "<>": 1,
      "size": 1,
      "and": 1,
      "union": 1,
      ">": 1
    },
    "body": "aClass.ownedAttribute->union(getOutgoingNavigableOwnedEnd(aClass))->select(temp1 : Property | temp1.upper.<>(1).and(temp1.isOrdered))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "ownedAttribute",
      "isOrdered",
      "upper"
    ]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "aProperty.upper.<>(1)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["upper"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1,
      "=": 1
    },
    "body": "aProperty.association.oclIsUndefined().not().and(getAssociationOtherEnd(aProperty).upper.=(1))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "association",
      "upper"
    ]
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1,
      "=": 1
    },
    "body": "aProperty.association.oclIsUndefined().not().and(getAssociationOtherEnd(aProperty).upper.=(1))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "association",
      "upper"
    ]
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "oclIsKindOf": 1,
      "and": 1,
      "oclAsType": 1,
      "=": 1
    },
    "body": "aProperty.owner.oclIsKindOf(uml::Association).and(aProperty.owner.oclAsType(uml::Association).navigableOwnedEnd->size().=(2))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "navigableOwnedEnd",
      "owner"
    ]
  },
  {
    "operations": {},
    "body": "getAssociationOtherEnd(aProperty).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "<>": 1,
      "not": 1,
      "and": 3,
      "-": 1,
      "=": 2,
      ">": 1
    },
    "body": "aProperty.lower.>(0).and(aProperty.upper.<>(1.-())).and(aProperty.lower.=(1).and(aProperty.upper.=(1)).not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 9,
      "VariableExpImpl": 4,
      "IntegerLiteralExpImpl": 4,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "lower",
      "upper"
    ]
  },
  {
    "operations": {},
    "body": "aProperty.lower",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["lower"]
  },
  {
    "operations": {},
    "body": "aProperty.upper",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["upper"]
  },
  {
    "operations": {
      "and": 1,
      "=": 1,
      "-": 1,
      ">": 1
    },
    "body": "aProperty.lower.>(0).and(aProperty.upper.=(1.-()))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 4,
      "IntegerLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "lower",
      "upper"
    ]
  },
  {
    "operations": {},
    "body": "aProperty.lower",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["lower"]
  },
  {
    "operations": {
      "and": 1,
      "=": 1,
      ">": 1
    },
    "body": "aProperty.lower.=(0).and(aProperty.upper.>(1))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "IntegerLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "lower",
      "upper"
    ]
  },
  {
    "operations": {},
    "body": "aProperty.upper",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["upper"]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "oclIsKindOf": 1,
      "and": 1,
      "oclAsType": 1,
      "=": 1
    },
    "body": "aProperty.owner.oclIsKindOf(uml::Association).and(aProperty.owner.oclAsType(uml::Association).navigableOwnedEnd->size().=(2))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 5,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "navigableOwnedEnd",
      "owner"
    ]
  },
  {
    "operations": {
      "toLowerFirst": 1,
      "startsWith": 1
    },
    "body": "aProperty.association.name.startsWith(aProperty.type.name.toLowerFirst())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "association",
      "name",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "getAssociationOtherEnd(aProperty).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "<>": 1,
      "oclAsType": 1,
      "first": 1,
      "asSequence": 1
    },
    "body": "aProperty.association.member->asSequence()->select(temp1 : NamedElement | temp1.name.<>(aProperty.name))->first().oclAsType(uml::Property)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "member",
      "association",
      "name"
    ]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "getOutgoingNavigableOwnedEnd(aClass)->size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"replaceAll": 1},
    "body": "self.replaceAll('\"\"', '\", \"')",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"asSequence": 1},
    "body": "getOutgoingNavigableOwnedEnd(aClass)->asSequence()->sortedBy(temp1 : Property | temp1.name)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toUpper": 1,
      "concat": 1
    },
    "body": "truncateString('SEQ_'.concat(genName(aClass)),30).toUpper()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  }
]
