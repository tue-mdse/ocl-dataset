[
  {
    "operations": {},
    "body": "specification",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "specification::TestType::ui",
    "type": "TemplateInvocationArgument",
    "constructs": {"EnumLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "specification",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "specification::TestType::unit",
    "type": "TemplateInvocationArgument",
    "constructs": {"EnumLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "specification",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "specification::TestType::plugin",
    "type": "TemplateInvocationArgument",
    "constructs": {"EnumLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "specification",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"asSet": 1},
    "body": "specification.automationLayer.context->asSet()",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "automationLayer",
      "context"
    ]
  },
  {
    "operations": {},
    "body": "contxt",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "specification",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "type",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "getTestTypeFeatures(specification,type)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "feature",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "type",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"+": 1},
    "body": "getCamelCaseName(specification).+('ManualTestSuite.txt')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "getTestTypeFeatures(specification,specification::TestType::manual)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "feature.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getTestTypeStories(feature,specification::TestType::manual)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "story.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getTestTypeScenarios(story,specification::TestType::manual)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "scenario.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "scenario.given",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["given"]
  },
  {
    "operations": {},
    "body": "given.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "scenario.when",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["when"]
  },
  {
    "operations": {},
    "body": "when.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "scenario.then",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["then"]
  },
  {
    "operations": {},
    "body": "_then.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  }
]
