[
  {
    "operations": {
      "not": 1,
      "and": 1
    },
    "body": "isStructure(self).and(isRedefined(self).not())",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "and": 1,
      "notEmpty": 1
    },
    "body": "declaredVars(self)->notEmpty().and(declaredVars(self)->forAll(temp1 : Property | temp1.isStatic))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isStatic"]
  },
  {
    "operations": {},
    "body": "e",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"notEmpty": 1},
    "body": "declaredVars(self)->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"sep": 1},
    "body": "declaredVars(self)->collect(temp1 : Property | commonGen(temp1))->sep(', ')",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"and": 1},
    "body": "isStructure(self).and(isRedefined(self))",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "trim": 1,
      "size": 1,
      ">": 1,
      "first": 1
    },
    "body": "getComment(redefinee(self)->first()).trim().size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"first": 1},
    "body": "getComment(redefinee(self)->first())",
    "type": "QueryInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "e",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"sep": 1},
    "body": "redefinee(self)->collect(temp1 : Classifier | temp1.name)->sep(', ')",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"eContents": 1},
    "body": "e.eContents(uml::Property)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasComment(property)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "formatInLine(getComment(property)).concat('\n')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "property",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'C'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"notEmpty": 1},
    "body": "getAnnotation(e,'struct')->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"notEmpty": 1},
    "body": "getAnnotation(e,'union')->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  }
]
