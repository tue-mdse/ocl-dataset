[
  {
    "operations": {
      "<>": 1,
      "not": 1,
      "and": 1,
      "+": 3
    },
    "body": "if pkg.<>(null).and(hasStereotype(self,C_Cpp::CppRoot).not()) then getFullPath(self).+('/Pkg_').+(pkg.name).+('.h') else null endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 6,
      "NullLiteralExpImpl": 2,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 2,
      "TypeExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "cppClassAllIncludes(class,includedClassifiers(self))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "cppClassAllIncludes(class,getTypesViaDependencies(self))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "flatten": 1,
      "<>": 2,
      "not": 1,
      "or": 2,
      "oclIsKindOf": 3,
      "and": 2,
      "oclAsType": 1,
      "=": 1
    },
    "body": "list->collect(cl : Classifier | if cl.<>(class).and(hasStereotype(self,C_Cpp::NoCodeGen).not()).or(hasStereotype(self,C_Cpp::External)) then if cl.oclIsKindOf(uml::Enumeration).or(cl.oclIsKindOf(uml::PrimitiveType)) then if cl.owner.<>(null).and(cl.owner.oclIsKindOf(uml::Package)) then cppOwnerPackageIncludePath(cl.owner.oclAsType(uml::Package)) else null endif else cppClassIncludes(cl) endif else null endif)->flatten()->reject(str : OclAny | str.=(null))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 12,
      "OperationCallExpImpl": 13,
      "NullLiteralExpImpl": 4,
      "QueryInvocationSpec": 4,
      "TypeExpImpl": 6,
      "IfExpImpl": 3,
      "PropertyCallExpImpl": 3
    },
    "properties": ["owner"]
  }
]
