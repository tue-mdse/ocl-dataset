[
  {
    "operations": {"oclIsKindOf": 1},
    "body": "self.oclIsKindOf(uml::Profile)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsKindOf": 1
    },
    "body": "self.oclIsKindOf(uml::Profile).not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 3
    },
    "body": "getPackageName(aPackage).concat('/impl/').concat(aPackage.name.toUpperFirst()).concat('PackageImpl.hpp')",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aPackage",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'MetaModelPackageImpl'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "or": 2,
      "=": 3
    },
    "body": "aPackage.name.=('UML').or(aPackage.name.=('Ecore')).or(aPackage.name.=('PrimitiveType'))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 3,
      "StringLiteralExpImpl": 3,
      "PropertyCallExpImpl": 3
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "aPackage.name.concat('Package').toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aPackage",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "aPackage.name.concat('Package').toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"oclIsKindOf": 1},
    "body": "aPackage.oclIsKindOf(uml::Profile)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aPackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "aPackage.name.toUpperFirst().concat('PackageImpl')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aPackage",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "aPackage.name.toUpperFirst().concat('Package')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "aPackage.name.toUpperFirst().concat('Package')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "aPackage.name.toUpperFirst().concat('PackageImpl')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "aPackage.name.toUpperFirst().concat('PackageImpl')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "filter": 2,
      "allOwnedElements": 2,
      "-": 1
    },
    "body": "aPackage.allOwnedElements()->filter(uml::NamedElement)->-(aPackage.allOwnedElements()->filter(uml::ValueSpecification))->sortedBy(temp1 : NamedElement | myQualifiedName(temp1))->collect(temp2 : NamedElement | generateGetter(temp2,true))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 4,
      "TemplateInvocationSpec": 1,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 2,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "filter": 1,
      "allOwnedElements": 1
    },
    "body": "aPackage.allOwnedElements()->filter(uml::NamedElement)->sortedBy(temp1 : NamedElement | myQualifiedName(temp1))->collect(temp2 : NamedElement | generatePrivatePackageMember(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "TemplateInvocationSpec": 1,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "aPackage.name.concat('Package').toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aPackage",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'MetaModelPackageImpl'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  }
]
