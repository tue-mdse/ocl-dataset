[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'PetStore_rendering.html'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "model.classes",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["classes"]
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "classHasAttributeAssociation(c)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "c.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "c.attributes",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["attributes"]
  },
  {
    "operations": {"not": 1},
    "body": "a.type.doesReferenceModelClass.not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "type",
      "doesReferenceModelClass"
    ]
  },
  {
    "operations": {},
    "body": "a.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "a.type.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "c.attributes",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["attributes"]
  },
  {
    "operations": {
      "not": 1,
      "and": 1
    },
    "body": "a.type.isCollection.not().and(a.type.doesReferenceModelClass)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "type",
      "isCollection",
      "doesReferenceModelClass"
    ]
  },
  {
    "operations": {
      "not": 1,
      "and": 2
    },
    "body": "a.type.isCollection.and(a.type.doesReferenceModelClass).and(isRelationTreated(c,a.type.name).not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "name",
      "type",
      "isCollection",
      "doesReferenceModelClass"
    ]
  },
  {
    "operations": {},
    "body": "c.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "isManyToManyRelation(c,a.type.name)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "a.type.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "findClassByName(c,a.type.name)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "c.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "a.type.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "findClassByName(c,a.type.name)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {
      "eContainer": 1,
      "=": 1
    },
    "body": "c.eContainer(Data::Model).classes->any(c : Class | c.name.=(targetClass))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "classes",
      "name"
    ]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "c.attributes->select(a : Attribute | a.type.doesReferenceModelClass)->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "type",
      "doesReferenceModelClass",
      "attributes"
    ]
  },
  {
    "operations": {
      "eContainer": 1,
      "size": 1,
      "=": 2,
      ">": 1
    },
    "body": "c.eContainer(Data::Model).classes->any(c : Class | c.name.=(targetClass)).attributes->select(a : Attribute | a.type.name.=(c.name))->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 5,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "name",
      "type",
      "classes",
      "name",
      "attributes"
    ]
  },
  {
    "operations": {
      "eContainer": 2,
      "<": 1,
      "indexOf": 2
    },
    "body": "c.eContainer(Data::Model).classes->indexOf(c).<(c.eContainer(Data::Model).classes->indexOf(findClassByName(c,targetClass)))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 5,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["classes"]
  }
]
