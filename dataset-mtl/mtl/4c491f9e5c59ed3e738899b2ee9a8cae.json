[
  {
    "operations": {
      "not": 1,
      "or": 2,
      "oclIsTypeOf": 3
    },
    "body": "seq->select(t : Type | t.oclIsTypeOf(uml::Class).or(t.oclIsTypeOf(uml::UseCase)).or(t.oclIsTypeOf(uml::StateMachine)).not())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 4,
      "TypeExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {
      "filter": 1,
      "not": 1,
      "and": 1,
      "isEmpty": 1,
      "=": 1,
      "asSequence": 1
    },
    "body": "p.ownedElement->filter(uml::Type)->asSequence()->select(t : Type | Set {t.name}->isEmpty().not().and(t.visibility.=(uml::VisibilityKind::public)))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 6,
      "EnumLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "visibility",
      "ownedElement"
    ]
  },
  {
    "operations": {
      "filter": 1,
      "not": 1,
      "and": 1,
      "isEmpty": 1,
      "=": 1,
      "asSequence": 1
    },
    "body": "p.ownedElement->filter(uml::Type)->asSequence()->select(t : Type | Set {t.name}->isEmpty().not().and(t.visibility.=(uml::VisibilityKind::private)))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 6,
      "EnumLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "visibility",
      "ownedElement"
    ]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "orderByContents(seq)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsTypeOf": 1,
      "and": 2,
      "oclAsType": 2
    },
    "body": "d.oclIsTypeOf(uml::Enumeration).and(hasNoConstant(d.oclAsType(uml::Enumeration))).and(d.oclAsType(uml::Enumeration).isAbstract.not())",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 6,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 3,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isAbstract"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsKindOf": 1,
      "and": 2,
      "oclAsType": 2
    },
    "body": "d.oclIsKindOf(uml::DataType).and(isTypedef(d.oclAsType(uml::DataType))).and(d.oclAsType(uml::DataType).isAbstract.not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 3,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isAbstract"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.oclAsType(uml::DataType)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 2,
      "oclIsKindOf": 1,
      "and": 3,
      "isEmpty": 1,
      "oclAsType": 3
    },
    "body": "d.oclIsKindOf(uml::DataType).and(isNotTypedef(d.oclAsType(uml::DataType))).and(d.oclAsType(uml::DataType).ownedAttribute->isEmpty().not()).and(d.oclAsType(uml::DataType).isAbstract.not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 10,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 4,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "ownedAttribute",
      "isAbstract"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.oclAsType(uml::DataType)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "d.oclAsType(uml::Enumeration)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "seq",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "seq",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  }
]
