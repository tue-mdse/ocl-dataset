[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"+": 2},
    "body": "'/'.+(anAnnotationStack.hasCorePSM.name).+('Client/js/app.js')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.hasCorePSM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.hasCorePSM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.hasCorePSM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.hasCorePSM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.hasCorePSM.hasJavaRCManager",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasJavaRCManager",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "topLayer(anAnnotationStack)->collect(temp1 : JavaResourceModelManager | temp1.parentName)->includes(p.parentName)",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "parentName",
      "parentName"
    ]
  },
  {
    "operations": {"toLower": 1},
    "body": "p.parentName.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {
      "<>": 1,
      "size": 1
    },
    "body": "topLayer(anAnnotationStack)->size().<>(1)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {"toLower": 1},
    "body": "p.parentName.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {
      "<>": 1,
      "size": 1
    },
    "body": "topLayer(anAnnotationStack)->size().<>(1)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {
      "excludes": 1,
      "size": 1,
      "and": 1,
      "=": 1
    },
    "body": "setIds(p,anAnnotationStack)->size().=(2).and(topLayer(anAnnotationStack)->collect(temp1 : JavaResourceModelManager | temp1.parentName)->excludes(p.parentName))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 5,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "parentName",
      "parentName"
    ]
  },
  {
    "operations": {"substituteAll": 2},
    "body": "p.controllerURI.substituteAll('{', ':').substituteAll('}', '')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 4,
      "PropertyCallExpImpl": 1
    },
    "properties": ["controllerURI"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {"substituteAll": 2},
    "body": "p.controllerURI.substituteAll('{', ':').substituteAll('}', '')",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 4,
      "PropertyCallExpImpl": 1
    },
    "properties": ["controllerURI"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "setIds(p,anAnnotationStack)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "size": 1,
      "and": 1,
      "=": 1,
      ">": 1
    },
    "body": "c.=(p.parentName).not().and(setIds(p,anAnnotationStack)->size().>(2))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 5,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "c",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "p.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {"=": 1},
    "body": "anAnnotationStack.bHasAuthenticationAnnotation.=(true)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["bHasAuthenticationAnnotation"]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "topLayer(anAnnotationStack)->size().>(1)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "anAnnotationStack.bHasAuthenticationAnnotation.=(true)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["bHasAuthenticationAnnotation"]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "topLayer(anAnnotationStack)->size().>(1)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "topLayer(anAnnotationStack)->collect(temp1 : JavaResourceModelManager | temp1.parentName)",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {
      "including": 1,
      "asOrderedSet": 3,
      "intersection": 1,
      "substitute": 1
    },
    "body": "p.JavaRCManagerHasHTTPActivity->collect(temp1 : HTTPActivity | temp1.hasHTTPActivityParameter)->collect(temp2 : HTTPActivityFunctionParameter | temp2.name)->collect(temp3 : String | temp3.substitute('Id', ''))->asOrderedSet()->intersection(anAnnotationStack.hasCorePSM.hasJavaRCManager->collect(temp4 : JavaResourceControllerManager | temp4.parentName)->asOrderedSet())->including(p.parentName)->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 7,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 7
    },
    "properties": [
      "name",
      "hasHTTPActivityParameter",
      "parentName",
      "JavaRCManagerHasHTTPActivity",
      "hasJavaRCManager",
      "hasCorePSM"
    ]
  },
  {
    "operations": {
      "asOrderedSet": 2,
      "intersection": 1,
      "-": 1
    },
    "body": "anAnnotationStack.hasCorePSM.hasJavaRMManager->-(anAnnotationStack.hasCorePSM.hasJavaRMManager->intersection(anAnnotationStack.hasCorePSM.hasJavaRModel->collect(temp1 : JavaResourceModel | temp1.hasRelatedJavaRMManager)->asOrderedSet()))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 4,
      "PropertyCallExpImpl": 7
    },
    "properties": [
      "hasRelatedJavaRMManager",
      "hasJavaRMManager",
      "hasJavaRModel",
      "hasCorePSM"
    ]
  }
]
