[
  {
    "operations": {
      "size": 1,
      ">": 1,
      "sep": 1
    },
    "body": "parts->select(temp1 : String | temp1.size().>(0))->sep('.')",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "toJavaName(Sequence {aGenPackage.basePackage, aGenPackage.ecorePackage.name, aGenPackage.utilityPackageSuffix})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "name",
      "ecorePackage",
      "basePackage",
      "utilityPackageSuffix"
    ]
  },
  {
    "operations": {},
    "body": "toJavaName(Sequence {aGenPackage.basePackage, aGenPackage.ecorePackage.name, aGenPackage.metaDataPackageSuffix})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "name",
      "ecorePackage",
      "basePackage",
      "metaDataPackageSuffix"
    ]
  },
  {
    "operations": {},
    "body": "toJavaName(Sequence {aGenPackage.basePackage, aGenPackage.ecorePackage.name, aGenPackage.interfacePackageSuffix})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "name",
      "ecorePackage",
      "basePackage",
      "interfacePackageSuffix"
    ]
  },
  {
    "operations": {},
    "body": "allEClasses(self.ecorePackage)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ecorePackage"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsTypeOf": 1,
      "and": 1,
      "union": 1,
      "asSet": 1,
      "oclAsType": 1
    },
    "body": "self.eClassifiers->select(temp1 : EClassifier | temp1.oclIsTypeOf(ecore::EClass).and(temp1.oclAsType(ecore::EClass).abstract.not()))->union(self.eSubpackages->collect(temp2 : EPackage | allEClasses(temp2))->asSet())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 5,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "eSubpackages",
      "abstract",
      "eClassifiers"
    ]
  },
  {
    "operations": {
      "asSet": 1,
      "oclAsType": 1
    },
    "body": "eClass.eAllReferences->select(temp1 : EReference | temp1.containment)->collect(temp2 : EReference | temp2.eType.oclAsType(ecore::EClass))->asSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "eAllReferences",
      "eType",
      "containment"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "allEClasses(eClass.ePackage)->select(temp1 : EClass | temp1.eAllSuperTypes->includes(eClass))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "ePackage",
      "eAllSuperTypes"
    ]
  },
  {
    "operations": {
      "not": 1,
      "including": 1
    },
    "body": "allSubEClasses(self)->including(eClass)->select(temp1 : EClass | temp1.abstract.not())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["abstract"]
  },
  {
    "operations": {
      "flatten": 1,
      "asSet": 1
    },
    "body": "allReferencedEClasses(self)->collect(temp1 : EClass | allConcreteEClasses(temp1))->flatten()->asSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsTypeOf": 1,
      "and": 1
    },
    "body": "self.oclIsTypeOf(ecore::EAttribute).and(self.many.not())",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["many"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsTypeOf": 1,
      "and": 1
    },
    "body": "self.oclIsTypeOf(ecore::EReference).and(self.many.not())",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["many"]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "and": 1
    },
    "body": "self.oclIsTypeOf(ecore::EAttribute).and(self.many)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["many"]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "and": 1
    },
    "body": "self.oclIsTypeOf(ecore::EReference).and(self.many)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["many"]
  },
  {
    "operations": {"includes": 1},
    "body": "Set {'EBoolean', 'EBooleanObject', 'EChar', 'ECharacterObject', 'EByte', 'EByteObject', 'EShort', 'EShortObject', 'EInt', 'EIntegerObject', 'ELong', 'ELongObject', 'EFloat', 'EFloatObject', 'EDouble', 'EDoubleObject', 'EString'}->includes(eFeature.eType.name)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 17,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eType",
      "name"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "Set {'EBoolean', 'EBooleanObject', 'EInt', 'EIntegerObject', 'ELong', 'ELongObject', 'EFloat', 'EFloatObject', 'EDouble', 'EDoubleObject', 'EString'}->includes(eFeature.eType.name)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 11,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eType",
      "name"
    ]
  },
  {
    "operations": {"toLowerFirst": 1},
    "body": "eFeature.name.toLowerFirst()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "eFeature.name.toUpperFirst()",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "eFeature.eType.name",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eType",
      "name"
    ]
  },
  {
    "operations": {"toLowerFirst": 1},
    "body": "eFeature.eType.name.toLowerFirst()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eType",
      "name"
    ]
  },
  {
    "operations": {"+": 1},
    "body": "'num'.+(Var(self))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"+": 1},
    "body": "'idx'.+(Var(self))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"+": 1},
    "body": "'cur'.+(Type(self))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "eClass.name",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"toLowerFirst": 1},
    "body": "eClass.name.toLowerFirst()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "'get'.concat(eFeature.name.toUpperFirst())",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "'set'.concat(eFeature.name.toUpperFirst())",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"+": 1},
    "body": "'Literals.'.+(emfUpperName(self.name))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"+": 2},
    "body": "genPackage.prefix.+('Package.').+(literal(eClassifier))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {"+": 3},
    "body": "'Literals.'.+(emfUpperName(self.eContainingClass.name)).+('__').+(emfUpperName(self.name))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "eContainingClass"
    ]
  },
  {
    "operations": {"+": 2},
    "body": "genPackage.prefix.+('Package.').+(literal(eFeature))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.emf.codegen.util.CodeGenUtil', 'upperName(java.lang.String)', Sequence {str})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"+": 2},
    "body": "genPackage.prefix.+('Protos.').+(eClassifier.name)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "prefix"
    ]
  }
]
