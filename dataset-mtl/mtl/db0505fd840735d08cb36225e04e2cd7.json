[
  {
    "operations": {"stringValue": 1},
    "body": "self.stringValue()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "at": 1,
      "indexOf": 1
    },
    "body": "self.body->at(self.language->indexOf('C'))",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "body",
      "language"
    ]
  },
  {
    "operations": {
      "eContents": 1,
      "isEmpty": 1
    },
    "body": "self.eContents(uml::Activity)->isEmpty()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "at": 1,
      "indexOf": 1
    },
    "body": "self.body->at(self.language->indexOf('C'))",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "language",
      "body"
    ]
  },
  {
    "operations": {
      "eContents": 1,
      "notEmpty": 1
    },
    "body": "self.eContents(uml::Activity)->notEmpty()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "filter": 1,
      "eContents": 1,
      "=": 1
    },
    "body": "self.eContents(uml::Activity)->any(temp1 : Activity | temp1.name.=(behavior.name)).node->filter(uml::InitialNode)->collect(temp2 : InitialNode | gen(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "node"
    ]
  }
]
