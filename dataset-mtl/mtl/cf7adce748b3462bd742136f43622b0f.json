[
  {
    "operations": {"oclIsKindOf": 1},
    "body": "self.oclIsKindOf(uml::Profile)",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsKindOf": 1
    },
    "body": "self.oclIsKindOf(uml::Profile).not()",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"concat": 3},
    "body": "getPackageName(aPackage).concat('/').concat(packageName).concat('.hpp')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aPackage",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'MetaModelPackage'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"oclIsKindOf": 1},
    "body": "aPackage.oclIsKindOf(uml::Profile)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aPackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "filter": 2,
      "asOrderedSet": 1,
      "-": 1
    },
    "body": "aPackage.ownedMember->filter(uml::Class)->-(aPackage.ownedMember->filter(uml::Activity))->asOrderedSet()->sortedBy(temp1 : Class | temp1.name)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 3,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "ownedMember",
      "name"
    ]
  },
  {
    "operations": {},
    "body": "elements.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "allOwnedElements": 1,
      "asOrderedSet": 1,
      "eClass": 1
    },
    "body": "aPackage.allOwnedElements()->collect(temp1 : Element | temp1.eClass())->asOrderedSet()->sortedBy(temp2 : EClass | temp2.name)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "nE.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aPackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aPackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aPackage",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "filter": 2,
      "allOwnedElements": 2,
      "asOrderedSet": 1,
      "-": 1
    },
    "body": "aPackage.allOwnedElements()->filter(uml::NamedElement)->-(aPackage.allOwnedElements()->filter(uml::ValueSpecification))->asOrderedSet()->sortedBy(temp1 : NamedElement | myQualifiedName(temp1))->collect(temp2 : NamedElement | generateGetter(temp2,false))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 6,
      "TemplateInvocationSpec": 1,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 2,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aPackage",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'MetaModelPackage'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  }
]
