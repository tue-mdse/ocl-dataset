[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "d.name",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "d.supplier",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["supplier"]
  },
  {
    "operations": {"getAllAttributes": 1},
    "body": "c.getAllAttributes()",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "getSources(a,a.default,a.type.name)->collect(temp1 : OclAny | temp1.toString())",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "default",
      "name",
      "type"
    ]
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.acceleo.module.services.UmlServices', 'getSources(org.eclipse.uml2.uml.Element, java.lang.String, java.lang.String)', Sequence {arg0, arg1, arg2})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  }
]
