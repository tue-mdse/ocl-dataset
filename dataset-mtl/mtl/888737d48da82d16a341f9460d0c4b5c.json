[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "proc.name.concat('.pdl1')",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "proc.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getWDs(proc.processElements)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["processElements"]
  },
  {
    "operations": {},
    "body": "wd.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getWSs(proc.processElements)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["processElements"]
  },
  {
    "operations": {},
    "body": "ws.predecessor.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "predecessor"
    ]
  },
  {
    "operations": {},
    "body": "ws",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "ws.successor.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "successor"
    ]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "asOrderedSet": 1,
      "oclAsType": 1
    },
    "body": "elements->select(e : ProcessElement | e.oclIsTypeOf(simplepdl::WorkDefinition))->collect(e : ProcessElement | e.oclAsType(simplepdl::WorkDefinition))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "asOrderedSet": 1,
      "oclAsType": 1
    },
    "body": "elements->select(e : ProcessElement | e.oclIsTypeOf(simplepdl::WorkSequence))->collect(e : ProcessElement | e.oclAsType(simplepdl::WorkSequence))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "ws.linkType.=(simplepdl::WorkSequenceType::startToStart)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["linkType"]
  },
  {
    "operations": {"=": 1},
    "body": "ws.linkType.=(simplepdl::WorkSequenceType::startToFinish)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["linkType"]
  },
  {
    "operations": {"=": 1},
    "body": "ws.linkType.=(simplepdl::WorkSequenceType::finishToStart)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["linkType"]
  },
  {
    "operations": {"=": 1},
    "body": "ws.linkType.=(simplepdl::WorkSequenceType::finishToFinish)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["linkType"]
  }
]
