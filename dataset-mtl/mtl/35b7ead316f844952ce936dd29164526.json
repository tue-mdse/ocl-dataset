[
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"isEmpty": 1},
    "body": "IfNDefConditionAnnotation(c)->isEmpty()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"first": 1},
    "body": "IfNDefConditionAnnotation(c)->first()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toUpper": 1,
      "replaceAll": 1
    },
    "body": "c.name.toUpper().replaceAll('-', '_')",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "eContainer": 1,
      "<>": 1,
      "and": 1,
      "=": 1
    },
    "body": "self.type.name.=('Macro').and(self.name.<>(hheaderDefine(self.eContainer(uml::Classifier))))",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "TemplateInvocationSpec": 1,
      "TypeExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "e.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"trim": 1},
    "body": "serialize(e.defaultValue).trim()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["defaultValue"]
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "and": 1,
      "=": 2
    },
    "body": "self.type.name.=('Macro').and(self.name.=(hheaderDefine(self.eContainer(uml::Classifier))))",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "TemplateInvocationSpec": 1,
      "TypeExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "type"
    ]
  }
]
