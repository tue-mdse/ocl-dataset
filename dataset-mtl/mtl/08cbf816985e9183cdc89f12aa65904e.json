[
  {
    "operations": {},
    "body": "anAnnotationStack.hasCorePSM.hasJavaRModel",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasJavaRModel",
      "hasCorePSM"
    ]
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "toLowerCase": 2,
      "+": 8
    },
    "body": "anAnnotationStack.hasCorePSM.name.+(strDBMigrator).+('/src/main/java/eu/fp7/scase/').+(anAnnotationStack.hasCorePSM.name.toLowerCase()).+('/').+(jRModel.parentName.toLowerCase()).+('/').+(jRModel.name).+('.java')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 10,
      "VariableExpImpl": 5,
      "StringLiteralExpImpl": 4,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "parentName",
      "name",
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.hasCorePSM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "anAnnotationStack.hasCorePSM.name.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "jRModel.parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "jRModel.hasRelatedJavaRMManager->size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["hasRelatedJavaRMManager"]
  },
  {
    "operations": {
      "<>": 1,
      "at": 3,
      "or": 1,
      "and": 3,
      "index": 3,
      "=": 4,
      "-": 3
    },
    "body": "hasNonUniqueNewProperty(anAnnotationStack,jRModel).or(jRModel.JavaRModelHasProperty->select(property : PSMComponentProperty | property.PropertyHasHibernateAnnotation->collect(temp1 : HibernateAnnotation | temp1.HibernateAnnotationText)->at(1).index('@Transient').=(1.-()).and(property.PropertyHasHibernateAnnotation->collect(temp2 : HibernateAnnotation | temp2.HibernateAnnotationText)->at(1).index('@OneToMany').=(1.-())).and(property.PropertyHasHibernateAnnotation->collect(temp3 : HibernateAnnotation | temp3.HibernateAnnotationText)->at(1).index('@ManyToOne').=(1.-())).and(property.name.<>('linklist')))->exists(property : PSMComponentProperty | property.bIsUnique.=(false)))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 5,
      "VariableExpImpl": 11,
      "OperationCallExpImpl": 18,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 6,
      "StringLiteralExpImpl": 4,
      "PropertyCallExpImpl": 9,
      "BooleanLiteralExpImpl": 1
    },
    "properties": [
      "PropertyHasHibernateAnnotation",
      "name",
      "JavaRModelHasProperty",
      "bIsUnique",
      "HibernateAnnotationText"
    ]
  },
  {
    "operations": {
      "<>": 1,
      "at": 1,
      "or": 1,
      "size": 1,
      "index": 1,
      "-": 1,
      "=": 1,
      ">": 1
    },
    "body": "getAuthorizationSubjectModel(anAnnotationStack).=(jRModel).or(jRModel.JavaRModelHasProperty->select(property : PSMComponentProperty | property.PropertyHasHibernateAnnotation->collect(temp1 : HibernateAnnotation | temp1.HibernateAnnotationText)->at(1).index('@OneToMany').<>(1.-()))->size().>(0))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 8,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 3,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "PropertyHasHibernateAnnotation",
      "JavaRModelHasProperty",
      "HibernateAnnotationText"
    ]
  },
  {
    "operations": {
      "at": 2,
      "excludes": 1,
      "size": 1,
      "and": 2,
      "index": 2,
      "-": 2,
      "=": 3,
      ">": 1
    },
    "body": "jRModel.JavaRModelHasProperty->select(property : PSMComponentProperty | property.bIsUnique.=(false))->select(property : PSMComponentProperty | property.PropertyHasHibernateAnnotation->collect(temp1 : HibernateAnnotation | temp1.HibernateAnnotationText)->excludes('@Transient').and(property.PropertyHasHibernateAnnotation->collect(temp2 : HibernateAnnotation | temp2.HibernateAnnotationText)->at(1).index('@OneToMany').=(1.-())).and(property.PropertyHasHibernateAnnotation->collect(temp3 : HibernateAnnotation | temp3.HibernateAnnotationText)->at(1).index('@ManyToOne').=(1.-())))->size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 5,
      "VariableExpImpl": 8,
      "OperationCallExpImpl": 14,
      "IntegerLiteralExpImpl": 5,
      "StringLiteralExpImpl": 3,
      "PropertyCallExpImpl": 8,
      "BooleanLiteralExpImpl": 1
    },
    "properties": [
      "PropertyHasHibernateAnnotation",
      "JavaRModelHasProperty",
      "bIsUnique",
      "HibernateAnnotationText"
    ]
  },
  {
    "operations": {
      "at": 2,
      "or": 1,
      "excludes": 1,
      "size": 2,
      "and": 2,
      "index": 2,
      "=": 3,
      "-": 2,
      ">": 2
    },
    "body": "jRModel.hasRelatedJavaRMManager->size().>(0).or(jRModel.JavaRModelHasProperty->select(property : PSMComponentProperty | property.bIsUnique.=(false))->select(property : PSMComponentProperty | property.PropertyHasHibernateAnnotation->collect(temp1 : HibernateAnnotation | temp1.HibernateAnnotationText)->excludes('@Transient').and(property.PropertyHasHibernateAnnotation->collect(temp2 : HibernateAnnotation | temp2.HibernateAnnotationText)->at(1).index('@OneToMany').=(1.-())).and(property.PropertyHasHibernateAnnotation->collect(temp3 : HibernateAnnotation | temp3.HibernateAnnotationText)->at(1).index('@ManyToOne').=(1.-())))->size().>(0))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 5,
      "OperationCallExpImpl": 17,
      "VariableExpImpl": 9,
      "IntegerLiteralExpImpl": 6,
      "StringLiteralExpImpl": 3,
      "PropertyCallExpImpl": 9,
      "BooleanLiteralExpImpl": 1
    },
    "properties": [
      "PropertyHasHibernateAnnotation",
      "JavaRModelHasProperty",
      "bIsUnique",
      "HibernateAnnotationText",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {
      "<>": 2,
      "or": 3,
      "at": 2,
      "size": 1,
      "index": 2,
      "-": 2,
      ">": 1
    },
    "body": "anAnnotationStack.bHasAuthorizationLayer.or(hasNonUniqueNewProperty(anAnnotationStack,jRModel)).or(jRModel.JavaRModelHasProperty->select(property : PSMComponentProperty | property.PropertyHasHibernateAnnotation->collect(temp1 : HibernateAnnotation | temp1.HibernateAnnotationText)->at(1).index('@ElementCollection').<>(1.-()).or(property.PropertyHasHibernateAnnotation->collect(temp2 : HibernateAnnotation | temp2.HibernateAnnotationText)->at(1).index('@ManyToOne').<>(1.-())))->size().>(0))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "OperationCallExpImpl": 13,
      "VariableExpImpl": 8,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 5,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "bHasAuthorizationLayer",
      "PropertyHasHibernateAnnotation",
      "JavaRModelHasProperty",
      "HibernateAnnotationText"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "anAnnotationStack.hasCorePSM.name.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {},
    "body": "jRModel.hasRelatedJavaRMManager->collect(temp1 : JavaResourceModelManager | temp1.hasRelatedJavaRModel)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasRelatedJavaRModel",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {"<>": 1},
    "body": "jRRModel.<>(jRModel)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toLower": 1},
    "body": "anAnnotationStack.hasCorePSM.name.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "jRRModel.parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "jRRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"=": 1},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).=(jRModel)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "getTrackOwnershipResources(anAnnotationStack,jRModel)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"toLower": 1},
    "body": "anAnnotationStack.hasCorePSM.name.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "jRRModel.parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "jRRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasAuthorizationLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasAuthorizationLayer"]
  },
  {
    "operations": {"toLower": 1},
    "body": "anAnnotationStack.hasCorePSM.name.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.hasCorePSM.hasJavaRModel",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasJavaRModel",
      "hasCorePSM"
    ]
  },
  {
    "operations": {
      "<>": 1,
      "and": 1,
      "includes": 1
    },
    "body": "jPRModel.hasRelatedJavaRMManager->collect(temp1 : JavaResourceModelManager | temp1.hasRelatedJavaRModel)->includes(jRModel).and(jPRModel.<>(jRModel))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 3,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasRelatedJavaRModel",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {"toLower": 1},
    "body": "anAnnotationStack.hasCorePSM.name.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "jPRModel.parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasSearchLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasSearchLayer"]
  },
  {
    "operations": {},
    "body": "isSearchableResourceModel(jRModel,anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"toLower": 1},
    "body": "anAnnotationStack.hasCorePSM.name.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasExternalServiceLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasExternalServiceLayer"]
  },
  {
    "operations": {},
    "body": "hasExistentOutputDataModels(anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasExistingPersistenceCRUDModelAnnotations(anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "isExistingPersistentCRUDModel(jRModel,anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "jRModel.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasExternalServiceLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasExternalServiceLayer"]
  },
  {
    "operations": {},
    "body": "hasExistentOutputDataModels(anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasExistingPersistenceCRUDModelAnnotations(anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "isExistingPersistentCRUDModel(jRModel,anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"toLower": 1},
    "body": "jRModel.parentName.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasSearchLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasSearchLayer"]
  },
  {
    "operations": {},
    "body": "isSearchableResourceModel(jRModel,anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "jRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRModel.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "jRModel.JavaRModelHasProperty",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["JavaRModelHasProperty"]
  },
  {
    "operations": {"includes": 1},
    "body": "jRMProperty.PropertyHasHibernateAnnotation->collect(temp1 : HibernateAnnotation | temp1.HibernateAnnotationText)->includes('@Transient')",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "PropertyHasHibernateAnnotation",
      "HibernateAnnotationText"
    ]
  },
  {
    "operations": {},
    "body": "jRMProperty.PropertyHasHibernateAnnotation",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["PropertyHasHibernateAnnotation"]
  },
  {
    "operations": {},
    "body": "propertyHibernateAnnotation.HibernateAnnotationText",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["HibernateAnnotationText"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasSearchLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasSearchLayer"]
  },
  {
    "operations": {},
    "body": "isSearchableProperty(jRMProperty,anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "jRMProperty.bIsUnique.=(true)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["bIsUnique"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasSearchLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasSearchLayer"]
  },
  {
    "operations": {},
    "body": "isSearchableProperty(jRMProperty,anAnnotationStack)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('int')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "jRMProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('double')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('float')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('long')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('boolean')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "jRMProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('int')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "jRMProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('double')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('float')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('long')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('boolean')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "jRMProperty.type.equalsIgnoreCase('String')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "jRMProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "jRMProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "<>": 1,
      "at": 1,
      "index": 1,
      "-": 1
    },
    "body": "jRMProperty.PropertyHasHibernateAnnotation->collect(temp1 : HibernateAnnotation | temp1.HibernateAnnotationText)->at(1).index('@OneToMany').<>(1.-())",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 4,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "PropertyHasHibernateAnnotation",
      "HibernateAnnotationText"
    ]
  },
  {
    "operations": {
      "<>": 1,
      "at": 1,
      "index": 1,
      "-": 1
    },
    "body": "jRMProperty.PropertyHasHibernateAnnotation->collect(temp1 : HibernateAnnotation | temp1.HibernateAnnotationText)->at(1).index('@ManyToOne').<>(1.-())",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "PropertyHasHibernateAnnotation",
      "HibernateAnnotationText"
    ]
  },
  {
    "operations": {},
    "body": "jRMProperty.PropertyHasHibernateAnnotation",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["PropertyHasHibernateAnnotation"]
  },
  {
    "operations": {},
    "body": "propertyHibernateAnnotation.HibernateAnnotationText",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["HibernateAnnotationText"]
  },
  {
    "operations": {},
    "body": "jRMProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "jRMProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRMProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "anAnnotationStack.hasCorePSM.hasJavaRModel->select(javaPRModel : JavaResourceModel | javaPRModel.hasRelatedJavaRMManager->exists(temp1 : JavaResourceModelManager | temp1.hasRelatedJavaRModel.name.=(jRModel.name)))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "name",
      "hasRelatedJavaRModel",
      "hasJavaRModel",
      "hasCorePSM",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "jPRModel.parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "jRModel.parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "jRModel.parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {"includes": 1},
    "body": "jRModel.hasRelatedJavaRMManager->collect(temp1 : JavaResourceModelManager | temp1.hasRelatedJavaRModel)->includes(jRModel)",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasRelatedJavaRModel",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "jPRModel.parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "jRModel.hasRelatedJavaRMManager->collect(temp1 : JavaResourceModelManager | temp1.hasRelatedJavaRModel)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasRelatedJavaRModel",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {},
    "body": "jRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jCRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jCRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jCRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasAuthorizationLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasAuthorizationLayer"]
  },
  {
    "operations": {"=": 1},
    "body": "jRModel.=(getAuthorizationSubjectModel(anAnnotationStack))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "getTrackOwnershipResources(anAnnotationStack,getAuthorizationSubjectModel(anAnnotationStack))->exists(r : JavaResourceModel | r.=(jRModel))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "jRModel.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "rTracksOwnership(anAnnotationStack,jRModel)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"toLower": 1},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName.toLower()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getTrackOwnershipResources(anAnnotationStack,jRModel)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "jRModel.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getNewProperties(anAnnotationStack,jRModel)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aNewProperty.bIsUnique",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bIsUnique"]
  },
  {
    "operations": {},
    "body": "jRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"first": 1},
    "body": "jRModel.JavaRModelHasProperty->select(p : PSMComponentProperty | p.bIsPrimaryIdentifier)->first().name",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "JavaRModelHasProperty",
      "bIsPrimaryIdentifier"
    ]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRModel.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "aNewProperty.type.equalsIgnoreCase('int')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "aNewProperty.type.equalsIgnoreCase('double')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "aNewProperty.type.equalsIgnoreCase('int')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "aNewProperty.type.equalsIgnoreCase('double')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRModel.JavaRModelHasSetter",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["JavaRModelHasSetter"]
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "=": 1
    },
    "body": "javaSetterFunction.SetterFunctionHasJAXBAnnotation.oclIsUndefined().=(false)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["SetterFunctionHasJAXBAnnotation"]
  },
  {
    "operations": {
      "at": 1,
      "=": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name.=('linklist')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {},
    "body": "javaSetterFunction.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {
      "at": 1,
      "=": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).bIsUnique.=(false)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "bIsUnique"
    ]
  },
  {
    "operations": {},
    "body": "javaSetterFunction.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('int')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('double')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('float')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('long')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('boolean')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {},
    "body": "javaSetterFunction.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {
      "at": 2,
      "and": 1,
      "=": 2
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).bIsReturnParameter.=(false).and(javaSetterFunction.hasFunctionParameter->at(1).bIsUnique.=(false))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 2,
      "IntegerLiteralExpImpl": 2,
      "PropertyCallExpImpl": 4,
      "BooleanLiteralExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "bIsReturnParameter",
      "bIsUnique"
    ]
  },
  {
    "operations": {},
    "body": "javaSetterFunction.SetterFunctionHasJAXBAnnotation.JAXBAnnotationText",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "SetterFunctionHasJAXBAnnotation",
      "JAXBAnnotationText"
    ]
  },
  {
    "operations": {},
    "body": "javaSetterFunction.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('int')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('double')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('float')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('long')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaSetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('boolean')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaSetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"=": 1},
    "body": "anAnnotationStack.hasCorePSM.hasJavaRModel->select(javaPRModel : JavaResourceModel | javaPRModel.hasRelatedJavaRMManager->exists(temp1 : JavaResourceModelManager | temp1.hasRelatedJavaRModel.name.=(jRModel.name)))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "name",
      "hasRelatedJavaRModel",
      "hasJavaRModel",
      "hasCorePSM",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasAuthorizationLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasAuthorizationLayer"]
  },
  {
    "operations": {"=": 1},
    "body": "jRModel.=(getAuthorizationSubjectModel(anAnnotationStack))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "getTrackOwnershipResources(anAnnotationStack,getAuthorizationSubjectModel(anAnnotationStack))->exists(r : JavaResourceModel | r.=(jRModel))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "rTracksOwnership(anAnnotationStack,jRModel)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getTrackOwnershipResources(anAnnotationStack,jRModel)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getNewProperties(anAnnotationStack,jRModel)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aNewProperty.bIsUnique",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bIsUnique"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "aNewProperty.type.equalsIgnoreCase('int')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "aNewProperty.type.equalsIgnoreCase('double')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRModel.JavaRModelHasGetter",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["JavaRModelHasGetter"]
  },
  {
    "operations": {
      "at": 1,
      "=": 1
    },
    "body": "javaGetterFunction.hasFunctionParameter->at(1).name.=('linklist')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {
      "contains": 1,
      "at": 2,
      "and": 1,
      "=": 2
    },
    "body": "javaGetterFunction.hasFunctionParameter->at(1).bIsReturnParameter.=(true).and(javaGetterFunction.hasFunctionParameter->at(1).type.contains('Java').=(false))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 2,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 2,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "hasFunctionParameter",
      "type",
      "bIsReturnParameter"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaGetterFunction.hasFunctionParameter->at(1).type",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "javaGetterFunction.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"at": 1},
    "body": "javaGetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {
      "at": 1,
      "=": 1
    },
    "body": "javaGetterFunction.hasFunctionParameter->at(1).bIsUnique.=(false)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "bIsUnique"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaGetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('int')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaGetterFunction.hasFunctionParameter->at(1).type",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaGetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('double')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaGetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('float')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaGetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('long')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {
      "at": 1,
      "equalsIgnoreCase": 1
    },
    "body": "javaGetterFunction.hasFunctionParameter->at(1).type.equalsIgnoreCase('boolean')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "javaGetterFunction.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"at": 1},
    "body": "javaGetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"at": 1},
    "body": "javaGetterFunction.hasFunctionParameter->at(1).type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "javaGetterFunction.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"at": 1},
    "body": "javaGetterFunction.hasFunctionParameter->at(1).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasFunctionParameter",
      "name"
    ]
  },
  {
    "operations": {"=": 1},
    "body": "anAnnotationStack.hasCorePSM.hasJavaRModel->select(javaPRModel : JavaResourceModel | javaPRModel.hasRelatedJavaRMManager->exists(temp1 : JavaResourceModelManager | temp1.hasRelatedJavaRModel.name.=(jRModel.name)))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 4,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "name",
      "hasRelatedJavaRModel",
      "hasJavaRModel",
      "hasCorePSM",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jPRModel.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.bHasAuthorizationLayer",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bHasAuthorizationLayer"]
  },
  {
    "operations": {"=": 1},
    "body": "jRModel.=(getAuthorizationSubjectModel(anAnnotationStack))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "getTrackOwnershipResources(anAnnotationStack,getAuthorizationSubjectModel(anAnnotationStack))->exists(r : JavaResourceModel | r.=(jRModel))",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "rTracksOwnership(anAnnotationStack,jRModel)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getAuthorizationSubjectModel(anAnnotationStack).parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "getTrackOwnershipResources(anAnnotationStack,jRModel)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "jRM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getNewProperties(anAnnotationStack,jRModel)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aNewProperty.bIsUnique",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bIsUnique"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "aNewProperty.type.equalsIgnoreCase('int')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "aNewProperty.type.equalsIgnoreCase('double')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aNewProperty.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"includes": 1},
    "body": "getSearchableJavaResourceModelAnnotations(anAnnotationStack)->exists(searchableModelAnnotation : SearchableJavaResourceModel | Set {searchableModelAnnotation.isSearchableJavaResourceModel.annotatesJavaResourceModel}->includes(jRModel))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "isSearchableJavaResourceModel",
      "annotatesJavaResourceModel"
    ]
  },
  {
    "operations": {},
    "body": "getSearchHTTPHandlerAnnotations(anAnnotationStack)->collect(temp1 : SearchHTTPHandler | temp1.searchesJavaResourceModel)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["searchesJavaResourceModel"]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "asSequence": 1
    },
    "body": "anAnnotationStack.hasSearchLayer.hasAnnotation->select(annotation : Annotation | annotation.oclIsTypeOf(SearchLayerPSM::SearchHTTPHandler))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasSearchLayer",
      "hasAnnotation"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "getSearchablePropertyAnnotations(anAnnotationStack)->exists(searchablePropertyAnnotation : SearchableProperty | Set {searchablePropertyAnnotation.isSearchableProperty.annotatesPSMComponentProperty}->includes(jRMProperty))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "annotatesPSMComponentProperty",
      "isSearchableProperty"
    ]
  },
  {
    "operations": {},
    "body": "getSearchableJavaResourceModelAnnotations(anAnnotationStack)->collect(temp1 : SearchableJavaResourceModel | temp1.hasSearchableProperty)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["hasSearchableProperty"]
  },
  {
    "operations": {
      "selectByType": 1,
      "=": 1
    },
    "body": "anAnnotationStack.hasAuthorizationLayer.hasAnnotation->selectByType(AuthorizationLayerPSM::NewProperty)->select(newProperty : NewProperty | newProperty.belongsToResource.annotatesJavaResourceModel.=(jRM))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "belongsToResource",
      "hasAnnotation",
      "hasAuthorizationLayer",
      "annotatesJavaResourceModel"
    ]
  },
  {
    "operations": {"not": 1},
    "body": "if anAnnotationStack.bHasAuthorizationLayer then getNewProperties(anAnnotationStack,jRM)->exists(p : NewProperty | p.bIsUnique.not()) else false endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "IfExpImpl": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "bHasAuthorizationLayer",
      "bIsUnique"
    ]
  },
  {
    "operations": {
      "not": 2,
      "and": 2,
      "asSet": 1,
      "=": 2
    },
    "body": "let children : Set(JavaResourceModel) = jRModel.hasRelatedJavaRMManager->collect(jrmm : JavaResourceModelManager | jrmm.hasRelatedJavaRModel)->asSet() in anAnnotationStack.hasCorePSM.hasJavaRModel->select(jrm : JavaResourceModel | children->one(r : JavaResourceModel | r.=(jrm)).not().and(jrm.=(jRModel).not()).and(rTracksOwnership(self,jrm)))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 10,
      "OperationCallExpImpl": 7,
      "LetExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "hasRelatedJavaRModel",
      "hasJavaRModel",
      "hasCorePSM",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "oclAsSet": 1
    },
    "body": "if isAuthtorizableResource(anAnnotationStack,jRModel) then getAuthorizableResourceModel(anAnnotationStack,jRModel).bTrackOwnership else isDescendant(self,jRModel,jRModel.oclAsSet()->asOrderedSet()) endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 7,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 3,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["bTrackOwnership"]
  },
  {
    "operations": {
      "size": 1,
      "=": 4,
      "first": 1,
      "append": 1
    },
    "body": "if visited->size().=(1) then visited->first().=(getAuthorizationSubjectModel(self)) else if r.=(getAuthorizationSubjectModel(self)) then true else if visited->exists(rm : JavaResourceModel | rm.=(r)) then false else let newVisited : OrderedSet(JavaResourceModel) = visited->append(r) in getResourceModelParents(self,r)->exists(rm : JavaResourceModel | isDescendant(self,rm,newVisited)) endif endif endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 15,
      "OperationCallExpImpl": 7,
      "LetExpImpl": 1,
      "QueryInvocationSpec": 4,
      "IntegerLiteralExpImpl": 1,
      "IfExpImpl": 3,
      "BooleanLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "anAnnotationStack.hasCorePSM.hasJavaRModel->select(r : JavaResourceModel | r.hasRelatedJavaRMManager->collect(rm : JavaResourceModelManager | rm.hasRelatedJavaRModel)->exists(r2 : JavaResourceModel | r2.=(aJavaResourceModel)))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "hasRelatedJavaRModel",
      "hasJavaRModel",
      "hasCorePSM",
      "hasRelatedJavaRMManager"
    ]
  },
  {
    "operations": {
      "and": 1,
      "selectByType": 1,
      "first": 1
    },
    "body": "if anAnnotationStack.bHasAuthorizationLayer.and(anAnnotationStack.bHasAuthenticationAnnotation) then anAnnotationStack.hasAuthorizationLayer.hasAnnotation->selectByType(AuthorizationLayerPSM::AuthorizationSubject)->first().isAuthorizationSubject.annotatesJavaResourceModel else null endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "NullLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "bHasAuthorizationLayer",
      "bHasAuthenticationAnnotation",
      "hasAnnotation",
      "hasAuthorizationLayer",
      "isAuthorizationSubject",
      "annotatesJavaResourceModel"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "selectByType": 1,
      "=": 1,
      "first": 1
    },
    "body": "if anAnnotationStack.bHasAuthorizationLayer then anAnnotationStack.hasAuthorizationLayer.hasAnnotation->selectByType(AuthorizationLayerPSM::AuthorizableResource)->select(authResource : AuthorizableResource | authResource.isAuthorizableResourceModel.oclIsUndefined().not())->select(authResource : AuthorizableResource | authResource.isAuthorizableResourceModel.annotatesJavaResourceModel.=(jRM))->first() else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 5,
      "NullLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "bHasAuthorizationLayer",
      "isAuthorizableResourceModel",
      "hasAnnotation",
      "hasAuthorizationLayer",
      "annotatesJavaResourceModel"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "selectByType": 1,
      "=": 1
    },
    "body": "if anAnnotationStack.bHasAuthorizationLayer then anAnnotationStack.hasAuthorizationLayer.hasAnnotation->selectByType(AuthorizationLayerPSM::AuthorizableResource)->select(authResource : AuthorizableResource | authResource.isAuthorizableResourceModel.oclIsUndefined().not())->one(authResource : AuthorizableResource | authResource.isAuthorizableResourceModel.annotatesJavaResourceModel.=(jRM)) else false endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 4,
      "TypeExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 6,
      "BooleanLiteralExpImpl": 1
    },
    "properties": [
      "bHasAuthorizationLayer",
      "isAuthorizableResourceModel",
      "hasAnnotation",
      "hasAuthorizationLayer",
      "annotatesJavaResourceModel"
    ]
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "getJavaRESTClientControllerAnnotations(anAnnotationStack)->exists(javaRESTController : JavaRESTClientController | javaRESTController.hasAssociatedModel.hasJavaOutputModel.oclIsTypeOf(ExternalServiceLayerPSM::ExistentJavaModelPersistentOutput))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasJavaOutputModel",
      "hasAssociatedModel"
    ]
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "=": 1,
      "asSequence": 1
    },
    "body": "getJavaRESTClientControllerAnnotations(anAnnotationStack)->select(javaRESTController : JavaRESTClientController | javaRESTController.hasAssociatedModel.hasJavaOutputModel.oclIsUndefined().=(false))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2,
      "BooleanLiteralExpImpl": 1
    },
    "properties": [
      "hasJavaOutputModel",
      "hasAssociatedModel"
    ]
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "=": 1
    },
    "body": "getJavaRESTClientControllerAnnotations(anAnnotationStack)->exists(javaRESTController : JavaRESTClientController | javaRESTController.hasAssociatedModel.hasJavaOutputModel.oclIsUndefined().=(false))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2,
      "BooleanLiteralExpImpl": 1
    },
    "properties": [
      "hasJavaOutputModel",
      "hasAssociatedModel"
    ]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "asSequence": 1
    },
    "body": "anAnnotationStack.hasExternalServiceLayer.hasAnnotation->select(annotation : Annotation | annotation.oclIsTypeOf(ExternalServiceLayerPSM::JavaRESTClientController))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasExternalServiceLayer",
      "hasAnnotation"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "getExistingPersistenceCRUDModelAnnotations(anAnnotationStack)->exists(existentCRUDModel : ExistentJavaModelPersistentOutput | Set {existentCRUDModel.isExistentJavaModelPersistentOutput.annotatesJavaResourceModel}->includes(jRModel))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "isExistentJavaModelPersistentOutput",
      "annotatesJavaResourceModel"
    ]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "asSequence": 1
    },
    "body": "getJavaRESTClientControllerAnnotations(anAnnotationStack)->collect(temp1 : JavaRESTClientController | temp1.hasAssociatedModel)->collect(temp2 : JavaRESTClientModel | temp2.hasJavaOutputModel)->select(existentCRUDModel : JavaOutputDataModel | existentCRUDModel.oclIsTypeOf(ExternalServiceLayerPSM::ExistentJavaModelPersistentOutput))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasJavaOutputModel",
      "hasAssociatedModel"
    ]
  }
]
