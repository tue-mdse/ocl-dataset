[
  {
    "operations": {},
    "body": "clearSpace(self)",
    "type": "TemplatePost",
    "constructs": {
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'>'",
    "type": "ForAfter",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'<'",
    "type": "ForBefore",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "', '",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "c.eTypeParameters",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eTypeParameters"]
  },
  {
    "operations": {},
    "body": "g.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'log.txt'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "message",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'log.txt'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"replaceAll": 1},
    "body": "o.replaceAll('\\s+', '')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"replaceAll": 1},
    "body": "clearSpace(self).replaceAll('^\\.|\\.$', '')",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "o.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"eContainer": 1},
    "body": "o.eContainer()",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "separator",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "o.oclIsTypeOf(ecore::EPackage)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "separator",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "o.oclAsType(ecore::EPackage).name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "prefix": 1,
      "concat": 1,
      "asSet": 1,
      "replaceAll": 3,
      "tokenize": 1
    },
    "body": "self.replaceAll('\\s', ' ').replaceAll('static ', '¤').tokenize()->asSet()->collect(temp1 : String | temp1.prefix('import '))->collect(temp2 : String | temp2.concat(';\n'))->collect(temp3 : String | temp3.replaceAll('¤', 'static '))",
    "type": "TemplatePost",
    "constructs": {
      "IteratorExpImpl": 3,
      "OperationCallExpImpl": 7,
      "VariableExpImpl": 4,
      "StringLiteralExpImpl": 8
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "imports",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"replaceAll": 1},
    "body": "getDocumentation(c).replaceAll('\n', '\n *')",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "c.eTypeParameters",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eTypeParameters"]
  },
  {
    "operations": {},
    "body": "g.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"replaceAll": 1},
    "body": "getDocumentation(g).replaceAll('\n\\s*', '\n *          ')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"replaceAll": 1},
    "body": "self.replaceAll('^\\s*|\\s*$', '')",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"=": 2},
    "body": "m.eAnnotations->select(a : EAnnotation | a.source.=('http://www.eclipse.org/emf/2002/GenModel'))->collect(temp1 : EAnnotation | temp1.details)->select(m : EStringToStringMapEntry | m.key.=('documentation'))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "source",
      "details",
      "key",
      "eAnnotations"
    ]
  },
  {
    "operations": {},
    "body": "e.value",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["value"]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "o->size().>(0)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "c.eSuperTypes->select(ec : EClass | ec.interface.not())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eSuperTypes",
      "interface"
    ]
  },
  {
    "operations": {},
    "body": "c.eSuperTypes->select(ec : EClass | ec.interface)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eSuperTypes",
      "interface"
    ]
  }
]
