[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "substituteAll": 1,
      "concat": 2,
      "+": 1
    },
    "body": "domain.typeProjectName.substituteAll('.', '/').concat('/element/'.+(domain.elementTypeNamePrefix.concat('TypeContext.java')))",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 4,
      "StringLiteralExpImpl": 4,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "elementTypeNamePrefix",
      "typeProjectName"
    ]
  },
  {
    "operations": {"concat": 1},
    "body": "domain.typeProjectName.concat('.element')",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["typeProjectName"]
  },
  {
    "operations": {},
    "body": "domain.elementTypeNamePrefix",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["elementTypeNamePrefix"]
  },
  {
    "operations": {},
    "body": "domain.elementTypeNamePrefix",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["elementTypeNamePrefix"]
  },
  {
    "operations": {},
    "body": "domain.elementTypeNamePrefix",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["elementTypeNamePrefix"]
  },
  {
    "operations": {},
    "body": "domain.IClientContextID",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["IClientContextID"]
  },
  {
    "operations": {},
    "body": "domain.elementTypeNamePrefix",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["elementTypeNamePrefix"]
  },
  {
    "operations": {},
    "body": "domain.elementTypeNamePrefix",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["elementTypeNamePrefix"]
  }
]
