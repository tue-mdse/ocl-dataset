[
  {
    "operations": {
      "eContainer": 1,
      "oclAsType": 1
    },
    "body": "aClass.eContainer().oclAsType(uml::Package).name",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"concat": 1},
    "body": "getTableAndColumnName(aClass.name.concat(getSuffix(aClass)))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "getValue": 1,
      "toString": 1
    },
    "body": "aClass.getValue(getStereotype(aClass,'feature'), 'tableName').toString()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "getValue": 1,
      "toString": 1
    },
    "body": "aClass.getValue(getStereotype(aClass,'feature_part'), 'tableName').toString()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"concat": 3},
    "body": "getTableAndColumnName('JT_'.concat(aClass.name).concat('_').concat(getDestinationClass(aDestinationProperty,anAssociation).name))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "getTableAndColumnName(getPropertyName(aProperty))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "if isAssociationClass(self) then '_AC' else if isObjectClass(self) then '_O' else if isFeatureClass(self) then '_F' else if isFeature_partClass(self) then '_FP' else '' endif endif endif endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 4,
      "StringLiteralExpImpl": 5,
      "IfExpImpl": 4
    },
    "properties": []
  },
  {
    "operations": {"concat": 2},
    "body": "getTableAndColumnName(aClass.name.concat(getSuffix(aClass)).concat('_ID'))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"concat": 2},
    "body": "getTableAndColumnName(aDestinationProperty.name.concat(getSuffix(getDestinationClass(aDestinationProperty,anAssociation))).concat('_ID'))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 3,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"concat": 2},
    "body": "getTableAndColumnName(aDestinationProperty.name.concat(getSuffix(getDestinationClass(aDestinationProperty,anAssociation))).concat('_ID'))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 3,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"concat": 1},
    "body": "getTableAndColumnName(aClass.name.concat('_JT'))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  }
]
