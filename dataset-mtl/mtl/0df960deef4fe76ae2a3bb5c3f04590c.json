[
  {
    "operations": {
      "toString": 1,
      "=": 1
    },
    "body": "rt.toString().=('OneToOne')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toString": 1,
      "=": 1
    },
    "body": "rt.toString().=('OneToMany')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toString": 1,
      "=": 1
    },
    "body": "rt.toString().=('ManyToOne')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toString": 1,
      "=": 1
    },
    "body": "rt.toString().=('ManyToMany')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "isOneToOne(r.type)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "isOneToMany(r.type)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "isManyToOne(r.type)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "isManyToMany(r.type)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "r.target",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["target"]
  },
  {
    "operations": {
      "ancestors": 1,
      "first": 1
    },
    "body": "r.ancestors(dbca::Entity)->first()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"asSequence": 1},
    "body": "r.properties->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["properties"]
  },
  {
    "operations": {"asSequence": 1},
    "body": "r.properties->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["properties"]
  },
  {
    "operations": {
      "addAll": 2,
      "asSequence": 1
    },
    "body": "selectPrimaryProperties(selectSource(r))->addAll(selectPrimaryProperties(selectTarget(r)))->addAll(selectOwnProperties(r)->asSequence())",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 5
    },
    "properties": []
  },
  {
    "operations": {
      "addAll": 2,
      "prefix": 2
    },
    "body": "selectPrimaryProperties(selectSource(r))->collect(temp1 : PrimaryProperty | temp1.name)->collect(temp2 : String | temp2.prefix(selectSource(r).name))->addAll(selectPrimaryProperties(selectTarget(r))->collect(temp3 : PrimaryProperty | temp3.name)->collect(temp4 : String | temp4.prefix(selectTarget(r).name)))->addAll(selectOwnAttributes(r)->collect(temp5 : Attribute | temp5.name))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 5,
      "VariableExpImpl": 10,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 7,
      "PropertyCallExpImpl": 5
    },
    "properties": ["name"]
  },
  {
    "operations": {"addAll": 1},
    "body": "if isOneToMany(r) then selectPrimaryProperties(selectTarget(r)) else if isManyToOne(r) then selectPrimaryProperties(selectSource(r)) else selectPrimaryProperties(selectSource(r))->addAll(selectPrimaryProperties(selectTarget(r))) endif endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 6,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 10,
      "IfExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "addAll": 1,
      "prefix": 4
    },
    "body": "if isOneToMany(r) then selectPrimaryProperties(selectTarget(r))->collect(temp1 : PrimaryProperty | temp1.name)->collect(temp2 : String | temp2.prefix(selectTarget(r).name)) else if isManyToOne(r) then selectPrimaryProperties(selectSource(r))->collect(temp3 : PrimaryProperty | temp3.name)->collect(temp4 : String | temp4.prefix(selectSource(r).name)) else selectPrimaryProperties(selectSource(r))->collect(temp5 : PrimaryProperty | temp5.name)->collect(temp6 : String | temp6.prefix(selectSource(r).name))->addAll(selectPrimaryProperties(selectTarget(r))->collect(temp7 : PrimaryProperty | temp7.name)->collect(temp8 : String | temp8.prefix(selectTarget(r).name))) endif endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 8,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 18,
      "QueryInvocationSpec": 14,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 8
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "selectOwnProperties(r)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  }
]
