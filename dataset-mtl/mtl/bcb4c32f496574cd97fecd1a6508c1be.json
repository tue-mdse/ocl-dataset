[
  {
    "operations": {
      "size": 1,
      "ancestors": 1
    },
    "body": "eGenericType.ancestors(ecore::EGenericType)->size()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 3,
      "<>": 2,
      "oclIsKindOf": 1,
      "+": 6,
      "indexOf": 1,
      "oclAsType": 2
    },
    "body": "if eGenericType.eClassifier.<>(null) then let genClassifier : GenClassifier = findGenClassifier(genModel,eGenericType.eClassifier) in getPackageInstanceVariable(genPackage,genClassifier.genPackage).+('.get').+(getClassifierAccessorName(genClassifier)).+('()') else if eGenericType.eTypeParameter.<>(null) then let eTypeParameter : ETypeParameter = eGenericType.eTypeParameter in if eTypeParameter.eContainer().oclIsKindOf(ecore::EClass) then getClassifierInstanceName(findGenClassifier(genModel,eTypeParameter.eContainer().oclAsType(ecore::EClass))).+('_').+(eGenericType.eTypeParameter.name) else 't'.+(eTypeParameter.eContainer().oclAsType(ecore::EOperation).eTypeParameters->indexOf(eTypeParameter)) endif else '' endif endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 15,
      "VariableExpImpl": 14,
      "LetExpImpl": 2,
      "NullLiteralExpImpl": 2,
      "QueryInvocationSpec": 5,
      "StringLiteralExpImpl": 5,
      "TypeExpImpl": 3,
      "IfExpImpl": 3,
      "PropertyCallExpImpl": 8
    },
    "properties": [
      "eTypeParameter",
      "name",
      "eTypeParameters",
      "eClassifier",
      "genPackage"
    ]
  },
  {
    "operations": {
      "eContainmentFeature": 3,
      "+": 3,
      "substring": 2,
      ">": 1
    },
    "body": "if depth(eGenericType).>(0) then if eGenericType.eContainmentFeature().many then 'getE'.+(eGenericType.eContainmentFeature().name.substring(2)).+('().add') else 'setE'.+(eGenericType.eContainmentFeature().name.substring(2)) endif else '' endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 9,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 3,
      "StringLiteralExpImpl": 4,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "many"
    ]
  }
]
