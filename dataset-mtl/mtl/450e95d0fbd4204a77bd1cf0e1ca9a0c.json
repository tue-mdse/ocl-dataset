[
  {
    "operations": {
      "eContainer": 1,
      "oclAsType": 1
    },
    "body": "obj.eContainer(adaptorinterface::AdaptorInterface).oclAsType(adaptorinterface::AdaptorInterface)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "javaString(anAdaptorInterface.name,toUpperFirst)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "if anAdaptorInterface.serviceProviderCatalog.oclIsUndefined().not() then anAdaptorInterface.serviceProviderCatalog.serviceProviders else Sequence {} endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "serviceProviders",
      "serviceProviderCatalog"
    ]
  },
  {
    "operations": {
      "or": 4,
      "includes": 5,
      "asSet": 1
    },
    "body": "serviceProviders(anAdaptorInterface)->select(aServiceProvider : ServiceProvider | aServiceProvider.services->collect(temp1 : Service | temp1.queryCapabilities)->exists(aQueryCapability : QueryCapability | aQueryCapability.resourceTypes->includes(aResource)).or(aServiceProvider.services->collect(temp2 : Service | temp2.basicCapabilities)->exists(aBasicCapability : BasicCapability | aBasicCapability.resourceTypes->includes(aResource))).or(aServiceProvider.services->collect(temp3 : Service | temp3.creationFactories)->exists(aCreationFactory : CreationFactory | aCreationFactory.resourceTypes->includes(aResource))).or(aServiceProvider.services->collect(temp4 : Service | temp4.selectionDialogs)->exists(aDialog : Dialog | aDialog.resourceTypes->includes(aResource))).or(aServiceProvider.services->collect(temp5 : Service | temp5.creationDialogs)->exists(aDialog : Dialog | aDialog.resourceTypes->includes(aResource))))->asSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 11,
      "VariableExpImpl": 21,
      "OperationCallExpImpl": 10,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 15
    },
    "properties": [
      "resourceTypes",
      "queryCapabilities",
      "creationDialogs",
      "services",
      "resourceTypes",
      "creationFactories",
      "resourceTypes",
      "basicCapabilities",
      "resourceTypes",
      "selectionDialogs"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "serviceProviders(anAdaptorInterface)->collect(temp1 : ServiceProvider | temp1.services)->collect(temp2 : Service | temp2.queryCapabilities)->select(aQueryCapability : QueryCapability | aQueryCapability.resourceTypes->includes(aResource))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 5,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "queryCapabilities",
      "services",
      "resourceTypes"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "serviceProviders(anAdaptorInterface)->collect(temp1 : ServiceProvider | temp1.services)->collect(temp2 : Service | temp2.basicCapabilities)->select(aBasicCapability : BasicCapability | aBasicCapability.resourceTypes->includes(aResource))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "services",
      "basicCapabilities",
      "resourceTypes"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "serviceProviders(anAdaptorInterface)->collect(temp1 : ServiceProvider | temp1.services)->collect(temp2 : Service | temp2.creationFactories)->select(aCreationFactory : CreationFactory | aCreationFactory.resourceTypes->includes(aResource))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "services",
      "resourceTypes",
      "creationFactories"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "serviceProviders(anAdaptorInterface)->collect(temp1 : ServiceProvider | temp1.services)->collect(temp2 : Service | temp2.selectionDialogs)->select(aDialog : Dialog | aDialog.resourceTypes->includes(aResource))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 5,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "resourceTypes",
      "services",
      "selectionDialogs"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "serviceProviders(anAdaptorInterface)->collect(temp1 : ServiceProvider | temp1.services)->collect(temp2 : Service | temp2.creationDialogs)->select(aDialog : Dialog | aDialog.resourceTypes->includes(aResource))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "resourceTypes",
      "creationDialogs",
      "services"
    ]
  },
  {
    "operations": {
      "flatten": 1,
      "asSet": 1
    },
    "body": "serviceProviders(anAdaptorInterface)->collectNested(aServiceProvider : ServiceProvider | servicedResources(aServiceProvider))->flatten()->asSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "flatten": 2,
      "union": 1,
      "asSet": 2
    },
    "body": "serviceProviders(anAdaptorInterface)->collectNested(aServiceProvider : ServiceProvider | relevantResources(aServiceProvider))->flatten()->asSet()->union(anAdaptorInterface.requiredAdaptors->collectNested(aRequiredAdaptor : RequiredAdaptor | relevantResources(aRequiredAdaptor))->flatten()->asSet())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 3,
      "PropertyCallExpImpl": 1
    },
    "properties": ["requiredAdaptors"]
  },
  {
    "operations": {
      "flatten": 2,
      "union": 1,
      "asSet": 2
    },
    "body": "serviceProviders(anAdaptorInterface)->collectNested(aServiceProvider : ServiceProvider | relevantDomainSpecifications(aServiceProvider))->flatten()->asSet()->union(anAdaptorInterface.requiredAdaptors->collectNested(aRequiredAdaptor : RequiredAdaptor | relevantDomainSpecifications(aRequiredAdaptor))->flatten()->asSet())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 5,
      "QueryInvocationSpec": 3,
      "PropertyCallExpImpl": 1
    },
    "properties": ["requiredAdaptors"]
  },
  {
    "operations": {"concat": 1},
    "body": "javaClassBaseNamespace(anAdaptorInterface).concat('.resources')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "substituteAll": 1,
      "concat": 3
    },
    "body": "concatenatePaths(javaFilesBasePath(anAdaptorInterface),javaClassPackageNameForAdaptorPackageInfo(anAdaptorInterface).substituteAll('.', '/')).concat('/').concat('package-info').concat('.java')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 3,
      "StringLiteralExpImpl": 5
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "javaClassBaseNamespace(anAdaptorInterface).concat('.servlet')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'Application'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"concat": 2},
    "body": "javaClassPackageNameForAdaptorApplication(anAdaptorInterface).concat('.').concat(javaClassNameForAdaptorApplication(anAdaptorInterface))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "substituteAll": 1,
      "concat": 3
    },
    "body": "concatenatePaths(javaFilesBasePath(anAdaptorInterface),javaClassPackageNameForAdaptorApplication(anAdaptorInterface).substituteAll('.', '/')).concat('/').concat(javaClassNameForAdaptorApplication(anAdaptorInterface)).concat('.java')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 4,
      "StringLiteralExpImpl": 4
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "javaClassBaseNamespace(anAdaptorInterface).concat('.servlet')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'ServletListener'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"concat": 2},
    "body": "javaClassPackageNameForAdaptorServletListener(anAdaptorInterface).concat('.').concat(javaClassNameForAdaptorServletListener(anAdaptorInterface))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "substituteAll": 1,
      "concat": 3
    },
    "body": "concatenatePaths(javaFilesBasePath(anAdaptorInterface),javaClassPackageNameForAdaptorServletListener(anAdaptorInterface).substituteAll('.', '/')).concat('/').concat(javaClassNameForAdaptorServletListener(anAdaptorInterface)).concat('.java')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 4,
      "StringLiteralExpImpl": 4
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "javaClassBaseNamespace(anAdaptorInterface)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "javaName(anAdaptorInterface,true).concat('Manager')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 2},
    "body": "javaClassPackageNameForAdaptorManager(anAdaptorInterface).concat('.').concat(javaClassNameForAdaptorManager(anAdaptorInterface))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "substituteAll": 1,
      "concat": 3
    },
    "body": "concatenatePaths(javaFilesBasePath(anAdaptorInterface),javaClassPackageNameForAdaptorManager(anAdaptorInterface).substituteAll('.', '/')).concat('/').concat(javaClassNameForAdaptorManager(anAdaptorInterface)).concat('.java')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 4,
      "StringLiteralExpImpl": 4
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "javaClassBaseNamespace(anAdaptorInterface)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "javaName(anAdaptorInterface,true).concat('Constants')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 2},
    "body": "javaInterfacePackageNameForAdaptorConstants(anAdaptorInterface).concat('.').concat(javaInterfaceNameForAdaptorConstants(anAdaptorInterface))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "substituteAll": 1,
      "concat": 3
    },
    "body": "concatenatePaths(javaFilesBasePath(anAdaptorInterface),javaInterfacePackageNameForAdaptorConstants(anAdaptorInterface).substituteAll('.', '/')).concat('/').concat(javaInterfaceNameForAdaptorConstants(anAdaptorInterface)).concat('.java')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 4,
      "StringLiteralExpImpl": 4
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "javaConstantString(aDomainSpecification.name)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"concat": 1},
    "body": "javaConstantName(aDomainSpecification).concat('_DOMAIN')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "javaConstantName(aDomainSpecification).concat('_NAMSPACE')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "javaConstantName(aDomainSpecification).concat('_NAMSPACE_PREFIX')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toUpperCase": 1},
    "body": "javaName(aResource,true).toUpperCase()",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toUpperCase": 1,
      "concat": 1
    },
    "body": "'PATH_'.concat(javaName(aResource,true).toUpperCase())",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toUpperCase": 1,
      "concat": 1
    },
    "body": "'TYPE_'.concat(javaName(aResource,true).toUpperCase())",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "oclAsType": 2
    },
    "body": "if aRequiredAdaptor.oclIsTypeOf(adaptorinterface::GenericRequiredAdaptor) then servicedResourcesForGenericRequiredAdaptor(aRequiredAdaptor.oclAsType(adaptorinterface::GenericRequiredAdaptor)) else servicedResourcesForModelledRequiredAdaptor(aRequiredAdaptor.oclAsType(adaptorinterface::ModelledRequiredAdaptor)) endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 2,
      "TypeExpImpl": 3,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aGenericRequiredAdaptor.servicedResources",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["servicedResources"]
  },
  {
    "operations": {},
    "body": "servicedResources(aModelledRequiredAdaptor.adaptorInterface)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["adaptorInterface"]
  },
  {
    "operations": {
      "flatten": 1,
      "union": 1,
      "asSet": 1
    },
    "body": "servicedResources(aRequiredAdaptor)->union(servicedResources(aRequiredAdaptor)->collectNested(aResource : Resource | allRelatedResources(aResource))->flatten()->asSet())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 3
    },
    "properties": []
  },
  {
    "operations": {
      "flatten": 1,
      "union": 1,
      "asSet": 2
    },
    "body": "relevantResources(aRequiredAdaptor)->collectNested(aResource : Resource | Set {definingDomainSpecification(aResource)}->union(allProperties(aResource)->asSet()->collectNested(aResourceProperty : ResourceProperty | definingDomainSpecification(aResourceProperty))))->flatten()->asSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 4,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  }
]
