[
  {
    "operations": {"eAllContents": 1},
    "body": "aModel.eAllContents(uml::Component)->select(temp1 : Component | shouldGenerateComponent(temp1))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "=": 1,
      "eAllContents": 1
    },
    "body": "aComponent.eAllContents(uml::Component)->size().=(0)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "including": 1,
      "eAllContents": 1
    },
    "body": "aModel.eAllContents(uml::Package)->including(aModel)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "shouldGenerateContent(aPackage)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"filter": 1},
    "body": "aPackage.packagedElement->filter(uml::Type)->select(temp1 : Type | shouldGenerateType(temp1))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["packagedElement"]
  },
  {
    "operations": {
      "or": 2,
      "oclIsTypeOf": 3
    },
    "body": "aType.oclIsTypeOf(uml::Class).or(aType.oclIsTypeOf(uml::Interface)).or(aType.oclIsTypeOf(uml::Enumeration))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 3,
      "TypeExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "ancestors": 1,
      "=": 1
    },
    "body": "aType.ancestors(uml::Component)->size().=(0)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aModel",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aType.oclIsTypeOf(uml::Class)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aType.oclIsTypeOf(uml::Interface)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aType.oclAsType(uml::Interface)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclIsTypeOf": 1},
    "body": "aType.oclIsTypeOf(uml::Enumeration)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aType.oclAsType(uml::Enumeration)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aType.oclAsType(uml::Class)",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"or": 1},
    "body": "hasDocumentation(aPackage).or(hasComment(aPackage))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aPackage",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "reqGetDefaultProjectName(aModel)",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {"eAllContents": 1},
    "body": "aModel.eAllContents(uml::Component)->select(temp1 : Component | shouldGenerateComponent(temp1))",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "=": 1,
      "eAllContents": 1
    },
    "body": "aComponent.eAllContents(uml::Component)->size().=(0)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 3,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent.name",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "filter": 1,
      "including": 1,
      "size": 1,
      "oclIsTypeOf": 1,
      "includes": 1,
      "ancestors": 1,
      "=": 1
    },
    "body": "Set {aPackage.ancestors()->including(aPackage)->select(temp1 : OclAny | temp1.oclIsTypeOf(uml::Package))->filter(uml::Package)->any(aP : Package | reqGetPackagesToIgnoreDuringGeneration(self)->includes(aP.name))}->size().=(0)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 7,
      "VariableExpImpl": 5,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "size": 1,
      "and": 1,
      "includes": 1,
      "ancestors": 1,
      "=": 1
    },
    "body": "reqGetTypesToIgnoreDuringTheGeneration(aType)->includes(aType.name).not().and(aType.ancestors(uml::Component)->reject(aC : Component | shouldGenerateComponent(aC))->size().=(0))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 2,
      "size": 1,
      "and": 1,
      "includes": 2,
      "ancestors": 1,
      "=": 1
    },
    "body": "reqGetComponentsToIgnore(aComponent)->includes(aComponent.name).not().and(aComponent.ancestors(uml::Component)->reject(aC : Component | reqGetComponentsToIgnore(aC)->includes(aC.name).not())->size().=(0))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 8,
      "VariableExpImpl": 5,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "includes": 1
    },
    "body": "reqGetComponentsToIgnore(aComponent)->includes(aComponent.name).not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"or": 1},
    "body": "reqShouldGenerateOSGiArtifacts(aComponent).or(reqShouldGenerateEclipseArtifacts(aComponent))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"+": 4},
    "body": "reqGetGenerationRootPath(aComponent).+('/').+(aComponent.name).+('/').+(reqGetSourceFolderPath(aComponent))",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"+": 4},
    "body": "reqGetGenerationRootPath(aComponent).+('/').+(aComponent.name).+('/').+(reqGetOutputFolderPath(aComponent))",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "genComponentPath(aComponent)",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "includes": 1
    },
    "body": "reqGetComponentsToIgnore(aComponent)->includes(aComponent.name).not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "reqShouldGenerateEclipseArtifacts(aComponent)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "reqShouldGenerateOSGiArtifacts(aComponent)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aComponent",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "genComponentPath(aComponent)",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "TemplateInvocationSpec": 1
    },
    "properties": []
  }
]
