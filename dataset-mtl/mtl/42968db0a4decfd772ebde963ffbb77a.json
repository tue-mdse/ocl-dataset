[
  {
    "operations": {"concat": 1},
    "body": "aQuizz.name.concat('.xml')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aQuizz.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aQuizz.id",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["id"]
  },
  {
    "operations": {},
    "body": "self.score.score",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "score",
      "score"
    ]
  },
  {
    "operations": {},
    "body": "self.score.username",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "username",
      "score"
    ]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aQuizz.start.next.oclAsType(quizz::Question).id",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "start",
      "next",
      "id"
    ]
  },
  {
    "operations": {"filter": 1},
    "body": "aQuizz.questions->filter(quizz::MultipleChoice)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["questions"]
  },
  {
    "operations": {},
    "body": "q.id",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["id"]
  },
  {
    "operations": {},
    "body": "q.title",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["title"]
  },
  {
    "operations": {},
    "body": "q.text",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["text"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsInvalid": 1,
      "oclAsType": 1
    },
    "body": "q.next.oclAsType(quizz::Endpoint).oclIsInvalid().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["next"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "q.next.oclAsType(quizz::Question).id",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "id",
      "next"
    ]
  },
  {
    "operations": {},
    "body": "q.answers",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["answers"]
  },
  {
    "operations": {},
    "body": "a.id",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["id"]
  },
  {
    "operations": {},
    "body": "a.text",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["text"]
  },
  {
    "operations": {},
    "body": "a.points",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["points"]
  },
  {
    "operations": {},
    "body": "a.correct",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["correct"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsInvalid": 1,
      "oclAsType": 1
    },
    "body": "a.next.oclAsType(quizz::Endpoint).oclIsInvalid().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["next"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "a.next.oclAsType(quizz::Question).id",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "next",
      "id"
    ]
  },
  {
    "operations": {"filter": 1},
    "body": "aQuizz.questions->filter(quizz::FreeText)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["questions"]
  },
  {
    "operations": {},
    "body": "qF.id",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["id"]
  },
  {
    "operations": {},
    "body": "qF.title",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["title"]
  },
  {
    "operations": {},
    "body": "qF.text",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["text"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsInvalid": 1,
      "oclAsType": 1
    },
    "body": "qF.next.oclAsType(quizz::Endpoint).oclIsInvalid().not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["next"]
  },
  {
    "operations": {"oclAsType": 1},
    "body": "qF.next.oclAsType(quizz::Question).id",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "id",
      "next"
    ]
  }
]
