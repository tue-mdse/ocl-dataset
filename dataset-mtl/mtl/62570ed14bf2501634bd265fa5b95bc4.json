[
  {
    "operations": {
      "size": 1,
      "last": 1,
      "oclIsTypeOf": 2,
      "asOrderedSet": 2,
      "ancestors": 2,
      "=": 1,
      "eAllContents": 2
    },
    "body": "if aElement.ancestors()->size().=(0) then aElement.eAllContents(uml::InstanceSpecification)->select(anInstance : InstanceSpecification | anInstance.oclIsTypeOf(uml::InstanceSpecification))->asOrderedSet() else aElement.ancestors()->last().eAllContents(uml::InstanceSpecification)->select(anInstance : InstanceSpecification | anInstance.oclIsTypeOf(uml::InstanceSpecification))->asOrderedSet() endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 11,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 4,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"asOrderedSet": 1},
    "body": "q_getAllInstances(aElement)->collect(temp1 : InstanceSpecification | q_getInstanceSlot(temp1))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "asOrderedSet": 1,
      "eAllContents": 1
    },
    "body": "aElement.eAllContents(uml::InstanceSpecification)->select(anInstance : InstanceSpecification | anInstance.oclIsTypeOf(uml::InstanceSpecification))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1
    },
    "body": "q_getAllInstances(aClass)->select(aInstanceSpec : InstanceSpecification | q_getInstanceType(aInstanceSpec).=(aClass))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {"indexOf": 1},
    "body": "q_getAllInstSpec(q_getInstanceType(anInstance))->indexOf(anInstance)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1,
      "first": 2
    },
    "body": "Set {q_getAllInstSpec(q_getInstanceType(anInstance))->select(aInst : InstanceSpecification | q_AllPrevFinalConnectorEnd_3(aInst)->=(q_AllPrevFinalConnectorEnd_3(anInstance)))->first()}->collect(temp1 : InstanceSpecification | q_getInstIndex(temp1))->asOrderedSet()->first()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 5,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "indexOf": 1
    },
    "body": "q_getAllInstSpec(q_getInstanceType(anInstance))->collect(temp1 : InstanceSpecification | q_getInstIndex_2(temp1))->asOrderedSet()->indexOf(q_getInstIndex_2(anInstance))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 4
    },
    "properties": []
  },
  {
    "operations": {
      "oclIsKindOf": 1,
      "asOrderedSet": 1,
      "oclAsType": 1,
      "first": 2
    },
    "body": "anInstance.slot->select(aSlot : Slot | aSlot.value->first().oclIsKindOf(uml::InstanceValue))->collect(temp1 : Slot | temp1.value->first().oclAsType(uml::InstanceValue).instance)->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 3,
      "TypeExpImpl": 2,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "value",
      "instance",
      "slot"
    ]
  },
  {
    "operations": {
      "not": 1,
      "asOrderedSet": 1
    },
    "body": "q_getAllInstances(aElement)->select(anInstance : InstanceSpecification | q_getInstanceType(anInstance).isAbstract.not())->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isAbstract"]
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "oclAsType": 1,
      "first": 1
    },
    "body": "anInstance.classifier->asOrderedSet()->first().oclAsType(uml::Class)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["classifier"]
  },
  {
    "operations": {"asOrderedSet": 1},
    "body": "aInstanceSpec.slot->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["slot"]
  },
  {
    "operations": {"asOrderedSet": 1},
    "body": "q_getInstanceSlot(aInstanceSpec)->collect(temp1 : Slot | temp1.definingFeature)->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["definingFeature"]
  },
  {
    "operations": {},
    "body": "aSlot.definingFeature.type",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "definingFeature",
      "type"
    ]
  },
  {
    "operations": {
      "oclIsKindOf": 1,
      "oclAsType": 1
    },
    "body": "if aSlot.definingFeature.oclIsKindOf(uml::Property) then aSlot.definingFeature.oclAsType(uml::Property) else null endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "NullLiteralExpImpl": 1,
      "TypeExpImpl": 2,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["definingFeature"]
  },
  {
    "operations": {
      "filter": 1,
      "asOrderedSet": 1
    },
    "body": "aSlot.value->filter(uml::OpaqueExpression)->collect(temp1 : OpaqueExpression | temp1.body)->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "value",
      "body"
    ]
  },
  {
    "operations": {
      "filter": 2,
      "size": 1,
      "oclAsType": 1,
      "first": 1,
      ">": 1
    },
    "body": "if aSlot.value->filter(uml::InstanceValue)->size().>(0) then aSlot.value->filter(uml::InstanceValue)->collect(temp1 : InstanceValue | temp1.oclAsType(uml::InstanceValue))->collect(temp2 : InstanceValue | temp2.instance)->first() else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 4,
      "NullLiteralExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 3,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "value",
      "instance"
    ]
  },
  {
    "operations": {},
    "body": "aSlot.definingFeature.name",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "definingFeature",
      "name"
    ]
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "if Set {q_getOwningSlot(anInstance)}->size().>(0) then q_getOwningSlot(anInstance).owningInstance else null endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "NullLiteralExpImpl": 1,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["owningInstance"]
  },
  {
    "operations": {
      "not": 1,
      "size": 1,
      "and": 2,
      "isEmpty": 1,
      "toString": 1,
      "=": 3,
      "oclAsType": 2,
      "first": 1,
      ">": 1
    },
    "body": "if q_getAllSlots(anInstance)->size().>(0) then if q_getAllSlots(anInstance)->exists(aSlot : Slot | q_getSlotInstanceValue(aSlot).=(anInstance)) then q_getAllSlots(anInstance)->select(aSlot : Slot | q_getSlotInstanceValue(aSlot).=(anInstance).and(aSlot.definingFeature.oclAsType(uml::Property).aggregation.toString().=('composite')).and(Set {aSlot.definingFeature.oclAsType(uml::Property).association}->isEmpty().not()))->first() else null endif else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 9,
      "OperationCallExpImpl": 13,
      "NullLiteralExpImpl": 2,
      "QueryInvocationSpec": 5,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "aggregation",
      "definingFeature",
      "association"
    ]
  },
  {
    "operations": {
      "size": 1,
      "oclAsType": 1,
      ">": 1
    },
    "body": "if Set {q_getOwningSlot(anInstance)}->size().>(0) then q_getOwningSlot(anInstance).definingFeature.oclAsType(uml::Property) else null endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "NullLiteralExpImpl": 1,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["definingFeature"]
  },
  {
    "operations": {
      "size": 2,
      "asOrderedSet": 1,
      "=": 3,
      "oclAsType": 1,
      ">": 2,
      "first": 2
    },
    "body": "if Set {q_getOwningSlot(anInstance)}->size().>(0) then if q_FlowPortDirOUT(aPort) then if q_isFinalFlowPort(aPort) then anInstance else if Set {q_PrevConnectorEnd_2(q_getCorrespondingPart(anInstance),aPort).partWithPort}->size().>(0) then q_getInstanceSlot(anInstance)->select(aSlot : Slot | q_GetSlotPart(aSlot).=(q_PrevConnectorEnd_2(q_getCorrespondingPart(anInstance),aPort).partWithPort))->collect(temp1 : Slot | q_getSlotInstanceValue(temp1))->first() else anInstance endif endif else if q_FlowPortDirIN(aPort) then if q_getInstanceType(q_getOwningInstance(anInstance)).=(q_PrevConnectorEnd_2(q_getCorrespondingPart(anInstance),aPort).role.oclAsType(uml::Port).class) then q_getOwningInstance(anInstance) else q_getInstanceSlot(q_getOwningInstance(anInstance))->select(aSlot : Slot | q_GetSlotPart(aSlot).=(q_PrevConnectorEnd_2(q_getCorrespondingPart(anInstance),aPort).partWithPort))->collect(temp2 : Slot | q_getSlotInstanceValue(temp2))->asOrderedSet()->first() endif else null endif endif else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "OperationCallExpImpl": 11,
      "VariableExpImpl": 22,
      "NullLiteralExpImpl": 2,
      "QueryInvocationSpec": 22,
      "IntegerLiteralExpImpl": 2,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 2,
      "IfExpImpl": 6,
      "PropertyCallExpImpl": 5
    },
    "properties": [
      "partWithPort",
      "class",
      "role"
    ]
  },
  {
    "operations": {"and": 1},
    "body": "if q_FlowPortDirOUT(aPort).and(q_isFinalFlowPort(aPort)) then anInstance else q_getFinalPrevInstanceBis(q_PrevFlowPort_2(q_getCorrespondingPart(anInstance),aPort),q_getPrevInstance(anInstance,aPort)) endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 7,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 6,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"and": 1},
    "body": "if q_FlowPortDirOUT(aaPort).and(q_isFinalFlowPort(aaPort)) then aanInstance else q_getFinalPrevInstance(q_PrevFlowPort_2(q_getCorrespondingPart(aanInstance),aaPort),q_getPrevInstance(aanInstance,aaPort)) endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 7,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 6,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "and": 1,
      "asOrderedSet": 1,
      ">": 1
    },
    "body": "if Set {q_getCorrespondingPart(anInstance)}->size().>(0) then q_getFlowPorts(q_getPartRefBlock(q_getCorrespondingPart(anInstance)))->reject(aPort : Port | q_FlowPortDirOUT(aPort).and(q_isFinalFlowPort(aPort)))->collect(temp1 : Port | q_getFinalPrevInstance(temp1,anInstance))->asOrderedSet() else OrderedSet {} endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 6,
      "QueryInvocationSpec": 7,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 2,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1
    },
    "body": "q_getFlowPorts(q_getInstanceType(anInstance))->collect(temp1 : Port | q_PrevFinalConnectorEnd_3(temp1,anInstance))->reject(aEnd : ConnectorEnd | aEnd.partWithPort.=(q_getCorrespondingPart(anInstance)))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 4,
      "PropertyCallExpImpl": 1
    },
    "properties": ["partWithPort"]
  },
  {
    "operations": {
      "and": 1,
      "first": 1
    },
    "body": "if q_FlowPortDirOUT(aPort).and(q_isFinalFlowPort(aPort)) then q_getConnectorEnds_2(q_getCorrespondingPart(anInstance),aPort)->first() else q_PrevFinalConnectorEnd_3bis(q_PrevFlowPort_2(q_getCorrespondingPart(anInstance),aPort),q_getPrevInstance(anInstance,aPort)) endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 8,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 8,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "and": 1,
      "first": 1
    },
    "body": "if q_FlowPortDirOUT(aaPort).and(q_isFinalFlowPort(aaPort)) then q_getConnectorEnds_2(q_getCorrespondingPart(aanInstance),aaPort)->first() else q_PrevFinalConnectorEnd_3(q_PrevFlowPort_2(q_getCorrespondingPart(aanInstance),aaPort),q_getPrevInstance(aanInstance,aaPort)) endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 8,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 8,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "includes": 1
    },
    "body": "q_getBlockLocalAttributes(aClass)->reject(aProp : Property | q_getInstanceProperty(anInstance)->includes(aProp))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {"<>": 1},
    "body": "if aAttribute.default.<>(null) then true else false endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "NullLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "BooleanLiteralExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["default"]
  },
  {
    "operations": {
      "indexOf": 1,
      "=": 1,
      "first": 1
    },
    "body": "q_getSubInstances(anInstance)->indexOf(q_getSubInstances(anInstance)->select(aaInstance : InstanceSpecification | q_getCorrespondingPart(aaInstance).=(aPart))->first())",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 3
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "<": 1,
      "first": 1
    },
    "body": "q_getAllInstances(anElement)->select(temp1 : InstanceSpecification | Set {q_getOwningSlot(temp1)}->size().<(1))->first()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 2,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  }
]
