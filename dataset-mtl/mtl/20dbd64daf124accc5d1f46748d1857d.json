[
  {
    "operations": {
      "eContainer": 1,
      "oclAsType": 1
    },
    "body": "aService.eContainer(adaptorinterface::AdaptorInterface).oclAsType(adaptorinterface::AdaptorInterface)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "oclAsType": 1
    },
    "body": "aQueryCapability.eContainer(adaptorinterface::AdaptorInterface).oclAsType(adaptorinterface::AdaptorInterface)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "oclAsType": 1
    },
    "body": "aDialog.eContainer(adaptorinterface::AdaptorInterface).oclAsType(adaptorinterface::AdaptorInterface)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "oclAsType": 1
    },
    "body": "aCreationFactory.eContainer(adaptorinterface::AdaptorInterface).oclAsType(adaptorinterface::AdaptorInterface)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "oclAsType": 1
    },
    "body": "aBasicCapability.eContainer(adaptorinterface::AdaptorInterface).oclAsType(adaptorinterface::AdaptorInterface)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "oclAsType": 1
    },
    "body": "aService.eContainer(adaptorinterface::ServiceProvider).oclAsType(adaptorinterface::ServiceProvider)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "javaClassBaseNamespace(containingAdaptorInterface(aService)).concat('.services')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1,
      "oclAsType": 1,
      "sep": 1
    },
    "body": "concatenate(servicedResources(aService)->collect(temp1 : Resource | javaName(temp1,true))->sep('', 'And', '')->collect(temp2 : OclAny | temp2.oclAsType(oclstdlib::String))).toUpperFirst().concat('Service')",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 3,
      "StringLiteralExpImpl": 4,
      "TypeExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 2},
    "body": "javaClassPackageName(aService).concat('.').concat(javaClassName(aService))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "substituteAll": 1,
      "concat": 3
    },
    "body": "concatenatePaths(javaFilesBasePath(containingAdaptorInterface(aService)),javaClassPackageName(aService).substituteAll('.', '/')).concat('/').concat(javaClassName(aService)).concat('.java')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 5,
      "StringLiteralExpImpl": 4
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "=": 1
    },
    "body": "if aService.serviceNamespace.oclIsUndefined().not() then if aService.serviceNamespace.=(adaptorinterface::ResourceServiceNamespace::relativeToServiceProvider) then true else false endif else true endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "EnumLiteralExpImpl": 1,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 2,
      "BooleanLiteralExpImpl": 3
    },
    "properties": ["serviceNamespace"]
  },
  {
    "operations": {
      "size": 2,
      "toString": 1,
      "concat": 6,
      "=": 2,
      "indexOf": 1
    },
    "body": "if serviceNamespaceRelativeToServiceProvider(aService) then instanceURI(containingServiceProvider(aService)).concat('/') else '' endif.concat(if containingServiceProvider(aService).services->size().=(1) then '' else 'service'.concat(containingServiceProvider(aService).services->indexOf(aService).toString()).concat('/') endif).concat(if servicedResources(aService)->size().=(1) then javaName(servicedResources(aService)->any(temp1 : Resource | true),false).concat('s') else 'resources' endif)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 7,
      "OperationCallExpImpl": 12,
      "QueryInvocationSpec": 8,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 7,
      "IfExpImpl": 3,
      "BooleanLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["services"]
  },
  {
    "operations": {
      "or": 1,
      "oclIsUndefined": 1,
      "equalsIgnoreCase": 1
    },
    "body": "if aQueryCapability.queryBaseURI.oclIsUndefined().or(aQueryCapability.queryBaseURI.equalsIgnoreCase('')) then '' else aQueryCapability.queryBaseURI endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": ["queryBaseURI"]
  },
  {
    "operations": {"eContainer": 1},
    "body": "JAXRSConcatURISegments(serviceBaseURI(aQueryCapability.eContainer(adaptorinterface::Service)),URISegment(aQueryCapability))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 3,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "JAXRSPathParameters(URI(aQueryCapability))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "concat": 1,
      "oclAsType": 1,
      "sep": 1
    },
    "body": "concatenate(aQueryCapability.resourceTypes->collect(temp1 : Resource | javaName(temp1,true))->sep('query', 'sAnd', 's')->collect(temp2 : OclAny | temp2.oclAsType(oclstdlib::String))).concat(if forRDF then '' else 'AsHtml' endif)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 2,
      "TypeExpImpl": 1,
      "StringLiteralExpImpl": 5,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["resourceTypes"]
  },
  {
    "operations": {
      "size": 1,
      "=": 1,
      "first": 1
    },
    "body": "if aQueryCapability.resourceTypes->size().=(1) then javaClassName(aQueryCapability.resourceTypes->first()) else 'AbstractResource' endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["resourceTypes"]
  },
  {
    "operations": {"concat": 1},
    "body": "if forRDF then queryMethodResourceType(aQueryCapability).concat('[]') else 'Response' endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "methodSignature(queryCompositeID(aQueryCapability),forJAXRSMethod)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "methodParameterList(JAXRSPathParameters(URI(aQueryCapability)))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 3
    },
    "properties": []
  },
  {
    "operations": {
      "or": 1,
      "oclIsUndefined": 1,
      "equalsIgnoreCase": 1
    },
    "body": "if aCreationFactory.creationURI.oclIsUndefined().or(aCreationFactory.creationURI.equalsIgnoreCase('')) then 'create' else aCreationFactory.creationURI endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": ["creationURI"]
  },
  {
    "operations": {"eContainer": 1},
    "body": "JAXRSConcatURISegments(serviceBaseURI(aCreationFactory.eContainer(adaptorinterface::Service)),URISegment(aCreationFactory))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 3,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "JAXRSPathParameters(URI(aCreationFactory))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "concat": 1,
      "oclAsType": 1,
      "sep": 1
    },
    "body": "concatenate(aCreationFactory.resourceTypes->collect(temp1 : Resource | javaName(temp1,true))->sep('create', 'And', '')->collect(temp2 : OclAny | temp2.oclAsType(oclstdlib::String))).concat('')",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 4,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["resourceTypes"]
  },
  {
    "operations": {
      "size": 1,
      "=": 1,
      "first": 1
    },
    "body": "if aCreationFactory.resourceTypes->size().=(1) then javaClassName(aCreationFactory.resourceTypes->first()) else 'AbstractResource' endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["resourceTypes"]
  },
  {
    "operations": {},
    "body": "'Response'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "methodSignature(creationCompositeID(aCreationFactory),forJAXRSMethod)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "methodParameterList(JAXRSPathParameters(URI(aCreationFactory)))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 3
    },
    "properties": []
  },
  {
    "operations": {
      "concat": 1,
      "oclAsType": 1,
      "sep": 1
    },
    "body": "concatenate(resources->collect(temp1 : Resource | javaName(temp1,true))->sep('getETagFrom', 'And', '')->collect(temp2 : OclAny | temp2.oclAsType(oclstdlib::String))).concat('')",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 4,
      "TypeExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "getResourceETagMethodName(Set {aResource})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "or": 1,
      "oclIsUndefined": 1,
      "equalsIgnoreCase": 1
    },
    "body": "if aDialog.dialogURI.oclIsUndefined().or(aDialog.dialogURI.equalsIgnoreCase('')) then if selectionDialog then 'selector' else 'creator' endif else aDialog.dialogURI endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 3,
      "StringLiteralExpImpl": 3,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": ["dialogURI"]
  },
  {
    "operations": {"eContainer": 1},
    "body": "JAXRSConcatURISegments(serviceBaseURI(aDialog.eContainer(adaptorinterface::Service)),URISegment(aDialog,selectionDialog))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 3,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "JAXRSPathParameters(URI(aDialog,selectionDialog))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "concat": 1,
      "oclAsType": 1,
      "sep": 1
    },
    "body": "concatenate(aDialog.resourceTypes->collect(temp1 : Resource | javaName(temp1,true))->sep('', 'And', '')->collect(temp2 : OclAny | temp2.oclAsType(oclstdlib::String))).concat(if selectionDialog then 'Selector' else 'Creator' endif)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 5,
      "TypeExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["resourceTypes"]
  },
  {
    "operations": {
      "size": 1,
      "=": 1,
      "first": 1
    },
    "body": "if aDialog.resourceTypes->size().=(1) then javaClassName(aDialog.resourceTypes->first()) else 'AbstractResource' endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["resourceTypes"]
  },
  {
    "operations": {},
    "body": "'void'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "methodSignature(dialogCompositeID(aDialog,selectionDialog),forJAXRSMethod)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "methodParameterList(JAXRSPathParameters(URI(aDialog,selectionDialog)))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 3
    },
    "properties": []
  },
  {
    "operations": {
      "concat": 1,
      "oclAsType": 1,
      "sep": 1
    },
    "body": "concatenate(aCreationDialog.resourceTypes->collect(temp1 : Resource | javaName(temp1,true))->sep('create', 'And', '')->collect(temp2 : OclAny | temp2.oclAsType(oclstdlib::String))).concat('')",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 2,
      "TypeExpImpl": 1,
      "StringLiteralExpImpl": 4,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["resourceTypes"]
  },
  {
    "operations": {
      "size": 1,
      "=": 1,
      "first": 1
    },
    "body": "if aCreationDialog.resourceTypes->size().=(1) then javaClassName(aCreationDialog.resourceTypes->first()) else 'AbstractResource' endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["resourceTypes"]
  },
  {
    "operations": {},
    "body": "'void'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "eContainer": 1,
      "not": 2,
      "oclIsUndefined": 1,
      "size": 1,
      "and": 1,
      "concat": 4,
      "equalsIgnoreCase": 1,
      "=": 1
    },
    "body": "if servicedResources(aBasicCapability.eContainer(adaptorinterface::Service))->size().=(1) then '' else javaName(aResource,false).concat('s/') endif.concat(if aBasicCapability.instanceID.oclIsUndefined().not().and(aBasicCapability.instanceID.equalsIgnoreCase('').not()) then aBasicCapability.instanceID else '{'.concat(javaName(aResource,false)).concat('Id}') endif)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 12,
      "VariableExpImpl": 6,
      "QueryInvocationSpec": 3,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "StringLiteralExpImpl": 5,
      "IfExpImpl": 2,
      "BooleanLiteralExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": ["instanceID"]
  },
  {
    "operations": {"eContainer": 1},
    "body": "JAXRSConcatURISegments(serviceBaseURI(aBasicCapability.eContainer(adaptorinterface::Service)),instanceURISegment(aResource,aBasicCapability))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 3,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "JAXRSPathParameters(instanceURI(aResource,aBasicCapability))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {"concat": 2},
    "body": "'get'.concat(javaName(aResource,true)).concat(if forRDF then '' else 'AsHtml' endif)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 3,
      "IfExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "'delete'.concat(javaName(aResource,true))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "'update'.concat(javaName(aResource,true))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "javaClassName(aResource)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "if forRDF then getResourceMethodResourceType(aBasicCapability,aResource) else 'Response' endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "javaClassName(aResource)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'Response'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "javaClassName(aResource)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'Response'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "methodSignature(instanceCompositeID(aResource,aBasicCapability),forJAXRSMethod)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "methodParameterList(instanceCompositeID(aResource,aBasicCapability))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  }
]
