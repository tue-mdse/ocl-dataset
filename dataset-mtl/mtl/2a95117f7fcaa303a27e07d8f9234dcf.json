[
  {
    "operations": {},
    "body": "'test_string_substitute'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "=": 1,
      "substitute": 1
    },
    "body": "'test'.substitute('es', 'se').=('tset')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 4
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_index'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "index": 1,
      "=": 1
    },
    "body": "'test'.index('es').=(2)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_first'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "and": 1,
      "=": 2,
      "first": 2
    },
    "body": "'test'.first(2).=('te').and('1test'.first(1).=('1'))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 4
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_last'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "last": 1,
      "=": 1
    },
    "body": "'test'.last(3).=('est')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_strstr'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "strstr": 2,
      "and": 1
    },
    "body": "'test'.strstr('es').and('test'.strstr('tests').not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "StringLiteralExpImpl": 4
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_strtok'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "and": 1,
      "strtok": 2,
      "=": 2
    },
    "body": "'test'.strtok('e', 0).=('t').and('test'.strtok('e', 1).=('st'))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 6
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_strcmp'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "strcmp": 3,
      "and": 2,
      "<": 1,
      "=": 1,
      ">": 1
    },
    "body": "'test'.strcmp('est').>(0).and('test'.strcmp('test').=(0)).and('est'.strcmp('test').<(0))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 8,
      "IntegerLiteralExpImpl": 3,
      "StringLiteralExpImpl": 6
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_isAlpha'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "isAlpha": 2,
      "and": 1
    },
    "body": "'test'.isAlpha().and('test1'.isAlpha().not())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_isAlphanum'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"isAlphanum": 1},
    "body": "'test1'.isAlphanum()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_toUpperFirst'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "=": 1
    },
    "body": "'test1'.toUpperFirst().=('Test1')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'test_string_toLowerFirst'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "=": 1,
      "toLowerFirst": 1
    },
    "body": "'TEST'.toLowerFirst().=('tEST')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  }
]
