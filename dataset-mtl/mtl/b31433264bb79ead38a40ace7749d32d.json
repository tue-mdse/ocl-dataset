[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "toLowerCase": 2,
      "+": 7
    },
    "body": "anAnnotationStack.hasCorePSM.name.+('/src/main/java/eu/fp7/scase/').+(anAnnotationStack.hasCorePSM.name.toLowerCase()).+('/').+(jAlgoRM.parentName.toLowerCase()).+('/Java').+(jAlgoRM.parentName.toUpperFirst()).+('OutputModel.java')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 10,
      "VariableExpImpl": 4,
      "StringLiteralExpImpl": 4,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "name",
      "hasCorePSM",
      "parentName"
    ]
  },
  {
    "operations": {},
    "body": "anAnnotationStack.hasCorePSM.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "anAnnotationStack.hasCorePSM.name.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "jAlgoRM.parentName.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {"toLowerCase": 1},
    "body": "anAnnotationStack.hasCorePSM.name.toLowerCase()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "hasCorePSM"
    ]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "jAlgoRM.parentName.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "jAlgoRM.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "jAlgoRM.parentName.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {},
    "body": "jAlgoRM.parentName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parentName"]
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "=": 1
    },
    "body": "getJavaRESTClientModelAnnotation(jAlgoRM,anAnnotationStack).hasJavaOutputModel.oclIsUndefined().=(false)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["hasJavaOutputModel"]
  },
  {
    "operations": {},
    "body": "getJavaRESTClientModelAnnotation(jAlgoRM,anAnnotationStack).hasJavaOutputModel.hasOutputProperty",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasJavaOutputModel",
      "hasOutputProperty"
    ]
  },
  {
    "operations": {"=": 1},
    "body": "property.isUnique.=(true)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["isUnique"]
  },
  {
    "operations": {"=": 1},
    "body": "property.hasPrimitiveType.=(true)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["hasPrimitiveType"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.hasComplexType.complexTypeName.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "complexTypeName",
      "hasComplexType"
    ]
  },
  {
    "operations": {},
    "body": "property.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"=": 1},
    "body": "property.hasPrimitiveType.=(true)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["hasPrimitiveType"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.hasComplexType.complexTypeName.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "complexTypeName",
      "hasComplexType"
    ]
  },
  {
    "operations": {},
    "body": "property.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"=": 1},
    "body": "property.hasPrimitiveType.=(true)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["hasPrimitiveType"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.hasComplexType.complexTypeName.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "complexTypeName",
      "hasComplexType"
    ]
  },
  {
    "operations": {},
    "body": "property.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "=": 1
    },
    "body": "getJavaRESTClientModelAnnotation(jAlgoRM,anAnnotationStack).hasJavaOutputModel.oclIsUndefined().=(false)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["hasJavaOutputModel"]
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "getJavaRESTClientModelAnnotation(jAlgoRM,anAnnotationStack).hasJavaOutputModel.hasOutputProperty",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasJavaOutputModel",
      "hasOutputProperty"
    ]
  },
  {
    "operations": {"=": 1},
    "body": "property.isUnique.=(false)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isUnique"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.name.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"=": 1},
    "body": "property.hasPrimitiveType.=(true)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["hasPrimitiveType"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.hasComplexType.complexTypeName.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "complexTypeName",
      "hasComplexType"
    ]
  },
  {
    "operations": {},
    "body": "property.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.name.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"=": 1},
    "body": "property.hasPrimitiveType.=(true)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["hasPrimitiveType"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.hasComplexType.complexTypeName.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "complexTypeName",
      "hasComplexType"
    ]
  },
  {
    "operations": {},
    "body": "property.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "=": 1
    },
    "body": "getJavaRESTClientModelAnnotation(jAlgoRM,anAnnotationStack).hasJavaOutputModel.oclIsUndefined().=(false)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["hasJavaOutputModel"]
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "getJavaRESTClientModelAnnotation(jAlgoRM,anAnnotationStack).hasJavaOutputModel.hasOutputProperty",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasJavaOutputModel",
      "hasOutputProperty"
    ]
  },
  {
    "operations": {"=": 1},
    "body": "property.isUnique.=(false)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isUnique"]
  },
  {
    "operations": {"=": 1},
    "body": "property.hasPrimitiveType.=(true)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["hasPrimitiveType"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.hasComplexType.complexTypeName.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "complexTypeName",
      "hasComplexType"
    ]
  },
  {
    "operations": {},
    "body": "property.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.name.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"=": 1},
    "body": "property.hasPrimitiveType.=(true)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["hasPrimitiveType"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.hasComplexType.complexTypeName.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "complexTypeName",
      "hasComplexType"
    ]
  },
  {
    "operations": {},
    "body": "property.type",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "property.name.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "property.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "oclIsTypeOf": 1,
      "asSequence": 1
    },
    "body": "anAnnotationStack.hasExternalServiceLayer.hasAnnotation->select(annotation : Annotation | annotation.oclIsTypeOf(ExternalServiceLayerPSM::JavaRESTClientModel))->asSequence()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "hasAnnotation",
      "hasExternalServiceLayer"
    ]
  },
  {
    "operations": {
      "at": 1,
      "includes": 1
    },
    "body": "getJavaRESTClientModelAnnotations(anAnnotationStack)->select(javaRESTClientModel : JavaRESTClientModel | Set {javaRESTClientModel.isJavaRESTClientModel.annotatesJavaAlgoModel}->includes(jAlgoResourceModel))->at(1)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "isJavaRESTClientModel",
      "annotatesJavaAlgoModel"
    ]
  }
]
