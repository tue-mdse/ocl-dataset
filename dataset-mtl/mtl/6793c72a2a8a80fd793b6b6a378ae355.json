[
  {
    "operations": {"oclAsType": 1},
    "body": "aPart.type.oclAsType(uml::Class)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {
      "not": 1,
      "and": 1,
      "asOrderedSet": 1,
      "isEmpty": 1,
      "toString": 1,
      "=": 1
    },
    "body": "aClass.part->select(aPart : Property | aPart.aggregation.toString().=('composite').and(Set {aPart.association}->isEmpty().not()))->asOrderedSet()->sortedBy(temp1 : Property | temp1.name)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 6,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "aggregation",
      "association",
      "name",
      "part"
    ]
  }
]
