[
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('fr.imag.unql.transformation.util.Neo4jUtil', 'executeQuery(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List)', Sequence {relationName, connection.url, connection.name, connection.password, attributes, conditions})",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 7,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "password",
      "url",
      "name"
    ]
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('fr.imag.unql.transformation.util.MongoDBUtil', 'executeQuery(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List)', Sequence {relationName, connection.url, connection.name, connection.password, attributes, conditions})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 7,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "password",
      "url",
      "name"
    ]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "aProgram.definitions->select(definition : Definition | definition.type.equalsIgnoreCase(expectedType))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "type",
      "definitions"
    ]
  },
  {
    "operations": {},
    "body": "aProgram.connections",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["connections"]
  },
  {
    "operations": {
      "equalsIgnoreCase": 1,
      "first": 1,
      "asSequence": 1
    },
    "body": "connections->select(connection : Connection | connection.name.equalsIgnoreCase(databaseName))->asSequence()->first()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"equalsIgnoreCase": 1},
    "body": "definitions->exists(definition : Definition | definition.name.equalsIgnoreCase(elementName))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "+": 1,
      "startsWith": 1
    },
    "body": "attributes->select(attribute : String | attribute.startsWith(relationName.+('.')))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 3,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  }
]
