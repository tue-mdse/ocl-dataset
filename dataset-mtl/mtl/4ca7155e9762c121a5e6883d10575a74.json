[
  {
    "operations": {},
    "body": "arg.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "arg.haxeFields",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["haxeFields"]
  },
  {
    "operations": {},
    "body": "t",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "arg.private",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["private"]
  },
  {
    "operations": {},
    "body": "arg.extern",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["extern"]
  },
  {
    "operations": {},
    "body": "arg.isInterface",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isInterface"]
  },
  {
    "operations": {},
    "body": "arg.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"notEmpty": 1},
    "body": "arg.typeParameters->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["typeParameters"]
  },
  {
    "operations": {"sep": 1},
    "body": "arg.typeParameters->collect(x : HaxeTypeParameter | x.name)->sep(',')",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "typeParameters",
      "name"
    ]
  },
  {
    "operations": {
      "not": 1,
      "isEmpty": 1
    },
    "body": "Set {arg.generalization}->isEmpty().not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["generalization"]
  },
  {
    "operations": {},
    "body": "arg.generalization.referencedTerminal.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "generalization",
      "name",
      "referencedTerminal"
    ]
  },
  {
    "operations": {
      "not": 1,
      "isEmpty": 1
    },
    "body": "arg.implementation->isEmpty().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["implementation"]
  },
  {
    "operations": {
      "concat": 1,
      "sep": 1
    },
    "body": "arg.implementation->collect(temp1 : HaxeClassifierAccess | temp1.referencedTerminal)->collect(temp2 : HaxePathReferentiable | 'implements '.concat(temp2.name))->sep(' ')",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 3,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "implementation",
      "name",
      "referencedTerminal"
    ]
  },
  {
    "operations": {},
    "body": "arg.haxeFields",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["haxeFields"]
  },
  {
    "operations": {},
    "body": "t",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "arg.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "arg.underlyingType",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["underlyingType"]
  },
  {
    "operations": {"notEmpty": 1},
    "body": "Set {arg.directCastingFromType}->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["directCastingFromType"]
  },
  {
    "operations": {},
    "body": "arg.directCastingFromType",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["directCastingFromType"]
  },
  {
    "operations": {"notEmpty": 1},
    "body": "Set {arg.directCastingToType}->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["directCastingToType"]
  },
  {
    "operations": {},
    "body": "arg.directCastingToType",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["directCastingToType"]
  },
  {
    "operations": {},
    "body": "arg.haxeFields",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["haxeFields"]
  },
  {
    "operations": {},
    "body": "t",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "arg.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "arg.refType",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["refType"]
  },
  {
    "operations": {},
    "body": "arg.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"notEmpty": 1},
    "body": "arg.parameters->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parameters"]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "arg.parameters",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parameters"]
  },
  {
    "operations": {},
    "body": "it",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "attrib.isPrivate.not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isPrivate"]
  },
  {
    "operations": {},
    "body": "attrib.isStatic",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isStatic"]
  },
  {
    "operations": {},
    "body": "attrib.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "attrib",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "isEmpty": 1
    },
    "body": "Set {self.type}->isEmpty().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "attrib.type",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1,
      "notEmpty": 1
    },
    "body": "Set {attrib.initializer}->oclIsUndefined().not().and(Set {attrib.initializer}->notEmpty())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "CollectionLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["initializer"]
  },
  {
    "operations": {},
    "body": "attrib.initializer",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["initializer"]
  },
  {
    "operations": {
      "<>": 2,
      "and": 1
    },
    "body": "arg.getterProperty.<>(haxe::HaxeAttributeProperty::default).and(arg.setterProperty.<>(haxe::HaxeAttributeProperty::default))",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "EnumLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "getterProperty",
      "setterProperty"
    ]
  },
  {
    "operations": {},
    "body": "arg",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "arg",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "attr.setterProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["setterProperty"]
  },
  {
    "operations": {},
    "body": "'set'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "attr.getterProperty",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["getterProperty"]
  },
  {
    "operations": {},
    "body": "'get'",
    "type": "TemplateInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "property.=(haxe::HaxeAttributeProperty::method)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "property",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "method",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "operation.isPrivate.not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isPrivate"]
  },
  {
    "operations": {},
    "body": "operation.overrides",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["overrides"]
  },
  {
    "operations": {},
    "body": "operation.isStatic",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isStatic"]
  },
  {
    "operations": {},
    "body": "operation.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "operation.formalParameters",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["formalParameters"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1,
      "notEmpty": 1
    },
    "body": "Set {operation.type}->oclIsUndefined().not().and(Set {operation.type}->notEmpty())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "CollectionLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "operation.type",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1,
      "notEmpty": 1
    },
    "body": "Set {operation.theBody}->oclIsUndefined().not().and(Set {operation.theBody}->notEmpty())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "CollectionLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["theBody"]
  },
  {
    "operations": {},
    "body": "operation.theBody",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["theBody"]
  },
  {
    "operations": {},
    "body": "metadata.compilerMetadata",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["compilerMetadata"]
  },
  {
    "operations": {},
    "body": "metadata.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"notEmpty": 1},
    "body": "metadata.parameters->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parameters"]
  },
  {
    "operations": {"sep": 1},
    "body": "metadata.parameters->collect(x : HaxeExpression | generateExpression(x))->sep(',')",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["parameters"]
  },
  {
    "operations": {"trim": 1},
    "body": "self.trim()",
    "type": "TemplatePost",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"notEmpty": 1},
    "body": "operation.metadata->notEmpty()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["metadata"]
  },
  {
    "operations": {},
    "body": "operation.metadata",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["metadata"]
  },
  {
    "operations": {},
    "body": "it",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "operation.isPrivate.not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isPrivate"]
  },
  {
    "operations": {},
    "body": "operation.overrides",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["overrides"]
  },
  {
    "operations": {},
    "body": "operation.isStatic",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isStatic"]
  },
  {
    "operations": {},
    "body": "operation.formalParameters",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["formalParameters"]
  },
  {
    "operations": {"<>": 1},
    "body": "operation.theBody.<>(null)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "NullLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["theBody"]
  },
  {
    "operations": {},
    "body": "operation.theBody",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["theBody"]
  },
  {
    "operations": {},
    "body": "commnt.content",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["content"]
  },
  {
    "operations": {},
    "body": "', '",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "operations",
    "type": "ForIter",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "x",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "x.isOptional",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["isOptional"]
  },
  {
    "operations": {},
    "body": "x.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "Set {x.type}->oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "x.type",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "and": 1,
      "notEmpty": 1
    },
    "body": "Set {x.initializer}->oclIsUndefined().not().and(Set {x.initializer}->notEmpty())",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "CollectionLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["initializer"]
  },
  {
    "operations": {},
    "body": "x.initializer",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["initializer"]
  }
]
