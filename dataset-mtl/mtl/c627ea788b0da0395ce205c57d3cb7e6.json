[
  {
    "operations": {
      "toUpperFirst": 1,
      "substituteAll": 1,
      "concat": 4
    },
    "body": "'src-gen/'.concat(testPackage(pack).substituteAll('.', '/').concat('/suite/')).concat(pack.prefix.toUpperFirst()).concat('TestSuite.java')",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 6,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 5,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {"concat": 1},
    "body": "testPackage(pack).concat('.suite')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 3,
      "oclIsKindOf": 1,
      "and": 1,
      "eContents": 1,
      "isEmpty": 1
    },
    "body": "genClass.ecoreClass.abstract.not().and(genClass.ecoreClass.eContents()->select(eObj : T | eObj.oclIsKindOf(ecore::EGenericType).not())->isEmpty().not())",
    "type": "ForGuard",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 7,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "ecoreClass",
      "abstract"
    ]
  },
  {
    "operations": {},
    "body": "pack.genClasses",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["genClasses"]
  },
  {
    "operations": {"concat": 1},
    "body": "testPackage(pack).concat('.unit')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "genClass.ecoreClass.name.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "ecoreClass"
    ]
  },
  {
    "operations": {},
    "body": "pack.genEnums",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["genEnums"]
  },
  {
    "operations": {"concat": 1},
    "body": "testPackage(pack).concat('.unit')",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "genEnum.ecoreEnum.name.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "ecoreEnum"
    ]
  },
  {
    "operations": {"concat": 1},
    "body": "testPackage(pack).concat('.unit')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "pack.prefix.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {"concat": 1},
    "body": "testPackage(pack).concat('.unit')",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "pack.prefix.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {"concat": 1},
    "body": "testPackage(pack).concat('.unit')",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "pack.prefix.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {},
    "body": "pack.ecorePackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "ecorePackage"
    ]
  },
  {
    "operations": {
      "not": 3,
      "oclIsKindOf": 1,
      "eContents": 1,
      "and": 1,
      "isEmpty": 1
    },
    "body": "genClass.ecoreClass.abstract.not().and(genClass.ecoreClass.eContents()->select(eObj : T | eObj.oclIsKindOf(ecore::EGenericType).not())->isEmpty().not())",
    "type": "ForGuard",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 7,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "ecoreClass",
      "abstract"
    ]
  },
  {
    "operations": {},
    "body": "pack.genClasses",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["genClasses"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "genClass.ecoreClass.name.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "ecoreClass"
    ]
  },
  {
    "operations": {},
    "body": "pack.genEnums",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["genEnums"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "genEnum.ecoreEnum.name.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "ecoreEnum"
    ]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "pack.prefix.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "pack.prefix.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "pack.prefix.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "pack.prefix.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  },
  {
    "operations": {},
    "body": "pack.ecorePackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "ecorePackage"
    ]
  },
  {
    "operations": {},
    "body": "pack.ecorePackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "ecorePackage"
    ]
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "pack.prefix.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["prefix"]
  }
]
