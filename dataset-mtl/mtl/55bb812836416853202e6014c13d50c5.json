[
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"+": 1},
    "body": "anEPackage.name.+('.rkt')",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anEPackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anEPackage",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anEPackage",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anEPackage",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anEPackage",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anEPackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anEPackage.nsURI",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["nsURI"]
  },
  {
    "operations": {},
    "body": "anEPackage.nsPrefix",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["nsPrefix"]
  },
  {
    "operations": {"filter": 1},
    "body": "anEPackage.eClassifiers->filter(ecore::EClass)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eClassifiers"]
  },
  {
    "operations": {},
    "body": "klass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"filter": 1},
    "body": "anEPackage.eClassifiers->filter(ecore::EDataType)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eClassifiers"]
  },
  {
    "operations": {},
    "body": "dt",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "anEPackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aEDataType.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aEDataType.serializable",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["serializable"]
  },
  {
    "operations": {"+": 1},
    "body": "p.name.+('-package')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"+": 2},
    "body": "dt.ePackage.nsPrefix.+(':').+(dt.name)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "nsPrefix",
      "ePackage"
    ]
  },
  {
    "operations": {"filter": 1},
    "body": "anEPackage.eClassifiers->filter(ecore::EClass)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eClassifiers"]
  },
  {
    "operations": {},
    "body": "klass",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "klass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "klass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aEClass",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aEClass",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aEClass.eStructuralFeatures",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eStructuralFeatures"]
  },
  {
    "operations": {},
    "body": "sf.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "sf.changeable",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["changeable"]
  },
  {
    "operations": {},
    "body": "sf.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"<>": 1},
    "body": "sf.upperBound.<>(1)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["upperBound"]
  },
  {
    "operations": {},
    "body": "sf.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "klass.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "cname",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "klass",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "klass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "klass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "klass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "klass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "oclIsKindOf": 1,
      "oclAsType": 2
    },
    "body": "if sf.oclIsKindOf(ecore::EAttribute) then default_value_for_type(sf.oclAsType(ecore::EAttribute)) else default_value_for_type(sf.oclAsType(ecore::EReference)) endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2,
      "TypeExpImpl": 3,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "oclAsType": 1,
      "=": 2
    },
    "body": "let att : EAttribute = sf.oclAsType(ecore::EAttribute) in if att.eType.=(ecore::EString) then '\"\"' else if att.eType.=(ecore::EBoolean) then '#f' else '0' endif endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "LetExpImpl": 1,
      "TypeExpImpl": 3,
      "StringLiteralExpImpl": 3,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["eType"]
  },
  {
    "operations": {},
    "body": "'null'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"filter": 1},
    "body": "klass.eStructuralFeatures->filter(ecore::EReference)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eStructuralFeatures"]
  },
  {
    "operations": {},
    "body": "ref.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "ref.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "ref.eType",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eType"]
  },
  {
    "operations": {},
    "body": "ref.containment",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["containment"]
  },
  {
    "operations": {},
    "body": "ref.lowerBound",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["lowerBound"]
  },
  {
    "operations": {},
    "body": "ref.upperBound",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["upperBound"]
  },
  {
    "operations": {"filter": 1},
    "body": "klass.eStructuralFeatures->filter(ecore::EAttribute)",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eStructuralFeatures"]
  },
  {
    "operations": {},
    "body": "att.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "att.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "att.eAttributeType",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eAttributeType"]
  },
  {
    "operations": {},
    "body": "att.lowerBound",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["lowerBound"]
  },
  {
    "operations": {},
    "body": "att.upperBound",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["upperBound"]
  },
  {
    "operations": {},
    "body": "if value then '#t' else '#f' endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "klass.name",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"+": 1},
    "body": "klass.name.+('<%>')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "size": 1,
      "=": 1,
      "first": 1
    },
    "body": "let superclasses : OrderedSet(EClass) = klass.eSuperTypes in if superclasses->size().=(0) then 'ecore:EObject' else eclass_to_racket_class_name(superclasses->first()) endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "LetExpImpl": 1,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eSuperTypes"]
  },
  {
    "operations": {
      "size": 1,
      "=": 1,
      "first": 1
    },
    "body": "let superclasses : OrderedSet(EClass) = klass.eSuperTypes in if superclasses->size().=(0) then 'ecore:EObject<%>' else eclass_to_racket_interface_name(superclasses->first()) endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "LetExpImpl": 1,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eSuperTypes"]
  },
  {
    "operations": {"+": 2},
    "body": "c.ePackage.nsPrefix.+(':').+(c.name)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "nsPrefix",
      "ePackage"
    ]
  }
]
