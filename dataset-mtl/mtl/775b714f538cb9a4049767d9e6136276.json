[
  {
    "operations": {},
    "body": "self.filename",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["filename"]
  },
  {
    "operations": {},
    "body": "false",
    "type": "QueryExpression",
    "constructs": {"BooleanLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.mylyn.docs.intent.markup.gen.services.DecodingService', 'decode(org.eclipse.mylyn.docs.intent.markup.markup.Entity)', Sequence {})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 2},
    "body": "if l.listType.=(markup::ListType::BULLETED) then 'itemize' else if l.listType.=(markup::ListType::NUMERIC) then 'enumerate' else 'unknown' endif endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "EnumLiteralExpImpl": 2,
      "StringLiteralExpImpl": 3,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["listType"]
  },
  {
    "operations": {
      "last": 1,
      "eResource": 1,
      "replace": 1,
      "toString": 1,
      "tokenize": 1
    },
    "body": "d.eResource().toString().tokenize('/')->last().replace('.textile.*$', '.tex')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 5,
      "StringLiteralExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "+": 1,
      "subSequence": 1
    },
    "body": "s->subSequence(n.+(1), s->size())",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 3,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "subSequence": 1,
      "-": 1
    },
    "body": "s->subSequence(1, s->size().-(1))",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "IntegerLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.mylyn.docs.intent.markup.gen.files.ImageUtility', 'getImageWidth(org.eclipse.mylyn.docs.intent.markup.markup.Image)', Sequence {arg0})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.mylyn.docs.intent.markup.gen.files.ImageUtility', 'hasLongLandscapeRatio(org.eclipse.mylyn.docs.intent.markup.markup.Image)', Sequence {arg0})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.mylyn.docs.intent.markup.gen.files.ImageUtility', 'hasLandscapeRatio(org.eclipse.mylyn.docs.intent.markup.markup.Image)', Sequence {arg0})",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.mylyn.docs.intent.markup.gen.files.ImageUtility', 'getWidthRatio(org.eclipse.mylyn.docs.intent.markup.markup.Image)', Sequence {arg0})",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('org.eclipse.mylyn.docs.intent.markup.gen.files.ImageUtility', 'isSmall(org.eclipse.mylyn.docs.intent.markup.markup.Image)', Sequence {arg0})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  }
]
