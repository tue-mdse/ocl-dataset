[
  {
    "operations": {
      "flatten": 1,
      "eAllContents": 3
    },
    "body": "OrderedSet {anEPackage.eAllContents(ecore::EClass)->collect(temp1 : EClass | temp1.eAllSuperTypes)->collect(temp2 : EClass | temp2.ePackage), anEPackage.eAllContents(ecore::EStructuralFeature)->collect(temp3 : EStructuralFeature | temp3.eType)->collect(temp4 : EClassifier | temp4.ePackage), anEPackage.eAllContents(ecore::EParameter)->collect(temp5 : EParameter | temp5.eType)->collect(temp6 : EClassifier | temp6.ePackage)}->flatten()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 6,
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 9,
      "TypeExpImpl": 3,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 6
    },
    "properties": [
      "eType",
      "ePackage",
      "eAllSuperTypes"
    ]
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"concat": 3},
    "body": "anEPackage.name.concat('/impl/').concat(packageName).concat('.cpp')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "anEPackage.name.toUpperFirst().concat('Factory')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "=": 1
    },
    "body": "pack.=(anEPackage).not()",
    "type": "ForGuard",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"asOrderedSet": 1},
    "body": "metaModelIncludes(anEPackage)->asOrderedSet()->sortedBy(temp1 : EPackage | temp1.name)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "pack.name.concat('Package').toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anEPackage.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "anEPackage.name.concat('Factory').toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"eAllContents": 1},
    "body": "anEPackage.eAllContents(ecore::EClass)->collect(temp1 : EClass | generateDeletePrivatePackageMember(temp1))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"eAllContents": 1},
    "body": "anEPackage.eAllContents(ecore::EDataType)->collect(temp1 : EDataType | generateDeletePrivatePackageMember(temp1))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "TypeExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "anEPackage.name.concat('Package').toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "toUpperFirst": 1,
      "concat": 1
    },
    "body": "anEPackage.name.concat('Package').toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "eAllContents": 1
    },
    "body": "anEPackage.eAllContents(ecore::EClass)->asOrderedSet()->sortedBy(temp1 : EClass | temp1.name)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass.eAttributes->sortedBy(temp1 : EAttribute | temp1.name)->collect(temp2 : EAttribute | generateAttributeCreation(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "eAttributes"
    ]
  },
  {
    "operations": {},
    "body": "aClass.eReferences->sortedBy(temp1 : EReference | temp1.name)->collect(temp2 : EReference | generateReferenceCreation(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "eReferences"
    ]
  },
  {
    "operations": {},
    "body": "aClass.eOperations->sortedBy(temp1 : EOperation | temp1.name)->collect(temp2 : EOperation | generateOperationCreation(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "eOperations"
    ]
  },
  {
    "operations": {"eAllContents": 1},
    "body": "anEPackage.eAllContents(ecore::EDataType)->sortedBy(temp1 : EDataType | temp1.name)->collect(temp2 : EDataType | generateEDatatypeCreation(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "packageName",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"eAllContents": 1},
    "body": "anEPackage.eAllContents(ecore::EClass)->sortedBy(temp1 : EClass | temp1.name)->collect(temp2 : EClass | initSuperTypes(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "anEPackage",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'EOperation'",
    "type": "QueryInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "eAllContents": 1
    },
    "body": "anEPackage.eAllContents(ecore::EClass)->asOrderedSet()->sortedBy(temp1 : EClass | temp1.name)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aClass.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass.eAttributes->sortedBy(temp1 : EAttribute | temp1.name)->collect(temp2 : EAttribute | generateAttributeInitialization(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "eAttributes"
    ]
  },
  {
    "operations": {},
    "body": "aClass.eReferences->sortedBy(temp1 : EReference | temp1.name)->collect(temp2 : EReference | generateReferenceInitialization(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "eReferences"
    ]
  },
  {
    "operations": {},
    "body": "aClass.eOperations->sortedBy(temp1 : EOperation | temp1.name)->collect(temp2 : EOperation | generateOperationInitialization(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eOperations",
      "name"
    ]
  },
  {
    "operations": {},
    "body": "aClass.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"eAllContents": 1},
    "body": "anEPackage.eAllContents(ecore::EDataType)->sortedBy(temp1 : EDataType | temp1.name)->collect(temp2 : EDataType | generateEDatatypeInitialization(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "'\n'",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "eAllContents": 1
    },
    "body": "anEPackage.eAllContents(ecore::EClass)->asOrderedSet()->sortedBy(temp1 : EClass | temp1.name)",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aClass.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aClass",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aClass.eAttributes->sortedBy(temp1 : EAttribute | temp1.name)->collect(temp2 : EAttribute | generateAttributeGetterImpl(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "eAttributes"
    ]
  },
  {
    "operations": {},
    "body": "aClass.eReferences->sortedBy(temp1 : EReference | temp1.name)->collect(temp2 : EReference | generateReferenceGetterImpl(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "eReferences"
    ]
  },
  {
    "operations": {},
    "body": "aClass.eOperations->sortedBy(temp1 : EOperation | temp1.name)->collect(temp2 : EOperation | generateOperationGetterImpl(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eOperations",
      "name"
    ]
  },
  {
    "operations": {},
    "body": "aClass.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"eAllContents": 1},
    "body": "anEPackage.eAllContents(ecore::EDataType)->sortedBy(temp1 : EDataType | temp1.name)->collect(temp2 : EDataType | generateDatatypeGetterImpl(temp2))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "TemplateInvocationSpec": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  }
]
