[
  {
    "operations": {
      "eContainer": 2,
      "oclIsUndefined": 1,
      "oclAsType": 1
    },
    "body": "if element.eContainer().oclIsUndefined() then Sequence {} else allSuperElements(element.eContainer().oclAsType(ecore::EModelElement)) endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "concat": 2,
      "oclAsType": 1
    },
    "body": "allSuperElements(element)->collect(temp1 : T | temp1.oclAsType(ecore::ENamedElement))->iterate(named : ENamedElement; qualified : String = javaToPythonName(element.name) | javaToPythonName(named.name).concat('.').concat(qualified))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 3,
      "TypeExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "IterateExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["name"]
  },
  {
    "operations": {"toLower": 1},
    "body": "name.toLower()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  }
]
