[
  {
    "operations": {"getNearestPackage": 1},
    "body": "cl.getNearestPackage()",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1,
      "getNearestPackage": 1
    },
    "body": "cl.getNearestPackage().oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"concat": 1},
    "body": "cl.name.concat('.php')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"getAppliedStereotypes": 1},
    "body": "cl.getAppliedStereotypes()",
    "type": "ForIter",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "p.name.=('Boundary')",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "getNearestPackage": 4,
      "toLower": 1,
      "+": 9
    },
    "body": "cl.getNearestPackage().nestingPackage.nestingPackage.nestingPackage.name.+('/').+(cl.getNearestPackage().nestingPackage.nestingPackage.name).+('/').+(cl.getNearestPackage().nestingPackage.name).+('/').+(cl.getNearestPackage().name).+('/').+(cl.name.toLower()).+('.phtml')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 14,
      "VariableExpImpl": 5,
      "StringLiteralExpImpl": 5,
      "PropertyCallExpImpl": 11
    },
    "properties": [
      "nestingPackage",
      "name"
    ]
  },
  {
    "operations": {"=": 1},
    "body": "p.name.=('Behavior')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "getNearestPackage": 2,
      "+": 5
    },
    "body": "cl.getNearestPackage().nestingPackage.name.+('/').+(cl.getNearestPackage().name).+('/').+(cl.name).+('.js')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 7,
      "VariableExpImpl": 3,
      "StringLiteralExpImpl": 3,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "nestingPackage",
      "name"
    ]
  },
  {
    "operations": {
      "or": 1,
      "=": 2
    },
    "body": "p.name.=('Controll').or(p.name.=('Entity'))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "StringLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "getNearestPackage": 2,
      "+": 5
    },
    "body": "cl.getNearestPackage().nestingPackage.name.+('/').+(cl.getNearestPackage().name).+('/').+(cl.name).+('.php')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 7,
      "VariableExpImpl": 3,
      "StringLiteralExpImpl": 3,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "nestingPackage",
      "name"
    ]
  },
  {
    "operations": {"<>": 1},
    "body": "p.direction.<>(uml::ParameterDirectionKind::return)",
    "type": "ForGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["direction"]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "o.ownedParameter",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ownedParameter"]
  },
  {
    "operations": {},
    "body": "p.type.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "p.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"oclIsUndefined": 1},
    "body": "o.type.oclIsUndefined()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "o.type.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "o.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "o.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "or": 2,
      "=": 3
    },
    "body": "element.name.=('package').or(element.name.=('interface')).or(element.name.=('class'))",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 3,
      "StringLiteralExpImpl": 3,
      "PropertyCallExpImpl": 3
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "element.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"concat": 1},
    "body": "element.name.concat('_')",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "p.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  }
]
