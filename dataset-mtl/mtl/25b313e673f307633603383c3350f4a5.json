[
  {
    "operations": {"concat": 1},
    "body": "s.name.concat('.wsdl')",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "s.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "s.namespace",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["namespace"]
  },
  {
    "operations": {},
    "body": "s",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "s.namespace",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["namespace"]
  },
  {
    "operations": {},
    "body": "self",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "=": 1
    },
    "body": "s.interface.inLineSchema.oclIsUndefined().=(false)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 2,
      "BooleanLiteralExpImpl": 1
    },
    "properties": [
      "inLineSchema",
      "interface"
    ]
  },
  {
    "operations": {},
    "body": "self",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "getAllServiceMessage(s)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "m",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "s.interface",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["interface"]
  },
  {
    "operations": {},
    "body": "s.endpoint",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["endpoint"]
  },
  {
    "operations": {},
    "body": "ep.binding",
    "type": "TemplateInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["binding"]
  },
  {
    "operations": {},
    "body": "s",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "s.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "s.description",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["description"]
  },
  {
    "operations": {},
    "body": "s.endpoint",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["endpoint"]
  },
  {
    "operations": {},
    "body": "ep",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "ep.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "ep.binding.name",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "binding"
    ]
  },
  {
    "operations": {"=": 1},
    "body": "ep.binding.transport.=(service::syntax::TransportProtocol::SOAP)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "transport",
      "binding"
    ]
  },
  {
    "operations": {},
    "body": "ep.location",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["location"]
  },
  {
    "operations": {},
    "body": "b.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "b.type.name",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "type"
    ]
  },
  {
    "operations": {"=": 1},
    "body": "b.transport.=(service::syntax::TransportProtocol::SOAP)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["transport"]
  },
  {
    "operations": {},
    "body": "b",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "b.type.operation",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "operation",
      "type"
    ]
  },
  {
    "operations": {},
    "body": "op.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"=": 1},
    "body": "b.transport.=(service::syntax::TransportProtocol::SOAP)",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["transport"]
  },
  {
    "operations": {},
    "body": "op.input->exists(temp1 : Message | true)",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["input"]
  },
  {
    "operations": {},
    "body": "b",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "op.output->exists(temp1 : Message | true)",
    "type": "IfExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["output"]
  },
  {
    "operations": {},
    "body": "b",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "i.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "i.operation",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["operation"]
  },
  {
    "operations": {},
    "body": "op.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "self",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "op.input->any(temp1 : Message | true).part->any(temp2 : Part | true).type",
    "type": "QueryInvocationArgument",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 3,
      "BooleanLiteralExpImpl": 2
    },
    "properties": [
      "type",
      "part",
      "input"
    ]
  },
  {
    "operations": {},
    "body": "op.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"first": 1},
    "body": "op.input->first().name",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "input"
    ]
  },
  {
    "operations": {"first": 1},
    "body": "op.input->first().name",
    "type": "QueryInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "input"
    ]
  },
  {
    "operations": {"first": 1},
    "body": "op.output->first().name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "output",
      "name"
    ]
  },
  {
    "operations": {"first": 1},
    "body": "op.output->first().name",
    "type": "QueryInvocationArgument",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "output",
      "name"
    ]
  },
  {
    "operations": {},
    "body": "op.fault",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["fault"]
  },
  {
    "operations": {},
    "body": "f.name",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "m.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "m.part",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["part"]
  },
  {
    "operations": {},
    "body": "p.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "self",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "p.type",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "p.type",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["type"]
  },
  {
    "operations": {},
    "body": "s.namespace",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["namespace"]
  },
  {
    "operations": {},
    "body": "getOntologies(s)",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "ont",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "ont",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "union": 1,
      "asSet": 1
    },
    "body": "s.interface.operation->collect(temp1 : OperationDescription | temp1.input)->collect(temp2 : Message | temp2.part)->collect(temp3 : Part | temp3.type)->collect(x : String | getOntologyPart(x))->union(s.interface.operation->collect(temp4 : OperationDescription | temp4.output)->collect(temp5 : Message | temp5.part)->collect(temp6 : Part | temp6.type)->collect(x : String | getOntologyPart(x)))->asSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 8,
      "VariableExpImpl": 10,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2,
      "PropertyCallExpImpl": 10
    },
    "properties": [
      "output",
      "type",
      "part",
      "input",
      "operation",
      "interface"
    ]
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "size": 1,
      "index": 1,
      "+": 1,
      "=": 1,
      "substring": 1
    },
    "body": "if s.oclIsUndefined().=(false) then s.substring(s.index('#').+(2), s.size()) else '' endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 4,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "oclIsInvalid": 1,
      "and": 1,
      "index": 2,
      "=": 2,
      "substring": 1
    },
    "body": "if s.oclIsUndefined().=(false).and(s.index('#').oclIsInvalid().=(false)) then s.substring(1, s.index('#')) else '' endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 8,
      "VariableExpImpl": 4,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 3,
      "IfExpImpl": 1,
      "BooleanLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "oclIsUndefined": 1,
      "oclIsInvalid": 1,
      "last": 1,
      "and": 1,
      "index": 2,
      "=": 2,
      "tokenize": 1,
      "substring": 1
    },
    "body": "if s.oclIsUndefined().=(false).and(s.index('#').oclIsInvalid().=(false)) then s.substring(1, s.index('.owl')).tokenize('/')->last() else 'ont' endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 10,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 4,
      "IfExpImpl": 1,
      "BooleanLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'tns'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"concat": 2},
    "body": "getNS(self).concat(':').concat(name)",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'owl-s-wsdl'",
    "type": "QueryExpression",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"=": 1},
    "body": "if b.style.=(service::syntax::StyleEncoding::DocumentLiteral) then 'document' else 'rpc' endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["style"]
  },
  {
    "operations": {"=": 1},
    "body": "if b.style.=(service::syntax::StyleEncoding::DocumentLiteral) then 'literal' else 'encoded' endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "EnumLiteralExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["style"]
  },
  {
    "operations": {},
    "body": "s.interface.operation->collect(op : OperationDescription | getAllOperationMessage(op))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "operation",
      "interface"
    ]
  },
  {
    "operations": {"union": 2},
    "body": "Set {op}->collect(i : OperationDescription | i.input)->union(Set {op}->collect(o : OperationDescription | o.output))->union(Set {op}->collect(f : OperationDescription | f.fault))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 6,
      "OperationCallExpImpl": 2,
      "CollectionLiteralExpImpl": 3,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "output",
      "input",
      "fault"
    ]
  }
]
