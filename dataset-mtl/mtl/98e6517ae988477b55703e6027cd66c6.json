[
  {
    "operations": {},
    "body": "domain.elementTypes.types",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "elementTypes",
      "types"
    ]
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "substituteAll": 1,
      "+": 4,
      "concat": 1
    },
    "body": "domain.handlerProjectName.+('/').+(domain.generatedSourceFolder).+('/').+(getCommandHandler(type).substituteAll('.', '/').concat('.java'))",
    "type": "FileUrl",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 6,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 5,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "handlerProjectName",
      "generatedSourceFolder"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.handlerPackage",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "handlerPackage",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.elementTypeEnumeratorPackage",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "elementTypeEnumeratorPackage",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.elementTypeEnumerator",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "elementTypeEnumerator",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.superClassPackage",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "superClassPackage",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.superClass",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "superClass",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "type.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "type.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.superClass",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "superClass",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.superClassPackage",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "superClassPackage",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.superClass",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "superClass",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.elementTypeEnumerator",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "elementTypeEnumerator",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "type.name",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "substituteAll": 1,
      "+": 4,
      "concat": 1
    },
    "body": "domain.handlerProjectName.+('/').+(domain.generatedSourceFolder).+('/').+(domain.handlerProjectName.substituteAll('.', '/').concat('/filter/CommandFilter.java'))",
    "type": "FileUrl",
    "constructs": {
      "OperationCallExpImpl": 6,
      "VariableExpImpl": 3,
      "StringLiteralExpImpl": 5,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "handlerProjectName",
      "generatedSourceFolder"
    ]
  },
  {
    "operations": {},
    "body": "domain.handlerProjectName",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["handlerProjectName"]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.elementTypeEnumeratorPackage",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "elementTypeEnumeratorPackage",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.elementTypeEnumerator",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "elementTypeEnumerator",
      "genHandlers"
    ]
  },
  {
    "operations": {
      "not": 1,
      "oclIsUndefined": 1
    },
    "body": "domain.specializationOf.oclIsUndefined().not()",
    "type": "IfExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["specializationOf"]
  },
  {
    "operations": {},
    "body": "domain.specializationOf.genHandlers.elementTypeEnumeratorPackage",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "specializationOf",
      "elementTypeEnumeratorPackage",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.specializationOf.genHandlers.elementTypeEnumerator",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "elementTypeEnumerator",
      "specializationOf",
      "genHandlers"
    ]
  },
  {
    "operations": {"not": 1},
    "body": "domain.elementTypes.types->select(temp1 : ElementType | isAbstract(temp1).not())",
    "type": "ForIter",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "types",
      "elementTypes"
    ]
  },
  {
    "operations": {"includes": 1},
    "body": "domain.genHandlers.visibleCreateChildHandlers->includes(domainElt)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "visibleCreateChildHandlers",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.elementTypeEnumerator",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "elementTypeEnumerator",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domainElt.name",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "includes": 1
    },
    "body": "domain.genHandlers.visibleCreateChildHandlers->includes(domainElt).not()",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "genHandlers",
      "visibleCreateChildHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domain.genHandlers.elementTypeEnumerator",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "elementTypeEnumerator",
      "genHandlers"
    ]
  },
  {
    "operations": {},
    "body": "domainElt.name",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  }
]
