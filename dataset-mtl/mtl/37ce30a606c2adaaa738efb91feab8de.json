[
  {
    "operations": {
      "flatten": 1,
      "not": 1,
      "=": 1
    },
    "body": "aOperation.eContainingClass.eAllOperations->select(temp1 : EOperation | aOperation.eContainingClass.=(temp1.eContainingClass).not())->flatten()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "eAllOperations",
      "eContainingClass"
    ]
  },
  {
    "operations": {"isOverrideOf": 1},
    "body": "aClass.eOperations->forAll(op : EOperation | op.isOverrideOf(aOperation))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eOperations"]
  },
  {
    "operations": {
      "flatten": 1,
      "not": 1,
      "and": 2,
      "isOverrideOf": 1,
      "=": 1
    },
    "body": "getSuperClassOperations(self)->select(op : EOperation | aOperation.isOverrideOf(op).not().and(aOperation.name.=(op.name)).and(hasOverrideInClass(op,aOperation.eContainingClass)))->flatten()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 7,
      "OperationCallExpImpl": 6,
      "QueryInvocationSpec": 2,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "eContainingClass"
    ]
  },
  {
    "operations": {
      "flatten": 1,
      "asOrderedSet": 1
    },
    "body": "getHiddenFunctions(aOperation)->collect(temp1 : EOperation | temp1.eContainingClass)->asOrderedSet()->flatten()->sortedBy(temp2 : EClass | temp2.name)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "eContainingClass"
    ]
  },
  {
    "operations": {
      "not": 2,
      "isOverrideOf": 1
    },
    "body": "getSuperClassOperations(aOperation)->forAll(op : EOperation | aOperation.isOverrideOf(op).not()).not()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "if isOverride(aOperation) then 'override' else '' endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "not": 2,
      "or": 1,
      "and": 1
    },
    "body": "impl.or(hasImplOnly(self).not()).and(ignore(self).not())",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 4,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation.eParameters",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eParameters"]
  },
  {
    "operations": {},
    "body": "sParameter",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "sParameter.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "hasKey(self,'const')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "impl",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "ignore(self).not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation.eContainingClass.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "eContainingClass"
    ]
  },
  {
    "operations": {},
    "body": "aOperation.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "','",
    "type": "ForEach",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation.eParameters",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eParameters"]
  },
  {
    "operations": {},
    "body": "sParameter",
    "type": "TemplateInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "sParameter.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "hasKey(self,'const')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasKey(self,'body')",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'body'",
    "type": "QueryInvocationArgument",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "hasImplOnly(self).not()",
    "type": "TemplateGuard",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"getOperationID": 1},
    "body": "aOperation.getOperationID()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "hasImplOnly(self).not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation.eContainingClass",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eContainingClass"]
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "hasImplOnly(self).not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "impl",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "-": 1,
      "indexOf": 1,
      "asSequence": 1
    },
    "body": "aOperation.eContainingClass.eOperations->asSequence()->indexOf(aOperation).-(1)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "IntegerLiteralExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "eOperations",
      "eContainingClass"
    ]
  },
  {
    "operations": {"not": 1},
    "body": "hasImplOnly(self).not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toUpperFirst": 1},
    "body": "aOperation.eContainingClass.ePackage.name.toUpperFirst()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "ePackage",
      "eContainingClass"
    ]
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation.eContainingClass",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eContainingClass"]
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"not": 1},
    "body": "hasImplOnly(self).not()",
    "type": "TemplateGuard",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "aOperation.eType",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eType"]
  },
  {
    "operations": {},
    "body": "aOperation",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"toString": 1},
    "body": "aOperation.name.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {},
    "body": "aOperation.lowerBound",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["lowerBound"]
  },
  {
    "operations": {},
    "body": "aOperation.upperBound",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["upperBound"]
  },
  {
    "operations": {"toString": 1},
    "body": "aOperation.unique.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["unique"]
  },
  {
    "operations": {"toString": 1},
    "body": "aOperation.ordered.toString()",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["ordered"]
  },
  {
    "operations": {},
    "body": "aOperation.eParameters->collect(temp1 : EParameter | generateAddParemeter(temp1))",
    "type": "TemplateExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "TemplateInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eParameters"]
  },
  {
    "operations": {},
    "body": "aParameter.eType",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eType"]
  },
  {
    "operations": {},
    "body": "aParameter.eOperation",
    "type": "QueryInvocationArgument",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eOperation"]
  },
  {
    "operations": {},
    "body": "aParameter.name",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "or": 1,
      "oclIsUndefined": 1,
      "concat": 3,
      "notEmpty": 1
    },
    "body": "if anOperation.eType.oclIsUndefined().or(anOperation.eTypeParameters->notEmpty()) then 'nullptr' else needMetaModelPackageGetter(anEClassifier,anOperation.eContainingClass).concat('get').concat(anEClassifier.name).concat('()') endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 6,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 3,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 4
    },
    "properties": [
      "eType",
      "name",
      "eTypeParameters",
      "eContainingClass"
    ]
  },
  {
    "operations": {"concat": 2},
    "body": "'get'.concat(operationNumberName(self)).concat('()')",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      "last": 1,
      "concat": 2,
      "first": 2,
      ">": 1
    },
    "body": "if aOperation.eParameters->size().>(1) then aOperation.eParameters->first().eType.name.concat('_').concat(aOperation.eParameters->last().eType.name) else aOperation.eParameters->first().eType.name endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 7,
      "IntegerLiteralExpImpl": 1,
      "StringLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 10
    },
    "properties": [
      "eType",
      "name",
      "eParameters"
    ]
  },
  {
    "operations": {
      "concat": 1,
      "notEmpty": 1
    },
    "body": "if aOperation.eParameters->notEmpty() then '__'.concat(singlemultipleParameter(aOperation)) else '' endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 2,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["eParameters"]
  },
  {
    "operations": {
      "toUpperFirst": 2,
      "concat": 3
    },
    "body": "aOperation.eContainingClass.name.concat('___'.concat(aOperation.name.toUpperFirst()).concat(parameterListName(aOperation).toUpperFirst()))",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": [
      "name",
      "eContainingClass"
    ]
  },
  {
    "operations": {"toUpperCase": 1},
    "body": "operationNumberName(aOperation).toUpperCase()",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 1
    },
    "properties": []
  }
]
