[
  {
    "operations": {
      "size": 1,
      "last": 1,
      "asOrderedSet": 2,
      "ancestors": 2,
      "=": 1,
      "eAllContents": 2
    },
    "body": "if aElement.ancestors()->size().=(0) then aElement.eAllContents(uml::ConnectorEnd)->asOrderedSet() else aElement.ancestors()->last().eAllContents(uml::ConnectorEnd)->asOrderedSet() endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 9,
      "VariableExpImpl": 3,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 2,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"oclAsType": 1},
    "body": "aConnectorEnd.role.oclAsType(uml::Port)",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["role"]
  },
  {
    "operations": {"asOrderedSet": 1},
    "body": "aPort.end->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["end"]
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1
    },
    "body": "q_getConnectorEnds(aPort)->select(aEnd : ConnectorEnd | aEnd.partWithPort.=(aPart))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["partWithPort"]
  },
  {
    "operations": {"asOrderedSet": 1},
    "body": "q_getConnectorEnds(aPort)->collect(temp1 : ConnectorEnd | temp1.owner)->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["owner"]
  },
  {
    "operations": {
      "size": 1,
      "asOrderedSet": 1,
      "=": 1,
      "oclAsType": 1,
      ">": 1
    },
    "body": "if Set {aConnectorEnd.partWithPort}->size().>(0) then q_getConnectorEnds(aConnectorEnd.role.oclAsType(uml::Port))->select(aEnd : ConnectorEnd | aEnd.partWithPort.=(aConnectorEnd.partWithPort))->collect(temp1 : ConnectorEnd | temp1.owner)->asOrderedSet() else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 5,
      "NullLiteralExpImpl": 1,
      "QueryInvocationSpec": 1,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 5
    },
    "properties": [
      "partWithPort",
      "role",
      "owner"
    ]
  },
  {
    "operations": {
      "<>": 1,
      "and": 1,
      "asOrderedSet": 1,
      "=": 1,
      "first": 1
    },
    "body": "q_getAllConnectorEnd(aConnectorEnd)->select(aEnd : ConnectorEnd | aEnd.owner.=(aConnectorEnd.owner).and(aEnd.<>(aConnectorEnd)))->asOrderedSet()->first()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 5,
      "QueryInvocationSpec": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["owner"]
  },
  {
    "operations": {"asOrderedSet": 1},
    "body": "q_getConnectorEnds(aPort)->collect(temp1 : ConnectorEnd | q_getConnectedEnd(temp1))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "filter": 1,
      "or": 1,
      "asOrderedSet": 1,
      "=": 2
    },
    "body": "aClass.ownedElement->filter(uml::Port)->select(aPort : Port | q_FlowPortDirOUT(aPort).=(true).or(q_FlowPortDirIN(aPort).=(true)))->asOrderedSet()->sortedBy(temp1 : Port | temp1.name)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 5,
      "QueryInvocationSpec": 2,
      "TypeExpImpl": 1,
      "BooleanLiteralExpImpl": 2,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "name",
      "ownedElement"
    ]
  },
  {
    "operations": {
      "or": 1,
      "asOrderedSet": 1,
      "=": 2,
      "oclAsType": 1
    },
    "body": "q_getConnectedEnds(aPort)->collect(temp1 : ConnectorEnd | temp1.role)->collect(temp2 : ConnectableElement | temp2.oclAsType(uml::Port))->select(aaPort : Port | q_FlowPortDirOUT(aaPort).=(true).or(q_FlowPortDirIN(aaPort).=(true)))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 5,
      "QueryInvocationSpec": 3,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 2
    },
    "properties": ["role"]
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1
    },
    "body": "q_getFlowPorts(q_getPartRefBlock(aProp))->collect(temp1 : Port | q_getConnectorEnds(temp1))->select(aEnd : ConnectorEnd | aEnd.partWithPort.=(aProp))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 4,
      "QueryInvocationSpec": 3,
      "PropertyCallExpImpl": 1
    },
    "properties": ["partWithPort"]
  },
  {
    "operations": {
      "toString": 1,
      "=": 1,
      "first": 1
    },
    "body": "if hasStereotype(aPort,'SysML::PortAndFlows::FlowPort') then if getTaggedValue(aPort,'SysML::PortAndFlows::FlowPort','direction')->first().toString().=('out') then true else false endif else false endif",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 4,
      "IfExpImpl": 2,
      "BooleanLiteralExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {
      "toString": 1,
      "=": 1,
      "first": 1
    },
    "body": "if hasStereotype(aPort,'SysML::PortAndFlows::FlowPort') then if getTaggedValue(aPort,'SysML::PortAndFlows::FlowPort','direction')->first().toString().=('in') then true else false endif else false endif",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 3,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2,
      "StringLiteralExpImpl": 4,
      "IfExpImpl": 2,
      "BooleanLiteralExpImpl": 3
    },
    "properties": []
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1
    },
    "body": "q_getFlowPorts(aClass)->select(aPort : Port | q_FlowPortDirIN(aPort).=(true))->asOrderedSet()->sortedBy(temp1 : Port | temp1.name)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1
    },
    "body": "q_getFlowPorts(aClass)->select(aPort : Port | q_FlowPortDirOUT(aPort).=(true))->asOrderedSet()->sortedBy(temp1 : Port | temp1.name)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {"includes": 1},
    "body": "if q_getConnectedPorts2(aPort)->collect(temp1 : Port | temp1.class.name)->exists(aName : String | q_getBlockParts(aPort.class)->collect(temp2 : Property | temp2.type.name)->includes(aName)) then false else true endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 3,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 2,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 5,
      "BooleanLiteralExpImpl": 2
    },
    "properties": [
      "class",
      "name",
      "type"
    ]
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1
    },
    "body": "q_getFlowPorts(aClass)->select(aPort : Port | q_isFinalFlowPort(aPort).=(true))->asOrderedSet()->sortedBy(temp1 : Port | temp1.name)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 2,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 2,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1
    },
    "body": "q_getFinalFlowPort(aClass)->select(aPort : Port | q_FlowPortDirIN(aPort).=(true))->asOrderedSet()->sortedBy(temp1 : Port | temp1.name)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2,
      "BooleanLiteralExpImpl": 1,
      "PropertyCallExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "=": 1
    },
    "body": "q_getFinalFlowPort(aClass)->select(aPort : Port | q_FlowPortDirOUT(aPort).=(true))->asOrderedSet()->sortedBy(temp1 : Port | temp1.name)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 3,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2,
      "PropertyCallExpImpl": 1,
      "BooleanLiteralExpImpl": 1
    },
    "properties": ["name"]
  },
  {
    "operations": {
      "not": 1,
      "<>": 1,
      "size": 2,
      "and": 2,
      "asOrderedSet": 3,
      "includes": 3,
      "oclAsType": 12,
      ">": 2
    },
    "body": "if q_PrevFlowPort2(aConnectorEnd.role.oclAsType(uml::Port))->size().>(0) then if q_FlowPortDirOUT(aConnectorEnd.role.oclAsType(uml::Port)).and(q_isFinalFlowPort(aConnectorEnd.role.oclAsType(uml::Port))) then aConnectorEnd else if Set {aConnectorEnd.partWithPort}->size().>(0) then if q_FlowPortDirOUT(aConnectorEnd.role.oclAsType(uml::Port)).and(q_isFinalFlowPort(aConnectorEnd.role.oclAsType(uml::Port)).not()) then q_getConnectedEnds(aConnectorEnd.role.oclAsType(uml::Port))->select(aEnd : ConnectorEnd | q_PrevFlowPort2(aConnectorEnd.role.oclAsType(uml::Port))->includes(aEnd.role.oclAsType(uml::Port)))->asOrderedSet() else q_PrevFlowPort2(aConnectorEnd.role.oclAsType(uml::Port))->collect(temp1 : Port | q_getConnectors(temp1))->select(aConnector : Connector | q_getConnectors(aConnectorEnd)->includes(aConnector))->collect(temp2 : Connector | temp2.end)->select(aEnd : ConnectorEnd | aEnd.role.<>(aConnectorEnd.role))->asOrderedSet() endif else q_getConnectedEnds(aConnectorEnd.role.oclAsType(uml::Port))->select(aEnd : ConnectorEnd | q_PrevFlowPort2(aConnectorEnd.role.oclAsType(uml::Port))->includes(aEnd.role.oclAsType(uml::Port)))->asOrderedSet() endif endif else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 6,
      "OperationCallExpImpl": 26,
      "VariableExpImpl": 20,
      "NullLiteralExpImpl": 1,
      "QueryInvocationSpec": 12,
      "IntegerLiteralExpImpl": 2,
      "TypeExpImpl": 12,
      "CollectionLiteralExpImpl": 1,
      "IfExpImpl": 4,
      "PropertyCallExpImpl": 16
    },
    "properties": [
      "partWithPort",
      "role",
      "end"
    ]
  },
  {
    "operations": {
      "size": 1,
      "and": 1,
      "asOrderedSet": 1,
      "includes": 1,
      "oclAsType": 6,
      ">": 1
    },
    "body": "if q_NextFlowPort2(aConnectorEnd.role.oclAsType(uml::Port))->size().>(0) then if q_FlowPortDirIN(aConnectorEnd.role.oclAsType(uml::Port)).and(q_isFinalFlowPort(aConnectorEnd.role.oclAsType(uml::Port))) then aConnectorEnd else q_getConnectedEnds(aConnectorEnd.role.oclAsType(uml::Port))->select(aEnd : ConnectorEnd | q_NextFlowPort2(aConnectorEnd.role.oclAsType(uml::Port))->includes(aEnd.role.oclAsType(uml::Port)))->asOrderedSet() endif else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 11,
      "VariableExpImpl": 7,
      "NullLiteralExpImpl": 1,
      "QueryInvocationSpec": 5,
      "IntegerLiteralExpImpl": 1,
      "TypeExpImpl": 6,
      "IfExpImpl": 2,
      "PropertyCallExpImpl": 6
    },
    "properties": ["role"]
  },
  {
    "operations": {"first": 2},
    "body": "q_PrevConnectorEnd(q_getConnectorEnds_2(aPart,aPort)->first())->first()",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "and": 1,
      "oclAsType": 2
    },
    "body": "if q_FlowPortDirOUT(aConnectorEnd.role.oclAsType(uml::Port)).and(q_isFinalFlowPort(aConnectorEnd.role.oclAsType(uml::Port))) then aConnectorEnd else q_PrevConnectorEnd(aConnectorEnd)->collect(temp1 : ConnectorEnd | q_PrevFinalConnectorEnd(temp1)) endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 3,
      "QueryInvocationSpec": 4,
      "TypeExpImpl": 2,
      "IfExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": ["role"]
  },
  {
    "operations": {"first": 1},
    "body": "q_PrevFinalConnectorEnd(q_getConnectorEnds_2(aPart,aPort)->first())",
    "type": "QueryExpression",
    "constructs": {
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 2,
      "QueryInvocationSpec": 2
    },
    "properties": []
  },
  {
    "operations": {
      "size": 2,
      "asOrderedSet": 1,
      "includes": 4,
      "=": 1,
      ">": 1
    },
    "body": "if hasStereotype(aPort,'SysML::PortAndFlows::FlowPort') then if q_FlowPortDirOUT(aPort) then if q_isFinalFlowPort(aPort) then Set {aPort}->asOrderedSet() else if q_getConnectedPorts2(aPort)->collect(temp1 : Port | temp1.class.name)->select(aName : String | q_getBlockParts(aPort.class)->collect(temp2 : Property | temp2.type.name)->includes(aName))->size().=(1) then q_getConnectedPorts2(aPort)->select(aaPort : Port | q_getBlockParts(aPort.class)->collect(temp3 : Property | temp3.type.name)->includes(aaPort.class.name)) else null endif endif else if q_FlowPortDirIN(aPort) then if q_getConnectedPorts2(aPort)->collect(temp4 : Port | temp4.class.name)->reject(aName : String | q_getBlockParts(aPort.class)->collect(temp5 : Property | temp5.type.name)->includes(aName))->size().>(0) then q_getConnectedPorts2(aPort)->reject(aaPort : Port | q_getBlockParts(aPort.class)->collect(temp6 : Property | temp6.type.name)->includes(aaPort.class.name)) else null endif else null endif endif else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 10,
      "OperationCallExpImpl": 9,
      "VariableExpImpl": 23,
      "NullLiteralExpImpl": 4,
      "QueryInvocationSpec": 12,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "IfExpImpl": 6,
      "PropertyCallExpImpl": 20
    },
    "properties": [
      "class",
      "name",
      "type"
    ]
  },
  {
    "operations": {
      "size": 2,
      "asOrderedSet": 1,
      "includes": 4,
      ">": 2
    },
    "body": "if hasStereotype(aPort,'SysML::PortAndFlows::FlowPort') then if q_FlowPortDirIN(aPort) then if q_isFinalFlowPort(aPort) then Set {aPort}->asOrderedSet() else if q_getConnectedPorts2(aPort)->collect(temp1 : Port | temp1.class.name)->select(aName : String | q_getBlockParts(aPort.class)->collect(temp2 : Property | temp2.type.name)->includes(aName))->size().>(0) then q_getConnectedPorts2(aPort)->select(aaPort : Port | q_getBlockParts(aPort.class)->collect(temp3 : Property | temp3.type.name)->includes(aaPort.class.name)) else null endif endif else if q_FlowPortDirOUT(aPort) then if q_getConnectedPorts2(aPort)->collect(temp4 : Port | temp4.class.name)->reject(aName : String | q_getBlockParts(aPort.class)->collect(temp5 : Property | temp5.type.name)->includes(aName))->size().>(0) then q_getConnectedPorts2(aPort)->reject(aaPort : Port | q_getBlockParts(aPort.class)->collect(temp6 : Property | temp6.type.name)->includes(aaPort.class.name)) else null endif else null endif endif else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 10,
      "OperationCallExpImpl": 9,
      "VariableExpImpl": 23,
      "NullLiteralExpImpl": 4,
      "QueryInvocationSpec": 12,
      "IntegerLiteralExpImpl": 2,
      "StringLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "IfExpImpl": 6,
      "PropertyCallExpImpl": 20
    },
    "properties": [
      "class",
      "name",
      "type"
    ]
  },
  {
    "operations": {
      "asOrderedSet": 1,
      "oclAsType": 1,
      "=": 1,
      "first": 1
    },
    "body": "q_getConnectorEnds(aPort)->select(aEnd : ConnectorEnd | aEnd.partWithPort.=(aPart))->collect(temp1 : ConnectorEnd | q_PrevConnectorEnd(temp1))->collect(temp2 : ConnectorEnd | temp2.role)->collect(temp3 : ConnectableElement | temp3.oclAsType(uml::Port))->asOrderedSet()->first()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 6,
      "QueryInvocationSpec": 2,
      "TypeExpImpl": 1,
      "PropertyCallExpImpl": 2
    },
    "properties": [
      "partWithPort",
      "role"
    ]
  },
  {
    "operations": {"and": 1},
    "body": "if hasStereotype(aPort,'SysML::PortAndFlows::FlowPort') then if q_FlowPortDirOUT(aPort).and(q_isFinalFlowPort(aPort)) then aPort else q_PrevFlowPort2(aPort)->collect(temp1 : Port | q_PrevFinalFlowPorts2(temp1)) endif else null endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "VariableExpImpl": 6,
      "OperationCallExpImpl": 1,
      "NullLiteralExpImpl": 1,
      "QueryInvocationSpec": 5,
      "StringLiteralExpImpl": 1,
      "IfExpImpl": 2
    },
    "properties": []
  },
  {
    "operations": {"excludes": 1},
    "body": "q_getConnectorEnds_2(aPart,aPort)->collect(temp1 : ConnectorEnd | q_getConnectedEnd(temp1))->exists(aaConnectorEnd : ConnectorEnd | q_getFlowPortOUT(aClass)->excludes(q_getPort(aaConnectorEnd)))",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 5,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 4
    },
    "properties": []
  },
  {
    "operations": {"asOrderedSet": 1},
    "body": "q_getBlockParts(aClass)->collect(temp1 : Property | q_getPartRefBlock(temp1))->collect(temp2 : Class | q_getFlowPortOUT(temp2))->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "OperationCallExpImpl": 1,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 3
    },
    "properties": []
  },
  {
    "operations": {
      "<>": 1,
      "size": 1,
      "and": 1,
      "asSet": 1,
      ">": 1
    },
    "body": "q_getPartorRefConnectorEnds(aPart)->select(aaEnd : ConnectorEnd | q_FlowPortDirOUT(q_getPort(aaEnd)))->collect(temp1 : ConnectorEnd | q_NextConnectorEnd(temp1))->select(aEnd : ConnectorEnd | Set {aEnd.partWithPort}->size().>(0).and(aEnd.partWithPort.<>(aPart)))->collect(temp2 : ConnectorEnd | temp2.partWithPort)->asSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "VariableExpImpl": 7,
      "OperationCallExpImpl": 5,
      "QueryInvocationSpec": 4,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": ["partWithPort"]
  },
  {
    "operations": {
      "<>": 1,
      "size": 1,
      "and": 1,
      "asOrderedSet": 1,
      ">": 1
    },
    "body": "q_getPartorRefConnectorEnds(aPart)->select(aaEnd : ConnectorEnd | q_FlowPortDirIN(q_getPort(aaEnd)))->collect(temp1 : ConnectorEnd | q_PrevConnectorEnd(temp1))->select(aEnd : ConnectorEnd | Set {aEnd.partWithPort}->size().>(0).and(aEnd.partWithPort.<>(aPart)))->collect(temp2 : ConnectorEnd | temp2.partWithPort)->asOrderedSet()",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 4,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 7,
      "QueryInvocationSpec": 4,
      "IntegerLiteralExpImpl": 1,
      "CollectionLiteralExpImpl": 1,
      "PropertyCallExpImpl": 3
    },
    "properties": ["partWithPort"]
  },
  {
    "operations": {
      "size": 1,
      "max": 1,
      "asOrderedSet": 1,
      "+": 1,
      "=": 1
    },
    "body": "if q_getPrevParts(aPart)->size().=(0) then 1 else q_getPrevParts(aPart)->collect(temp1 : Property | q_getNbMaxPrevParts(temp1))->asOrderedSet()->max().+(1) endif",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 1,
      "OperationCallExpImpl": 5,
      "VariableExpImpl": 3,
      "QueryInvocationSpec": 3,
      "IntegerLiteralExpImpl": 3,
      "IfExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "hasStereotype(aConnector,'profile::DelayedConnector')",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "QueryInvocationSpec": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"includes": 1},
    "body": "q_getConnectorEnds_2(aPart,aPort)->collect(temp1 : ConnectorEnd | q_getConnectors(temp1))->collect(temp2 : Connector | q_isDelayedConnector(temp2))->includes(true)",
    "type": "QueryExpression",
    "constructs": {
      "IteratorExpImpl": 2,
      "VariableExpImpl": 4,
      "OperationCallExpImpl": 1,
      "QueryInvocationSpec": 3,
      "BooleanLiteralExpImpl": 1
    },
    "properties": []
  }
]
