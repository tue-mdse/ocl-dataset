[
  {
    "operations": {"invoke": 1},
    "body": "self.invoke('es.um.casa.qt_test_api.generator.support.GenerationSupport', 'getCurrentTime()', Sequence {})",
    "type": "QueryExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 2,
      "CollectionLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "'UTF-8'",
    "type": "FileCharset",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "'build_all.pro'",
    "type": "FileUrl",
    "constructs": {"StringLiteralExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "self",
    "type": "QueryInvocationArgument",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {},
    "body": "projectname",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {"+": 1},
    "body": "testpanelgendir.+(uiclassname)",
    "type": "TemplateExpression",
    "constructs": {
      "VariableExpImpl": 2,
      "OperationCallExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {
      "size": 1,
      ">": 1
    },
    "body": "testsuitesinc.size().>(0)",
    "type": "IfExpression",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 2,
      "IntegerLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {"tokenize": 1},
    "body": "testsuitesinc.tokenize('\\)')",
    "type": "ForIter",
    "constructs": {
      "VariableExpImpl": 1,
      "OperationCallExpImpl": 1,
      "StringLiteralExpImpl": 1
    },
    "properties": []
  },
  {
    "operations": {},
    "body": "testsuitesgendir",
    "type": "TemplateExpression",
    "constructs": {"VariableExpImpl": 1},
    "properties": []
  },
  {
    "operations": {
      "replaceAll": 2,
      "tokenize": 1,
      "first": 1
    },
    "body": "s.replaceAll('\\(', '').replaceAll('\"', '').tokenize(',')->first()",
    "type": "TemplateExpression",
    "constructs": {
      "OperationCallExpImpl": 4,
      "VariableExpImpl": 1,
      "StringLiteralExpImpl": 5
    },
    "properties": []
  }
]
